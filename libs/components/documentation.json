{
  "pipes": [
    {
      "name": "CharLimitPipe",
      "id": "pipe-CharLimitPipe-11125535f734062b3195649e7cacf9eb",
      "file": "libs/components/src/lib/@core/utils/chars-limit.pipe.ts",
      "type": "pipe",
      "deprecated": false,
      "deprecationMessage": "",
      "description": "",
      "rawdescription": "\n",
      "properties": [],
      "methods": [
        {
          "name": "transform",
          "args": [
            {
              "name": "str",
              "type": "string",
              "deprecated": false,
              "deprecationMessage": ""
            },
            {
              "name": "charLengthLimit",
              "type": "number",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "string",
          "typeParameters": [],
          "line": 7,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [123],
          "jsdoctags": [
            {
              "name": "str",
              "type": "string",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "charLengthLimit",
              "type": "number",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        }
      ],
      "ngname": "charLimit",
      "sourceCode": "import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n  name: 'charLimit',\r\n})\r\nexport class CharLimitPipe implements PipeTransform {\r\n  public transform(str: string, charLengthLimit: number): string {\r\n    if (typeof str !== 'string') return str;\r\n    return str.length > charLengthLimit ? str.slice(0, charLengthLimit) + '...' : str;\r\n  }\r\n}\r\n"
    }
  ],
  "interfaces": [
    {
      "name": "Customer",
      "id": "interface-Customer-3f8a240d97fed32f761bd91b12cebd31",
      "file": "libs/components/src/lib/table/_story/data.ts",
      "deprecated": false,
      "deprecationMessage": "",
      "type": "interface",
      "sourceCode": "export const Products: Product[] = [\r\n  {\r\n    id: '1000',\r\n    code: 'f230fh0g3',\r\n    name: 'Bamboo Watch',\r\n    description: 'Product Description',\r\n    image: 'bamboo-watch.jpg',\r\n    price: 65,\r\n    category: 'Accessories',\r\n    quantity: 24,\r\n    inventoryStatus: 'INSTOCK',\r\n    rating: 5,\r\n  },\r\n  {\r\n    id: '1001',\r\n    code: 'nvklal433',\r\n    name: 'Black Watch',\r\n    description: 'Product Description',\r\n    image: 'black-watch.jpg',\r\n    price: 72,\r\n    category: 'Accessories',\r\n    quantity: 61,\r\n    inventoryStatus: 'INSTOCK',\r\n    rating: 4,\r\n  },\r\n  {\r\n    id: '1002',\r\n    code: 'zz21cz3c1',\r\n    name: 'Blue Band',\r\n    description: 'Product Description',\r\n    image: 'blue-band.jpg',\r\n    price: 79,\r\n    category: 'Fitness',\r\n    quantity: 2,\r\n    inventoryStatus: 'LOWSTOCK',\r\n    rating: 3,\r\n  },\r\n  {\r\n    id: '1003',\r\n    code: '244wgerg2',\r\n    name: 'Blue T-Shirt',\r\n    description: 'Product Description',\r\n    image: 'blue-t-shirt.jpg',\r\n    price: 29,\r\n    category: 'Clothing',\r\n    quantity: 25,\r\n    inventoryStatus: 'INSTOCK',\r\n    rating: 5,\r\n  },\r\n  {\r\n    id: '1004',\r\n    code: 'h456wer53',\r\n    name: 'Bracelet',\r\n    description: 'Product Description',\r\n    image: 'bracelet.jpg',\r\n    price: 15,\r\n    category: 'Accessories',\r\n    quantity: 73,\r\n    inventoryStatus: 'INSTOCK',\r\n    rating: 4,\r\n  },\r\n  {\r\n    id: '1005',\r\n    code: 'av2231fwg',\r\n    name: 'Brown Purse',\r\n    description: 'Product Description',\r\n    image: 'brown-purse.jpg',\r\n    price: 120,\r\n    category: 'Accessories',\r\n    quantity: 0,\r\n    inventoryStatus: 'OUTOFSTOCK',\r\n    rating: 4,\r\n  },\r\n  {\r\n    id: '1006',\r\n    code: 'bib36pfvm',\r\n    name: 'Chakra Bracelet',\r\n    description: 'Product Description',\r\n    image: 'chakra-bracelet.jpg',\r\n    price: 32,\r\n    category: 'Accessories',\r\n    quantity: 5,\r\n    inventoryStatus: 'LOWSTOCK',\r\n    rating: 3,\r\n  },\r\n  {\r\n    id: '1007',\r\n    code: 'mbvjkgip5',\r\n    name: 'Galaxy Earrings',\r\n    description: 'Product Description',\r\n    image: 'galaxy-earrings.jpg',\r\n    price: 34,\r\n    category: 'Accessories',\r\n    quantity: 23,\r\n    inventoryStatus: 'INSTOCK',\r\n    rating: 5,\r\n  },\r\n  {\r\n    id: '1008',\r\n    code: 'vbb124btr',\r\n    name: 'Game Controller',\r\n    description: 'Product Description',\r\n    image: 'game-controller.jpg',\r\n    price: 99,\r\n    category: 'Electronics',\r\n    quantity: 2,\r\n    inventoryStatus: 'LOWSTOCK',\r\n    rating: 4,\r\n  },\r\n  {\r\n    id: '1009',\r\n    code: 'cm230f032',\r\n    name: 'Gaming Set',\r\n    description: 'Product Description',\r\n    image: 'gaming-set.jpg',\r\n    price: 299,\r\n    category: 'Electronics',\r\n    quantity: 63,\r\n    inventoryStatus: 'INSTOCK',\r\n    rating: 3,\r\n  },\r\n];\r\n\r\ninterface Customer {\r\n  id: number;\r\n  name: string;\r\n  country: { code: string; name: string };\r\n  company: string;\r\n  date: Date;\r\n  status: string;\r\n  verified: boolean;\r\n  activity: number;\r\n  representative: { image: string; name: string };\r\n  balance: number;\r\n}\r\n\r\nexport const Customers: Customer[] = [\r\n  {\r\n    id: 1000,\r\n    name: 'James Butt',\r\n    country: {\r\n      name: 'Algeria',\r\n      code: 'dz',\r\n    },\r\n    company: 'Benton, John B Jr',\r\n    date: new Date('2015-09-13'),\r\n    status: 'unqualified',\r\n    verified: true,\r\n    activity: 17,\r\n    representative: {\r\n      name: 'Ioni Bowcher',\r\n      image: 'ionibowcher.png',\r\n    },\r\n    balance: 70663,\r\n  },\r\n  {\r\n    id: 1001,\r\n    name: 'Josephine Darakjy',\r\n    country: {\r\n      name: 'Egypt',\r\n      code: 'eg',\r\n    },\r\n    company: 'Chanay, Jeffrey A Esq',\r\n    date: new Date('2019-02-09'),\r\n    status: 'proposal',\r\n    verified: true,\r\n    activity: 0,\r\n    representative: {\r\n      name: 'Amy Elsner',\r\n      image: 'amyelsner.png',\r\n    },\r\n    balance: 82429,\r\n  },\r\n  {\r\n    id: 1002,\r\n    name: 'Art Venere',\r\n    country: {\r\n      name: 'Panama',\r\n      code: 'pa',\r\n    },\r\n    company: 'Chemel, James L Cpa',\r\n    date: new Date('2017-05-13'),\r\n    status: 'qualified',\r\n    verified: false,\r\n    activity: 63,\r\n    representative: {\r\n      name: 'Asiya Javayant',\r\n      image: 'asiyajavayant.png',\r\n    },\r\n    balance: 28334,\r\n  },\r\n  {\r\n    id: 1003,\r\n    name: 'Lenna Paprocki',\r\n    country: {\r\n      name: 'Slovenia',\r\n      code: 'si',\r\n    },\r\n    company: 'Feltz Printing Service',\r\n    date: new Date('2020-09-15'),\r\n    status: 'new',\r\n    verified: false,\r\n    activity: 37,\r\n    representative: {\r\n      name: 'Xuxue Feng',\r\n      image: 'xuxuefeng.png',\r\n    },\r\n    balance: 88521,\r\n  },\r\n  {\r\n    id: 1004,\r\n    name: 'Donette Foller',\r\n    country: {\r\n      name: 'South Africa',\r\n      code: 'za',\r\n    },\r\n    company: 'Printing Dimensions',\r\n    date: new Date('2016-05-20'),\r\n    status: 'proposal',\r\n    verified: true,\r\n    activity: 33,\r\n    representative: {\r\n      name: 'Asiya Javayant',\r\n      image: 'asiyajavayant.png',\r\n    },\r\n    balance: 93905,\r\n  },\r\n  {\r\n    id: 1005,\r\n    name: 'Simona Morasca',\r\n    country: {\r\n      name: 'Egypt',\r\n      code: 'eg',\r\n    },\r\n    company: 'Chapman, Ross E Esq',\r\n    date: new Date('2018-02-16'),\r\n    status: 'qualified',\r\n    verified: false,\r\n    activity: 68,\r\n    representative: {\r\n      name: 'Ivan Magalhaes',\r\n      image: 'ivanmagalhaes.png',\r\n    },\r\n    balance: 50041,\r\n  },\r\n  {\r\n    id: 1006,\r\n    name: 'Mitsue Tollner',\r\n    country: {\r\n      name: 'Paraguay',\r\n      code: 'py',\r\n    },\r\n    company: 'Morlong Associates',\r\n    date: new Date('2018-02-19'),\r\n    status: 'renewal',\r\n    verified: true,\r\n    activity: 54,\r\n    representative: {\r\n      name: 'Ivan Magalhaes',\r\n      image: 'ivanmagalhaes.png',\r\n    },\r\n    balance: 58706,\r\n  },\r\n  {\r\n    id: 1007,\r\n    name: 'Leota Dilliard',\r\n    country: {\r\n      name: 'Serbia',\r\n      code: 'rs',\r\n    },\r\n    company: 'Commercial Press',\r\n    date: new Date('2019-08-13'),\r\n    status: 'renewal',\r\n    verified: true,\r\n    activity: 69,\r\n    representative: {\r\n      name: 'Onyama Limba',\r\n      image: 'onyamalimba.png',\r\n    },\r\n    balance: 26640,\r\n  },\r\n  {\r\n    id: 1008,\r\n    name: 'Sage Wieser',\r\n    country: {\r\n      name: 'Egypt',\r\n      code: 'eg',\r\n    },\r\n    company: 'Truhlar And Truhlar Attys',\r\n    date: new Date('2018-11-21'),\r\n    status: 'unqualified',\r\n    verified: true,\r\n    activity: 76,\r\n    representative: {\r\n      name: 'Ivan Magalhaes',\r\n      image: 'ivanmagalhaes.png',\r\n    },\r\n    balance: 65369,\r\n  },\r\n  {\r\n    id: 1009,\r\n    name: 'Kris Marrier',\r\n    country: {\r\n      name: 'Mexico',\r\n      code: 'mx',\r\n    },\r\n    company: 'King, Christopher A Esq',\r\n    date: new Date('2015-07-07'),\r\n    status: 'proposal',\r\n    verified: false,\r\n    activity: 3,\r\n    representative: {\r\n      name: 'Onyama Limba',\r\n      image: 'onyamalimba.png',\r\n    },\r\n    balance: 63451,\r\n  },\r\n  {\r\n    id: 1010,\r\n    name: 'Minna Amigon',\r\n    country: {\r\n      name: 'Romania',\r\n      code: 'ro',\r\n    },\r\n    company: 'Dorl, James J Esq',\r\n    date: new Date('2018-11-07'),\r\n    status: 'qualified',\r\n    verified: false,\r\n    activity: 38,\r\n    representative: {\r\n      name: 'Anna Fali',\r\n      image: 'annafali.png',\r\n    },\r\n    balance: 71169,\r\n  },\r\n  {\r\n    id: 1011,\r\n    name: 'Abel Maclead',\r\n    country: {\r\n      name: 'Singapore',\r\n      code: 'sg',\r\n    },\r\n    company: 'Rangoni Of Florence',\r\n    date: new Date('2017-03-11'),\r\n    status: 'qualified',\r\n    verified: true,\r\n    activity: 87,\r\n    representative: {\r\n      name: 'Bernardo Dominic',\r\n      image: 'bernardodominic.png',\r\n    },\r\n    balance: 96842,\r\n  },\r\n  {\r\n    id: 1012,\r\n    name: 'Kiley Caldarera',\r\n    country: {\r\n      name: 'Serbia',\r\n      code: 'rs',\r\n    },\r\n    company: 'Feiner Bros',\r\n    date: new Date('2015-10-20'),\r\n    status: 'unqualified',\r\n    verified: false,\r\n    activity: 80,\r\n    representative: {\r\n      name: 'Onyama Limba',\r\n      image: 'onyamalimba.png',\r\n    },\r\n    balance: 92734,\r\n  },\r\n  {\r\n    id: 1013,\r\n    name: 'Graciela Ruta',\r\n    country: {\r\n      name: 'Chile',\r\n      code: 'cl',\r\n    },\r\n    company: 'Buckley Miller & Wright',\r\n    date: new Date('2016-07-25'),\r\n    status: 'negotiation',\r\n    verified: false,\r\n    activity: 59,\r\n    representative: {\r\n      name: 'Amy Elsner',\r\n      image: 'amyelsner.png',\r\n    },\r\n    balance: 45250,\r\n  },\r\n  {\r\n    id: 1014,\r\n    name: 'Cammy Albares',\r\n    country: {\r\n      name: 'Philippines',\r\n      code: 'ph',\r\n    },\r\n    company: 'Rousseaux, Michael Esq',\r\n    date: new Date('2019-06-25'),\r\n    status: 'new',\r\n    verified: true,\r\n    activity: 90,\r\n    representative: {\r\n      name: 'Asiya Javayant',\r\n      image: 'asiyajavayant.png',\r\n    },\r\n    balance: 30236,\r\n  },\r\n  {\r\n    id: 1015,\r\n    name: 'Mattie Poquette',\r\n    country: {\r\n      name: 'Venezuela',\r\n      code: 've',\r\n    },\r\n    company: 'Century Communications',\r\n    date: new Date('2017-12-12'),\r\n    status: 'negotiation',\r\n    verified: false,\r\n    activity: 52,\r\n    representative: {\r\n      name: 'Anna Fali',\r\n      image: 'annafali.png',\r\n    },\r\n    balance: 64533,\r\n  },\r\n  {\r\n    id: 1016,\r\n    name: 'Meaghan Garufi',\r\n    country: {\r\n      name: 'Malaysia',\r\n      code: 'my',\r\n    },\r\n    company: 'Bolton, Wilbur Esq',\r\n    date: new Date('2018-07-04'),\r\n    status: 'unqualified',\r\n    verified: false,\r\n    activity: 31,\r\n    representative: {\r\n      name: 'Ivan Magalhaes',\r\n      image: 'ivanmagalhaes.png',\r\n    },\r\n    balance: 37279,\r\n  },\r\n  {\r\n    id: 1017,\r\n    name: 'Gladys Rim',\r\n    country: {\r\n      name: 'Netherlands',\r\n      code: 'nl',\r\n    },\r\n    company: 'T M Byxbee Company Pc',\r\n    date: new Date('2020-02-27'),\r\n    status: 'renewal',\r\n    verified: true,\r\n    activity: 48,\r\n    representative: {\r\n      name: 'Stephen Shaw',\r\n      image: 'stephenshaw.png',\r\n    },\r\n    balance: 27381,\r\n  },\r\n  {\r\n    id: 1018,\r\n    name: 'Yuki Whobrey',\r\n    country: {\r\n      name: 'Israel',\r\n      code: 'il',\r\n    },\r\n    company: 'Farmers Insurance Group',\r\n    date: new Date('2017-12-21'),\r\n    status: 'negotiation',\r\n    verified: true,\r\n    activity: 16,\r\n    representative: {\r\n      name: 'Bernardo Dominic',\r\n      image: 'bernardodominic.png',\r\n    },\r\n    balance: 9257,\r\n  },\r\n  {\r\n    id: 1019,\r\n    name: 'Fletcher Flosi',\r\n    country: {\r\n      name: 'Argentina',\r\n      code: 'ar',\r\n    },\r\n    company: 'Post Box Services Plus',\r\n    date: new Date('2016-01-04'),\r\n    status: 'renewal',\r\n    verified: true,\r\n    activity: 19,\r\n    representative: {\r\n      name: 'Xuxue Feng',\r\n      image: 'xuxuefeng.png',\r\n    },\r\n    balance: 67783,\r\n  },\r\n  {\r\n    id: 1020,\r\n    name: 'Bette Nicka',\r\n    country: {\r\n      name: 'Paraguay',\r\n      code: 'py',\r\n    },\r\n    company: 'Sport En Art',\r\n    date: new Date('2016-10-21'),\r\n    status: 'renewal',\r\n    verified: false,\r\n    activity: 100,\r\n    representative: {\r\n      name: 'Onyama Limba',\r\n      image: 'onyamalimba.png',\r\n    },\r\n    balance: 4609,\r\n  },\r\n  {\r\n    id: 1021,\r\n    name: 'Veronika Inouye',\r\n    country: {\r\n      name: 'Ecuador',\r\n      code: 'ec',\r\n    },\r\n    company: 'C 4 Network Inc',\r\n    date: new Date('2017-03-24'),\r\n    status: 'renewal',\r\n    verified: false,\r\n    activity: 72,\r\n    representative: {\r\n      name: 'Ioni Bowcher',\r\n      image: 'ionibowcher.png',\r\n    },\r\n    balance: 26565,\r\n  },\r\n  {\r\n    id: 1022,\r\n    name: 'Willard Kolmetz',\r\n    country: {\r\n      name: 'Tunisia',\r\n      code: 'tn',\r\n    },\r\n    company: 'Ingalls, Donald R Esq',\r\n    date: new Date('2017-04-15'),\r\n    status: 'renewal',\r\n    verified: true,\r\n    activity: 94,\r\n    representative: {\r\n      name: 'Asiya Javayant',\r\n      image: 'asiyajavayant.png',\r\n    },\r\n    balance: 75876,\r\n  },\r\n  {\r\n    id: 1023,\r\n    name: 'Maryann Royster',\r\n    country: {\r\n      name: 'Belarus',\r\n      code: 'by',\r\n    },\r\n    company: 'Franklin, Peter L Esq',\r\n    date: new Date('2017-03-11'),\r\n    status: 'qualified',\r\n    verified: false,\r\n    activity: 56,\r\n    representative: {\r\n      name: 'Elwin Sharvill',\r\n      image: 'elwinsharvill.png',\r\n    },\r\n    balance: 41121,\r\n  },\r\n  {\r\n    id: 1024,\r\n    name: 'Alisha Slusarski',\r\n    country: {\r\n      name: 'Iceland',\r\n      code: 'is',\r\n    },\r\n    company: 'Wtlz Power 107 Fm',\r\n    date: new Date('2018-03-27'),\r\n    status: 'qualified',\r\n    verified: true,\r\n    activity: 7,\r\n    representative: {\r\n      name: 'Stephen Shaw',\r\n      image: 'stephenshaw.png',\r\n    },\r\n    balance: 91691,\r\n  },\r\n  {\r\n    id: 1025,\r\n    name: 'Allene Iturbide',\r\n    country: {\r\n      name: 'Italy',\r\n      code: 'it',\r\n    },\r\n    company: 'Ledecky, David Esq',\r\n    date: new Date('2016-02-20'),\r\n    status: 'qualified',\r\n    verified: true,\r\n    activity: 1,\r\n    representative: {\r\n      name: 'Ivan Magalhaes',\r\n      image: 'ivanmagalhaes.png',\r\n    },\r\n    balance: 40137,\r\n  },\r\n  {\r\n    id: 1026,\r\n    name: 'Chanel Caudy',\r\n    country: {\r\n      name: 'Argentina',\r\n      code: 'ar',\r\n    },\r\n    company: 'Professional Image Inc',\r\n    date: new Date('2018-06-24'),\r\n    status: 'new',\r\n    verified: true,\r\n    activity: 26,\r\n    representative: {\r\n      name: 'Ioni Bowcher',\r\n      image: 'ionibowcher.png',\r\n    },\r\n    balance: 21304,\r\n  },\r\n  {\r\n    id: 1027,\r\n    name: 'Ezekiel Chui',\r\n    country: {\r\n      name: 'Ireland',\r\n      code: 'ie',\r\n    },\r\n    company: 'Sider, Donald C Esq',\r\n    date: new Date('2016-09-24'),\r\n    status: 'new',\r\n    verified: false,\r\n    activity: 76,\r\n    representative: {\r\n      name: 'Amy Elsner',\r\n      image: 'amyelsner.png',\r\n    },\r\n    balance: 60454,\r\n  },\r\n  {\r\n    id: 1028,\r\n    name: 'Willow Kusko',\r\n    country: {\r\n      name: 'Romania',\r\n      code: 'ro',\r\n    },\r\n    company: 'U Pull It',\r\n    date: new Date('2020-04-11'),\r\n    status: 'qualified',\r\n    verified: true,\r\n    activity: 7,\r\n    representative: {\r\n      name: 'Onyama Limba',\r\n      image: 'onyamalimba.png',\r\n    },\r\n    balance: 17565,\r\n  },\r\n  {\r\n    id: 1029,\r\n    name: 'Bernardo Figeroa',\r\n    country: {\r\n      name: 'Israel',\r\n      code: 'il',\r\n    },\r\n    company: 'Clark, Richard Cpa',\r\n    date: new Date('2018-11-04'),\r\n    status: 'renewal',\r\n    verified: true,\r\n    activity: 81,\r\n    representative: {\r\n      name: 'Ioni Bowcher',\r\n      image: 'ionibowcher.png',\r\n    },\r\n    balance: 17774,\r\n  },\r\n  {\r\n    id: 1030,\r\n    name: 'Ammie Corrio',\r\n    country: {\r\n      name: 'Hungary',\r\n      code: 'hu',\r\n    },\r\n    company: 'Moskowitz, Barry S',\r\n    date: new Date('2016-06-11'),\r\n    status: 'negotiation',\r\n    verified: true,\r\n    activity: 56,\r\n    representative: {\r\n      name: 'Asiya Javayant',\r\n      image: 'asiyajavayant.png',\r\n    },\r\n    balance: 49201,\r\n  },\r\n  {\r\n    id: 1031,\r\n    name: 'Francine Vocelka',\r\n    country: {\r\n      name: 'Honduras',\r\n      code: 'hn',\r\n    },\r\n    company: 'Cascade Realty Advisors Inc',\r\n    date: new Date('2017-08-02'),\r\n    status: 'qualified',\r\n    verified: true,\r\n    activity: 94,\r\n    representative: {\r\n      name: 'Ioni Bowcher',\r\n      image: 'ionibowcher.png',\r\n    },\r\n    balance: 67126,\r\n  },\r\n  {\r\n    id: 1032,\r\n    name: 'Ernie Stenseth',\r\n    country: {\r\n      name: 'Australia',\r\n      code: 'au',\r\n    },\r\n    company: 'Knwz Newsradio',\r\n    date: new Date('2018-06-06'),\r\n    status: 'renewal',\r\n    verified: true,\r\n    activity: 68,\r\n    representative: {\r\n      name: 'Xuxue Feng',\r\n      image: 'xuxuefeng.png',\r\n    },\r\n    balance: 76017,\r\n  },\r\n  {\r\n    id: 1033,\r\n    name: 'Albina Glick',\r\n    country: {\r\n      name: 'Ukraine',\r\n      code: 'ua',\r\n    },\r\n    company: 'Giampetro, Anthony D',\r\n    date: new Date('2019-08-08'),\r\n    status: 'proposal',\r\n    verified: true,\r\n    activity: 85,\r\n    representative: {\r\n      name: 'Bernardo Dominic',\r\n      image: 'bernardodominic.png',\r\n    },\r\n    balance: 91201,\r\n  },\r\n  {\r\n    id: 1034,\r\n    name: 'Alishia Sergi',\r\n    country: {\r\n      name: 'Qatar',\r\n      code: 'qa',\r\n    },\r\n    company: 'Milford Enterprises Inc',\r\n    date: new Date('2018-05-19'),\r\n    status: 'negotiation',\r\n    verified: false,\r\n    activity: 46,\r\n    representative: {\r\n      name: 'Ivan Magalhaes',\r\n      image: 'ivanmagalhaes.png',\r\n    },\r\n    balance: 12237,\r\n  },\r\n  {\r\n    id: 1035,\r\n    name: 'Solange Shinko',\r\n    country: {\r\n      name: 'Cameroon',\r\n      code: 'cm',\r\n    },\r\n    company: 'Mosocco, Ronald A',\r\n    date: new Date('2015-02-12'),\r\n    status: 'qualified',\r\n    verified: true,\r\n    activity: 32,\r\n    representative: {\r\n      name: 'Onyama Limba',\r\n      image: 'onyamalimba.png',\r\n    },\r\n    balance: 34072,\r\n  },\r\n  {\r\n    id: 1036,\r\n    name: 'Jose Stockham',\r\n    country: {\r\n      name: 'Italy',\r\n      code: 'it',\r\n    },\r\n    company: 'Tri State Refueler Co',\r\n    date: new Date('2018-04-25'),\r\n    status: 'qualified',\r\n    verified: true,\r\n    activity: 77,\r\n    representative: {\r\n      name: 'Amy Elsner',\r\n      image: 'amyelsner.png',\r\n    },\r\n    balance: 94909,\r\n  },\r\n  {\r\n    id: 1037,\r\n    name: 'Rozella Ostrosky',\r\n    country: {\r\n      name: 'Venezuela',\r\n      code: 've',\r\n    },\r\n    company: 'Parkway Company',\r\n    date: new Date('2016-02-27'),\r\n    status: 'unqualified',\r\n    verified: true,\r\n    activity: 66,\r\n    representative: {\r\n      name: 'Amy Elsner',\r\n      image: 'amyelsner.png',\r\n    },\r\n    balance: 57245,\r\n  },\r\n  {\r\n    id: 1038,\r\n    name: 'Valentine Gillian',\r\n    country: {\r\n      name: 'Paraguay',\r\n      code: 'py',\r\n    },\r\n    company: 'Fbs Business Finance',\r\n    date: new Date('2019-09-17'),\r\n    status: 'qualified',\r\n    verified: true,\r\n    activity: 25,\r\n    representative: {\r\n      name: 'Bernardo Dominic',\r\n      image: 'bernardodominic.png',\r\n    },\r\n    balance: 75502,\r\n  },\r\n  {\r\n    id: 1039,\r\n    name: 'Kati Rulapaugh',\r\n    country: {\r\n      name: 'Puerto Rico',\r\n      code: 'pr',\r\n    },\r\n    company: 'Eder Assocs Consltng Engrs Pc',\r\n    date: new Date('2016-12-03'),\r\n    status: 'renewal',\r\n    verified: false,\r\n    activity: 51,\r\n    representative: {\r\n      name: 'Ioni Bowcher',\r\n      image: 'ionibowcher.png',\r\n    },\r\n    balance: 82075,\r\n  },\r\n  {\r\n    id: 1040,\r\n    name: 'Youlanda Schemmer',\r\n    country: {\r\n      name: 'Bolivia',\r\n      code: 'bo',\r\n    },\r\n    company: 'Tri M Tool Inc',\r\n    date: new Date('2017-12-15'),\r\n    status: 'negotiation',\r\n    verified: true,\r\n    activity: 49,\r\n    representative: {\r\n      name: 'Xuxue Feng',\r\n      image: 'xuxuefeng.png',\r\n    },\r\n    balance: 19208,\r\n  },\r\n  {\r\n    id: 1041,\r\n    name: 'Dyan Oldroyd',\r\n    country: {\r\n      name: 'Argentina',\r\n      code: 'ar',\r\n    },\r\n    company: 'International Eyelets Inc',\r\n    date: new Date('2017-02-02'),\r\n    status: 'qualified',\r\n    verified: false,\r\n    activity: 5,\r\n    representative: {\r\n      name: 'Amy Elsner',\r\n      image: 'amyelsner.png',\r\n    },\r\n    balance: 50194,\r\n  },\r\n  {\r\n    id: 1042,\r\n    name: 'Roxane Campain',\r\n    country: {\r\n      name: 'France',\r\n      code: 'fr',\r\n    },\r\n    company: 'Rapid Trading Intl',\r\n    date: new Date('2018-12-25'),\r\n    status: 'unqualified',\r\n    verified: false,\r\n    activity: 100,\r\n    representative: {\r\n      name: 'Anna Fali',\r\n      image: 'annafali.png',\r\n    },\r\n    balance: 77714,\r\n  },\r\n  {\r\n    id: 1043,\r\n    name: 'Lavera Perin',\r\n    country: {\r\n      name: 'Vietnam',\r\n      code: 'vn',\r\n    },\r\n    company: 'Abc Enterprises Inc',\r\n    date: new Date('2018-04-10'),\r\n    status: 'qualified',\r\n    verified: false,\r\n    activity: 71,\r\n    representative: {\r\n      name: 'Stephen Shaw',\r\n      image: 'stephenshaw.png',\r\n    },\r\n    balance: 35740,\r\n  },\r\n  {\r\n    id: 1044,\r\n    name: 'Erick Ferencz',\r\n    country: {\r\n      name: 'Belgium',\r\n      code: 'be',\r\n    },\r\n    company: 'Cindy Turner Associates',\r\n    date: new Date('2018-05-06'),\r\n    status: 'unqualified',\r\n    verified: true,\r\n    activity: 54,\r\n    representative: {\r\n      name: 'Amy Elsner',\r\n      image: 'amyelsner.png',\r\n    },\r\n    balance: 30790,\r\n  },\r\n  {\r\n    id: 1045,\r\n    name: 'Fatima Saylors',\r\n    country: {\r\n      name: 'Canada',\r\n      code: 'ca',\r\n    },\r\n    company: 'Stanton, James D Esq',\r\n    date: new Date('2019-07-10'),\r\n    status: 'renewal',\r\n    verified: true,\r\n    activity: 93,\r\n    representative: {\r\n      name: 'Onyama Limba',\r\n      image: 'onyamalimba.png',\r\n    },\r\n    balance: 52343,\r\n  },\r\n  {\r\n    id: 1046,\r\n    name: 'Jina Briddick',\r\n    country: {\r\n      name: 'Mexico',\r\n      code: 'mx',\r\n    },\r\n    company: 'Grace Pastries Inc',\r\n    date: new Date('2018-02-19'),\r\n    status: 'unqualified',\r\n    verified: false,\r\n    activity: 97,\r\n    representative: {\r\n      name: 'Xuxue Feng',\r\n      image: 'xuxuefeng.png',\r\n    },\r\n    balance: 53966,\r\n  },\r\n  {\r\n    id: 1047,\r\n    name: 'Kanisha Waycott',\r\n    country: {\r\n      name: 'Ecuador',\r\n      code: 'ec',\r\n    },\r\n    company: 'Schroer, Gene E Esq',\r\n    date: new Date('2019-11-27'),\r\n    status: 'new',\r\n    verified: false,\r\n    activity: 80,\r\n    representative: {\r\n      name: 'Xuxue Feng',\r\n      image: 'xuxuefeng.png',\r\n    },\r\n    balance: 9920,\r\n  },\r\n  {\r\n    id: 1048,\r\n    name: 'Emerson Bowley',\r\n    country: {\r\n      name: 'Finland',\r\n      code: 'fi',\r\n    },\r\n    company: 'Knights Inn',\r\n    date: new Date('2018-11-24'),\r\n    status: 'new',\r\n    verified: false,\r\n    activity: 63,\r\n    representative: {\r\n      name: 'Stephen Shaw',\r\n      image: 'stephenshaw.png',\r\n    },\r\n    balance: 78069,\r\n  },\r\n  {\r\n    id: 1049,\r\n    name: 'Blair Malet',\r\n    country: {\r\n      name: 'Finland',\r\n      code: 'fi',\r\n    },\r\n    company: 'Bollinger Mach Shp & Shipyard',\r\n    date: new Date('2018-04-19'),\r\n    status: 'new',\r\n    verified: true,\r\n    activity: 92,\r\n    representative: {\r\n      name: 'Asiya Javayant',\r\n      image: 'asiyajavayant.png',\r\n    },\r\n    balance: 65005,\r\n  },\r\n];\r\n\r\ninterface Sale {\r\n  product: string;\r\n  lastYearSale: number;\r\n  thisYearSale: number;\r\n  lastYearProfit: number;\r\n  thisYearProfit: number;\r\n}\r\n\r\nexport const Sales: Sale[] = [\r\n  {\r\n    product: 'Bamboo Watch',\r\n    lastYearSale: 51,\r\n    thisYearSale: 40,\r\n    lastYearProfit: 54406,\r\n    thisYearProfit: 43342,\r\n  },\r\n  {\r\n    product: 'Black Watch',\r\n    lastYearSale: 83,\r\n    thisYearSale: 9,\r\n    lastYearProfit: 423132,\r\n    thisYearProfit: 312122,\r\n  },\r\n  { product: 'Blue Band', lastYearSale: 38, thisYearSale: 5, lastYearProfit: 12321, thisYearProfit: 8500 },\r\n  {\r\n    product: 'Blue T-Shirt',\r\n    lastYearSale: 49,\r\n    thisYearSale: 22,\r\n    lastYearProfit: 745232,\r\n    thisYearProfit: 65323,\r\n  },\r\n  {\r\n    product: 'Brown Purse',\r\n    lastYearSale: 17,\r\n    thisYearSale: 79,\r\n    lastYearProfit: 643242,\r\n    thisYearProfit: 500332,\r\n  },\r\n  {\r\n    product: 'Chakra Bracelet',\r\n    lastYearSale: 52,\r\n    thisYearSale: 65,\r\n    lastYearProfit: 421132,\r\n    thisYearProfit: 150005,\r\n  },\r\n  {\r\n    product: 'Galaxy Earrings',\r\n    lastYearSale: 82,\r\n    thisYearSale: 12,\r\n    lastYearProfit: 131211,\r\n    thisYearProfit: 100214,\r\n  },\r\n  {\r\n    product: 'Game Controller',\r\n    lastYearSale: 44,\r\n    thisYearSale: 45,\r\n    lastYearProfit: 66442,\r\n    thisYearProfit: 53322,\r\n  },\r\n  {\r\n    product: 'Gaming Set',\r\n    lastYearSale: 90,\r\n    thisYearSale: 56,\r\n    lastYearProfit: 765442,\r\n    thisYearProfit: 296232,\r\n  },\r\n  {\r\n    product: 'Gold Phone Case',\r\n    lastYearSale: 75,\r\n    thisYearSale: 54,\r\n    lastYearProfit: 21212,\r\n    thisYearProfit: 12533,\r\n  },\r\n];\r\n\r\nexport interface Product {\r\n  id: string;\r\n  code: string;\r\n  name: string;\r\n  description: string;\r\n  image: string;\r\n  price: number;\r\n  category: string;\r\n  quantity: number;\r\n  inventoryStatus: string;\r\n  rating: number;\r\n}\r\n\r\nconst ProductsSmall: Product[] = [\r\n  {\r\n    id: '1000',\r\n    code: 'f230fh0g3',\r\n    name: 'Bamboo Watch',\r\n    description: 'Product Description',\r\n    image: 'bamboo-watch.jpg',\r\n    price: 65,\r\n    category: 'Accessories',\r\n    quantity: 24,\r\n    inventoryStatus: 'INSTOCK',\r\n    rating: 5,\r\n  },\r\n  {\r\n    id: '1001',\r\n    code: 'nvklal433',\r\n    name: 'Black Watch',\r\n    description: 'Product Description',\r\n    image: 'black-watch.jpg',\r\n    price: 72,\r\n    category: 'Accessories',\r\n    quantity: 61,\r\n    inventoryStatus: 'INSTOCK',\r\n    rating: 4,\r\n  },\r\n  {\r\n    id: '1002',\r\n    code: 'zz21cz3c1',\r\n    name: 'Blue Band',\r\n    description: 'Product Description',\r\n    image: 'blue-band.jpg',\r\n    price: 79,\r\n    category: 'Fitness',\r\n    quantity: 2,\r\n    inventoryStatus: 'LOWSTOCK',\r\n    rating: 3,\r\n  },\r\n  {\r\n    id: '1003',\r\n    code: '244wgerg2',\r\n    name: 'Blue T-Shirt',\r\n    description: 'Product Description',\r\n    image: 'blue-t-shirt.jpg',\r\n    price: 29,\r\n    category: 'Clothing',\r\n    quantity: 25,\r\n    inventoryStatus: 'INSTOCK',\r\n    rating: 5,\r\n  },\r\n  {\r\n    id: '1004',\r\n    code: 'h456wer53',\r\n    name: 'Bracelet',\r\n    description: 'Product Description',\r\n    image: 'bracelet.jpg',\r\n    price: 15,\r\n    category: 'Accessories',\r\n    quantity: 73,\r\n    inventoryStatus: 'INSTOCK',\r\n    rating: 4,\r\n  },\r\n  {\r\n    id: '1005',\r\n    code: 'av2231fwg',\r\n    name: 'Brown Purse',\r\n    description: 'Product Description',\r\n    image: 'brown-purse.jpg',\r\n    price: 120,\r\n    category: 'Accessories',\r\n    quantity: 0,\r\n    inventoryStatus: 'OUTOFSTOCK',\r\n    rating: 4,\r\n  },\r\n  {\r\n    id: '1006',\r\n    code: 'bib36pfvm',\r\n    name: 'Chakra Bracelet',\r\n    description: 'Product Description',\r\n    image: 'chakra-bracelet.jpg',\r\n    price: 32,\r\n    category: 'Accessories',\r\n    quantity: 5,\r\n    inventoryStatus: 'LOWSTOCK',\r\n    rating: 3,\r\n  },\r\n  {\r\n    id: '1007',\r\n    code: 'mbvjkgip5',\r\n    name: 'Galaxy Earrings',\r\n    description: 'Product Description',\r\n    image: 'galaxy-earrings.jpg',\r\n    price: 34,\r\n    category: 'Accessories',\r\n    quantity: 23,\r\n    inventoryStatus: 'INSTOCK',\r\n    rating: 5,\r\n  },\r\n  {\r\n    id: '1008',\r\n    code: 'vbb124btr',\r\n    name: 'Game Controller',\r\n    description: 'Product Description',\r\n    image: 'game-controller.jpg',\r\n    price: 99,\r\n    category: 'Electronics',\r\n    quantity: 2,\r\n    inventoryStatus: 'LOWSTOCK',\r\n    rating: 4,\r\n  },\r\n  {\r\n    id: '1009',\r\n    code: 'cm230f032',\r\n    name: 'Gaming Set',\r\n    description: 'Product Description',\r\n    image: 'gaming-set.jpg',\r\n    price: 299,\r\n    category: 'Electronics',\r\n    quantity: 63,\r\n    inventoryStatus: 'INSTOCK',\r\n    rating: 3,\r\n  },\r\n];\r\n\r\ninterface ProductOrder {\r\n  id: string;\r\n  code: string;\r\n  name: string;\r\n  description: string;\r\n  image: string;\r\n  price: number;\r\n  category: string;\r\n  quantity: number;\r\n  inventoryStatus: string;\r\n  rating: number;\r\n  orders: Order[];\r\n}\r\n\r\ninterface Order {\r\n  id: string;\r\n  productCode: string;\r\n  date: string;\r\n  amount: number;\r\n  quantity: number;\r\n  customer: string;\r\n  status: string;\r\n}\r\n\r\nconst ProductsOrdersSmall: ProductOrder[] = [\r\n  {\r\n    id: '1000',\r\n    code: 'f230fh0g3',\r\n    name: 'Bamboo Watch',\r\n    description: 'Product Description',\r\n    image: 'bamboo-watch.jpg',\r\n    price: 65,\r\n    category: 'Accessories',\r\n    quantity: 24,\r\n    inventoryStatus: 'INSTOCK',\r\n    rating: 5,\r\n    orders: [\r\n      {\r\n        id: '1000',\r\n        productCode: 'f230fh0g3',\r\n        date: '13.08.2020',\r\n        amount: 65,\r\n        quantity: 1,\r\n        customer: 'David James',\r\n        status: 'PENDING',\r\n      },\r\n      {\r\n        id: '1001',\r\n        productCode: 'f230fh0g3',\r\n        date: '14.05.2020',\r\n        amount: 130,\r\n        quantity: 2,\r\n        customer: 'Leon Rodrigues',\r\n        status: 'DELIVERED',\r\n      },\r\n      {\r\n        id: '1002',\r\n        productCode: 'f230fh0g3',\r\n        date: '04.01.2019',\r\n        amount: 65,\r\n        quantity: 1,\r\n        customer: 'Juan Alejandro',\r\n        status: 'RETURNED',\r\n      },\r\n      {\r\n        id: '1003',\r\n        productCode: 'f230fh0g3',\r\n        date: '13.09.2020',\r\n        amount: 195,\r\n        quantity: 3,\r\n        customer: 'Claire Morrow',\r\n        status: 'CANCELLED',\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    id: '1001',\r\n    code: 'nvklal433',\r\n    name: 'Black Watch',\r\n    description: 'Product Description',\r\n    image: 'black-watch.jpg',\r\n    price: 72,\r\n    category: 'Accessories',\r\n    quantity: 61,\r\n    inventoryStatus: 'INSTOCK',\r\n    rating: 4,\r\n    orders: [\r\n      {\r\n        id: '2000',\r\n        productCode: 'nvklal433',\r\n        date: '14.05.2020',\r\n        amount: 72,\r\n        quantity: 1,\r\n        customer: 'Maisha Jefferson',\r\n        status: 'DELIVERED',\r\n      },\r\n      {\r\n        id: '2001',\r\n        productCode: 'nvklal433',\r\n        date: '28.02.2020',\r\n        amount: 144,\r\n        quantity: 2,\r\n        customer: 'Octavia Murillo',\r\n        status: 'PENDING',\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    id: '1002',\r\n    code: 'zz21cz3c1',\r\n    name: 'Blue Band',\r\n    description: 'Product Description',\r\n    image: 'blue-band.jpg',\r\n    price: 79,\r\n    category: 'Fitness',\r\n    quantity: 2,\r\n    inventoryStatus: 'LOWSTOCK',\r\n    rating: 3,\r\n    orders: [\r\n      {\r\n        id: '3000',\r\n        productCode: 'zz21cz3c1',\r\n        date: '05.07.2020',\r\n        amount: 79,\r\n        quantity: 1,\r\n        customer: 'Stacey Leja',\r\n        status: 'DELIVERED',\r\n      },\r\n      {\r\n        id: '3001',\r\n        productCode: 'zz21cz3c1',\r\n        date: '06.02.2020',\r\n        amount: 79,\r\n        quantity: 1,\r\n        customer: 'Ashley Wickens',\r\n        status: 'DELIVERED',\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    id: '1003',\r\n    code: '244wgerg2',\r\n    name: 'Blue T-Shirt',\r\n    description: 'Product Description',\r\n    image: 'blue-t-shirt.jpg',\r\n    price: 29,\r\n    category: 'Clothing',\r\n    quantity: 25,\r\n    inventoryStatus: 'INSTOCK',\r\n    rating: 5,\r\n    orders: [],\r\n  },\r\n  {\r\n    id: '1004',\r\n    code: 'h456wer53',\r\n    name: 'Bracelet',\r\n    description: 'Product Description',\r\n    image: 'bracelet.jpg',\r\n    price: 15,\r\n    category: 'Accessories',\r\n    quantity: 73,\r\n    inventoryStatus: 'INSTOCK',\r\n    rating: 4,\r\n    orders: [\r\n      {\r\n        id: '5000',\r\n        productCode: 'h456wer53',\r\n        date: '05.09.2020',\r\n        amount: 60,\r\n        quantity: 4,\r\n        customer: 'Mayumi Misaki',\r\n        status: 'PENDING',\r\n      },\r\n      {\r\n        id: '5001',\r\n        productCode: 'h456wer53',\r\n        date: '16.04.2019',\r\n        amount: 2,\r\n        quantity: 30,\r\n        customer: 'Francesco Salvatore',\r\n        status: 'DELIVERED',\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    id: '1005',\r\n    code: 'av2231fwg',\r\n    name: 'Brown Purse',\r\n    description: 'Product Description',\r\n    image: 'brown-purse.jpg',\r\n    price: 120,\r\n    category: 'Accessories',\r\n    quantity: 0,\r\n    inventoryStatus: 'OUTOFSTOCK',\r\n    rating: 4,\r\n    orders: [\r\n      {\r\n        id: '6000',\r\n        productCode: 'av2231fwg',\r\n        date: '25.01.2020',\r\n        amount: 120,\r\n        quantity: 1,\r\n        customer: 'Isabel Sinclair',\r\n        status: 'RETURNED',\r\n      },\r\n      {\r\n        id: '6001',\r\n        productCode: 'av2231fwg',\r\n        date: '12.03.2019',\r\n        amount: 240,\r\n        quantity: 2,\r\n        customer: 'Lionel Clifford',\r\n        status: 'DELIVERED',\r\n      },\r\n      {\r\n        id: '6002',\r\n        productCode: 'av2231fwg',\r\n        date: '05.05.2019',\r\n        amount: 120,\r\n        quantity: 1,\r\n        customer: 'Cody Chavez',\r\n        status: 'DELIVERED',\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    id: '1006',\r\n    code: 'bib36pfvm',\r\n    name: 'Chakra Bracelet',\r\n    description: 'Product Description',\r\n    image: 'chakra-bracelet.jpg',\r\n    price: 32,\r\n    category: 'Accessories',\r\n    quantity: 5,\r\n    inventoryStatus: 'LOWSTOCK',\r\n    rating: 3,\r\n    orders: [\r\n      {\r\n        id: '7000',\r\n        productCode: 'bib36pfvm',\r\n        date: '24.02.2020',\r\n        amount: 32,\r\n        quantity: 1,\r\n        customer: 'Arvin Darci',\r\n        status: 'DELIVERED',\r\n      },\r\n      {\r\n        id: '7001',\r\n        productCode: 'bib36pfvm',\r\n        date: '14.01.2020',\r\n        amount: 64,\r\n        quantity: 2,\r\n        customer: 'Izzy Jones',\r\n        status: 'PENDING',\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    id: '1007',\r\n    code: 'mbvjkgip5',\r\n    name: 'Galaxy Earrings',\r\n    description: 'Product Description',\r\n    image: 'galaxy-earrings.jpg',\r\n    price: 34,\r\n    category: 'Accessories',\r\n    quantity: 23,\r\n    inventoryStatus: 'INSTOCK',\r\n    rating: 5,\r\n    orders: [\r\n      {\r\n        id: '8000',\r\n        productCode: 'mbvjkgip5',\r\n        date: '19.06.2020',\r\n        amount: 34,\r\n        quantity: 1,\r\n        customer: 'Jennifer Smith',\r\n        status: 'DELIVERED',\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    id: '1008',\r\n    code: 'vbb124btr',\r\n    name: 'Game Controller',\r\n    description: 'Product Description',\r\n    image: 'game-controller.jpg',\r\n    price: 99,\r\n    category: 'Electronics',\r\n    quantity: 2,\r\n    inventoryStatus: 'LOWSTOCK',\r\n    rating: 4,\r\n    orders: [\r\n      {\r\n        id: '9000',\r\n        productCode: 'vbb124btr',\r\n        date: '05.01.2020',\r\n        amount: 99,\r\n        quantity: 1,\r\n        customer: 'Jeanfrancois David',\r\n        status: 'DELIVERED',\r\n      },\r\n      {\r\n        id: '9001',\r\n        productCode: 'vbb124btr',\r\n        date: '19.01.2020',\r\n        amount: 198,\r\n        quantity: 2,\r\n        customer: 'Ivar Greenwood',\r\n        status: 'RETURNED',\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    id: '1009',\r\n    code: 'cm230f032',\r\n    name: 'Gaming Set',\r\n    description: 'Product Description',\r\n    image: 'gaming-set.jpg',\r\n    price: 299,\r\n    category: 'Electronics',\r\n    quantity: 63,\r\n    inventoryStatus: 'INSTOCK',\r\n    rating: 3,\r\n    orders: [\r\n      {\r\n        id: '10000',\r\n        productCode: 'cm230f032',\r\n        date: '24.06.2020',\r\n        amount: 299,\r\n        quantity: 1,\r\n        customer: 'Kadeem Mujtaba',\r\n        status: 'PENDING',\r\n      },\r\n      {\r\n        id: '10001',\r\n        productCode: 'cm230f032',\r\n        date: '11.05.2020',\r\n        amount: 299,\r\n        quantity: 1,\r\n        customer: 'Ashley Wickens',\r\n        status: 'DELIVERED',\r\n      },\r\n      {\r\n        id: '10002',\r\n        productCode: 'cm230f032',\r\n        date: '07.02.2019',\r\n        amount: 299,\r\n        quantity: 1,\r\n        customer: 'Julie Johnson',\r\n        status: 'DELIVERED',\r\n      },\r\n      {\r\n        id: '10003',\r\n        productCode: 'cm230f032',\r\n        date: '26.04.2020',\r\n        amount: 299,\r\n        quantity: 1,\r\n        customer: 'Tony Costa',\r\n        status: 'CANCELLED',\r\n      },\r\n    ],\r\n  },\r\n];\r\n\r\nfunction cloneArrayOfObjects<T>(array: T[]): T[] {\r\n  return array.map(item => ({ ...item }));\r\n}\r\n\r\nexport function getProducts(): Product[] {\r\n  return cloneArrayOfObjects(Products);\r\n}\r\n\r\nexport function getProductsSmall(): Product[] {\r\n  return cloneArrayOfObjects(ProductsSmall);\r\n}\r\n\r\nexport function getSalesSmall(): Sale[] {\r\n  return cloneArrayOfObjects(Sales);\r\n}\r\n\r\nexport function getCustomers(): Customer[] {\r\n  return cloneArrayOfObjects(Customers);\r\n}\r\n\r\nexport function getProductsOrdersSmall(): ProductOrder[] {\r\n  return cloneArrayOfObjects(ProductsOrdersSmall);\r\n}\r\n",
      "properties": [
        {
          "name": "activity",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "number",
          "optional": false,
          "description": "",
          "line": 132
        },
        {
          "name": "balance",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "number",
          "optional": false,
          "description": "",
          "line": 134
        },
        {
          "name": "company",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 128
        },
        {
          "name": "country",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "literal type",
          "optional": false,
          "description": "",
          "line": 127
        },
        {
          "name": "date",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Date",
          "optional": false,
          "description": "",
          "line": 129
        },
        {
          "name": "id",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "number",
          "optional": false,
          "description": "",
          "line": 125
        },
        {
          "name": "name",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 126
        },
        {
          "name": "representative",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "literal type",
          "optional": false,
          "description": "",
          "line": 133
        },
        {
          "name": "status",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 130
        },
        {
          "name": "verified",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "boolean",
          "optional": false,
          "description": "",
          "line": 131
        }
      ],
      "indexSignatures": [],
      "kind": 164,
      "methods": []
    },
    {
      "name": "CustomInputEvent",
      "id": "interface-CustomInputEvent-61e3adfeac4cf29c16f29eafec1180ff",
      "file": "libs/components/src/lib/@core/models/events.models.ts",
      "deprecated": false,
      "deprecationMessage": "",
      "type": "interface",
      "sourceCode": "export interface HtmlInputEvent<T extends HTMLElement = HTMLElement> extends InputEvent {\r\n  target: T;\r\n}\r\n\r\nexport interface CustomInputEvent<T> {\r\n  originalEvent: HtmlInputEvent<HTMLInputElement>;\r\n  value: T;\r\n}\r\n",
      "properties": [
        {
          "name": "originalEvent",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "HtmlInputEvent<HTMLInputElement>",
          "optional": false,
          "description": "",
          "line": 6
        },
        {
          "name": "value",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "T",
          "optional": false,
          "description": "",
          "line": 7
        }
      ],
      "indexSignatures": [],
      "kind": 164,
      "methods": []
    },
    {
      "name": "DataFormControl",
      "id": "interface-DataFormControl-1cc589d80d8960cc60879e0162ed12a4",
      "file": "libs/components/src/lib/checkbox/story/data.ts",
      "deprecated": false,
      "deprecationMessage": "",
      "type": "interface",
      "sourceCode": "export interface DataFormControl {\r\n  text: string;\r\n  options: { value: string | number; label: string }[];\r\n}\r\n\r\nexport const data: DataFormControl[] = [\r\n  {\r\n    text: 'Checkbox',\r\n    options: [\r\n      {\r\n        value: 1,\r\n        label: 'Value 1',\r\n      },\r\n      {\r\n        value: 2,\r\n        label: 'Value 2',\r\n      },\r\n      {\r\n        value: 3,\r\n        label: 'Value 3',\r\n      },\r\n      {\r\n        value: 4,\r\n        label: 'Value 4',\r\n      },\r\n    ],\r\n  },\r\n];\r\n",
      "properties": [
        {
          "name": "options",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "literal type[]",
          "optional": false,
          "description": "",
          "line": 3
        },
        {
          "name": "text",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 2
        }
      ],
      "indexSignatures": [],
      "kind": 164,
      "methods": []
    },
    {
      "name": "Dimensions",
      "id": "interface-Dimensions-434e8c2148ea38cd8a3c5a7873085df7",
      "file": "libs/components/src/lib/dropdown-with-content/zyfra-dropdown-with-content.service.ts",
      "deprecated": false,
      "deprecationMessage": "",
      "type": "interface",
      "sourceCode": "import { DOCUMENT } from '@angular/common';\r\nimport { ElementRef, Inject, Injectable } from '@angular/core';\r\n\r\ninterface Dimensions {\r\n  width: number;\r\n  height: number;\r\n}\r\n\r\n@Injectable()\r\nexport class ZyfraDropdownWithContentService {\r\n  constructor(@Inject(DOCUMENT) private document: Document, private element: ElementRef) {}\r\n\r\n  public setDropdownPanelPosition(): void {\r\n    const dropdownPanel: HTMLElement = this.element.nativeElement.querySelector('.p-dropdown-panel');\r\n    const targetHeightElement: HTMLElement = this.element.nativeElement.firstElementChild;\r\n    dropdownPanel.style.visibility = 'hidden';\r\n\r\n    setTimeout(() => {\r\n      this.relativePosition(dropdownPanel, targetHeightElement);\r\n      dropdownPanel.style.visibility = 'visible';\r\n    });\r\n  }\r\n\r\n  // https://github.com/primefaces/primeng/blob/master/src/app/components/dom/domhandler.ts#L94\r\n  private relativePosition(dropdownPanelElement: HTMLElement, target: HTMLElement): void {\r\n    const elementDimensions = dropdownPanelElement.offsetParent\r\n      ? { width: dropdownPanelElement.offsetWidth, height: dropdownPanelElement.offsetHeight }\r\n      : this.getHiddenElementDimensions(dropdownPanelElement);\r\n\r\n    const targetHeight = target.offsetHeight;\r\n    const targetOffset = target.getBoundingClientRect();\r\n    const viewport = this.getViewport();\r\n\r\n    let top: number, left: number;\r\n\r\n    if (targetOffset.top + targetHeight + elementDimensions.height > viewport.height) {\r\n      top = -1 * elementDimensions.height;\r\n      dropdownPanelElement.style.transformOrigin = 'bottom';\r\n      if (targetOffset.top + top < 0) {\r\n        top = -1 * targetOffset.top;\r\n      }\r\n    } else {\r\n      top = targetHeight;\r\n      dropdownPanelElement.style.transformOrigin = 'top';\r\n    }\r\n\r\n    if (elementDimensions.width > viewport.width) {\r\n      // element wider then viewport and cannot fit on screen (align at left side of viewport)\r\n      left = targetOffset.left * -1;\r\n    } else if (targetOffset.left + elementDimensions.width > viewport.width) {\r\n      // element wider then viewport but can be fit on screen (align at right side of viewport)\r\n      left = (targetOffset.left + elementDimensions.width - viewport.width) * -1;\r\n    } else {\r\n      // element fits on screen (align with target)\r\n      left = 0;\r\n    }\r\n\r\n    dropdownPanelElement.style.top = top + 'px';\r\n    dropdownPanelElement.style.left = left + 'px';\r\n  }\r\n\r\n  private getHiddenElementDimensions(element: HTMLElement): Dimensions {\r\n    const dimensions: Dimensions = {\r\n      width: 0,\r\n      height: 0,\r\n    };\r\n    element.style.visibility = 'hidden';\r\n    element.style.display = 'block';\r\n    dimensions.width = element.offsetWidth;\r\n    dimensions.height = element.offsetHeight;\r\n    element.style.display = 'none';\r\n    element.style.visibility = 'visible';\r\n\r\n    return dimensions;\r\n  }\r\n\r\n  private getViewport(): Dimensions {\r\n    const win = this.document.defaultView,\r\n      d = this.document,\r\n      e = d.documentElement,\r\n      g = d.getElementsByTagName('body')[0],\r\n      w = win.innerWidth || e.clientWidth || g.clientWidth,\r\n      h = win.innerHeight || e.clientHeight || g.clientHeight;\r\n\r\n    return { width: w, height: h };\r\n  }\r\n}\r\n",
      "properties": [
        {
          "name": "height",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "number",
          "optional": false,
          "description": "",
          "line": 6
        },
        {
          "name": "width",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "number",
          "optional": false,
          "description": "",
          "line": 5
        }
      ],
      "indexSignatures": [],
      "kind": 164,
      "methods": []
    },
    {
      "name": "DropdownChangeEvent",
      "id": "interface-DropdownChangeEvent-9e76211b4c21017a7276455e406645ac",
      "file": "libs/components/src/lib/dropdown/zyfra-dropdown.component.ts",
      "deprecated": false,
      "deprecationMessage": "",
      "type": "interface",
      "sourceCode": "import {\r\n  AfterContentInit,\r\n  ChangeDetectionStrategy,\r\n  Component,\r\n  ContentChildren,\r\n  EventEmitter,\r\n  Input,\r\n  Output,\r\n  QueryList,\r\n  TemplateRef,\r\n  ViewChild,\r\n} from '@angular/core';\r\nimport { AnimationEvent } from '@angular/animations';\r\nimport { ControlValueAccessor } from '@angular/forms';\r\nimport { Dropdown } from 'primeng/dropdown';\r\nimport { WrappedFormComponent } from '../@core/value-accessor/wrapped-form.component';\r\nimport { ZyfraDropdownTemplateDirective } from './zyfra-dropdown-template.directive';\r\n\r\nexport interface DropdownChangeEvent<T> {\r\n  originalEvent: PointerEvent;\r\n  value: T;\r\n}\r\n\r\n@Component({\r\n  selector: 'zyfra-dropdown',\r\n  templateUrl: './zyfra-dropdown.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class ZyfraDropdownComponent<T = unknown>\r\n  extends WrappedFormComponent\r\n  implements ControlValueAccessor, AfterContentInit\r\n{\r\n  @Input() options: T[];\r\n  @Input() optionValue: string;\r\n  @Input() optionLabel = 'label';\r\n  @Input() optionDisabled = 'disabled';\r\n  @Input() optionGroupLabel = 'label';\r\n  @Input() optionGroupChildren = 'items';\r\n  @Input() name: string;\r\n  @Input() scrollHeight = '200px';\r\n  @Input() style: string;\r\n  @Input() panelStyle: string;\r\n  @Input() styleClass: string;\r\n  @Input() panelStyleClass: string;\r\n  @Input() filter: boolean;\r\n  @Input() filterValue: string;\r\n  @Input() filterBy: string;\r\n  @Input() filterMatchMode:\r\n    | 'contains'\r\n    | 'startsWith'\r\n    | 'endsWith'\r\n    | 'equals'\r\n    | 'notEquals'\r\n    | 'in'\r\n    | 'lt'\r\n    | 'lte'\r\n    | 'gt'\r\n    | 'gte' = 'contains';\r\n  @Input() filterPlaceholder: string;\r\n  @Input() filterLocale: string;\r\n  @Input() required: boolean;\r\n  @Input() disabled: boolean; // TODO(rustam) remove this prop use control disable\r\n  @Input() readonly: boolean;\r\n  @Input() emptyMessage = 'No records found';\r\n  @Input() emptyFilterMessage = 'No results found';\r\n  @Input() ariaLabelledBy: string;\r\n  @Input() editable: boolean;\r\n  @Input() maxlength: number;\r\n  @Input() appendTo: any;\r\n  @Input() tabindex: number;\r\n  @Input() placeholder: string;\r\n  @Input() inputId: string;\r\n  @Input() dataKey: string;\r\n  @Input() autofocus: boolean;\r\n  @Input() autofocusFilter: boolean;\r\n  @Input() resetFilterOnHide: boolean;\r\n  @Input() dropdownIcon = 'zyfra-icon chevrons-down';\r\n  @Input() autoDisplayFirst = true;\r\n  @Input() group: boolean;\r\n  @Input() groupTemplateClass: string;\r\n  @Input() showClear: boolean;\r\n  @Input() baseZIndex = 0;\r\n  @Input() autoZIndex = true;\r\n  @Input() showTransitionOptions = '.12s cubic-bezier(0, 0, 0.2, 1)';\r\n  @Input() hideTransitionOptions = '.1s linear';\r\n  @Input() ariaFilterLabel: string;\r\n  @Input() tooltip: any;\r\n  @Input() tooltipStyleClass: string;\r\n  @Input() tooltipPosition = 'top';\r\n  @Input() tooltipPositionStyle = 'absolute';\r\n  @Input() itemSize = 30;\r\n  @Input() label = '';\r\n  @Input() virtualScroll: boolean;\r\n  @Input() mini: boolean;\r\n\r\n  @Output() onChange = new EventEmitter<DropdownChangeEvent<unknown>>();\r\n  @Output() onClick = new EventEmitter<PointerEvent>();\r\n  @Output() onFocus = new EventEmitter<FocusEvent>();\r\n  @Output() onBlur = new EventEmitter<FocusEvent>();\r\n  @Output() onShow = new EventEmitter<AnimationEvent>();\r\n  @Output() onHide = new EventEmitter<AnimationEvent>();\r\n\r\n  @ViewChild('dropdown') dropdown: Dropdown;\r\n  @ContentChildren(ZyfraDropdownTemplateDirective) templates: QueryList<ZyfraDropdownTemplateDirective>;\r\n\r\n  itemTemplate: TemplateRef<unknown>;\r\n  groupTemplate: TemplateRef<unknown>;\r\n  selectedItemTemplate: TemplateRef<unknown>;\r\n  headerTemplate: TemplateRef<unknown>;\r\n  emptyTemplate: TemplateRef<unknown>;\r\n  emptyfilterTemplate: TemplateRef<unknown>;\r\n  footerTemplate: TemplateRef<unknown>;\r\n\r\n  ngAfterContentInit(): void {\r\n    this.templates.forEach(item => {\r\n      switch (item.getType()) {\r\n        case 'item':\r\n          this.itemTemplate = item.template;\r\n          break;\r\n        case 'group':\r\n          this.groupTemplate = item.template;\r\n          break;\r\n        case 'selectedItem':\r\n          this.selectedItemTemplate = item.template;\r\n          break;\r\n        case 'header':\r\n          this.headerTemplate = item.template;\r\n          break;\r\n        case 'empty':\r\n          this.emptyTemplate = item.template;\r\n          break;\r\n        case 'emptyfilter':\r\n          this.emptyfilterTemplate = item.template;\r\n          break;\r\n        case 'footer':\r\n          this.footerTemplate = item.template;\r\n          break;\r\n      }\r\n    });\r\n  }\r\n\r\n  public override setDisabledState(): void {\r\n    // do nothing, because have `disabled` input\r\n  }\r\n}\r\n",
      "properties": [
        {
          "name": "originalEvent",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "PointerEvent",
          "optional": false,
          "description": "",
          "line": 20
        },
        {
          "name": "value",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "T",
          "optional": false,
          "description": "",
          "line": 21
        }
      ],
      "indexSignatures": [],
      "kind": 164,
      "methods": []
    },
    {
      "name": "HtmlInputEvent",
      "id": "interface-HtmlInputEvent-61e3adfeac4cf29c16f29eafec1180ff",
      "file": "libs/components/src/lib/@core/models/events.models.ts",
      "deprecated": false,
      "deprecationMessage": "",
      "type": "interface",
      "sourceCode": "export interface HtmlInputEvent<T extends HTMLElement = HTMLElement> extends InputEvent {\r\n  target: T;\r\n}\r\n\r\nexport interface CustomInputEvent<T> {\r\n  originalEvent: HtmlInputEvent<HTMLInputElement>;\r\n  value: T;\r\n}\r\n",
      "properties": [
        {
          "name": "target",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "T",
          "optional": false,
          "description": "",
          "line": 2
        }
      ],
      "indexSignatures": [],
      "kind": 164,
      "methods": [],
      "extends": "InputEvent"
    },
    {
      "name": "NavMenuEvent",
      "id": "interface-NavMenuEvent-57f079d3b616cde4f867bef250868c61",
      "file": "libs/components/src/lib/nav-menu/model/nav-menu-config.ts",
      "deprecated": false,
      "deprecationMessage": "",
      "type": "interface",
      "sourceCode": "import { ZyfraMenuItem } from './zyfra-menu-item.interface';\r\n\r\nexport type SelectionType = 'single' | 'checkbox';\r\nexport type MenuItemSize = 'standard' | 'enlarged';\r\nexport type ViewMode = 'rubricator' | 'folder' | 'hierarchy'\r\n\r\nexport interface NavMenuEvent {\r\n  item: ZyfraMenuItem,\r\n  groupIndex?: number\r\n}\r\n\r\nexport interface NavMenuSelectionEvent {\r\n  selection: ZyfraMenuItem | ZyfraMenuItem[],\r\n  groupIndex?: number\r\n}\r\n\r\nexport interface SettingsConfig {\r\n  singleGroup?: boolean,\r\n  selectionMode?: SelectionType,\r\n  selectedSize?: MenuItemSize;\r\n}\r\n\r\nexport const DEFAULT_SETTINGS: SettingsConfig = {\r\n  singleGroup: false,\r\n  selectionMode: 'single',\r\n  selectedSize: 'standard'\r\n};\r\n\r\nexport type HeaderConfig = {\r\n  settings?: boolean,\r\n  home?: boolean\r\n};\r\n\r\nexport interface ToolbarConfig {\r\n  filter?: boolean,\r\n  group?: boolean,\r\n  filesMode?: boolean,\r\n  rubricatorMode?: boolean,\r\n  search?: boolean,\r\n  closeAll?: boolean,\r\n  refresh?: boolean,\r\n}\r\n\r\nexport const DEFAULT_TOOLBAR_CONFIG: ToolbarConfig = {\r\n  filter: false,\r\n  group: false,\r\n  filesMode: false,\r\n  rubricatorMode: false,\r\n  search: false,\r\n  closeAll: false,\r\n  refresh: false,\r\n}\r\n",
      "properties": [
        {
          "name": "groupIndex",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "number",
          "optional": true,
          "description": "",
          "line": 9
        },
        {
          "name": "item",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "ZyfraMenuItem",
          "optional": false,
          "description": "",
          "line": 8
        }
      ],
      "indexSignatures": [],
      "kind": 164,
      "methods": []
    },
    {
      "name": "NavMenuSelectionEvent",
      "id": "interface-NavMenuSelectionEvent-57f079d3b616cde4f867bef250868c61",
      "file": "libs/components/src/lib/nav-menu/model/nav-menu-config.ts",
      "deprecated": false,
      "deprecationMessage": "",
      "type": "interface",
      "sourceCode": "import { ZyfraMenuItem } from './zyfra-menu-item.interface';\r\n\r\nexport type SelectionType = 'single' | 'checkbox';\r\nexport type MenuItemSize = 'standard' | 'enlarged';\r\nexport type ViewMode = 'rubricator' | 'folder' | 'hierarchy'\r\n\r\nexport interface NavMenuEvent {\r\n  item: ZyfraMenuItem,\r\n  groupIndex?: number\r\n}\r\n\r\nexport interface NavMenuSelectionEvent {\r\n  selection: ZyfraMenuItem | ZyfraMenuItem[],\r\n  groupIndex?: number\r\n}\r\n\r\nexport interface SettingsConfig {\r\n  singleGroup?: boolean,\r\n  selectionMode?: SelectionType,\r\n  selectedSize?: MenuItemSize;\r\n}\r\n\r\nexport const DEFAULT_SETTINGS: SettingsConfig = {\r\n  singleGroup: false,\r\n  selectionMode: 'single',\r\n  selectedSize: 'standard'\r\n};\r\n\r\nexport type HeaderConfig = {\r\n  settings?: boolean,\r\n  home?: boolean\r\n};\r\n\r\nexport interface ToolbarConfig {\r\n  filter?: boolean,\r\n  group?: boolean,\r\n  filesMode?: boolean,\r\n  rubricatorMode?: boolean,\r\n  search?: boolean,\r\n  closeAll?: boolean,\r\n  refresh?: boolean,\r\n}\r\n\r\nexport const DEFAULT_TOOLBAR_CONFIG: ToolbarConfig = {\r\n  filter: false,\r\n  group: false,\r\n  filesMode: false,\r\n  rubricatorMode: false,\r\n  search: false,\r\n  closeAll: false,\r\n  refresh: false,\r\n}\r\n",
      "properties": [
        {
          "name": "groupIndex",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "number",
          "optional": true,
          "description": "",
          "line": 14
        },
        {
          "name": "selection",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "ZyfraMenuItem | ZyfraMenuItem[]",
          "optional": false,
          "description": "",
          "line": 13
        }
      ],
      "indexSignatures": [],
      "kind": 164,
      "methods": []
    },
    {
      "name": "Order",
      "id": "interface-Order-3f8a240d97fed32f761bd91b12cebd31",
      "file": "libs/components/src/lib/table/_story/data.ts",
      "deprecated": false,
      "deprecationMessage": "",
      "type": "interface",
      "sourceCode": "export const Products: Product[] = [\r\n  {\r\n    id: '1000',\r\n    code: 'f230fh0g3',\r\n    name: 'Bamboo Watch',\r\n    description: 'Product Description',\r\n    image: 'bamboo-watch.jpg',\r\n    price: 65,\r\n    category: 'Accessories',\r\n    quantity: 24,\r\n    inventoryStatus: 'INSTOCK',\r\n    rating: 5,\r\n  },\r\n  {\r\n    id: '1001',\r\n    code: 'nvklal433',\r\n    name: 'Black Watch',\r\n    description: 'Product Description',\r\n    image: 'black-watch.jpg',\r\n    price: 72,\r\n    category: 'Accessories',\r\n    quantity: 61,\r\n    inventoryStatus: 'INSTOCK',\r\n    rating: 4,\r\n  },\r\n  {\r\n    id: '1002',\r\n    code: 'zz21cz3c1',\r\n    name: 'Blue Band',\r\n    description: 'Product Description',\r\n    image: 'blue-band.jpg',\r\n    price: 79,\r\n    category: 'Fitness',\r\n    quantity: 2,\r\n    inventoryStatus: 'LOWSTOCK',\r\n    rating: 3,\r\n  },\r\n  {\r\n    id: '1003',\r\n    code: '244wgerg2',\r\n    name: 'Blue T-Shirt',\r\n    description: 'Product Description',\r\n    image: 'blue-t-shirt.jpg',\r\n    price: 29,\r\n    category: 'Clothing',\r\n    quantity: 25,\r\n    inventoryStatus: 'INSTOCK',\r\n    rating: 5,\r\n  },\r\n  {\r\n    id: '1004',\r\n    code: 'h456wer53',\r\n    name: 'Bracelet',\r\n    description: 'Product Description',\r\n    image: 'bracelet.jpg',\r\n    price: 15,\r\n    category: 'Accessories',\r\n    quantity: 73,\r\n    inventoryStatus: 'INSTOCK',\r\n    rating: 4,\r\n  },\r\n  {\r\n    id: '1005',\r\n    code: 'av2231fwg',\r\n    name: 'Brown Purse',\r\n    description: 'Product Description',\r\n    image: 'brown-purse.jpg',\r\n    price: 120,\r\n    category: 'Accessories',\r\n    quantity: 0,\r\n    inventoryStatus: 'OUTOFSTOCK',\r\n    rating: 4,\r\n  },\r\n  {\r\n    id: '1006',\r\n    code: 'bib36pfvm',\r\n    name: 'Chakra Bracelet',\r\n    description: 'Product Description',\r\n    image: 'chakra-bracelet.jpg',\r\n    price: 32,\r\n    category: 'Accessories',\r\n    quantity: 5,\r\n    inventoryStatus: 'LOWSTOCK',\r\n    rating: 3,\r\n  },\r\n  {\r\n    id: '1007',\r\n    code: 'mbvjkgip5',\r\n    name: 'Galaxy Earrings',\r\n    description: 'Product Description',\r\n    image: 'galaxy-earrings.jpg',\r\n    price: 34,\r\n    category: 'Accessories',\r\n    quantity: 23,\r\n    inventoryStatus: 'INSTOCK',\r\n    rating: 5,\r\n  },\r\n  {\r\n    id: '1008',\r\n    code: 'vbb124btr',\r\n    name: 'Game Controller',\r\n    description: 'Product Description',\r\n    image: 'game-controller.jpg',\r\n    price: 99,\r\n    category: 'Electronics',\r\n    quantity: 2,\r\n    inventoryStatus: 'LOWSTOCK',\r\n    rating: 4,\r\n  },\r\n  {\r\n    id: '1009',\r\n    code: 'cm230f032',\r\n    name: 'Gaming Set',\r\n    description: 'Product Description',\r\n    image: 'gaming-set.jpg',\r\n    price: 299,\r\n    category: 'Electronics',\r\n    quantity: 63,\r\n    inventoryStatus: 'INSTOCK',\r\n    rating: 3,\r\n  },\r\n];\r\n\r\ninterface Customer {\r\n  id: number;\r\n  name: string;\r\n  country: { code: string; name: string };\r\n  company: string;\r\n  date: Date;\r\n  status: string;\r\n  verified: boolean;\r\n  activity: number;\r\n  representative: { image: string; name: string };\r\n  balance: number;\r\n}\r\n\r\nexport const Customers: Customer[] = [\r\n  {\r\n    id: 1000,\r\n    name: 'James Butt',\r\n    country: {\r\n      name: 'Algeria',\r\n      code: 'dz',\r\n    },\r\n    company: 'Benton, John B Jr',\r\n    date: new Date('2015-09-13'),\r\n    status: 'unqualified',\r\n    verified: true,\r\n    activity: 17,\r\n    representative: {\r\n      name: 'Ioni Bowcher',\r\n      image: 'ionibowcher.png',\r\n    },\r\n    balance: 70663,\r\n  },\r\n  {\r\n    id: 1001,\r\n    name: 'Josephine Darakjy',\r\n    country: {\r\n      name: 'Egypt',\r\n      code: 'eg',\r\n    },\r\n    company: 'Chanay, Jeffrey A Esq',\r\n    date: new Date('2019-02-09'),\r\n    status: 'proposal',\r\n    verified: true,\r\n    activity: 0,\r\n    representative: {\r\n      name: 'Amy Elsner',\r\n      image: 'amyelsner.png',\r\n    },\r\n    balance: 82429,\r\n  },\r\n  {\r\n    id: 1002,\r\n    name: 'Art Venere',\r\n    country: {\r\n      name: 'Panama',\r\n      code: 'pa',\r\n    },\r\n    company: 'Chemel, James L Cpa',\r\n    date: new Date('2017-05-13'),\r\n    status: 'qualified',\r\n    verified: false,\r\n    activity: 63,\r\n    representative: {\r\n      name: 'Asiya Javayant',\r\n      image: 'asiyajavayant.png',\r\n    },\r\n    balance: 28334,\r\n  },\r\n  {\r\n    id: 1003,\r\n    name: 'Lenna Paprocki',\r\n    country: {\r\n      name: 'Slovenia',\r\n      code: 'si',\r\n    },\r\n    company: 'Feltz Printing Service',\r\n    date: new Date('2020-09-15'),\r\n    status: 'new',\r\n    verified: false,\r\n    activity: 37,\r\n    representative: {\r\n      name: 'Xuxue Feng',\r\n      image: 'xuxuefeng.png',\r\n    },\r\n    balance: 88521,\r\n  },\r\n  {\r\n    id: 1004,\r\n    name: 'Donette Foller',\r\n    country: {\r\n      name: 'South Africa',\r\n      code: 'za',\r\n    },\r\n    company: 'Printing Dimensions',\r\n    date: new Date('2016-05-20'),\r\n    status: 'proposal',\r\n    verified: true,\r\n    activity: 33,\r\n    representative: {\r\n      name: 'Asiya Javayant',\r\n      image: 'asiyajavayant.png',\r\n    },\r\n    balance: 93905,\r\n  },\r\n  {\r\n    id: 1005,\r\n    name: 'Simona Morasca',\r\n    country: {\r\n      name: 'Egypt',\r\n      code: 'eg',\r\n    },\r\n    company: 'Chapman, Ross E Esq',\r\n    date: new Date('2018-02-16'),\r\n    status: 'qualified',\r\n    verified: false,\r\n    activity: 68,\r\n    representative: {\r\n      name: 'Ivan Magalhaes',\r\n      image: 'ivanmagalhaes.png',\r\n    },\r\n    balance: 50041,\r\n  },\r\n  {\r\n    id: 1006,\r\n    name: 'Mitsue Tollner',\r\n    country: {\r\n      name: 'Paraguay',\r\n      code: 'py',\r\n    },\r\n    company: 'Morlong Associates',\r\n    date: new Date('2018-02-19'),\r\n    status: 'renewal',\r\n    verified: true,\r\n    activity: 54,\r\n    representative: {\r\n      name: 'Ivan Magalhaes',\r\n      image: 'ivanmagalhaes.png',\r\n    },\r\n    balance: 58706,\r\n  },\r\n  {\r\n    id: 1007,\r\n    name: 'Leota Dilliard',\r\n    country: {\r\n      name: 'Serbia',\r\n      code: 'rs',\r\n    },\r\n    company: 'Commercial Press',\r\n    date: new Date('2019-08-13'),\r\n    status: 'renewal',\r\n    verified: true,\r\n    activity: 69,\r\n    representative: {\r\n      name: 'Onyama Limba',\r\n      image: 'onyamalimba.png',\r\n    },\r\n    balance: 26640,\r\n  },\r\n  {\r\n    id: 1008,\r\n    name: 'Sage Wieser',\r\n    country: {\r\n      name: 'Egypt',\r\n      code: 'eg',\r\n    },\r\n    company: 'Truhlar And Truhlar Attys',\r\n    date: new Date('2018-11-21'),\r\n    status: 'unqualified',\r\n    verified: true,\r\n    activity: 76,\r\n    representative: {\r\n      name: 'Ivan Magalhaes',\r\n      image: 'ivanmagalhaes.png',\r\n    },\r\n    balance: 65369,\r\n  },\r\n  {\r\n    id: 1009,\r\n    name: 'Kris Marrier',\r\n    country: {\r\n      name: 'Mexico',\r\n      code: 'mx',\r\n    },\r\n    company: 'King, Christopher A Esq',\r\n    date: new Date('2015-07-07'),\r\n    status: 'proposal',\r\n    verified: false,\r\n    activity: 3,\r\n    representative: {\r\n      name: 'Onyama Limba',\r\n      image: 'onyamalimba.png',\r\n    },\r\n    balance: 63451,\r\n  },\r\n  {\r\n    id: 1010,\r\n    name: 'Minna Amigon',\r\n    country: {\r\n      name: 'Romania',\r\n      code: 'ro',\r\n    },\r\n    company: 'Dorl, James J Esq',\r\n    date: new Date('2018-11-07'),\r\n    status: 'qualified',\r\n    verified: false,\r\n    activity: 38,\r\n    representative: {\r\n      name: 'Anna Fali',\r\n      image: 'annafali.png',\r\n    },\r\n    balance: 71169,\r\n  },\r\n  {\r\n    id: 1011,\r\n    name: 'Abel Maclead',\r\n    country: {\r\n      name: 'Singapore',\r\n      code: 'sg',\r\n    },\r\n    company: 'Rangoni Of Florence',\r\n    date: new Date('2017-03-11'),\r\n    status: 'qualified',\r\n    verified: true,\r\n    activity: 87,\r\n    representative: {\r\n      name: 'Bernardo Dominic',\r\n      image: 'bernardodominic.png',\r\n    },\r\n    balance: 96842,\r\n  },\r\n  {\r\n    id: 1012,\r\n    name: 'Kiley Caldarera',\r\n    country: {\r\n      name: 'Serbia',\r\n      code: 'rs',\r\n    },\r\n    company: 'Feiner Bros',\r\n    date: new Date('2015-10-20'),\r\n    status: 'unqualified',\r\n    verified: false,\r\n    activity: 80,\r\n    representative: {\r\n      name: 'Onyama Limba',\r\n      image: 'onyamalimba.png',\r\n    },\r\n    balance: 92734,\r\n  },\r\n  {\r\n    id: 1013,\r\n    name: 'Graciela Ruta',\r\n    country: {\r\n      name: 'Chile',\r\n      code: 'cl',\r\n    },\r\n    company: 'Buckley Miller & Wright',\r\n    date: new Date('2016-07-25'),\r\n    status: 'negotiation',\r\n    verified: false,\r\n    activity: 59,\r\n    representative: {\r\n      name: 'Amy Elsner',\r\n      image: 'amyelsner.png',\r\n    },\r\n    balance: 45250,\r\n  },\r\n  {\r\n    id: 1014,\r\n    name: 'Cammy Albares',\r\n    country: {\r\n      name: 'Philippines',\r\n      code: 'ph',\r\n    },\r\n    company: 'Rousseaux, Michael Esq',\r\n    date: new Date('2019-06-25'),\r\n    status: 'new',\r\n    verified: true,\r\n    activity: 90,\r\n    representative: {\r\n      name: 'Asiya Javayant',\r\n      image: 'asiyajavayant.png',\r\n    },\r\n    balance: 30236,\r\n  },\r\n  {\r\n    id: 1015,\r\n    name: 'Mattie Poquette',\r\n    country: {\r\n      name: 'Venezuela',\r\n      code: 've',\r\n    },\r\n    company: 'Century Communications',\r\n    date: new Date('2017-12-12'),\r\n    status: 'negotiation',\r\n    verified: false,\r\n    activity: 52,\r\n    representative: {\r\n      name: 'Anna Fali',\r\n      image: 'annafali.png',\r\n    },\r\n    balance: 64533,\r\n  },\r\n  {\r\n    id: 1016,\r\n    name: 'Meaghan Garufi',\r\n    country: {\r\n      name: 'Malaysia',\r\n      code: 'my',\r\n    },\r\n    company: 'Bolton, Wilbur Esq',\r\n    date: new Date('2018-07-04'),\r\n    status: 'unqualified',\r\n    verified: false,\r\n    activity: 31,\r\n    representative: {\r\n      name: 'Ivan Magalhaes',\r\n      image: 'ivanmagalhaes.png',\r\n    },\r\n    balance: 37279,\r\n  },\r\n  {\r\n    id: 1017,\r\n    name: 'Gladys Rim',\r\n    country: {\r\n      name: 'Netherlands',\r\n      code: 'nl',\r\n    },\r\n    company: 'T M Byxbee Company Pc',\r\n    date: new Date('2020-02-27'),\r\n    status: 'renewal',\r\n    verified: true,\r\n    activity: 48,\r\n    representative: {\r\n      name: 'Stephen Shaw',\r\n      image: 'stephenshaw.png',\r\n    },\r\n    balance: 27381,\r\n  },\r\n  {\r\n    id: 1018,\r\n    name: 'Yuki Whobrey',\r\n    country: {\r\n      name: 'Israel',\r\n      code: 'il',\r\n    },\r\n    company: 'Farmers Insurance Group',\r\n    date: new Date('2017-12-21'),\r\n    status: 'negotiation',\r\n    verified: true,\r\n    activity: 16,\r\n    representative: {\r\n      name: 'Bernardo Dominic',\r\n      image: 'bernardodominic.png',\r\n    },\r\n    balance: 9257,\r\n  },\r\n  {\r\n    id: 1019,\r\n    name: 'Fletcher Flosi',\r\n    country: {\r\n      name: 'Argentina',\r\n      code: 'ar',\r\n    },\r\n    company: 'Post Box Services Plus',\r\n    date: new Date('2016-01-04'),\r\n    status: 'renewal',\r\n    verified: true,\r\n    activity: 19,\r\n    representative: {\r\n      name: 'Xuxue Feng',\r\n      image: 'xuxuefeng.png',\r\n    },\r\n    balance: 67783,\r\n  },\r\n  {\r\n    id: 1020,\r\n    name: 'Bette Nicka',\r\n    country: {\r\n      name: 'Paraguay',\r\n      code: 'py',\r\n    },\r\n    company: 'Sport En Art',\r\n    date: new Date('2016-10-21'),\r\n    status: 'renewal',\r\n    verified: false,\r\n    activity: 100,\r\n    representative: {\r\n      name: 'Onyama Limba',\r\n      image: 'onyamalimba.png',\r\n    },\r\n    balance: 4609,\r\n  },\r\n  {\r\n    id: 1021,\r\n    name: 'Veronika Inouye',\r\n    country: {\r\n      name: 'Ecuador',\r\n      code: 'ec',\r\n    },\r\n    company: 'C 4 Network Inc',\r\n    date: new Date('2017-03-24'),\r\n    status: 'renewal',\r\n    verified: false,\r\n    activity: 72,\r\n    representative: {\r\n      name: 'Ioni Bowcher',\r\n      image: 'ionibowcher.png',\r\n    },\r\n    balance: 26565,\r\n  },\r\n  {\r\n    id: 1022,\r\n    name: 'Willard Kolmetz',\r\n    country: {\r\n      name: 'Tunisia',\r\n      code: 'tn',\r\n    },\r\n    company: 'Ingalls, Donald R Esq',\r\n    date: new Date('2017-04-15'),\r\n    status: 'renewal',\r\n    verified: true,\r\n    activity: 94,\r\n    representative: {\r\n      name: 'Asiya Javayant',\r\n      image: 'asiyajavayant.png',\r\n    },\r\n    balance: 75876,\r\n  },\r\n  {\r\n    id: 1023,\r\n    name: 'Maryann Royster',\r\n    country: {\r\n      name: 'Belarus',\r\n      code: 'by',\r\n    },\r\n    company: 'Franklin, Peter L Esq',\r\n    date: new Date('2017-03-11'),\r\n    status: 'qualified',\r\n    verified: false,\r\n    activity: 56,\r\n    representative: {\r\n      name: 'Elwin Sharvill',\r\n      image: 'elwinsharvill.png',\r\n    },\r\n    balance: 41121,\r\n  },\r\n  {\r\n    id: 1024,\r\n    name: 'Alisha Slusarski',\r\n    country: {\r\n      name: 'Iceland',\r\n      code: 'is',\r\n    },\r\n    company: 'Wtlz Power 107 Fm',\r\n    date: new Date('2018-03-27'),\r\n    status: 'qualified',\r\n    verified: true,\r\n    activity: 7,\r\n    representative: {\r\n      name: 'Stephen Shaw',\r\n      image: 'stephenshaw.png',\r\n    },\r\n    balance: 91691,\r\n  },\r\n  {\r\n    id: 1025,\r\n    name: 'Allene Iturbide',\r\n    country: {\r\n      name: 'Italy',\r\n      code: 'it',\r\n    },\r\n    company: 'Ledecky, David Esq',\r\n    date: new Date('2016-02-20'),\r\n    status: 'qualified',\r\n    verified: true,\r\n    activity: 1,\r\n    representative: {\r\n      name: 'Ivan Magalhaes',\r\n      image: 'ivanmagalhaes.png',\r\n    },\r\n    balance: 40137,\r\n  },\r\n  {\r\n    id: 1026,\r\n    name: 'Chanel Caudy',\r\n    country: {\r\n      name: 'Argentina',\r\n      code: 'ar',\r\n    },\r\n    company: 'Professional Image Inc',\r\n    date: new Date('2018-06-24'),\r\n    status: 'new',\r\n    verified: true,\r\n    activity: 26,\r\n    representative: {\r\n      name: 'Ioni Bowcher',\r\n      image: 'ionibowcher.png',\r\n    },\r\n    balance: 21304,\r\n  },\r\n  {\r\n    id: 1027,\r\n    name: 'Ezekiel Chui',\r\n    country: {\r\n      name: 'Ireland',\r\n      code: 'ie',\r\n    },\r\n    company: 'Sider, Donald C Esq',\r\n    date: new Date('2016-09-24'),\r\n    status: 'new',\r\n    verified: false,\r\n    activity: 76,\r\n    representative: {\r\n      name: 'Amy Elsner',\r\n      image: 'amyelsner.png',\r\n    },\r\n    balance: 60454,\r\n  },\r\n  {\r\n    id: 1028,\r\n    name: 'Willow Kusko',\r\n    country: {\r\n      name: 'Romania',\r\n      code: 'ro',\r\n    },\r\n    company: 'U Pull It',\r\n    date: new Date('2020-04-11'),\r\n    status: 'qualified',\r\n    verified: true,\r\n    activity: 7,\r\n    representative: {\r\n      name: 'Onyama Limba',\r\n      image: 'onyamalimba.png',\r\n    },\r\n    balance: 17565,\r\n  },\r\n  {\r\n    id: 1029,\r\n    name: 'Bernardo Figeroa',\r\n    country: {\r\n      name: 'Israel',\r\n      code: 'il',\r\n    },\r\n    company: 'Clark, Richard Cpa',\r\n    date: new Date('2018-11-04'),\r\n    status: 'renewal',\r\n    verified: true,\r\n    activity: 81,\r\n    representative: {\r\n      name: 'Ioni Bowcher',\r\n      image: 'ionibowcher.png',\r\n    },\r\n    balance: 17774,\r\n  },\r\n  {\r\n    id: 1030,\r\n    name: 'Ammie Corrio',\r\n    country: {\r\n      name: 'Hungary',\r\n      code: 'hu',\r\n    },\r\n    company: 'Moskowitz, Barry S',\r\n    date: new Date('2016-06-11'),\r\n    status: 'negotiation',\r\n    verified: true,\r\n    activity: 56,\r\n    representative: {\r\n      name: 'Asiya Javayant',\r\n      image: 'asiyajavayant.png',\r\n    },\r\n    balance: 49201,\r\n  },\r\n  {\r\n    id: 1031,\r\n    name: 'Francine Vocelka',\r\n    country: {\r\n      name: 'Honduras',\r\n      code: 'hn',\r\n    },\r\n    company: 'Cascade Realty Advisors Inc',\r\n    date: new Date('2017-08-02'),\r\n    status: 'qualified',\r\n    verified: true,\r\n    activity: 94,\r\n    representative: {\r\n      name: 'Ioni Bowcher',\r\n      image: 'ionibowcher.png',\r\n    },\r\n    balance: 67126,\r\n  },\r\n  {\r\n    id: 1032,\r\n    name: 'Ernie Stenseth',\r\n    country: {\r\n      name: 'Australia',\r\n      code: 'au',\r\n    },\r\n    company: 'Knwz Newsradio',\r\n    date: new Date('2018-06-06'),\r\n    status: 'renewal',\r\n    verified: true,\r\n    activity: 68,\r\n    representative: {\r\n      name: 'Xuxue Feng',\r\n      image: 'xuxuefeng.png',\r\n    },\r\n    balance: 76017,\r\n  },\r\n  {\r\n    id: 1033,\r\n    name: 'Albina Glick',\r\n    country: {\r\n      name: 'Ukraine',\r\n      code: 'ua',\r\n    },\r\n    company: 'Giampetro, Anthony D',\r\n    date: new Date('2019-08-08'),\r\n    status: 'proposal',\r\n    verified: true,\r\n    activity: 85,\r\n    representative: {\r\n      name: 'Bernardo Dominic',\r\n      image: 'bernardodominic.png',\r\n    },\r\n    balance: 91201,\r\n  },\r\n  {\r\n    id: 1034,\r\n    name: 'Alishia Sergi',\r\n    country: {\r\n      name: 'Qatar',\r\n      code: 'qa',\r\n    },\r\n    company: 'Milford Enterprises Inc',\r\n    date: new Date('2018-05-19'),\r\n    status: 'negotiation',\r\n    verified: false,\r\n    activity: 46,\r\n    representative: {\r\n      name: 'Ivan Magalhaes',\r\n      image: 'ivanmagalhaes.png',\r\n    },\r\n    balance: 12237,\r\n  },\r\n  {\r\n    id: 1035,\r\n    name: 'Solange Shinko',\r\n    country: {\r\n      name: 'Cameroon',\r\n      code: 'cm',\r\n    },\r\n    company: 'Mosocco, Ronald A',\r\n    date: new Date('2015-02-12'),\r\n    status: 'qualified',\r\n    verified: true,\r\n    activity: 32,\r\n    representative: {\r\n      name: 'Onyama Limba',\r\n      image: 'onyamalimba.png',\r\n    },\r\n    balance: 34072,\r\n  },\r\n  {\r\n    id: 1036,\r\n    name: 'Jose Stockham',\r\n    country: {\r\n      name: 'Italy',\r\n      code: 'it',\r\n    },\r\n    company: 'Tri State Refueler Co',\r\n    date: new Date('2018-04-25'),\r\n    status: 'qualified',\r\n    verified: true,\r\n    activity: 77,\r\n    representative: {\r\n      name: 'Amy Elsner',\r\n      image: 'amyelsner.png',\r\n    },\r\n    balance: 94909,\r\n  },\r\n  {\r\n    id: 1037,\r\n    name: 'Rozella Ostrosky',\r\n    country: {\r\n      name: 'Venezuela',\r\n      code: 've',\r\n    },\r\n    company: 'Parkway Company',\r\n    date: new Date('2016-02-27'),\r\n    status: 'unqualified',\r\n    verified: true,\r\n    activity: 66,\r\n    representative: {\r\n      name: 'Amy Elsner',\r\n      image: 'amyelsner.png',\r\n    },\r\n    balance: 57245,\r\n  },\r\n  {\r\n    id: 1038,\r\n    name: 'Valentine Gillian',\r\n    country: {\r\n      name: 'Paraguay',\r\n      code: 'py',\r\n    },\r\n    company: 'Fbs Business Finance',\r\n    date: new Date('2019-09-17'),\r\n    status: 'qualified',\r\n    verified: true,\r\n    activity: 25,\r\n    representative: {\r\n      name: 'Bernardo Dominic',\r\n      image: 'bernardodominic.png',\r\n    },\r\n    balance: 75502,\r\n  },\r\n  {\r\n    id: 1039,\r\n    name: 'Kati Rulapaugh',\r\n    country: {\r\n      name: 'Puerto Rico',\r\n      code: 'pr',\r\n    },\r\n    company: 'Eder Assocs Consltng Engrs Pc',\r\n    date: new Date('2016-12-03'),\r\n    status: 'renewal',\r\n    verified: false,\r\n    activity: 51,\r\n    representative: {\r\n      name: 'Ioni Bowcher',\r\n      image: 'ionibowcher.png',\r\n    },\r\n    balance: 82075,\r\n  },\r\n  {\r\n    id: 1040,\r\n    name: 'Youlanda Schemmer',\r\n    country: {\r\n      name: 'Bolivia',\r\n      code: 'bo',\r\n    },\r\n    company: 'Tri M Tool Inc',\r\n    date: new Date('2017-12-15'),\r\n    status: 'negotiation',\r\n    verified: true,\r\n    activity: 49,\r\n    representative: {\r\n      name: 'Xuxue Feng',\r\n      image: 'xuxuefeng.png',\r\n    },\r\n    balance: 19208,\r\n  },\r\n  {\r\n    id: 1041,\r\n    name: 'Dyan Oldroyd',\r\n    country: {\r\n      name: 'Argentina',\r\n      code: 'ar',\r\n    },\r\n    company: 'International Eyelets Inc',\r\n    date: new Date('2017-02-02'),\r\n    status: 'qualified',\r\n    verified: false,\r\n    activity: 5,\r\n    representative: {\r\n      name: 'Amy Elsner',\r\n      image: 'amyelsner.png',\r\n    },\r\n    balance: 50194,\r\n  },\r\n  {\r\n    id: 1042,\r\n    name: 'Roxane Campain',\r\n    country: {\r\n      name: 'France',\r\n      code: 'fr',\r\n    },\r\n    company: 'Rapid Trading Intl',\r\n    date: new Date('2018-12-25'),\r\n    status: 'unqualified',\r\n    verified: false,\r\n    activity: 100,\r\n    representative: {\r\n      name: 'Anna Fali',\r\n      image: 'annafali.png',\r\n    },\r\n    balance: 77714,\r\n  },\r\n  {\r\n    id: 1043,\r\n    name: 'Lavera Perin',\r\n    country: {\r\n      name: 'Vietnam',\r\n      code: 'vn',\r\n    },\r\n    company: 'Abc Enterprises Inc',\r\n    date: new Date('2018-04-10'),\r\n    status: 'qualified',\r\n    verified: false,\r\n    activity: 71,\r\n    representative: {\r\n      name: 'Stephen Shaw',\r\n      image: 'stephenshaw.png',\r\n    },\r\n    balance: 35740,\r\n  },\r\n  {\r\n    id: 1044,\r\n    name: 'Erick Ferencz',\r\n    country: {\r\n      name: 'Belgium',\r\n      code: 'be',\r\n    },\r\n    company: 'Cindy Turner Associates',\r\n    date: new Date('2018-05-06'),\r\n    status: 'unqualified',\r\n    verified: true,\r\n    activity: 54,\r\n    representative: {\r\n      name: 'Amy Elsner',\r\n      image: 'amyelsner.png',\r\n    },\r\n    balance: 30790,\r\n  },\r\n  {\r\n    id: 1045,\r\n    name: 'Fatima Saylors',\r\n    country: {\r\n      name: 'Canada',\r\n      code: 'ca',\r\n    },\r\n    company: 'Stanton, James D Esq',\r\n    date: new Date('2019-07-10'),\r\n    status: 'renewal',\r\n    verified: true,\r\n    activity: 93,\r\n    representative: {\r\n      name: 'Onyama Limba',\r\n      image: 'onyamalimba.png',\r\n    },\r\n    balance: 52343,\r\n  },\r\n  {\r\n    id: 1046,\r\n    name: 'Jina Briddick',\r\n    country: {\r\n      name: 'Mexico',\r\n      code: 'mx',\r\n    },\r\n    company: 'Grace Pastries Inc',\r\n    date: new Date('2018-02-19'),\r\n    status: 'unqualified',\r\n    verified: false,\r\n    activity: 97,\r\n    representative: {\r\n      name: 'Xuxue Feng',\r\n      image: 'xuxuefeng.png',\r\n    },\r\n    balance: 53966,\r\n  },\r\n  {\r\n    id: 1047,\r\n    name: 'Kanisha Waycott',\r\n    country: {\r\n      name: 'Ecuador',\r\n      code: 'ec',\r\n    },\r\n    company: 'Schroer, Gene E Esq',\r\n    date: new Date('2019-11-27'),\r\n    status: 'new',\r\n    verified: false,\r\n    activity: 80,\r\n    representative: {\r\n      name: 'Xuxue Feng',\r\n      image: 'xuxuefeng.png',\r\n    },\r\n    balance: 9920,\r\n  },\r\n  {\r\n    id: 1048,\r\n    name: 'Emerson Bowley',\r\n    country: {\r\n      name: 'Finland',\r\n      code: 'fi',\r\n    },\r\n    company: 'Knights Inn',\r\n    date: new Date('2018-11-24'),\r\n    status: 'new',\r\n    verified: false,\r\n    activity: 63,\r\n    representative: {\r\n      name: 'Stephen Shaw',\r\n      image: 'stephenshaw.png',\r\n    },\r\n    balance: 78069,\r\n  },\r\n  {\r\n    id: 1049,\r\n    name: 'Blair Malet',\r\n    country: {\r\n      name: 'Finland',\r\n      code: 'fi',\r\n    },\r\n    company: 'Bollinger Mach Shp & Shipyard',\r\n    date: new Date('2018-04-19'),\r\n    status: 'new',\r\n    verified: true,\r\n    activity: 92,\r\n    representative: {\r\n      name: 'Asiya Javayant',\r\n      image: 'asiyajavayant.png',\r\n    },\r\n    balance: 65005,\r\n  },\r\n];\r\n\r\ninterface Sale {\r\n  product: string;\r\n  lastYearSale: number;\r\n  thisYearSale: number;\r\n  lastYearProfit: number;\r\n  thisYearProfit: number;\r\n}\r\n\r\nexport const Sales: Sale[] = [\r\n  {\r\n    product: 'Bamboo Watch',\r\n    lastYearSale: 51,\r\n    thisYearSale: 40,\r\n    lastYearProfit: 54406,\r\n    thisYearProfit: 43342,\r\n  },\r\n  {\r\n    product: 'Black Watch',\r\n    lastYearSale: 83,\r\n    thisYearSale: 9,\r\n    lastYearProfit: 423132,\r\n    thisYearProfit: 312122,\r\n  },\r\n  { product: 'Blue Band', lastYearSale: 38, thisYearSale: 5, lastYearProfit: 12321, thisYearProfit: 8500 },\r\n  {\r\n    product: 'Blue T-Shirt',\r\n    lastYearSale: 49,\r\n    thisYearSale: 22,\r\n    lastYearProfit: 745232,\r\n    thisYearProfit: 65323,\r\n  },\r\n  {\r\n    product: 'Brown Purse',\r\n    lastYearSale: 17,\r\n    thisYearSale: 79,\r\n    lastYearProfit: 643242,\r\n    thisYearProfit: 500332,\r\n  },\r\n  {\r\n    product: 'Chakra Bracelet',\r\n    lastYearSale: 52,\r\n    thisYearSale: 65,\r\n    lastYearProfit: 421132,\r\n    thisYearProfit: 150005,\r\n  },\r\n  {\r\n    product: 'Galaxy Earrings',\r\n    lastYearSale: 82,\r\n    thisYearSale: 12,\r\n    lastYearProfit: 131211,\r\n    thisYearProfit: 100214,\r\n  },\r\n  {\r\n    product: 'Game Controller',\r\n    lastYearSale: 44,\r\n    thisYearSale: 45,\r\n    lastYearProfit: 66442,\r\n    thisYearProfit: 53322,\r\n  },\r\n  {\r\n    product: 'Gaming Set',\r\n    lastYearSale: 90,\r\n    thisYearSale: 56,\r\n    lastYearProfit: 765442,\r\n    thisYearProfit: 296232,\r\n  },\r\n  {\r\n    product: 'Gold Phone Case',\r\n    lastYearSale: 75,\r\n    thisYearSale: 54,\r\n    lastYearProfit: 21212,\r\n    thisYearProfit: 12533,\r\n  },\r\n];\r\n\r\nexport interface Product {\r\n  id: string;\r\n  code: string;\r\n  name: string;\r\n  description: string;\r\n  image: string;\r\n  price: number;\r\n  category: string;\r\n  quantity: number;\r\n  inventoryStatus: string;\r\n  rating: number;\r\n}\r\n\r\nconst ProductsSmall: Product[] = [\r\n  {\r\n    id: '1000',\r\n    code: 'f230fh0g3',\r\n    name: 'Bamboo Watch',\r\n    description: 'Product Description',\r\n    image: 'bamboo-watch.jpg',\r\n    price: 65,\r\n    category: 'Accessories',\r\n    quantity: 24,\r\n    inventoryStatus: 'INSTOCK',\r\n    rating: 5,\r\n  },\r\n  {\r\n    id: '1001',\r\n    code: 'nvklal433',\r\n    name: 'Black Watch',\r\n    description: 'Product Description',\r\n    image: 'black-watch.jpg',\r\n    price: 72,\r\n    category: 'Accessories',\r\n    quantity: 61,\r\n    inventoryStatus: 'INSTOCK',\r\n    rating: 4,\r\n  },\r\n  {\r\n    id: '1002',\r\n    code: 'zz21cz3c1',\r\n    name: 'Blue Band',\r\n    description: 'Product Description',\r\n    image: 'blue-band.jpg',\r\n    price: 79,\r\n    category: 'Fitness',\r\n    quantity: 2,\r\n    inventoryStatus: 'LOWSTOCK',\r\n    rating: 3,\r\n  },\r\n  {\r\n    id: '1003',\r\n    code: '244wgerg2',\r\n    name: 'Blue T-Shirt',\r\n    description: 'Product Description',\r\n    image: 'blue-t-shirt.jpg',\r\n    price: 29,\r\n    category: 'Clothing',\r\n    quantity: 25,\r\n    inventoryStatus: 'INSTOCK',\r\n    rating: 5,\r\n  },\r\n  {\r\n    id: '1004',\r\n    code: 'h456wer53',\r\n    name: 'Bracelet',\r\n    description: 'Product Description',\r\n    image: 'bracelet.jpg',\r\n    price: 15,\r\n    category: 'Accessories',\r\n    quantity: 73,\r\n    inventoryStatus: 'INSTOCK',\r\n    rating: 4,\r\n  },\r\n  {\r\n    id: '1005',\r\n    code: 'av2231fwg',\r\n    name: 'Brown Purse',\r\n    description: 'Product Description',\r\n    image: 'brown-purse.jpg',\r\n    price: 120,\r\n    category: 'Accessories',\r\n    quantity: 0,\r\n    inventoryStatus: 'OUTOFSTOCK',\r\n    rating: 4,\r\n  },\r\n  {\r\n    id: '1006',\r\n    code: 'bib36pfvm',\r\n    name: 'Chakra Bracelet',\r\n    description: 'Product Description',\r\n    image: 'chakra-bracelet.jpg',\r\n    price: 32,\r\n    category: 'Accessories',\r\n    quantity: 5,\r\n    inventoryStatus: 'LOWSTOCK',\r\n    rating: 3,\r\n  },\r\n  {\r\n    id: '1007',\r\n    code: 'mbvjkgip5',\r\n    name: 'Galaxy Earrings',\r\n    description: 'Product Description',\r\n    image: 'galaxy-earrings.jpg',\r\n    price: 34,\r\n    category: 'Accessories',\r\n    quantity: 23,\r\n    inventoryStatus: 'INSTOCK',\r\n    rating: 5,\r\n  },\r\n  {\r\n    id: '1008',\r\n    code: 'vbb124btr',\r\n    name: 'Game Controller',\r\n    description: 'Product Description',\r\n    image: 'game-controller.jpg',\r\n    price: 99,\r\n    category: 'Electronics',\r\n    quantity: 2,\r\n    inventoryStatus: 'LOWSTOCK',\r\n    rating: 4,\r\n  },\r\n  {\r\n    id: '1009',\r\n    code: 'cm230f032',\r\n    name: 'Gaming Set',\r\n    description: 'Product Description',\r\n    image: 'gaming-set.jpg',\r\n    price: 299,\r\n    category: 'Electronics',\r\n    quantity: 63,\r\n    inventoryStatus: 'INSTOCK',\r\n    rating: 3,\r\n  },\r\n];\r\n\r\ninterface ProductOrder {\r\n  id: string;\r\n  code: string;\r\n  name: string;\r\n  description: string;\r\n  image: string;\r\n  price: number;\r\n  category: string;\r\n  quantity: number;\r\n  inventoryStatus: string;\r\n  rating: number;\r\n  orders: Order[];\r\n}\r\n\r\ninterface Order {\r\n  id: string;\r\n  productCode: string;\r\n  date: string;\r\n  amount: number;\r\n  quantity: number;\r\n  customer: string;\r\n  status: string;\r\n}\r\n\r\nconst ProductsOrdersSmall: ProductOrder[] = [\r\n  {\r\n    id: '1000',\r\n    code: 'f230fh0g3',\r\n    name: 'Bamboo Watch',\r\n    description: 'Product Description',\r\n    image: 'bamboo-watch.jpg',\r\n    price: 65,\r\n    category: 'Accessories',\r\n    quantity: 24,\r\n    inventoryStatus: 'INSTOCK',\r\n    rating: 5,\r\n    orders: [\r\n      {\r\n        id: '1000',\r\n        productCode: 'f230fh0g3',\r\n        date: '13.08.2020',\r\n        amount: 65,\r\n        quantity: 1,\r\n        customer: 'David James',\r\n        status: 'PENDING',\r\n      },\r\n      {\r\n        id: '1001',\r\n        productCode: 'f230fh0g3',\r\n        date: '14.05.2020',\r\n        amount: 130,\r\n        quantity: 2,\r\n        customer: 'Leon Rodrigues',\r\n        status: 'DELIVERED',\r\n      },\r\n      {\r\n        id: '1002',\r\n        productCode: 'f230fh0g3',\r\n        date: '04.01.2019',\r\n        amount: 65,\r\n        quantity: 1,\r\n        customer: 'Juan Alejandro',\r\n        status: 'RETURNED',\r\n      },\r\n      {\r\n        id: '1003',\r\n        productCode: 'f230fh0g3',\r\n        date: '13.09.2020',\r\n        amount: 195,\r\n        quantity: 3,\r\n        customer: 'Claire Morrow',\r\n        status: 'CANCELLED',\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    id: '1001',\r\n    code: 'nvklal433',\r\n    name: 'Black Watch',\r\n    description: 'Product Description',\r\n    image: 'black-watch.jpg',\r\n    price: 72,\r\n    category: 'Accessories',\r\n    quantity: 61,\r\n    inventoryStatus: 'INSTOCK',\r\n    rating: 4,\r\n    orders: [\r\n      {\r\n        id: '2000',\r\n        productCode: 'nvklal433',\r\n        date: '14.05.2020',\r\n        amount: 72,\r\n        quantity: 1,\r\n        customer: 'Maisha Jefferson',\r\n        status: 'DELIVERED',\r\n      },\r\n      {\r\n        id: '2001',\r\n        productCode: 'nvklal433',\r\n        date: '28.02.2020',\r\n        amount: 144,\r\n        quantity: 2,\r\n        customer: 'Octavia Murillo',\r\n        status: 'PENDING',\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    id: '1002',\r\n    code: 'zz21cz3c1',\r\n    name: 'Blue Band',\r\n    description: 'Product Description',\r\n    image: 'blue-band.jpg',\r\n    price: 79,\r\n    category: 'Fitness',\r\n    quantity: 2,\r\n    inventoryStatus: 'LOWSTOCK',\r\n    rating: 3,\r\n    orders: [\r\n      {\r\n        id: '3000',\r\n        productCode: 'zz21cz3c1',\r\n        date: '05.07.2020',\r\n        amount: 79,\r\n        quantity: 1,\r\n        customer: 'Stacey Leja',\r\n        status: 'DELIVERED',\r\n      },\r\n      {\r\n        id: '3001',\r\n        productCode: 'zz21cz3c1',\r\n        date: '06.02.2020',\r\n        amount: 79,\r\n        quantity: 1,\r\n        customer: 'Ashley Wickens',\r\n        status: 'DELIVERED',\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    id: '1003',\r\n    code: '244wgerg2',\r\n    name: 'Blue T-Shirt',\r\n    description: 'Product Description',\r\n    image: 'blue-t-shirt.jpg',\r\n    price: 29,\r\n    category: 'Clothing',\r\n    quantity: 25,\r\n    inventoryStatus: 'INSTOCK',\r\n    rating: 5,\r\n    orders: [],\r\n  },\r\n  {\r\n    id: '1004',\r\n    code: 'h456wer53',\r\n    name: 'Bracelet',\r\n    description: 'Product Description',\r\n    image: 'bracelet.jpg',\r\n    price: 15,\r\n    category: 'Accessories',\r\n    quantity: 73,\r\n    inventoryStatus: 'INSTOCK',\r\n    rating: 4,\r\n    orders: [\r\n      {\r\n        id: '5000',\r\n        productCode: 'h456wer53',\r\n        date: '05.09.2020',\r\n        amount: 60,\r\n        quantity: 4,\r\n        customer: 'Mayumi Misaki',\r\n        status: 'PENDING',\r\n      },\r\n      {\r\n        id: '5001',\r\n        productCode: 'h456wer53',\r\n        date: '16.04.2019',\r\n        amount: 2,\r\n        quantity: 30,\r\n        customer: 'Francesco Salvatore',\r\n        status: 'DELIVERED',\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    id: '1005',\r\n    code: 'av2231fwg',\r\n    name: 'Brown Purse',\r\n    description: 'Product Description',\r\n    image: 'brown-purse.jpg',\r\n    price: 120,\r\n    category: 'Accessories',\r\n    quantity: 0,\r\n    inventoryStatus: 'OUTOFSTOCK',\r\n    rating: 4,\r\n    orders: [\r\n      {\r\n        id: '6000',\r\n        productCode: 'av2231fwg',\r\n        date: '25.01.2020',\r\n        amount: 120,\r\n        quantity: 1,\r\n        customer: 'Isabel Sinclair',\r\n        status: 'RETURNED',\r\n      },\r\n      {\r\n        id: '6001',\r\n        productCode: 'av2231fwg',\r\n        date: '12.03.2019',\r\n        amount: 240,\r\n        quantity: 2,\r\n        customer: 'Lionel Clifford',\r\n        status: 'DELIVERED',\r\n      },\r\n      {\r\n        id: '6002',\r\n        productCode: 'av2231fwg',\r\n        date: '05.05.2019',\r\n        amount: 120,\r\n        quantity: 1,\r\n        customer: 'Cody Chavez',\r\n        status: 'DELIVERED',\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    id: '1006',\r\n    code: 'bib36pfvm',\r\n    name: 'Chakra Bracelet',\r\n    description: 'Product Description',\r\n    image: 'chakra-bracelet.jpg',\r\n    price: 32,\r\n    category: 'Accessories',\r\n    quantity: 5,\r\n    inventoryStatus: 'LOWSTOCK',\r\n    rating: 3,\r\n    orders: [\r\n      {\r\n        id: '7000',\r\n        productCode: 'bib36pfvm',\r\n        date: '24.02.2020',\r\n        amount: 32,\r\n        quantity: 1,\r\n        customer: 'Arvin Darci',\r\n        status: 'DELIVERED',\r\n      },\r\n      {\r\n        id: '7001',\r\n        productCode: 'bib36pfvm',\r\n        date: '14.01.2020',\r\n        amount: 64,\r\n        quantity: 2,\r\n        customer: 'Izzy Jones',\r\n        status: 'PENDING',\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    id: '1007',\r\n    code: 'mbvjkgip5',\r\n    name: 'Galaxy Earrings',\r\n    description: 'Product Description',\r\n    image: 'galaxy-earrings.jpg',\r\n    price: 34,\r\n    category: 'Accessories',\r\n    quantity: 23,\r\n    inventoryStatus: 'INSTOCK',\r\n    rating: 5,\r\n    orders: [\r\n      {\r\n        id: '8000',\r\n        productCode: 'mbvjkgip5',\r\n        date: '19.06.2020',\r\n        amount: 34,\r\n        quantity: 1,\r\n        customer: 'Jennifer Smith',\r\n        status: 'DELIVERED',\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    id: '1008',\r\n    code: 'vbb124btr',\r\n    name: 'Game Controller',\r\n    description: 'Product Description',\r\n    image: 'game-controller.jpg',\r\n    price: 99,\r\n    category: 'Electronics',\r\n    quantity: 2,\r\n    inventoryStatus: 'LOWSTOCK',\r\n    rating: 4,\r\n    orders: [\r\n      {\r\n        id: '9000',\r\n        productCode: 'vbb124btr',\r\n        date: '05.01.2020',\r\n        amount: 99,\r\n        quantity: 1,\r\n        customer: 'Jeanfrancois David',\r\n        status: 'DELIVERED',\r\n      },\r\n      {\r\n        id: '9001',\r\n        productCode: 'vbb124btr',\r\n        date: '19.01.2020',\r\n        amount: 198,\r\n        quantity: 2,\r\n        customer: 'Ivar Greenwood',\r\n        status: 'RETURNED',\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    id: '1009',\r\n    code: 'cm230f032',\r\n    name: 'Gaming Set',\r\n    description: 'Product Description',\r\n    image: 'gaming-set.jpg',\r\n    price: 299,\r\n    category: 'Electronics',\r\n    quantity: 63,\r\n    inventoryStatus: 'INSTOCK',\r\n    rating: 3,\r\n    orders: [\r\n      {\r\n        id: '10000',\r\n        productCode: 'cm230f032',\r\n        date: '24.06.2020',\r\n        amount: 299,\r\n        quantity: 1,\r\n        customer: 'Kadeem Mujtaba',\r\n        status: 'PENDING',\r\n      },\r\n      {\r\n        id: '10001',\r\n        productCode: 'cm230f032',\r\n        date: '11.05.2020',\r\n        amount: 299,\r\n        quantity: 1,\r\n        customer: 'Ashley Wickens',\r\n        status: 'DELIVERED',\r\n      },\r\n      {\r\n        id: '10002',\r\n        productCode: 'cm230f032',\r\n        date: '07.02.2019',\r\n        amount: 299,\r\n        quantity: 1,\r\n        customer: 'Julie Johnson',\r\n        status: 'DELIVERED',\r\n      },\r\n      {\r\n        id: '10003',\r\n        productCode: 'cm230f032',\r\n        date: '26.04.2020',\r\n        amount: 299,\r\n        quantity: 1,\r\n        customer: 'Tony Costa',\r\n        status: 'CANCELLED',\r\n      },\r\n    ],\r\n  },\r\n];\r\n\r\nfunction cloneArrayOfObjects<T>(array: T[]): T[] {\r\n  return array.map(item => ({ ...item }));\r\n}\r\n\r\nexport function getProducts(): Product[] {\r\n  return cloneArrayOfObjects(Products);\r\n}\r\n\r\nexport function getProductsSmall(): Product[] {\r\n  return cloneArrayOfObjects(ProductsSmall);\r\n}\r\n\r\nexport function getSalesSmall(): Sale[] {\r\n  return cloneArrayOfObjects(Sales);\r\n}\r\n\r\nexport function getCustomers(): Customer[] {\r\n  return cloneArrayOfObjects(Customers);\r\n}\r\n\r\nexport function getProductsOrdersSmall(): ProductOrder[] {\r\n  return cloneArrayOfObjects(ProductsOrdersSmall);\r\n}\r\n",
      "properties": [
        {
          "name": "amount",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "number",
          "optional": false,
          "description": "",
          "line": 1269
        },
        {
          "name": "customer",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 1271
        },
        {
          "name": "date",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 1268
        },
        {
          "name": "id",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 1266
        },
        {
          "name": "productCode",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 1267
        },
        {
          "name": "quantity",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "number",
          "optional": false,
          "description": "",
          "line": 1270
        },
        {
          "name": "status",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 1272
        }
      ],
      "indexSignatures": [],
      "kind": 164,
      "methods": []
    },
    {
      "name": "PageChangeEvent",
      "id": "interface-PageChangeEvent-c99938c2266d139a73933374fe5f49ba",
      "file": "libs/components/src/lib/paginator/zyfra-paginator.component.ts",
      "deprecated": false,
      "deprecationMessage": "",
      "type": "interface",
      "sourceCode": "import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output, TemplateRef } from '@angular/core';\r\n\r\ntype PageOption = number | Record<string, unknown>;\r\n\r\nexport interface PageChangeEvent {\r\n  first: number;\r\n  rows: number;\r\n  page: number;\r\n  pageCount: number;\r\n}\r\n\r\n@Component({\r\n  selector: 'zyfra-paginator',\r\n  templateUrl: './zyfra-paginator.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class ZyfraPaginatorComponent {\r\n  /**\r\n   * Number of total records.\r\n   */\r\n  @Input() totalRecords = 0;\r\n  /**\r\n   *  Data count to display per page.\r\n   */\r\n  @Input() rows = 0;\r\n  /**\r\n   * \tZero-relative number of the first row to be displayed.\r\n   */\r\n  @Input() first = 0;\r\n  /**\r\n   * \tNumber of page links to display.\r\n   */\r\n  @Input() pageLinkSize = 5;\r\n  /**\r\n   * Array of integer/object values to display inside rows per page dropdown.\r\n   * A object that have 'showAll' key can be added to it to show all data. Exp; [10,20,30,{showAll:'All'}]\r\n   */\r\n  @Input() rowsPerPageOptions: PageOption[] = null;\r\n  /**\r\n   * \tInline style of the component.\r\n   */\r\n  @Input() style: string = null;\r\n  /**\r\n   * \tStyle class of the component.\r\n   */\r\n  @Input() styleClass: string = null;\r\n  /**\r\n   * Whether to show it even there is only one page.\r\n   */\r\n  @Input() alwaysShow = true;\r\n  /**\r\n   * When enabled, icons are displayed on paginator to go first and last page.\r\n   */\r\n  @Input() showFirstLastIcon = true;\r\n  /**\r\n   * Template instance to inject into the left side of the paginator.\r\n   */\r\n  @Input() templateLeft: TemplateRef<any> = null;\r\n  /**\r\n   * Template instance to inject into the right side of the paginator.\r\n   */\r\n  @Input() templateRight: TemplateRef<any> = null;\r\n  /**\r\n   * Template instance to inject into the dropdown item inside in the paginator.\r\n   */\r\n  @Input() dropdownItemTemplate: TemplateRef<any> = null;\r\n  /**\r\n   * Target element to attach the dropdown overlay, valid values are \"body\" or a local ng-template variable of another element\r\n   * (note: use binding with brackets for template variables, e.g. [appendTo]=\"mydiv\" for a div element having #mydiv as variable name).\r\n   */\r\n  @Input() dropdownAppendTo: any = null;\r\n  /**\r\n   * \tDropdown height of the viewport in pixels, a scrollbar is defined if height of list exceeds this value.\r\n   */\r\n  @Input() dropdownScrollHeight = '200px';\r\n  /**\r\n   * Template of the current page report element.\r\n   * Available placeholders are {currentPage},{totalPages},{rows},{first},{last} and {totalRecords}\r\n   */\r\n  @Input() currentPageReportTemplate: string;\r\n  /**\r\n   * Whether to display current page report.\r\n   */\r\n  @Input() showCurrentPageReport = false;\r\n  /**\r\n   * \tWhether to display a dropdown to navigate to any page.\r\n   */\r\n  @Input() showJumpToPageDropdown = false;\r\n  /**\r\n   * \tWhether to show page links.\r\n   */\r\n  @Input() showPageLinks = true;\r\n\r\n  @Output() pageChange = new EventEmitter<PageChangeEvent>();\r\n\r\n  public onPageChange(event: PageChangeEvent): void {\r\n    this.pageChange.emit(event);\r\n  }\r\n}\r\n",
      "properties": [
        {
          "name": "first",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "number",
          "optional": false,
          "description": "",
          "line": 6
        },
        {
          "name": "page",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "number",
          "optional": false,
          "description": "",
          "line": 8
        },
        {
          "name": "pageCount",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "number",
          "optional": false,
          "description": "",
          "line": 9
        },
        {
          "name": "rows",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "number",
          "optional": false,
          "description": "",
          "line": 7
        }
      ],
      "indexSignatures": [],
      "kind": 164,
      "methods": []
    },
    {
      "name": "Product",
      "id": "interface-Product-3f8a240d97fed32f761bd91b12cebd31",
      "file": "libs/components/src/lib/table/_story/data.ts",
      "deprecated": false,
      "deprecationMessage": "",
      "type": "interface",
      "sourceCode": "export const Products: Product[] = [\r\n  {\r\n    id: '1000',\r\n    code: 'f230fh0g3',\r\n    name: 'Bamboo Watch',\r\n    description: 'Product Description',\r\n    image: 'bamboo-watch.jpg',\r\n    price: 65,\r\n    category: 'Accessories',\r\n    quantity: 24,\r\n    inventoryStatus: 'INSTOCK',\r\n    rating: 5,\r\n  },\r\n  {\r\n    id: '1001',\r\n    code: 'nvklal433',\r\n    name: 'Black Watch',\r\n    description: 'Product Description',\r\n    image: 'black-watch.jpg',\r\n    price: 72,\r\n    category: 'Accessories',\r\n    quantity: 61,\r\n    inventoryStatus: 'INSTOCK',\r\n    rating: 4,\r\n  },\r\n  {\r\n    id: '1002',\r\n    code: 'zz21cz3c1',\r\n    name: 'Blue Band',\r\n    description: 'Product Description',\r\n    image: 'blue-band.jpg',\r\n    price: 79,\r\n    category: 'Fitness',\r\n    quantity: 2,\r\n    inventoryStatus: 'LOWSTOCK',\r\n    rating: 3,\r\n  },\r\n  {\r\n    id: '1003',\r\n    code: '244wgerg2',\r\n    name: 'Blue T-Shirt',\r\n    description: 'Product Description',\r\n    image: 'blue-t-shirt.jpg',\r\n    price: 29,\r\n    category: 'Clothing',\r\n    quantity: 25,\r\n    inventoryStatus: 'INSTOCK',\r\n    rating: 5,\r\n  },\r\n  {\r\n    id: '1004',\r\n    code: 'h456wer53',\r\n    name: 'Bracelet',\r\n    description: 'Product Description',\r\n    image: 'bracelet.jpg',\r\n    price: 15,\r\n    category: 'Accessories',\r\n    quantity: 73,\r\n    inventoryStatus: 'INSTOCK',\r\n    rating: 4,\r\n  },\r\n  {\r\n    id: '1005',\r\n    code: 'av2231fwg',\r\n    name: 'Brown Purse',\r\n    description: 'Product Description',\r\n    image: 'brown-purse.jpg',\r\n    price: 120,\r\n    category: 'Accessories',\r\n    quantity: 0,\r\n    inventoryStatus: 'OUTOFSTOCK',\r\n    rating: 4,\r\n  },\r\n  {\r\n    id: '1006',\r\n    code: 'bib36pfvm',\r\n    name: 'Chakra Bracelet',\r\n    description: 'Product Description',\r\n    image: 'chakra-bracelet.jpg',\r\n    price: 32,\r\n    category: 'Accessories',\r\n    quantity: 5,\r\n    inventoryStatus: 'LOWSTOCK',\r\n    rating: 3,\r\n  },\r\n  {\r\n    id: '1007',\r\n    code: 'mbvjkgip5',\r\n    name: 'Galaxy Earrings',\r\n    description: 'Product Description',\r\n    image: 'galaxy-earrings.jpg',\r\n    price: 34,\r\n    category: 'Accessories',\r\n    quantity: 23,\r\n    inventoryStatus: 'INSTOCK',\r\n    rating: 5,\r\n  },\r\n  {\r\n    id: '1008',\r\n    code: 'vbb124btr',\r\n    name: 'Game Controller',\r\n    description: 'Product Description',\r\n    image: 'game-controller.jpg',\r\n    price: 99,\r\n    category: 'Electronics',\r\n    quantity: 2,\r\n    inventoryStatus: 'LOWSTOCK',\r\n    rating: 4,\r\n  },\r\n  {\r\n    id: '1009',\r\n    code: 'cm230f032',\r\n    name: 'Gaming Set',\r\n    description: 'Product Description',\r\n    image: 'gaming-set.jpg',\r\n    price: 299,\r\n    category: 'Electronics',\r\n    quantity: 63,\r\n    inventoryStatus: 'INSTOCK',\r\n    rating: 3,\r\n  },\r\n];\r\n\r\ninterface Customer {\r\n  id: number;\r\n  name: string;\r\n  country: { code: string; name: string };\r\n  company: string;\r\n  date: Date;\r\n  status: string;\r\n  verified: boolean;\r\n  activity: number;\r\n  representative: { image: string; name: string };\r\n  balance: number;\r\n}\r\n\r\nexport const Customers: Customer[] = [\r\n  {\r\n    id: 1000,\r\n    name: 'James Butt',\r\n    country: {\r\n      name: 'Algeria',\r\n      code: 'dz',\r\n    },\r\n    company: 'Benton, John B Jr',\r\n    date: new Date('2015-09-13'),\r\n    status: 'unqualified',\r\n    verified: true,\r\n    activity: 17,\r\n    representative: {\r\n      name: 'Ioni Bowcher',\r\n      image: 'ionibowcher.png',\r\n    },\r\n    balance: 70663,\r\n  },\r\n  {\r\n    id: 1001,\r\n    name: 'Josephine Darakjy',\r\n    country: {\r\n      name: 'Egypt',\r\n      code: 'eg',\r\n    },\r\n    company: 'Chanay, Jeffrey A Esq',\r\n    date: new Date('2019-02-09'),\r\n    status: 'proposal',\r\n    verified: true,\r\n    activity: 0,\r\n    representative: {\r\n      name: 'Amy Elsner',\r\n      image: 'amyelsner.png',\r\n    },\r\n    balance: 82429,\r\n  },\r\n  {\r\n    id: 1002,\r\n    name: 'Art Venere',\r\n    country: {\r\n      name: 'Panama',\r\n      code: 'pa',\r\n    },\r\n    company: 'Chemel, James L Cpa',\r\n    date: new Date('2017-05-13'),\r\n    status: 'qualified',\r\n    verified: false,\r\n    activity: 63,\r\n    representative: {\r\n      name: 'Asiya Javayant',\r\n      image: 'asiyajavayant.png',\r\n    },\r\n    balance: 28334,\r\n  },\r\n  {\r\n    id: 1003,\r\n    name: 'Lenna Paprocki',\r\n    country: {\r\n      name: 'Slovenia',\r\n      code: 'si',\r\n    },\r\n    company: 'Feltz Printing Service',\r\n    date: new Date('2020-09-15'),\r\n    status: 'new',\r\n    verified: false,\r\n    activity: 37,\r\n    representative: {\r\n      name: 'Xuxue Feng',\r\n      image: 'xuxuefeng.png',\r\n    },\r\n    balance: 88521,\r\n  },\r\n  {\r\n    id: 1004,\r\n    name: 'Donette Foller',\r\n    country: {\r\n      name: 'South Africa',\r\n      code: 'za',\r\n    },\r\n    company: 'Printing Dimensions',\r\n    date: new Date('2016-05-20'),\r\n    status: 'proposal',\r\n    verified: true,\r\n    activity: 33,\r\n    representative: {\r\n      name: 'Asiya Javayant',\r\n      image: 'asiyajavayant.png',\r\n    },\r\n    balance: 93905,\r\n  },\r\n  {\r\n    id: 1005,\r\n    name: 'Simona Morasca',\r\n    country: {\r\n      name: 'Egypt',\r\n      code: 'eg',\r\n    },\r\n    company: 'Chapman, Ross E Esq',\r\n    date: new Date('2018-02-16'),\r\n    status: 'qualified',\r\n    verified: false,\r\n    activity: 68,\r\n    representative: {\r\n      name: 'Ivan Magalhaes',\r\n      image: 'ivanmagalhaes.png',\r\n    },\r\n    balance: 50041,\r\n  },\r\n  {\r\n    id: 1006,\r\n    name: 'Mitsue Tollner',\r\n    country: {\r\n      name: 'Paraguay',\r\n      code: 'py',\r\n    },\r\n    company: 'Morlong Associates',\r\n    date: new Date('2018-02-19'),\r\n    status: 'renewal',\r\n    verified: true,\r\n    activity: 54,\r\n    representative: {\r\n      name: 'Ivan Magalhaes',\r\n      image: 'ivanmagalhaes.png',\r\n    },\r\n    balance: 58706,\r\n  },\r\n  {\r\n    id: 1007,\r\n    name: 'Leota Dilliard',\r\n    country: {\r\n      name: 'Serbia',\r\n      code: 'rs',\r\n    },\r\n    company: 'Commercial Press',\r\n    date: new Date('2019-08-13'),\r\n    status: 'renewal',\r\n    verified: true,\r\n    activity: 69,\r\n    representative: {\r\n      name: 'Onyama Limba',\r\n      image: 'onyamalimba.png',\r\n    },\r\n    balance: 26640,\r\n  },\r\n  {\r\n    id: 1008,\r\n    name: 'Sage Wieser',\r\n    country: {\r\n      name: 'Egypt',\r\n      code: 'eg',\r\n    },\r\n    company: 'Truhlar And Truhlar Attys',\r\n    date: new Date('2018-11-21'),\r\n    status: 'unqualified',\r\n    verified: true,\r\n    activity: 76,\r\n    representative: {\r\n      name: 'Ivan Magalhaes',\r\n      image: 'ivanmagalhaes.png',\r\n    },\r\n    balance: 65369,\r\n  },\r\n  {\r\n    id: 1009,\r\n    name: 'Kris Marrier',\r\n    country: {\r\n      name: 'Mexico',\r\n      code: 'mx',\r\n    },\r\n    company: 'King, Christopher A Esq',\r\n    date: new Date('2015-07-07'),\r\n    status: 'proposal',\r\n    verified: false,\r\n    activity: 3,\r\n    representative: {\r\n      name: 'Onyama Limba',\r\n      image: 'onyamalimba.png',\r\n    },\r\n    balance: 63451,\r\n  },\r\n  {\r\n    id: 1010,\r\n    name: 'Minna Amigon',\r\n    country: {\r\n      name: 'Romania',\r\n      code: 'ro',\r\n    },\r\n    company: 'Dorl, James J Esq',\r\n    date: new Date('2018-11-07'),\r\n    status: 'qualified',\r\n    verified: false,\r\n    activity: 38,\r\n    representative: {\r\n      name: 'Anna Fali',\r\n      image: 'annafali.png',\r\n    },\r\n    balance: 71169,\r\n  },\r\n  {\r\n    id: 1011,\r\n    name: 'Abel Maclead',\r\n    country: {\r\n      name: 'Singapore',\r\n      code: 'sg',\r\n    },\r\n    company: 'Rangoni Of Florence',\r\n    date: new Date('2017-03-11'),\r\n    status: 'qualified',\r\n    verified: true,\r\n    activity: 87,\r\n    representative: {\r\n      name: 'Bernardo Dominic',\r\n      image: 'bernardodominic.png',\r\n    },\r\n    balance: 96842,\r\n  },\r\n  {\r\n    id: 1012,\r\n    name: 'Kiley Caldarera',\r\n    country: {\r\n      name: 'Serbia',\r\n      code: 'rs',\r\n    },\r\n    company: 'Feiner Bros',\r\n    date: new Date('2015-10-20'),\r\n    status: 'unqualified',\r\n    verified: false,\r\n    activity: 80,\r\n    representative: {\r\n      name: 'Onyama Limba',\r\n      image: 'onyamalimba.png',\r\n    },\r\n    balance: 92734,\r\n  },\r\n  {\r\n    id: 1013,\r\n    name: 'Graciela Ruta',\r\n    country: {\r\n      name: 'Chile',\r\n      code: 'cl',\r\n    },\r\n    company: 'Buckley Miller & Wright',\r\n    date: new Date('2016-07-25'),\r\n    status: 'negotiation',\r\n    verified: false,\r\n    activity: 59,\r\n    representative: {\r\n      name: 'Amy Elsner',\r\n      image: 'amyelsner.png',\r\n    },\r\n    balance: 45250,\r\n  },\r\n  {\r\n    id: 1014,\r\n    name: 'Cammy Albares',\r\n    country: {\r\n      name: 'Philippines',\r\n      code: 'ph',\r\n    },\r\n    company: 'Rousseaux, Michael Esq',\r\n    date: new Date('2019-06-25'),\r\n    status: 'new',\r\n    verified: true,\r\n    activity: 90,\r\n    representative: {\r\n      name: 'Asiya Javayant',\r\n      image: 'asiyajavayant.png',\r\n    },\r\n    balance: 30236,\r\n  },\r\n  {\r\n    id: 1015,\r\n    name: 'Mattie Poquette',\r\n    country: {\r\n      name: 'Venezuela',\r\n      code: 've',\r\n    },\r\n    company: 'Century Communications',\r\n    date: new Date('2017-12-12'),\r\n    status: 'negotiation',\r\n    verified: false,\r\n    activity: 52,\r\n    representative: {\r\n      name: 'Anna Fali',\r\n      image: 'annafali.png',\r\n    },\r\n    balance: 64533,\r\n  },\r\n  {\r\n    id: 1016,\r\n    name: 'Meaghan Garufi',\r\n    country: {\r\n      name: 'Malaysia',\r\n      code: 'my',\r\n    },\r\n    company: 'Bolton, Wilbur Esq',\r\n    date: new Date('2018-07-04'),\r\n    status: 'unqualified',\r\n    verified: false,\r\n    activity: 31,\r\n    representative: {\r\n      name: 'Ivan Magalhaes',\r\n      image: 'ivanmagalhaes.png',\r\n    },\r\n    balance: 37279,\r\n  },\r\n  {\r\n    id: 1017,\r\n    name: 'Gladys Rim',\r\n    country: {\r\n      name: 'Netherlands',\r\n      code: 'nl',\r\n    },\r\n    company: 'T M Byxbee Company Pc',\r\n    date: new Date('2020-02-27'),\r\n    status: 'renewal',\r\n    verified: true,\r\n    activity: 48,\r\n    representative: {\r\n      name: 'Stephen Shaw',\r\n      image: 'stephenshaw.png',\r\n    },\r\n    balance: 27381,\r\n  },\r\n  {\r\n    id: 1018,\r\n    name: 'Yuki Whobrey',\r\n    country: {\r\n      name: 'Israel',\r\n      code: 'il',\r\n    },\r\n    company: 'Farmers Insurance Group',\r\n    date: new Date('2017-12-21'),\r\n    status: 'negotiation',\r\n    verified: true,\r\n    activity: 16,\r\n    representative: {\r\n      name: 'Bernardo Dominic',\r\n      image: 'bernardodominic.png',\r\n    },\r\n    balance: 9257,\r\n  },\r\n  {\r\n    id: 1019,\r\n    name: 'Fletcher Flosi',\r\n    country: {\r\n      name: 'Argentina',\r\n      code: 'ar',\r\n    },\r\n    company: 'Post Box Services Plus',\r\n    date: new Date('2016-01-04'),\r\n    status: 'renewal',\r\n    verified: true,\r\n    activity: 19,\r\n    representative: {\r\n      name: 'Xuxue Feng',\r\n      image: 'xuxuefeng.png',\r\n    },\r\n    balance: 67783,\r\n  },\r\n  {\r\n    id: 1020,\r\n    name: 'Bette Nicka',\r\n    country: {\r\n      name: 'Paraguay',\r\n      code: 'py',\r\n    },\r\n    company: 'Sport En Art',\r\n    date: new Date('2016-10-21'),\r\n    status: 'renewal',\r\n    verified: false,\r\n    activity: 100,\r\n    representative: {\r\n      name: 'Onyama Limba',\r\n      image: 'onyamalimba.png',\r\n    },\r\n    balance: 4609,\r\n  },\r\n  {\r\n    id: 1021,\r\n    name: 'Veronika Inouye',\r\n    country: {\r\n      name: 'Ecuador',\r\n      code: 'ec',\r\n    },\r\n    company: 'C 4 Network Inc',\r\n    date: new Date('2017-03-24'),\r\n    status: 'renewal',\r\n    verified: false,\r\n    activity: 72,\r\n    representative: {\r\n      name: 'Ioni Bowcher',\r\n      image: 'ionibowcher.png',\r\n    },\r\n    balance: 26565,\r\n  },\r\n  {\r\n    id: 1022,\r\n    name: 'Willard Kolmetz',\r\n    country: {\r\n      name: 'Tunisia',\r\n      code: 'tn',\r\n    },\r\n    company: 'Ingalls, Donald R Esq',\r\n    date: new Date('2017-04-15'),\r\n    status: 'renewal',\r\n    verified: true,\r\n    activity: 94,\r\n    representative: {\r\n      name: 'Asiya Javayant',\r\n      image: 'asiyajavayant.png',\r\n    },\r\n    balance: 75876,\r\n  },\r\n  {\r\n    id: 1023,\r\n    name: 'Maryann Royster',\r\n    country: {\r\n      name: 'Belarus',\r\n      code: 'by',\r\n    },\r\n    company: 'Franklin, Peter L Esq',\r\n    date: new Date('2017-03-11'),\r\n    status: 'qualified',\r\n    verified: false,\r\n    activity: 56,\r\n    representative: {\r\n      name: 'Elwin Sharvill',\r\n      image: 'elwinsharvill.png',\r\n    },\r\n    balance: 41121,\r\n  },\r\n  {\r\n    id: 1024,\r\n    name: 'Alisha Slusarski',\r\n    country: {\r\n      name: 'Iceland',\r\n      code: 'is',\r\n    },\r\n    company: 'Wtlz Power 107 Fm',\r\n    date: new Date('2018-03-27'),\r\n    status: 'qualified',\r\n    verified: true,\r\n    activity: 7,\r\n    representative: {\r\n      name: 'Stephen Shaw',\r\n      image: 'stephenshaw.png',\r\n    },\r\n    balance: 91691,\r\n  },\r\n  {\r\n    id: 1025,\r\n    name: 'Allene Iturbide',\r\n    country: {\r\n      name: 'Italy',\r\n      code: 'it',\r\n    },\r\n    company: 'Ledecky, David Esq',\r\n    date: new Date('2016-02-20'),\r\n    status: 'qualified',\r\n    verified: true,\r\n    activity: 1,\r\n    representative: {\r\n      name: 'Ivan Magalhaes',\r\n      image: 'ivanmagalhaes.png',\r\n    },\r\n    balance: 40137,\r\n  },\r\n  {\r\n    id: 1026,\r\n    name: 'Chanel Caudy',\r\n    country: {\r\n      name: 'Argentina',\r\n      code: 'ar',\r\n    },\r\n    company: 'Professional Image Inc',\r\n    date: new Date('2018-06-24'),\r\n    status: 'new',\r\n    verified: true,\r\n    activity: 26,\r\n    representative: {\r\n      name: 'Ioni Bowcher',\r\n      image: 'ionibowcher.png',\r\n    },\r\n    balance: 21304,\r\n  },\r\n  {\r\n    id: 1027,\r\n    name: 'Ezekiel Chui',\r\n    country: {\r\n      name: 'Ireland',\r\n      code: 'ie',\r\n    },\r\n    company: 'Sider, Donald C Esq',\r\n    date: new Date('2016-09-24'),\r\n    status: 'new',\r\n    verified: false,\r\n    activity: 76,\r\n    representative: {\r\n      name: 'Amy Elsner',\r\n      image: 'amyelsner.png',\r\n    },\r\n    balance: 60454,\r\n  },\r\n  {\r\n    id: 1028,\r\n    name: 'Willow Kusko',\r\n    country: {\r\n      name: 'Romania',\r\n      code: 'ro',\r\n    },\r\n    company: 'U Pull It',\r\n    date: new Date('2020-04-11'),\r\n    status: 'qualified',\r\n    verified: true,\r\n    activity: 7,\r\n    representative: {\r\n      name: 'Onyama Limba',\r\n      image: 'onyamalimba.png',\r\n    },\r\n    balance: 17565,\r\n  },\r\n  {\r\n    id: 1029,\r\n    name: 'Bernardo Figeroa',\r\n    country: {\r\n      name: 'Israel',\r\n      code: 'il',\r\n    },\r\n    company: 'Clark, Richard Cpa',\r\n    date: new Date('2018-11-04'),\r\n    status: 'renewal',\r\n    verified: true,\r\n    activity: 81,\r\n    representative: {\r\n      name: 'Ioni Bowcher',\r\n      image: 'ionibowcher.png',\r\n    },\r\n    balance: 17774,\r\n  },\r\n  {\r\n    id: 1030,\r\n    name: 'Ammie Corrio',\r\n    country: {\r\n      name: 'Hungary',\r\n      code: 'hu',\r\n    },\r\n    company: 'Moskowitz, Barry S',\r\n    date: new Date('2016-06-11'),\r\n    status: 'negotiation',\r\n    verified: true,\r\n    activity: 56,\r\n    representative: {\r\n      name: 'Asiya Javayant',\r\n      image: 'asiyajavayant.png',\r\n    },\r\n    balance: 49201,\r\n  },\r\n  {\r\n    id: 1031,\r\n    name: 'Francine Vocelka',\r\n    country: {\r\n      name: 'Honduras',\r\n      code: 'hn',\r\n    },\r\n    company: 'Cascade Realty Advisors Inc',\r\n    date: new Date('2017-08-02'),\r\n    status: 'qualified',\r\n    verified: true,\r\n    activity: 94,\r\n    representative: {\r\n      name: 'Ioni Bowcher',\r\n      image: 'ionibowcher.png',\r\n    },\r\n    balance: 67126,\r\n  },\r\n  {\r\n    id: 1032,\r\n    name: 'Ernie Stenseth',\r\n    country: {\r\n      name: 'Australia',\r\n      code: 'au',\r\n    },\r\n    company: 'Knwz Newsradio',\r\n    date: new Date('2018-06-06'),\r\n    status: 'renewal',\r\n    verified: true,\r\n    activity: 68,\r\n    representative: {\r\n      name: 'Xuxue Feng',\r\n      image: 'xuxuefeng.png',\r\n    },\r\n    balance: 76017,\r\n  },\r\n  {\r\n    id: 1033,\r\n    name: 'Albina Glick',\r\n    country: {\r\n      name: 'Ukraine',\r\n      code: 'ua',\r\n    },\r\n    company: 'Giampetro, Anthony D',\r\n    date: new Date('2019-08-08'),\r\n    status: 'proposal',\r\n    verified: true,\r\n    activity: 85,\r\n    representative: {\r\n      name: 'Bernardo Dominic',\r\n      image: 'bernardodominic.png',\r\n    },\r\n    balance: 91201,\r\n  },\r\n  {\r\n    id: 1034,\r\n    name: 'Alishia Sergi',\r\n    country: {\r\n      name: 'Qatar',\r\n      code: 'qa',\r\n    },\r\n    company: 'Milford Enterprises Inc',\r\n    date: new Date('2018-05-19'),\r\n    status: 'negotiation',\r\n    verified: false,\r\n    activity: 46,\r\n    representative: {\r\n      name: 'Ivan Magalhaes',\r\n      image: 'ivanmagalhaes.png',\r\n    },\r\n    balance: 12237,\r\n  },\r\n  {\r\n    id: 1035,\r\n    name: 'Solange Shinko',\r\n    country: {\r\n      name: 'Cameroon',\r\n      code: 'cm',\r\n    },\r\n    company: 'Mosocco, Ronald A',\r\n    date: new Date('2015-02-12'),\r\n    status: 'qualified',\r\n    verified: true,\r\n    activity: 32,\r\n    representative: {\r\n      name: 'Onyama Limba',\r\n      image: 'onyamalimba.png',\r\n    },\r\n    balance: 34072,\r\n  },\r\n  {\r\n    id: 1036,\r\n    name: 'Jose Stockham',\r\n    country: {\r\n      name: 'Italy',\r\n      code: 'it',\r\n    },\r\n    company: 'Tri State Refueler Co',\r\n    date: new Date('2018-04-25'),\r\n    status: 'qualified',\r\n    verified: true,\r\n    activity: 77,\r\n    representative: {\r\n      name: 'Amy Elsner',\r\n      image: 'amyelsner.png',\r\n    },\r\n    balance: 94909,\r\n  },\r\n  {\r\n    id: 1037,\r\n    name: 'Rozella Ostrosky',\r\n    country: {\r\n      name: 'Venezuela',\r\n      code: 've',\r\n    },\r\n    company: 'Parkway Company',\r\n    date: new Date('2016-02-27'),\r\n    status: 'unqualified',\r\n    verified: true,\r\n    activity: 66,\r\n    representative: {\r\n      name: 'Amy Elsner',\r\n      image: 'amyelsner.png',\r\n    },\r\n    balance: 57245,\r\n  },\r\n  {\r\n    id: 1038,\r\n    name: 'Valentine Gillian',\r\n    country: {\r\n      name: 'Paraguay',\r\n      code: 'py',\r\n    },\r\n    company: 'Fbs Business Finance',\r\n    date: new Date('2019-09-17'),\r\n    status: 'qualified',\r\n    verified: true,\r\n    activity: 25,\r\n    representative: {\r\n      name: 'Bernardo Dominic',\r\n      image: 'bernardodominic.png',\r\n    },\r\n    balance: 75502,\r\n  },\r\n  {\r\n    id: 1039,\r\n    name: 'Kati Rulapaugh',\r\n    country: {\r\n      name: 'Puerto Rico',\r\n      code: 'pr',\r\n    },\r\n    company: 'Eder Assocs Consltng Engrs Pc',\r\n    date: new Date('2016-12-03'),\r\n    status: 'renewal',\r\n    verified: false,\r\n    activity: 51,\r\n    representative: {\r\n      name: 'Ioni Bowcher',\r\n      image: 'ionibowcher.png',\r\n    },\r\n    balance: 82075,\r\n  },\r\n  {\r\n    id: 1040,\r\n    name: 'Youlanda Schemmer',\r\n    country: {\r\n      name: 'Bolivia',\r\n      code: 'bo',\r\n    },\r\n    company: 'Tri M Tool Inc',\r\n    date: new Date('2017-12-15'),\r\n    status: 'negotiation',\r\n    verified: true,\r\n    activity: 49,\r\n    representative: {\r\n      name: 'Xuxue Feng',\r\n      image: 'xuxuefeng.png',\r\n    },\r\n    balance: 19208,\r\n  },\r\n  {\r\n    id: 1041,\r\n    name: 'Dyan Oldroyd',\r\n    country: {\r\n      name: 'Argentina',\r\n      code: 'ar',\r\n    },\r\n    company: 'International Eyelets Inc',\r\n    date: new Date('2017-02-02'),\r\n    status: 'qualified',\r\n    verified: false,\r\n    activity: 5,\r\n    representative: {\r\n      name: 'Amy Elsner',\r\n      image: 'amyelsner.png',\r\n    },\r\n    balance: 50194,\r\n  },\r\n  {\r\n    id: 1042,\r\n    name: 'Roxane Campain',\r\n    country: {\r\n      name: 'France',\r\n      code: 'fr',\r\n    },\r\n    company: 'Rapid Trading Intl',\r\n    date: new Date('2018-12-25'),\r\n    status: 'unqualified',\r\n    verified: false,\r\n    activity: 100,\r\n    representative: {\r\n      name: 'Anna Fali',\r\n      image: 'annafali.png',\r\n    },\r\n    balance: 77714,\r\n  },\r\n  {\r\n    id: 1043,\r\n    name: 'Lavera Perin',\r\n    country: {\r\n      name: 'Vietnam',\r\n      code: 'vn',\r\n    },\r\n    company: 'Abc Enterprises Inc',\r\n    date: new Date('2018-04-10'),\r\n    status: 'qualified',\r\n    verified: false,\r\n    activity: 71,\r\n    representative: {\r\n      name: 'Stephen Shaw',\r\n      image: 'stephenshaw.png',\r\n    },\r\n    balance: 35740,\r\n  },\r\n  {\r\n    id: 1044,\r\n    name: 'Erick Ferencz',\r\n    country: {\r\n      name: 'Belgium',\r\n      code: 'be',\r\n    },\r\n    company: 'Cindy Turner Associates',\r\n    date: new Date('2018-05-06'),\r\n    status: 'unqualified',\r\n    verified: true,\r\n    activity: 54,\r\n    representative: {\r\n      name: 'Amy Elsner',\r\n      image: 'amyelsner.png',\r\n    },\r\n    balance: 30790,\r\n  },\r\n  {\r\n    id: 1045,\r\n    name: 'Fatima Saylors',\r\n    country: {\r\n      name: 'Canada',\r\n      code: 'ca',\r\n    },\r\n    company: 'Stanton, James D Esq',\r\n    date: new Date('2019-07-10'),\r\n    status: 'renewal',\r\n    verified: true,\r\n    activity: 93,\r\n    representative: {\r\n      name: 'Onyama Limba',\r\n      image: 'onyamalimba.png',\r\n    },\r\n    balance: 52343,\r\n  },\r\n  {\r\n    id: 1046,\r\n    name: 'Jina Briddick',\r\n    country: {\r\n      name: 'Mexico',\r\n      code: 'mx',\r\n    },\r\n    company: 'Grace Pastries Inc',\r\n    date: new Date('2018-02-19'),\r\n    status: 'unqualified',\r\n    verified: false,\r\n    activity: 97,\r\n    representative: {\r\n      name: 'Xuxue Feng',\r\n      image: 'xuxuefeng.png',\r\n    },\r\n    balance: 53966,\r\n  },\r\n  {\r\n    id: 1047,\r\n    name: 'Kanisha Waycott',\r\n    country: {\r\n      name: 'Ecuador',\r\n      code: 'ec',\r\n    },\r\n    company: 'Schroer, Gene E Esq',\r\n    date: new Date('2019-11-27'),\r\n    status: 'new',\r\n    verified: false,\r\n    activity: 80,\r\n    representative: {\r\n      name: 'Xuxue Feng',\r\n      image: 'xuxuefeng.png',\r\n    },\r\n    balance: 9920,\r\n  },\r\n  {\r\n    id: 1048,\r\n    name: 'Emerson Bowley',\r\n    country: {\r\n      name: 'Finland',\r\n      code: 'fi',\r\n    },\r\n    company: 'Knights Inn',\r\n    date: new Date('2018-11-24'),\r\n    status: 'new',\r\n    verified: false,\r\n    activity: 63,\r\n    representative: {\r\n      name: 'Stephen Shaw',\r\n      image: 'stephenshaw.png',\r\n    },\r\n    balance: 78069,\r\n  },\r\n  {\r\n    id: 1049,\r\n    name: 'Blair Malet',\r\n    country: {\r\n      name: 'Finland',\r\n      code: 'fi',\r\n    },\r\n    company: 'Bollinger Mach Shp & Shipyard',\r\n    date: new Date('2018-04-19'),\r\n    status: 'new',\r\n    verified: true,\r\n    activity: 92,\r\n    representative: {\r\n      name: 'Asiya Javayant',\r\n      image: 'asiyajavayant.png',\r\n    },\r\n    balance: 65005,\r\n  },\r\n];\r\n\r\ninterface Sale {\r\n  product: string;\r\n  lastYearSale: number;\r\n  thisYearSale: number;\r\n  lastYearProfit: number;\r\n  thisYearProfit: number;\r\n}\r\n\r\nexport const Sales: Sale[] = [\r\n  {\r\n    product: 'Bamboo Watch',\r\n    lastYearSale: 51,\r\n    thisYearSale: 40,\r\n    lastYearProfit: 54406,\r\n    thisYearProfit: 43342,\r\n  },\r\n  {\r\n    product: 'Black Watch',\r\n    lastYearSale: 83,\r\n    thisYearSale: 9,\r\n    lastYearProfit: 423132,\r\n    thisYearProfit: 312122,\r\n  },\r\n  { product: 'Blue Band', lastYearSale: 38, thisYearSale: 5, lastYearProfit: 12321, thisYearProfit: 8500 },\r\n  {\r\n    product: 'Blue T-Shirt',\r\n    lastYearSale: 49,\r\n    thisYearSale: 22,\r\n    lastYearProfit: 745232,\r\n    thisYearProfit: 65323,\r\n  },\r\n  {\r\n    product: 'Brown Purse',\r\n    lastYearSale: 17,\r\n    thisYearSale: 79,\r\n    lastYearProfit: 643242,\r\n    thisYearProfit: 500332,\r\n  },\r\n  {\r\n    product: 'Chakra Bracelet',\r\n    lastYearSale: 52,\r\n    thisYearSale: 65,\r\n    lastYearProfit: 421132,\r\n    thisYearProfit: 150005,\r\n  },\r\n  {\r\n    product: 'Galaxy Earrings',\r\n    lastYearSale: 82,\r\n    thisYearSale: 12,\r\n    lastYearProfit: 131211,\r\n    thisYearProfit: 100214,\r\n  },\r\n  {\r\n    product: 'Game Controller',\r\n    lastYearSale: 44,\r\n    thisYearSale: 45,\r\n    lastYearProfit: 66442,\r\n    thisYearProfit: 53322,\r\n  },\r\n  {\r\n    product: 'Gaming Set',\r\n    lastYearSale: 90,\r\n    thisYearSale: 56,\r\n    lastYearProfit: 765442,\r\n    thisYearProfit: 296232,\r\n  },\r\n  {\r\n    product: 'Gold Phone Case',\r\n    lastYearSale: 75,\r\n    thisYearSale: 54,\r\n    lastYearProfit: 21212,\r\n    thisYearProfit: 12533,\r\n  },\r\n];\r\n\r\nexport interface Product {\r\n  id: string;\r\n  code: string;\r\n  name: string;\r\n  description: string;\r\n  image: string;\r\n  price: number;\r\n  category: string;\r\n  quantity: number;\r\n  inventoryStatus: string;\r\n  rating: number;\r\n}\r\n\r\nconst ProductsSmall: Product[] = [\r\n  {\r\n    id: '1000',\r\n    code: 'f230fh0g3',\r\n    name: 'Bamboo Watch',\r\n    description: 'Product Description',\r\n    image: 'bamboo-watch.jpg',\r\n    price: 65,\r\n    category: 'Accessories',\r\n    quantity: 24,\r\n    inventoryStatus: 'INSTOCK',\r\n    rating: 5,\r\n  },\r\n  {\r\n    id: '1001',\r\n    code: 'nvklal433',\r\n    name: 'Black Watch',\r\n    description: 'Product Description',\r\n    image: 'black-watch.jpg',\r\n    price: 72,\r\n    category: 'Accessories',\r\n    quantity: 61,\r\n    inventoryStatus: 'INSTOCK',\r\n    rating: 4,\r\n  },\r\n  {\r\n    id: '1002',\r\n    code: 'zz21cz3c1',\r\n    name: 'Blue Band',\r\n    description: 'Product Description',\r\n    image: 'blue-band.jpg',\r\n    price: 79,\r\n    category: 'Fitness',\r\n    quantity: 2,\r\n    inventoryStatus: 'LOWSTOCK',\r\n    rating: 3,\r\n  },\r\n  {\r\n    id: '1003',\r\n    code: '244wgerg2',\r\n    name: 'Blue T-Shirt',\r\n    description: 'Product Description',\r\n    image: 'blue-t-shirt.jpg',\r\n    price: 29,\r\n    category: 'Clothing',\r\n    quantity: 25,\r\n    inventoryStatus: 'INSTOCK',\r\n    rating: 5,\r\n  },\r\n  {\r\n    id: '1004',\r\n    code: 'h456wer53',\r\n    name: 'Bracelet',\r\n    description: 'Product Description',\r\n    image: 'bracelet.jpg',\r\n    price: 15,\r\n    category: 'Accessories',\r\n    quantity: 73,\r\n    inventoryStatus: 'INSTOCK',\r\n    rating: 4,\r\n  },\r\n  {\r\n    id: '1005',\r\n    code: 'av2231fwg',\r\n    name: 'Brown Purse',\r\n    description: 'Product Description',\r\n    image: 'brown-purse.jpg',\r\n    price: 120,\r\n    category: 'Accessories',\r\n    quantity: 0,\r\n    inventoryStatus: 'OUTOFSTOCK',\r\n    rating: 4,\r\n  },\r\n  {\r\n    id: '1006',\r\n    code: 'bib36pfvm',\r\n    name: 'Chakra Bracelet',\r\n    description: 'Product Description',\r\n    image: 'chakra-bracelet.jpg',\r\n    price: 32,\r\n    category: 'Accessories',\r\n    quantity: 5,\r\n    inventoryStatus: 'LOWSTOCK',\r\n    rating: 3,\r\n  },\r\n  {\r\n    id: '1007',\r\n    code: 'mbvjkgip5',\r\n    name: 'Galaxy Earrings',\r\n    description: 'Product Description',\r\n    image: 'galaxy-earrings.jpg',\r\n    price: 34,\r\n    category: 'Accessories',\r\n    quantity: 23,\r\n    inventoryStatus: 'INSTOCK',\r\n    rating: 5,\r\n  },\r\n  {\r\n    id: '1008',\r\n    code: 'vbb124btr',\r\n    name: 'Game Controller',\r\n    description: 'Product Description',\r\n    image: 'game-controller.jpg',\r\n    price: 99,\r\n    category: 'Electronics',\r\n    quantity: 2,\r\n    inventoryStatus: 'LOWSTOCK',\r\n    rating: 4,\r\n  },\r\n  {\r\n    id: '1009',\r\n    code: 'cm230f032',\r\n    name: 'Gaming Set',\r\n    description: 'Product Description',\r\n    image: 'gaming-set.jpg',\r\n    price: 299,\r\n    category: 'Electronics',\r\n    quantity: 63,\r\n    inventoryStatus: 'INSTOCK',\r\n    rating: 3,\r\n  },\r\n];\r\n\r\ninterface ProductOrder {\r\n  id: string;\r\n  code: string;\r\n  name: string;\r\n  description: string;\r\n  image: string;\r\n  price: number;\r\n  category: string;\r\n  quantity: number;\r\n  inventoryStatus: string;\r\n  rating: number;\r\n  orders: Order[];\r\n}\r\n\r\ninterface Order {\r\n  id: string;\r\n  productCode: string;\r\n  date: string;\r\n  amount: number;\r\n  quantity: number;\r\n  customer: string;\r\n  status: string;\r\n}\r\n\r\nconst ProductsOrdersSmall: ProductOrder[] = [\r\n  {\r\n    id: '1000',\r\n    code: 'f230fh0g3',\r\n    name: 'Bamboo Watch',\r\n    description: 'Product Description',\r\n    image: 'bamboo-watch.jpg',\r\n    price: 65,\r\n    category: 'Accessories',\r\n    quantity: 24,\r\n    inventoryStatus: 'INSTOCK',\r\n    rating: 5,\r\n    orders: [\r\n      {\r\n        id: '1000',\r\n        productCode: 'f230fh0g3',\r\n        date: '13.08.2020',\r\n        amount: 65,\r\n        quantity: 1,\r\n        customer: 'David James',\r\n        status: 'PENDING',\r\n      },\r\n      {\r\n        id: '1001',\r\n        productCode: 'f230fh0g3',\r\n        date: '14.05.2020',\r\n        amount: 130,\r\n        quantity: 2,\r\n        customer: 'Leon Rodrigues',\r\n        status: 'DELIVERED',\r\n      },\r\n      {\r\n        id: '1002',\r\n        productCode: 'f230fh0g3',\r\n        date: '04.01.2019',\r\n        amount: 65,\r\n        quantity: 1,\r\n        customer: 'Juan Alejandro',\r\n        status: 'RETURNED',\r\n      },\r\n      {\r\n        id: '1003',\r\n        productCode: 'f230fh0g3',\r\n        date: '13.09.2020',\r\n        amount: 195,\r\n        quantity: 3,\r\n        customer: 'Claire Morrow',\r\n        status: 'CANCELLED',\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    id: '1001',\r\n    code: 'nvklal433',\r\n    name: 'Black Watch',\r\n    description: 'Product Description',\r\n    image: 'black-watch.jpg',\r\n    price: 72,\r\n    category: 'Accessories',\r\n    quantity: 61,\r\n    inventoryStatus: 'INSTOCK',\r\n    rating: 4,\r\n    orders: [\r\n      {\r\n        id: '2000',\r\n        productCode: 'nvklal433',\r\n        date: '14.05.2020',\r\n        amount: 72,\r\n        quantity: 1,\r\n        customer: 'Maisha Jefferson',\r\n        status: 'DELIVERED',\r\n      },\r\n      {\r\n        id: '2001',\r\n        productCode: 'nvklal433',\r\n        date: '28.02.2020',\r\n        amount: 144,\r\n        quantity: 2,\r\n        customer: 'Octavia Murillo',\r\n        status: 'PENDING',\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    id: '1002',\r\n    code: 'zz21cz3c1',\r\n    name: 'Blue Band',\r\n    description: 'Product Description',\r\n    image: 'blue-band.jpg',\r\n    price: 79,\r\n    category: 'Fitness',\r\n    quantity: 2,\r\n    inventoryStatus: 'LOWSTOCK',\r\n    rating: 3,\r\n    orders: [\r\n      {\r\n        id: '3000',\r\n        productCode: 'zz21cz3c1',\r\n        date: '05.07.2020',\r\n        amount: 79,\r\n        quantity: 1,\r\n        customer: 'Stacey Leja',\r\n        status: 'DELIVERED',\r\n      },\r\n      {\r\n        id: '3001',\r\n        productCode: 'zz21cz3c1',\r\n        date: '06.02.2020',\r\n        amount: 79,\r\n        quantity: 1,\r\n        customer: 'Ashley Wickens',\r\n        status: 'DELIVERED',\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    id: '1003',\r\n    code: '244wgerg2',\r\n    name: 'Blue T-Shirt',\r\n    description: 'Product Description',\r\n    image: 'blue-t-shirt.jpg',\r\n    price: 29,\r\n    category: 'Clothing',\r\n    quantity: 25,\r\n    inventoryStatus: 'INSTOCK',\r\n    rating: 5,\r\n    orders: [],\r\n  },\r\n  {\r\n    id: '1004',\r\n    code: 'h456wer53',\r\n    name: 'Bracelet',\r\n    description: 'Product Description',\r\n    image: 'bracelet.jpg',\r\n    price: 15,\r\n    category: 'Accessories',\r\n    quantity: 73,\r\n    inventoryStatus: 'INSTOCK',\r\n    rating: 4,\r\n    orders: [\r\n      {\r\n        id: '5000',\r\n        productCode: 'h456wer53',\r\n        date: '05.09.2020',\r\n        amount: 60,\r\n        quantity: 4,\r\n        customer: 'Mayumi Misaki',\r\n        status: 'PENDING',\r\n      },\r\n      {\r\n        id: '5001',\r\n        productCode: 'h456wer53',\r\n        date: '16.04.2019',\r\n        amount: 2,\r\n        quantity: 30,\r\n        customer: 'Francesco Salvatore',\r\n        status: 'DELIVERED',\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    id: '1005',\r\n    code: 'av2231fwg',\r\n    name: 'Brown Purse',\r\n    description: 'Product Description',\r\n    image: 'brown-purse.jpg',\r\n    price: 120,\r\n    category: 'Accessories',\r\n    quantity: 0,\r\n    inventoryStatus: 'OUTOFSTOCK',\r\n    rating: 4,\r\n    orders: [\r\n      {\r\n        id: '6000',\r\n        productCode: 'av2231fwg',\r\n        date: '25.01.2020',\r\n        amount: 120,\r\n        quantity: 1,\r\n        customer: 'Isabel Sinclair',\r\n        status: 'RETURNED',\r\n      },\r\n      {\r\n        id: '6001',\r\n        productCode: 'av2231fwg',\r\n        date: '12.03.2019',\r\n        amount: 240,\r\n        quantity: 2,\r\n        customer: 'Lionel Clifford',\r\n        status: 'DELIVERED',\r\n      },\r\n      {\r\n        id: '6002',\r\n        productCode: 'av2231fwg',\r\n        date: '05.05.2019',\r\n        amount: 120,\r\n        quantity: 1,\r\n        customer: 'Cody Chavez',\r\n        status: 'DELIVERED',\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    id: '1006',\r\n    code: 'bib36pfvm',\r\n    name: 'Chakra Bracelet',\r\n    description: 'Product Description',\r\n    image: 'chakra-bracelet.jpg',\r\n    price: 32,\r\n    category: 'Accessories',\r\n    quantity: 5,\r\n    inventoryStatus: 'LOWSTOCK',\r\n    rating: 3,\r\n    orders: [\r\n      {\r\n        id: '7000',\r\n        productCode: 'bib36pfvm',\r\n        date: '24.02.2020',\r\n        amount: 32,\r\n        quantity: 1,\r\n        customer: 'Arvin Darci',\r\n        status: 'DELIVERED',\r\n      },\r\n      {\r\n        id: '7001',\r\n        productCode: 'bib36pfvm',\r\n        date: '14.01.2020',\r\n        amount: 64,\r\n        quantity: 2,\r\n        customer: 'Izzy Jones',\r\n        status: 'PENDING',\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    id: '1007',\r\n    code: 'mbvjkgip5',\r\n    name: 'Galaxy Earrings',\r\n    description: 'Product Description',\r\n    image: 'galaxy-earrings.jpg',\r\n    price: 34,\r\n    category: 'Accessories',\r\n    quantity: 23,\r\n    inventoryStatus: 'INSTOCK',\r\n    rating: 5,\r\n    orders: [\r\n      {\r\n        id: '8000',\r\n        productCode: 'mbvjkgip5',\r\n        date: '19.06.2020',\r\n        amount: 34,\r\n        quantity: 1,\r\n        customer: 'Jennifer Smith',\r\n        status: 'DELIVERED',\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    id: '1008',\r\n    code: 'vbb124btr',\r\n    name: 'Game Controller',\r\n    description: 'Product Description',\r\n    image: 'game-controller.jpg',\r\n    price: 99,\r\n    category: 'Electronics',\r\n    quantity: 2,\r\n    inventoryStatus: 'LOWSTOCK',\r\n    rating: 4,\r\n    orders: [\r\n      {\r\n        id: '9000',\r\n        productCode: 'vbb124btr',\r\n        date: '05.01.2020',\r\n        amount: 99,\r\n        quantity: 1,\r\n        customer: 'Jeanfrancois David',\r\n        status: 'DELIVERED',\r\n      },\r\n      {\r\n        id: '9001',\r\n        productCode: 'vbb124btr',\r\n        date: '19.01.2020',\r\n        amount: 198,\r\n        quantity: 2,\r\n        customer: 'Ivar Greenwood',\r\n        status: 'RETURNED',\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    id: '1009',\r\n    code: 'cm230f032',\r\n    name: 'Gaming Set',\r\n    description: 'Product Description',\r\n    image: 'gaming-set.jpg',\r\n    price: 299,\r\n    category: 'Electronics',\r\n    quantity: 63,\r\n    inventoryStatus: 'INSTOCK',\r\n    rating: 3,\r\n    orders: [\r\n      {\r\n        id: '10000',\r\n        productCode: 'cm230f032',\r\n        date: '24.06.2020',\r\n        amount: 299,\r\n        quantity: 1,\r\n        customer: 'Kadeem Mujtaba',\r\n        status: 'PENDING',\r\n      },\r\n      {\r\n        id: '10001',\r\n        productCode: 'cm230f032',\r\n        date: '11.05.2020',\r\n        amount: 299,\r\n        quantity: 1,\r\n        customer: 'Ashley Wickens',\r\n        status: 'DELIVERED',\r\n      },\r\n      {\r\n        id: '10002',\r\n        productCode: 'cm230f032',\r\n        date: '07.02.2019',\r\n        amount: 299,\r\n        quantity: 1,\r\n        customer: 'Julie Johnson',\r\n        status: 'DELIVERED',\r\n      },\r\n      {\r\n        id: '10003',\r\n        productCode: 'cm230f032',\r\n        date: '26.04.2020',\r\n        amount: 299,\r\n        quantity: 1,\r\n        customer: 'Tony Costa',\r\n        status: 'CANCELLED',\r\n      },\r\n    ],\r\n  },\r\n];\r\n\r\nfunction cloneArrayOfObjects<T>(array: T[]): T[] {\r\n  return array.map(item => ({ ...item }));\r\n}\r\n\r\nexport function getProducts(): Product[] {\r\n  return cloneArrayOfObjects(Products);\r\n}\r\n\r\nexport function getProductsSmall(): Product[] {\r\n  return cloneArrayOfObjects(ProductsSmall);\r\n}\r\n\r\nexport function getSalesSmall(): Sale[] {\r\n  return cloneArrayOfObjects(Sales);\r\n}\r\n\r\nexport function getCustomers(): Customer[] {\r\n  return cloneArrayOfObjects(Customers);\r\n}\r\n\r\nexport function getProductsOrdersSmall(): ProductOrder[] {\r\n  return cloneArrayOfObjects(ProductsOrdersSmall);\r\n}\r\n",
      "properties": [
        {
          "name": "category",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 1122
        },
        {
          "name": "code",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 1117
        },
        {
          "name": "description",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 1119
        },
        {
          "name": "id",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 1116
        },
        {
          "name": "image",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 1120
        },
        {
          "name": "inventoryStatus",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 1124
        },
        {
          "name": "name",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 1118
        },
        {
          "name": "price",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "number",
          "optional": false,
          "description": "",
          "line": 1121
        },
        {
          "name": "quantity",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "number",
          "optional": false,
          "description": "",
          "line": 1123
        },
        {
          "name": "rating",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "number",
          "optional": false,
          "description": "",
          "line": 1125
        }
      ],
      "indexSignatures": [],
      "kind": 164,
      "methods": []
    },
    {
      "name": "ProductOrder",
      "id": "interface-ProductOrder-3f8a240d97fed32f761bd91b12cebd31",
      "file": "libs/components/src/lib/table/_story/data.ts",
      "deprecated": false,
      "deprecationMessage": "",
      "type": "interface",
      "sourceCode": "export const Products: Product[] = [\r\n  {\r\n    id: '1000',\r\n    code: 'f230fh0g3',\r\n    name: 'Bamboo Watch',\r\n    description: 'Product Description',\r\n    image: 'bamboo-watch.jpg',\r\n    price: 65,\r\n    category: 'Accessories',\r\n    quantity: 24,\r\n    inventoryStatus: 'INSTOCK',\r\n    rating: 5,\r\n  },\r\n  {\r\n    id: '1001',\r\n    code: 'nvklal433',\r\n    name: 'Black Watch',\r\n    description: 'Product Description',\r\n    image: 'black-watch.jpg',\r\n    price: 72,\r\n    category: 'Accessories',\r\n    quantity: 61,\r\n    inventoryStatus: 'INSTOCK',\r\n    rating: 4,\r\n  },\r\n  {\r\n    id: '1002',\r\n    code: 'zz21cz3c1',\r\n    name: 'Blue Band',\r\n    description: 'Product Description',\r\n    image: 'blue-band.jpg',\r\n    price: 79,\r\n    category: 'Fitness',\r\n    quantity: 2,\r\n    inventoryStatus: 'LOWSTOCK',\r\n    rating: 3,\r\n  },\r\n  {\r\n    id: '1003',\r\n    code: '244wgerg2',\r\n    name: 'Blue T-Shirt',\r\n    description: 'Product Description',\r\n    image: 'blue-t-shirt.jpg',\r\n    price: 29,\r\n    category: 'Clothing',\r\n    quantity: 25,\r\n    inventoryStatus: 'INSTOCK',\r\n    rating: 5,\r\n  },\r\n  {\r\n    id: '1004',\r\n    code: 'h456wer53',\r\n    name: 'Bracelet',\r\n    description: 'Product Description',\r\n    image: 'bracelet.jpg',\r\n    price: 15,\r\n    category: 'Accessories',\r\n    quantity: 73,\r\n    inventoryStatus: 'INSTOCK',\r\n    rating: 4,\r\n  },\r\n  {\r\n    id: '1005',\r\n    code: 'av2231fwg',\r\n    name: 'Brown Purse',\r\n    description: 'Product Description',\r\n    image: 'brown-purse.jpg',\r\n    price: 120,\r\n    category: 'Accessories',\r\n    quantity: 0,\r\n    inventoryStatus: 'OUTOFSTOCK',\r\n    rating: 4,\r\n  },\r\n  {\r\n    id: '1006',\r\n    code: 'bib36pfvm',\r\n    name: 'Chakra Bracelet',\r\n    description: 'Product Description',\r\n    image: 'chakra-bracelet.jpg',\r\n    price: 32,\r\n    category: 'Accessories',\r\n    quantity: 5,\r\n    inventoryStatus: 'LOWSTOCK',\r\n    rating: 3,\r\n  },\r\n  {\r\n    id: '1007',\r\n    code: 'mbvjkgip5',\r\n    name: 'Galaxy Earrings',\r\n    description: 'Product Description',\r\n    image: 'galaxy-earrings.jpg',\r\n    price: 34,\r\n    category: 'Accessories',\r\n    quantity: 23,\r\n    inventoryStatus: 'INSTOCK',\r\n    rating: 5,\r\n  },\r\n  {\r\n    id: '1008',\r\n    code: 'vbb124btr',\r\n    name: 'Game Controller',\r\n    description: 'Product Description',\r\n    image: 'game-controller.jpg',\r\n    price: 99,\r\n    category: 'Electronics',\r\n    quantity: 2,\r\n    inventoryStatus: 'LOWSTOCK',\r\n    rating: 4,\r\n  },\r\n  {\r\n    id: '1009',\r\n    code: 'cm230f032',\r\n    name: 'Gaming Set',\r\n    description: 'Product Description',\r\n    image: 'gaming-set.jpg',\r\n    price: 299,\r\n    category: 'Electronics',\r\n    quantity: 63,\r\n    inventoryStatus: 'INSTOCK',\r\n    rating: 3,\r\n  },\r\n];\r\n\r\ninterface Customer {\r\n  id: number;\r\n  name: string;\r\n  country: { code: string; name: string };\r\n  company: string;\r\n  date: Date;\r\n  status: string;\r\n  verified: boolean;\r\n  activity: number;\r\n  representative: { image: string; name: string };\r\n  balance: number;\r\n}\r\n\r\nexport const Customers: Customer[] = [\r\n  {\r\n    id: 1000,\r\n    name: 'James Butt',\r\n    country: {\r\n      name: 'Algeria',\r\n      code: 'dz',\r\n    },\r\n    company: 'Benton, John B Jr',\r\n    date: new Date('2015-09-13'),\r\n    status: 'unqualified',\r\n    verified: true,\r\n    activity: 17,\r\n    representative: {\r\n      name: 'Ioni Bowcher',\r\n      image: 'ionibowcher.png',\r\n    },\r\n    balance: 70663,\r\n  },\r\n  {\r\n    id: 1001,\r\n    name: 'Josephine Darakjy',\r\n    country: {\r\n      name: 'Egypt',\r\n      code: 'eg',\r\n    },\r\n    company: 'Chanay, Jeffrey A Esq',\r\n    date: new Date('2019-02-09'),\r\n    status: 'proposal',\r\n    verified: true,\r\n    activity: 0,\r\n    representative: {\r\n      name: 'Amy Elsner',\r\n      image: 'amyelsner.png',\r\n    },\r\n    balance: 82429,\r\n  },\r\n  {\r\n    id: 1002,\r\n    name: 'Art Venere',\r\n    country: {\r\n      name: 'Panama',\r\n      code: 'pa',\r\n    },\r\n    company: 'Chemel, James L Cpa',\r\n    date: new Date('2017-05-13'),\r\n    status: 'qualified',\r\n    verified: false,\r\n    activity: 63,\r\n    representative: {\r\n      name: 'Asiya Javayant',\r\n      image: 'asiyajavayant.png',\r\n    },\r\n    balance: 28334,\r\n  },\r\n  {\r\n    id: 1003,\r\n    name: 'Lenna Paprocki',\r\n    country: {\r\n      name: 'Slovenia',\r\n      code: 'si',\r\n    },\r\n    company: 'Feltz Printing Service',\r\n    date: new Date('2020-09-15'),\r\n    status: 'new',\r\n    verified: false,\r\n    activity: 37,\r\n    representative: {\r\n      name: 'Xuxue Feng',\r\n      image: 'xuxuefeng.png',\r\n    },\r\n    balance: 88521,\r\n  },\r\n  {\r\n    id: 1004,\r\n    name: 'Donette Foller',\r\n    country: {\r\n      name: 'South Africa',\r\n      code: 'za',\r\n    },\r\n    company: 'Printing Dimensions',\r\n    date: new Date('2016-05-20'),\r\n    status: 'proposal',\r\n    verified: true,\r\n    activity: 33,\r\n    representative: {\r\n      name: 'Asiya Javayant',\r\n      image: 'asiyajavayant.png',\r\n    },\r\n    balance: 93905,\r\n  },\r\n  {\r\n    id: 1005,\r\n    name: 'Simona Morasca',\r\n    country: {\r\n      name: 'Egypt',\r\n      code: 'eg',\r\n    },\r\n    company: 'Chapman, Ross E Esq',\r\n    date: new Date('2018-02-16'),\r\n    status: 'qualified',\r\n    verified: false,\r\n    activity: 68,\r\n    representative: {\r\n      name: 'Ivan Magalhaes',\r\n      image: 'ivanmagalhaes.png',\r\n    },\r\n    balance: 50041,\r\n  },\r\n  {\r\n    id: 1006,\r\n    name: 'Mitsue Tollner',\r\n    country: {\r\n      name: 'Paraguay',\r\n      code: 'py',\r\n    },\r\n    company: 'Morlong Associates',\r\n    date: new Date('2018-02-19'),\r\n    status: 'renewal',\r\n    verified: true,\r\n    activity: 54,\r\n    representative: {\r\n      name: 'Ivan Magalhaes',\r\n      image: 'ivanmagalhaes.png',\r\n    },\r\n    balance: 58706,\r\n  },\r\n  {\r\n    id: 1007,\r\n    name: 'Leota Dilliard',\r\n    country: {\r\n      name: 'Serbia',\r\n      code: 'rs',\r\n    },\r\n    company: 'Commercial Press',\r\n    date: new Date('2019-08-13'),\r\n    status: 'renewal',\r\n    verified: true,\r\n    activity: 69,\r\n    representative: {\r\n      name: 'Onyama Limba',\r\n      image: 'onyamalimba.png',\r\n    },\r\n    balance: 26640,\r\n  },\r\n  {\r\n    id: 1008,\r\n    name: 'Sage Wieser',\r\n    country: {\r\n      name: 'Egypt',\r\n      code: 'eg',\r\n    },\r\n    company: 'Truhlar And Truhlar Attys',\r\n    date: new Date('2018-11-21'),\r\n    status: 'unqualified',\r\n    verified: true,\r\n    activity: 76,\r\n    representative: {\r\n      name: 'Ivan Magalhaes',\r\n      image: 'ivanmagalhaes.png',\r\n    },\r\n    balance: 65369,\r\n  },\r\n  {\r\n    id: 1009,\r\n    name: 'Kris Marrier',\r\n    country: {\r\n      name: 'Mexico',\r\n      code: 'mx',\r\n    },\r\n    company: 'King, Christopher A Esq',\r\n    date: new Date('2015-07-07'),\r\n    status: 'proposal',\r\n    verified: false,\r\n    activity: 3,\r\n    representative: {\r\n      name: 'Onyama Limba',\r\n      image: 'onyamalimba.png',\r\n    },\r\n    balance: 63451,\r\n  },\r\n  {\r\n    id: 1010,\r\n    name: 'Minna Amigon',\r\n    country: {\r\n      name: 'Romania',\r\n      code: 'ro',\r\n    },\r\n    company: 'Dorl, James J Esq',\r\n    date: new Date('2018-11-07'),\r\n    status: 'qualified',\r\n    verified: false,\r\n    activity: 38,\r\n    representative: {\r\n      name: 'Anna Fali',\r\n      image: 'annafali.png',\r\n    },\r\n    balance: 71169,\r\n  },\r\n  {\r\n    id: 1011,\r\n    name: 'Abel Maclead',\r\n    country: {\r\n      name: 'Singapore',\r\n      code: 'sg',\r\n    },\r\n    company: 'Rangoni Of Florence',\r\n    date: new Date('2017-03-11'),\r\n    status: 'qualified',\r\n    verified: true,\r\n    activity: 87,\r\n    representative: {\r\n      name: 'Bernardo Dominic',\r\n      image: 'bernardodominic.png',\r\n    },\r\n    balance: 96842,\r\n  },\r\n  {\r\n    id: 1012,\r\n    name: 'Kiley Caldarera',\r\n    country: {\r\n      name: 'Serbia',\r\n      code: 'rs',\r\n    },\r\n    company: 'Feiner Bros',\r\n    date: new Date('2015-10-20'),\r\n    status: 'unqualified',\r\n    verified: false,\r\n    activity: 80,\r\n    representative: {\r\n      name: 'Onyama Limba',\r\n      image: 'onyamalimba.png',\r\n    },\r\n    balance: 92734,\r\n  },\r\n  {\r\n    id: 1013,\r\n    name: 'Graciela Ruta',\r\n    country: {\r\n      name: 'Chile',\r\n      code: 'cl',\r\n    },\r\n    company: 'Buckley Miller & Wright',\r\n    date: new Date('2016-07-25'),\r\n    status: 'negotiation',\r\n    verified: false,\r\n    activity: 59,\r\n    representative: {\r\n      name: 'Amy Elsner',\r\n      image: 'amyelsner.png',\r\n    },\r\n    balance: 45250,\r\n  },\r\n  {\r\n    id: 1014,\r\n    name: 'Cammy Albares',\r\n    country: {\r\n      name: 'Philippines',\r\n      code: 'ph',\r\n    },\r\n    company: 'Rousseaux, Michael Esq',\r\n    date: new Date('2019-06-25'),\r\n    status: 'new',\r\n    verified: true,\r\n    activity: 90,\r\n    representative: {\r\n      name: 'Asiya Javayant',\r\n      image: 'asiyajavayant.png',\r\n    },\r\n    balance: 30236,\r\n  },\r\n  {\r\n    id: 1015,\r\n    name: 'Mattie Poquette',\r\n    country: {\r\n      name: 'Venezuela',\r\n      code: 've',\r\n    },\r\n    company: 'Century Communications',\r\n    date: new Date('2017-12-12'),\r\n    status: 'negotiation',\r\n    verified: false,\r\n    activity: 52,\r\n    representative: {\r\n      name: 'Anna Fali',\r\n      image: 'annafali.png',\r\n    },\r\n    balance: 64533,\r\n  },\r\n  {\r\n    id: 1016,\r\n    name: 'Meaghan Garufi',\r\n    country: {\r\n      name: 'Malaysia',\r\n      code: 'my',\r\n    },\r\n    company: 'Bolton, Wilbur Esq',\r\n    date: new Date('2018-07-04'),\r\n    status: 'unqualified',\r\n    verified: false,\r\n    activity: 31,\r\n    representative: {\r\n      name: 'Ivan Magalhaes',\r\n      image: 'ivanmagalhaes.png',\r\n    },\r\n    balance: 37279,\r\n  },\r\n  {\r\n    id: 1017,\r\n    name: 'Gladys Rim',\r\n    country: {\r\n      name: 'Netherlands',\r\n      code: 'nl',\r\n    },\r\n    company: 'T M Byxbee Company Pc',\r\n    date: new Date('2020-02-27'),\r\n    status: 'renewal',\r\n    verified: true,\r\n    activity: 48,\r\n    representative: {\r\n      name: 'Stephen Shaw',\r\n      image: 'stephenshaw.png',\r\n    },\r\n    balance: 27381,\r\n  },\r\n  {\r\n    id: 1018,\r\n    name: 'Yuki Whobrey',\r\n    country: {\r\n      name: 'Israel',\r\n      code: 'il',\r\n    },\r\n    company: 'Farmers Insurance Group',\r\n    date: new Date('2017-12-21'),\r\n    status: 'negotiation',\r\n    verified: true,\r\n    activity: 16,\r\n    representative: {\r\n      name: 'Bernardo Dominic',\r\n      image: 'bernardodominic.png',\r\n    },\r\n    balance: 9257,\r\n  },\r\n  {\r\n    id: 1019,\r\n    name: 'Fletcher Flosi',\r\n    country: {\r\n      name: 'Argentina',\r\n      code: 'ar',\r\n    },\r\n    company: 'Post Box Services Plus',\r\n    date: new Date('2016-01-04'),\r\n    status: 'renewal',\r\n    verified: true,\r\n    activity: 19,\r\n    representative: {\r\n      name: 'Xuxue Feng',\r\n      image: 'xuxuefeng.png',\r\n    },\r\n    balance: 67783,\r\n  },\r\n  {\r\n    id: 1020,\r\n    name: 'Bette Nicka',\r\n    country: {\r\n      name: 'Paraguay',\r\n      code: 'py',\r\n    },\r\n    company: 'Sport En Art',\r\n    date: new Date('2016-10-21'),\r\n    status: 'renewal',\r\n    verified: false,\r\n    activity: 100,\r\n    representative: {\r\n      name: 'Onyama Limba',\r\n      image: 'onyamalimba.png',\r\n    },\r\n    balance: 4609,\r\n  },\r\n  {\r\n    id: 1021,\r\n    name: 'Veronika Inouye',\r\n    country: {\r\n      name: 'Ecuador',\r\n      code: 'ec',\r\n    },\r\n    company: 'C 4 Network Inc',\r\n    date: new Date('2017-03-24'),\r\n    status: 'renewal',\r\n    verified: false,\r\n    activity: 72,\r\n    representative: {\r\n      name: 'Ioni Bowcher',\r\n      image: 'ionibowcher.png',\r\n    },\r\n    balance: 26565,\r\n  },\r\n  {\r\n    id: 1022,\r\n    name: 'Willard Kolmetz',\r\n    country: {\r\n      name: 'Tunisia',\r\n      code: 'tn',\r\n    },\r\n    company: 'Ingalls, Donald R Esq',\r\n    date: new Date('2017-04-15'),\r\n    status: 'renewal',\r\n    verified: true,\r\n    activity: 94,\r\n    representative: {\r\n      name: 'Asiya Javayant',\r\n      image: 'asiyajavayant.png',\r\n    },\r\n    balance: 75876,\r\n  },\r\n  {\r\n    id: 1023,\r\n    name: 'Maryann Royster',\r\n    country: {\r\n      name: 'Belarus',\r\n      code: 'by',\r\n    },\r\n    company: 'Franklin, Peter L Esq',\r\n    date: new Date('2017-03-11'),\r\n    status: 'qualified',\r\n    verified: false,\r\n    activity: 56,\r\n    representative: {\r\n      name: 'Elwin Sharvill',\r\n      image: 'elwinsharvill.png',\r\n    },\r\n    balance: 41121,\r\n  },\r\n  {\r\n    id: 1024,\r\n    name: 'Alisha Slusarski',\r\n    country: {\r\n      name: 'Iceland',\r\n      code: 'is',\r\n    },\r\n    company: 'Wtlz Power 107 Fm',\r\n    date: new Date('2018-03-27'),\r\n    status: 'qualified',\r\n    verified: true,\r\n    activity: 7,\r\n    representative: {\r\n      name: 'Stephen Shaw',\r\n      image: 'stephenshaw.png',\r\n    },\r\n    balance: 91691,\r\n  },\r\n  {\r\n    id: 1025,\r\n    name: 'Allene Iturbide',\r\n    country: {\r\n      name: 'Italy',\r\n      code: 'it',\r\n    },\r\n    company: 'Ledecky, David Esq',\r\n    date: new Date('2016-02-20'),\r\n    status: 'qualified',\r\n    verified: true,\r\n    activity: 1,\r\n    representative: {\r\n      name: 'Ivan Magalhaes',\r\n      image: 'ivanmagalhaes.png',\r\n    },\r\n    balance: 40137,\r\n  },\r\n  {\r\n    id: 1026,\r\n    name: 'Chanel Caudy',\r\n    country: {\r\n      name: 'Argentina',\r\n      code: 'ar',\r\n    },\r\n    company: 'Professional Image Inc',\r\n    date: new Date('2018-06-24'),\r\n    status: 'new',\r\n    verified: true,\r\n    activity: 26,\r\n    representative: {\r\n      name: 'Ioni Bowcher',\r\n      image: 'ionibowcher.png',\r\n    },\r\n    balance: 21304,\r\n  },\r\n  {\r\n    id: 1027,\r\n    name: 'Ezekiel Chui',\r\n    country: {\r\n      name: 'Ireland',\r\n      code: 'ie',\r\n    },\r\n    company: 'Sider, Donald C Esq',\r\n    date: new Date('2016-09-24'),\r\n    status: 'new',\r\n    verified: false,\r\n    activity: 76,\r\n    representative: {\r\n      name: 'Amy Elsner',\r\n      image: 'amyelsner.png',\r\n    },\r\n    balance: 60454,\r\n  },\r\n  {\r\n    id: 1028,\r\n    name: 'Willow Kusko',\r\n    country: {\r\n      name: 'Romania',\r\n      code: 'ro',\r\n    },\r\n    company: 'U Pull It',\r\n    date: new Date('2020-04-11'),\r\n    status: 'qualified',\r\n    verified: true,\r\n    activity: 7,\r\n    representative: {\r\n      name: 'Onyama Limba',\r\n      image: 'onyamalimba.png',\r\n    },\r\n    balance: 17565,\r\n  },\r\n  {\r\n    id: 1029,\r\n    name: 'Bernardo Figeroa',\r\n    country: {\r\n      name: 'Israel',\r\n      code: 'il',\r\n    },\r\n    company: 'Clark, Richard Cpa',\r\n    date: new Date('2018-11-04'),\r\n    status: 'renewal',\r\n    verified: true,\r\n    activity: 81,\r\n    representative: {\r\n      name: 'Ioni Bowcher',\r\n      image: 'ionibowcher.png',\r\n    },\r\n    balance: 17774,\r\n  },\r\n  {\r\n    id: 1030,\r\n    name: 'Ammie Corrio',\r\n    country: {\r\n      name: 'Hungary',\r\n      code: 'hu',\r\n    },\r\n    company: 'Moskowitz, Barry S',\r\n    date: new Date('2016-06-11'),\r\n    status: 'negotiation',\r\n    verified: true,\r\n    activity: 56,\r\n    representative: {\r\n      name: 'Asiya Javayant',\r\n      image: 'asiyajavayant.png',\r\n    },\r\n    balance: 49201,\r\n  },\r\n  {\r\n    id: 1031,\r\n    name: 'Francine Vocelka',\r\n    country: {\r\n      name: 'Honduras',\r\n      code: 'hn',\r\n    },\r\n    company: 'Cascade Realty Advisors Inc',\r\n    date: new Date('2017-08-02'),\r\n    status: 'qualified',\r\n    verified: true,\r\n    activity: 94,\r\n    representative: {\r\n      name: 'Ioni Bowcher',\r\n      image: 'ionibowcher.png',\r\n    },\r\n    balance: 67126,\r\n  },\r\n  {\r\n    id: 1032,\r\n    name: 'Ernie Stenseth',\r\n    country: {\r\n      name: 'Australia',\r\n      code: 'au',\r\n    },\r\n    company: 'Knwz Newsradio',\r\n    date: new Date('2018-06-06'),\r\n    status: 'renewal',\r\n    verified: true,\r\n    activity: 68,\r\n    representative: {\r\n      name: 'Xuxue Feng',\r\n      image: 'xuxuefeng.png',\r\n    },\r\n    balance: 76017,\r\n  },\r\n  {\r\n    id: 1033,\r\n    name: 'Albina Glick',\r\n    country: {\r\n      name: 'Ukraine',\r\n      code: 'ua',\r\n    },\r\n    company: 'Giampetro, Anthony D',\r\n    date: new Date('2019-08-08'),\r\n    status: 'proposal',\r\n    verified: true,\r\n    activity: 85,\r\n    representative: {\r\n      name: 'Bernardo Dominic',\r\n      image: 'bernardodominic.png',\r\n    },\r\n    balance: 91201,\r\n  },\r\n  {\r\n    id: 1034,\r\n    name: 'Alishia Sergi',\r\n    country: {\r\n      name: 'Qatar',\r\n      code: 'qa',\r\n    },\r\n    company: 'Milford Enterprises Inc',\r\n    date: new Date('2018-05-19'),\r\n    status: 'negotiation',\r\n    verified: false,\r\n    activity: 46,\r\n    representative: {\r\n      name: 'Ivan Magalhaes',\r\n      image: 'ivanmagalhaes.png',\r\n    },\r\n    balance: 12237,\r\n  },\r\n  {\r\n    id: 1035,\r\n    name: 'Solange Shinko',\r\n    country: {\r\n      name: 'Cameroon',\r\n      code: 'cm',\r\n    },\r\n    company: 'Mosocco, Ronald A',\r\n    date: new Date('2015-02-12'),\r\n    status: 'qualified',\r\n    verified: true,\r\n    activity: 32,\r\n    representative: {\r\n      name: 'Onyama Limba',\r\n      image: 'onyamalimba.png',\r\n    },\r\n    balance: 34072,\r\n  },\r\n  {\r\n    id: 1036,\r\n    name: 'Jose Stockham',\r\n    country: {\r\n      name: 'Italy',\r\n      code: 'it',\r\n    },\r\n    company: 'Tri State Refueler Co',\r\n    date: new Date('2018-04-25'),\r\n    status: 'qualified',\r\n    verified: true,\r\n    activity: 77,\r\n    representative: {\r\n      name: 'Amy Elsner',\r\n      image: 'amyelsner.png',\r\n    },\r\n    balance: 94909,\r\n  },\r\n  {\r\n    id: 1037,\r\n    name: 'Rozella Ostrosky',\r\n    country: {\r\n      name: 'Venezuela',\r\n      code: 've',\r\n    },\r\n    company: 'Parkway Company',\r\n    date: new Date('2016-02-27'),\r\n    status: 'unqualified',\r\n    verified: true,\r\n    activity: 66,\r\n    representative: {\r\n      name: 'Amy Elsner',\r\n      image: 'amyelsner.png',\r\n    },\r\n    balance: 57245,\r\n  },\r\n  {\r\n    id: 1038,\r\n    name: 'Valentine Gillian',\r\n    country: {\r\n      name: 'Paraguay',\r\n      code: 'py',\r\n    },\r\n    company: 'Fbs Business Finance',\r\n    date: new Date('2019-09-17'),\r\n    status: 'qualified',\r\n    verified: true,\r\n    activity: 25,\r\n    representative: {\r\n      name: 'Bernardo Dominic',\r\n      image: 'bernardodominic.png',\r\n    },\r\n    balance: 75502,\r\n  },\r\n  {\r\n    id: 1039,\r\n    name: 'Kati Rulapaugh',\r\n    country: {\r\n      name: 'Puerto Rico',\r\n      code: 'pr',\r\n    },\r\n    company: 'Eder Assocs Consltng Engrs Pc',\r\n    date: new Date('2016-12-03'),\r\n    status: 'renewal',\r\n    verified: false,\r\n    activity: 51,\r\n    representative: {\r\n      name: 'Ioni Bowcher',\r\n      image: 'ionibowcher.png',\r\n    },\r\n    balance: 82075,\r\n  },\r\n  {\r\n    id: 1040,\r\n    name: 'Youlanda Schemmer',\r\n    country: {\r\n      name: 'Bolivia',\r\n      code: 'bo',\r\n    },\r\n    company: 'Tri M Tool Inc',\r\n    date: new Date('2017-12-15'),\r\n    status: 'negotiation',\r\n    verified: true,\r\n    activity: 49,\r\n    representative: {\r\n      name: 'Xuxue Feng',\r\n      image: 'xuxuefeng.png',\r\n    },\r\n    balance: 19208,\r\n  },\r\n  {\r\n    id: 1041,\r\n    name: 'Dyan Oldroyd',\r\n    country: {\r\n      name: 'Argentina',\r\n      code: 'ar',\r\n    },\r\n    company: 'International Eyelets Inc',\r\n    date: new Date('2017-02-02'),\r\n    status: 'qualified',\r\n    verified: false,\r\n    activity: 5,\r\n    representative: {\r\n      name: 'Amy Elsner',\r\n      image: 'amyelsner.png',\r\n    },\r\n    balance: 50194,\r\n  },\r\n  {\r\n    id: 1042,\r\n    name: 'Roxane Campain',\r\n    country: {\r\n      name: 'France',\r\n      code: 'fr',\r\n    },\r\n    company: 'Rapid Trading Intl',\r\n    date: new Date('2018-12-25'),\r\n    status: 'unqualified',\r\n    verified: false,\r\n    activity: 100,\r\n    representative: {\r\n      name: 'Anna Fali',\r\n      image: 'annafali.png',\r\n    },\r\n    balance: 77714,\r\n  },\r\n  {\r\n    id: 1043,\r\n    name: 'Lavera Perin',\r\n    country: {\r\n      name: 'Vietnam',\r\n      code: 'vn',\r\n    },\r\n    company: 'Abc Enterprises Inc',\r\n    date: new Date('2018-04-10'),\r\n    status: 'qualified',\r\n    verified: false,\r\n    activity: 71,\r\n    representative: {\r\n      name: 'Stephen Shaw',\r\n      image: 'stephenshaw.png',\r\n    },\r\n    balance: 35740,\r\n  },\r\n  {\r\n    id: 1044,\r\n    name: 'Erick Ferencz',\r\n    country: {\r\n      name: 'Belgium',\r\n      code: 'be',\r\n    },\r\n    company: 'Cindy Turner Associates',\r\n    date: new Date('2018-05-06'),\r\n    status: 'unqualified',\r\n    verified: true,\r\n    activity: 54,\r\n    representative: {\r\n      name: 'Amy Elsner',\r\n      image: 'amyelsner.png',\r\n    },\r\n    balance: 30790,\r\n  },\r\n  {\r\n    id: 1045,\r\n    name: 'Fatima Saylors',\r\n    country: {\r\n      name: 'Canada',\r\n      code: 'ca',\r\n    },\r\n    company: 'Stanton, James D Esq',\r\n    date: new Date('2019-07-10'),\r\n    status: 'renewal',\r\n    verified: true,\r\n    activity: 93,\r\n    representative: {\r\n      name: 'Onyama Limba',\r\n      image: 'onyamalimba.png',\r\n    },\r\n    balance: 52343,\r\n  },\r\n  {\r\n    id: 1046,\r\n    name: 'Jina Briddick',\r\n    country: {\r\n      name: 'Mexico',\r\n      code: 'mx',\r\n    },\r\n    company: 'Grace Pastries Inc',\r\n    date: new Date('2018-02-19'),\r\n    status: 'unqualified',\r\n    verified: false,\r\n    activity: 97,\r\n    representative: {\r\n      name: 'Xuxue Feng',\r\n      image: 'xuxuefeng.png',\r\n    },\r\n    balance: 53966,\r\n  },\r\n  {\r\n    id: 1047,\r\n    name: 'Kanisha Waycott',\r\n    country: {\r\n      name: 'Ecuador',\r\n      code: 'ec',\r\n    },\r\n    company: 'Schroer, Gene E Esq',\r\n    date: new Date('2019-11-27'),\r\n    status: 'new',\r\n    verified: false,\r\n    activity: 80,\r\n    representative: {\r\n      name: 'Xuxue Feng',\r\n      image: 'xuxuefeng.png',\r\n    },\r\n    balance: 9920,\r\n  },\r\n  {\r\n    id: 1048,\r\n    name: 'Emerson Bowley',\r\n    country: {\r\n      name: 'Finland',\r\n      code: 'fi',\r\n    },\r\n    company: 'Knights Inn',\r\n    date: new Date('2018-11-24'),\r\n    status: 'new',\r\n    verified: false,\r\n    activity: 63,\r\n    representative: {\r\n      name: 'Stephen Shaw',\r\n      image: 'stephenshaw.png',\r\n    },\r\n    balance: 78069,\r\n  },\r\n  {\r\n    id: 1049,\r\n    name: 'Blair Malet',\r\n    country: {\r\n      name: 'Finland',\r\n      code: 'fi',\r\n    },\r\n    company: 'Bollinger Mach Shp & Shipyard',\r\n    date: new Date('2018-04-19'),\r\n    status: 'new',\r\n    verified: true,\r\n    activity: 92,\r\n    representative: {\r\n      name: 'Asiya Javayant',\r\n      image: 'asiyajavayant.png',\r\n    },\r\n    balance: 65005,\r\n  },\r\n];\r\n\r\ninterface Sale {\r\n  product: string;\r\n  lastYearSale: number;\r\n  thisYearSale: number;\r\n  lastYearProfit: number;\r\n  thisYearProfit: number;\r\n}\r\n\r\nexport const Sales: Sale[] = [\r\n  {\r\n    product: 'Bamboo Watch',\r\n    lastYearSale: 51,\r\n    thisYearSale: 40,\r\n    lastYearProfit: 54406,\r\n    thisYearProfit: 43342,\r\n  },\r\n  {\r\n    product: 'Black Watch',\r\n    lastYearSale: 83,\r\n    thisYearSale: 9,\r\n    lastYearProfit: 423132,\r\n    thisYearProfit: 312122,\r\n  },\r\n  { product: 'Blue Band', lastYearSale: 38, thisYearSale: 5, lastYearProfit: 12321, thisYearProfit: 8500 },\r\n  {\r\n    product: 'Blue T-Shirt',\r\n    lastYearSale: 49,\r\n    thisYearSale: 22,\r\n    lastYearProfit: 745232,\r\n    thisYearProfit: 65323,\r\n  },\r\n  {\r\n    product: 'Brown Purse',\r\n    lastYearSale: 17,\r\n    thisYearSale: 79,\r\n    lastYearProfit: 643242,\r\n    thisYearProfit: 500332,\r\n  },\r\n  {\r\n    product: 'Chakra Bracelet',\r\n    lastYearSale: 52,\r\n    thisYearSale: 65,\r\n    lastYearProfit: 421132,\r\n    thisYearProfit: 150005,\r\n  },\r\n  {\r\n    product: 'Galaxy Earrings',\r\n    lastYearSale: 82,\r\n    thisYearSale: 12,\r\n    lastYearProfit: 131211,\r\n    thisYearProfit: 100214,\r\n  },\r\n  {\r\n    product: 'Game Controller',\r\n    lastYearSale: 44,\r\n    thisYearSale: 45,\r\n    lastYearProfit: 66442,\r\n    thisYearProfit: 53322,\r\n  },\r\n  {\r\n    product: 'Gaming Set',\r\n    lastYearSale: 90,\r\n    thisYearSale: 56,\r\n    lastYearProfit: 765442,\r\n    thisYearProfit: 296232,\r\n  },\r\n  {\r\n    product: 'Gold Phone Case',\r\n    lastYearSale: 75,\r\n    thisYearSale: 54,\r\n    lastYearProfit: 21212,\r\n    thisYearProfit: 12533,\r\n  },\r\n];\r\n\r\nexport interface Product {\r\n  id: string;\r\n  code: string;\r\n  name: string;\r\n  description: string;\r\n  image: string;\r\n  price: number;\r\n  category: string;\r\n  quantity: number;\r\n  inventoryStatus: string;\r\n  rating: number;\r\n}\r\n\r\nconst ProductsSmall: Product[] = [\r\n  {\r\n    id: '1000',\r\n    code: 'f230fh0g3',\r\n    name: 'Bamboo Watch',\r\n    description: 'Product Description',\r\n    image: 'bamboo-watch.jpg',\r\n    price: 65,\r\n    category: 'Accessories',\r\n    quantity: 24,\r\n    inventoryStatus: 'INSTOCK',\r\n    rating: 5,\r\n  },\r\n  {\r\n    id: '1001',\r\n    code: 'nvklal433',\r\n    name: 'Black Watch',\r\n    description: 'Product Description',\r\n    image: 'black-watch.jpg',\r\n    price: 72,\r\n    category: 'Accessories',\r\n    quantity: 61,\r\n    inventoryStatus: 'INSTOCK',\r\n    rating: 4,\r\n  },\r\n  {\r\n    id: '1002',\r\n    code: 'zz21cz3c1',\r\n    name: 'Blue Band',\r\n    description: 'Product Description',\r\n    image: 'blue-band.jpg',\r\n    price: 79,\r\n    category: 'Fitness',\r\n    quantity: 2,\r\n    inventoryStatus: 'LOWSTOCK',\r\n    rating: 3,\r\n  },\r\n  {\r\n    id: '1003',\r\n    code: '244wgerg2',\r\n    name: 'Blue T-Shirt',\r\n    description: 'Product Description',\r\n    image: 'blue-t-shirt.jpg',\r\n    price: 29,\r\n    category: 'Clothing',\r\n    quantity: 25,\r\n    inventoryStatus: 'INSTOCK',\r\n    rating: 5,\r\n  },\r\n  {\r\n    id: '1004',\r\n    code: 'h456wer53',\r\n    name: 'Bracelet',\r\n    description: 'Product Description',\r\n    image: 'bracelet.jpg',\r\n    price: 15,\r\n    category: 'Accessories',\r\n    quantity: 73,\r\n    inventoryStatus: 'INSTOCK',\r\n    rating: 4,\r\n  },\r\n  {\r\n    id: '1005',\r\n    code: 'av2231fwg',\r\n    name: 'Brown Purse',\r\n    description: 'Product Description',\r\n    image: 'brown-purse.jpg',\r\n    price: 120,\r\n    category: 'Accessories',\r\n    quantity: 0,\r\n    inventoryStatus: 'OUTOFSTOCK',\r\n    rating: 4,\r\n  },\r\n  {\r\n    id: '1006',\r\n    code: 'bib36pfvm',\r\n    name: 'Chakra Bracelet',\r\n    description: 'Product Description',\r\n    image: 'chakra-bracelet.jpg',\r\n    price: 32,\r\n    category: 'Accessories',\r\n    quantity: 5,\r\n    inventoryStatus: 'LOWSTOCK',\r\n    rating: 3,\r\n  },\r\n  {\r\n    id: '1007',\r\n    code: 'mbvjkgip5',\r\n    name: 'Galaxy Earrings',\r\n    description: 'Product Description',\r\n    image: 'galaxy-earrings.jpg',\r\n    price: 34,\r\n    category: 'Accessories',\r\n    quantity: 23,\r\n    inventoryStatus: 'INSTOCK',\r\n    rating: 5,\r\n  },\r\n  {\r\n    id: '1008',\r\n    code: 'vbb124btr',\r\n    name: 'Game Controller',\r\n    description: 'Product Description',\r\n    image: 'game-controller.jpg',\r\n    price: 99,\r\n    category: 'Electronics',\r\n    quantity: 2,\r\n    inventoryStatus: 'LOWSTOCK',\r\n    rating: 4,\r\n  },\r\n  {\r\n    id: '1009',\r\n    code: 'cm230f032',\r\n    name: 'Gaming Set',\r\n    description: 'Product Description',\r\n    image: 'gaming-set.jpg',\r\n    price: 299,\r\n    category: 'Electronics',\r\n    quantity: 63,\r\n    inventoryStatus: 'INSTOCK',\r\n    rating: 3,\r\n  },\r\n];\r\n\r\ninterface ProductOrder {\r\n  id: string;\r\n  code: string;\r\n  name: string;\r\n  description: string;\r\n  image: string;\r\n  price: number;\r\n  category: string;\r\n  quantity: number;\r\n  inventoryStatus: string;\r\n  rating: number;\r\n  orders: Order[];\r\n}\r\n\r\ninterface Order {\r\n  id: string;\r\n  productCode: string;\r\n  date: string;\r\n  amount: number;\r\n  quantity: number;\r\n  customer: string;\r\n  status: string;\r\n}\r\n\r\nconst ProductsOrdersSmall: ProductOrder[] = [\r\n  {\r\n    id: '1000',\r\n    code: 'f230fh0g3',\r\n    name: 'Bamboo Watch',\r\n    description: 'Product Description',\r\n    image: 'bamboo-watch.jpg',\r\n    price: 65,\r\n    category: 'Accessories',\r\n    quantity: 24,\r\n    inventoryStatus: 'INSTOCK',\r\n    rating: 5,\r\n    orders: [\r\n      {\r\n        id: '1000',\r\n        productCode: 'f230fh0g3',\r\n        date: '13.08.2020',\r\n        amount: 65,\r\n        quantity: 1,\r\n        customer: 'David James',\r\n        status: 'PENDING',\r\n      },\r\n      {\r\n        id: '1001',\r\n        productCode: 'f230fh0g3',\r\n        date: '14.05.2020',\r\n        amount: 130,\r\n        quantity: 2,\r\n        customer: 'Leon Rodrigues',\r\n        status: 'DELIVERED',\r\n      },\r\n      {\r\n        id: '1002',\r\n        productCode: 'f230fh0g3',\r\n        date: '04.01.2019',\r\n        amount: 65,\r\n        quantity: 1,\r\n        customer: 'Juan Alejandro',\r\n        status: 'RETURNED',\r\n      },\r\n      {\r\n        id: '1003',\r\n        productCode: 'f230fh0g3',\r\n        date: '13.09.2020',\r\n        amount: 195,\r\n        quantity: 3,\r\n        customer: 'Claire Morrow',\r\n        status: 'CANCELLED',\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    id: '1001',\r\n    code: 'nvklal433',\r\n    name: 'Black Watch',\r\n    description: 'Product Description',\r\n    image: 'black-watch.jpg',\r\n    price: 72,\r\n    category: 'Accessories',\r\n    quantity: 61,\r\n    inventoryStatus: 'INSTOCK',\r\n    rating: 4,\r\n    orders: [\r\n      {\r\n        id: '2000',\r\n        productCode: 'nvklal433',\r\n        date: '14.05.2020',\r\n        amount: 72,\r\n        quantity: 1,\r\n        customer: 'Maisha Jefferson',\r\n        status: 'DELIVERED',\r\n      },\r\n      {\r\n        id: '2001',\r\n        productCode: 'nvklal433',\r\n        date: '28.02.2020',\r\n        amount: 144,\r\n        quantity: 2,\r\n        customer: 'Octavia Murillo',\r\n        status: 'PENDING',\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    id: '1002',\r\n    code: 'zz21cz3c1',\r\n    name: 'Blue Band',\r\n    description: 'Product Description',\r\n    image: 'blue-band.jpg',\r\n    price: 79,\r\n    category: 'Fitness',\r\n    quantity: 2,\r\n    inventoryStatus: 'LOWSTOCK',\r\n    rating: 3,\r\n    orders: [\r\n      {\r\n        id: '3000',\r\n        productCode: 'zz21cz3c1',\r\n        date: '05.07.2020',\r\n        amount: 79,\r\n        quantity: 1,\r\n        customer: 'Stacey Leja',\r\n        status: 'DELIVERED',\r\n      },\r\n      {\r\n        id: '3001',\r\n        productCode: 'zz21cz3c1',\r\n        date: '06.02.2020',\r\n        amount: 79,\r\n        quantity: 1,\r\n        customer: 'Ashley Wickens',\r\n        status: 'DELIVERED',\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    id: '1003',\r\n    code: '244wgerg2',\r\n    name: 'Blue T-Shirt',\r\n    description: 'Product Description',\r\n    image: 'blue-t-shirt.jpg',\r\n    price: 29,\r\n    category: 'Clothing',\r\n    quantity: 25,\r\n    inventoryStatus: 'INSTOCK',\r\n    rating: 5,\r\n    orders: [],\r\n  },\r\n  {\r\n    id: '1004',\r\n    code: 'h456wer53',\r\n    name: 'Bracelet',\r\n    description: 'Product Description',\r\n    image: 'bracelet.jpg',\r\n    price: 15,\r\n    category: 'Accessories',\r\n    quantity: 73,\r\n    inventoryStatus: 'INSTOCK',\r\n    rating: 4,\r\n    orders: [\r\n      {\r\n        id: '5000',\r\n        productCode: 'h456wer53',\r\n        date: '05.09.2020',\r\n        amount: 60,\r\n        quantity: 4,\r\n        customer: 'Mayumi Misaki',\r\n        status: 'PENDING',\r\n      },\r\n      {\r\n        id: '5001',\r\n        productCode: 'h456wer53',\r\n        date: '16.04.2019',\r\n        amount: 2,\r\n        quantity: 30,\r\n        customer: 'Francesco Salvatore',\r\n        status: 'DELIVERED',\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    id: '1005',\r\n    code: 'av2231fwg',\r\n    name: 'Brown Purse',\r\n    description: 'Product Description',\r\n    image: 'brown-purse.jpg',\r\n    price: 120,\r\n    category: 'Accessories',\r\n    quantity: 0,\r\n    inventoryStatus: 'OUTOFSTOCK',\r\n    rating: 4,\r\n    orders: [\r\n      {\r\n        id: '6000',\r\n        productCode: 'av2231fwg',\r\n        date: '25.01.2020',\r\n        amount: 120,\r\n        quantity: 1,\r\n        customer: 'Isabel Sinclair',\r\n        status: 'RETURNED',\r\n      },\r\n      {\r\n        id: '6001',\r\n        productCode: 'av2231fwg',\r\n        date: '12.03.2019',\r\n        amount: 240,\r\n        quantity: 2,\r\n        customer: 'Lionel Clifford',\r\n        status: 'DELIVERED',\r\n      },\r\n      {\r\n        id: '6002',\r\n        productCode: 'av2231fwg',\r\n        date: '05.05.2019',\r\n        amount: 120,\r\n        quantity: 1,\r\n        customer: 'Cody Chavez',\r\n        status: 'DELIVERED',\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    id: '1006',\r\n    code: 'bib36pfvm',\r\n    name: 'Chakra Bracelet',\r\n    description: 'Product Description',\r\n    image: 'chakra-bracelet.jpg',\r\n    price: 32,\r\n    category: 'Accessories',\r\n    quantity: 5,\r\n    inventoryStatus: 'LOWSTOCK',\r\n    rating: 3,\r\n    orders: [\r\n      {\r\n        id: '7000',\r\n        productCode: 'bib36pfvm',\r\n        date: '24.02.2020',\r\n        amount: 32,\r\n        quantity: 1,\r\n        customer: 'Arvin Darci',\r\n        status: 'DELIVERED',\r\n      },\r\n      {\r\n        id: '7001',\r\n        productCode: 'bib36pfvm',\r\n        date: '14.01.2020',\r\n        amount: 64,\r\n        quantity: 2,\r\n        customer: 'Izzy Jones',\r\n        status: 'PENDING',\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    id: '1007',\r\n    code: 'mbvjkgip5',\r\n    name: 'Galaxy Earrings',\r\n    description: 'Product Description',\r\n    image: 'galaxy-earrings.jpg',\r\n    price: 34,\r\n    category: 'Accessories',\r\n    quantity: 23,\r\n    inventoryStatus: 'INSTOCK',\r\n    rating: 5,\r\n    orders: [\r\n      {\r\n        id: '8000',\r\n        productCode: 'mbvjkgip5',\r\n        date: '19.06.2020',\r\n        amount: 34,\r\n        quantity: 1,\r\n        customer: 'Jennifer Smith',\r\n        status: 'DELIVERED',\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    id: '1008',\r\n    code: 'vbb124btr',\r\n    name: 'Game Controller',\r\n    description: 'Product Description',\r\n    image: 'game-controller.jpg',\r\n    price: 99,\r\n    category: 'Electronics',\r\n    quantity: 2,\r\n    inventoryStatus: 'LOWSTOCK',\r\n    rating: 4,\r\n    orders: [\r\n      {\r\n        id: '9000',\r\n        productCode: 'vbb124btr',\r\n        date: '05.01.2020',\r\n        amount: 99,\r\n        quantity: 1,\r\n        customer: 'Jeanfrancois David',\r\n        status: 'DELIVERED',\r\n      },\r\n      {\r\n        id: '9001',\r\n        productCode: 'vbb124btr',\r\n        date: '19.01.2020',\r\n        amount: 198,\r\n        quantity: 2,\r\n        customer: 'Ivar Greenwood',\r\n        status: 'RETURNED',\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    id: '1009',\r\n    code: 'cm230f032',\r\n    name: 'Gaming Set',\r\n    description: 'Product Description',\r\n    image: 'gaming-set.jpg',\r\n    price: 299,\r\n    category: 'Electronics',\r\n    quantity: 63,\r\n    inventoryStatus: 'INSTOCK',\r\n    rating: 3,\r\n    orders: [\r\n      {\r\n        id: '10000',\r\n        productCode: 'cm230f032',\r\n        date: '24.06.2020',\r\n        amount: 299,\r\n        quantity: 1,\r\n        customer: 'Kadeem Mujtaba',\r\n        status: 'PENDING',\r\n      },\r\n      {\r\n        id: '10001',\r\n        productCode: 'cm230f032',\r\n        date: '11.05.2020',\r\n        amount: 299,\r\n        quantity: 1,\r\n        customer: 'Ashley Wickens',\r\n        status: 'DELIVERED',\r\n      },\r\n      {\r\n        id: '10002',\r\n        productCode: 'cm230f032',\r\n        date: '07.02.2019',\r\n        amount: 299,\r\n        quantity: 1,\r\n        customer: 'Julie Johnson',\r\n        status: 'DELIVERED',\r\n      },\r\n      {\r\n        id: '10003',\r\n        productCode: 'cm230f032',\r\n        date: '26.04.2020',\r\n        amount: 299,\r\n        quantity: 1,\r\n        customer: 'Tony Costa',\r\n        status: 'CANCELLED',\r\n      },\r\n    ],\r\n  },\r\n];\r\n\r\nfunction cloneArrayOfObjects<T>(array: T[]): T[] {\r\n  return array.map(item => ({ ...item }));\r\n}\r\n\r\nexport function getProducts(): Product[] {\r\n  return cloneArrayOfObjects(Products);\r\n}\r\n\r\nexport function getProductsSmall(): Product[] {\r\n  return cloneArrayOfObjects(ProductsSmall);\r\n}\r\n\r\nexport function getSalesSmall(): Sale[] {\r\n  return cloneArrayOfObjects(Sales);\r\n}\r\n\r\nexport function getCustomers(): Customer[] {\r\n  return cloneArrayOfObjects(Customers);\r\n}\r\n\r\nexport function getProductsOrdersSmall(): ProductOrder[] {\r\n  return cloneArrayOfObjects(ProductsOrdersSmall);\r\n}\r\n",
      "properties": [
        {
          "name": "category",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 1258
        },
        {
          "name": "code",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 1253
        },
        {
          "name": "description",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 1255
        },
        {
          "name": "id",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 1252
        },
        {
          "name": "image",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 1256
        },
        {
          "name": "inventoryStatus",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 1260
        },
        {
          "name": "name",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 1254
        },
        {
          "name": "orders",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Order[]",
          "optional": false,
          "description": "",
          "line": 1262
        },
        {
          "name": "price",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "number",
          "optional": false,
          "description": "",
          "line": 1257
        },
        {
          "name": "quantity",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "number",
          "optional": false,
          "description": "",
          "line": 1259
        },
        {
          "name": "rating",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "number",
          "optional": false,
          "description": "",
          "line": 1261
        }
      ],
      "indexSignatures": [],
      "kind": 164,
      "methods": []
    },
    {
      "name": "RelativeDateMenuItem",
      "id": "interface-RelativeDateMenuItem-9461f6ea84bcf063bef243f4d1d78b3c",
      "file": "libs/components/src/lib/datepicker/zyfra-relative-datepicker/relative-datepicker.models.ts",
      "deprecated": false,
      "deprecationMessage": "",
      "type": "interface",
      "sourceCode": "export interface RelativeDateModel {\r\n  time: RelativeDateTimeId;\r\n  direction: RelativeDateDirectionId;\r\n  number: string;\r\n  period: RelativeDatePeriodId;\r\n}\r\n\r\n// Menu\r\nexport interface RelativeDateMenuItem<T = unknown> {\r\n  id: T;\r\n  groupId: keyof RelativeDateMenuItems;\r\n  active?: boolean;\r\n  icon: string;\r\n  label: string;\r\n}\r\n\r\nexport type RelativeDateTimeId = typeof DefaultRelativeMenuItems.time[number]['id'];\r\nexport type RelativeDateDirectionId = typeof DefaultRelativeMenuItems.direction[number]['id'];\r\nexport type RelativeDatePeriodId = typeof DefaultRelativeMenuItems.period[number]['id'];\r\n\r\nexport function getDefaultRelativeDateMenuItems(): RelativeDateMenuItems {\r\n  return DefaultRelativeMenuItems as any;\r\n}\r\n\r\nexport type IdByGroup<TProp extends keyof RelativeDateMenuItems> = RelativeDateMenuItems[TProp][number]['id'];\r\n\r\nexport interface RelativeDateMenuItems {\r\n  time: RelativeDateMenuItem<RelativeDateTimeId>[];\r\n  direction: RelativeDateMenuItem<RelativeDateDirectionId>[];\r\n  period: RelativeDateMenuItem<RelativeDatePeriodId>[];\r\n}\r\n\r\nconst DefaultRelativeMenuItems = {\r\n  time: [\r\n    {\r\n      id: 'current',\r\n      groupId: 'time',\r\n      icon: 'date-asterisk',\r\n      label: 'Текущее время',\r\n    },\r\n    {\r\n      id: 'midnight',\r\n      groupId: 'time',\r\n      icon: 'date-now',\r\n      label: 'Полночь текущих суток',\r\n    },\r\n  ],\r\n\r\n  direction: [\r\n    { id: 'plus', groupId: 'direction', icon: 'add-circle', label: 'Смещение вперед' },\r\n    {\r\n      id: 'minus',\r\n      groupId: 'direction',\r\n      icon: 'delete-minus-circle',\r\n      label: 'Смещение назад',\r\n    },\r\n  ],\r\n\r\n  period: [\r\n    {\r\n      id: 'year',\r\n      groupId: 'period',\r\n      icon: 'date-year',\r\n      label: 'Год',\r\n    },\r\n    {\r\n      id: 'month',\r\n      groupId: 'period',\r\n      icon: 'date-month',\r\n      label: 'Месяц',\r\n    },\r\n    {\r\n      id: 'day',\r\n      groupId: 'period',\r\n      icon: 'date-day',\r\n      label: 'День',\r\n    },\r\n    {\r\n      id: 'hour',\r\n      groupId: 'period',\r\n      icon: 'date-hour',\r\n      label: 'Час',\r\n    },\r\n    {\r\n      id: 'minute',\r\n      groupId: 'period',\r\n      icon: 'date-minute',\r\n      label: 'Минута',\r\n    },\r\n    {\r\n      id: 'second',\r\n      groupId: 'period',\r\n      icon: 'date-second',\r\n      label: 'Секунда',\r\n    },\r\n  ],\r\n} as const;\r\n",
      "properties": [
        {
          "name": "active",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "boolean",
          "optional": true,
          "description": "",
          "line": 13
        },
        {
          "name": "groupId",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "optional": false,
          "description": "",
          "line": 12
        },
        {
          "name": "icon",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 14
        },
        {
          "name": "id",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "T",
          "optional": false,
          "description": "",
          "line": 11
        },
        {
          "name": "label",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 15
        }
      ],
      "indexSignatures": [],
      "kind": 164,
      "methods": []
    },
    {
      "name": "RelativeDateMenuItems",
      "id": "interface-RelativeDateMenuItems-9461f6ea84bcf063bef243f4d1d78b3c",
      "file": "libs/components/src/lib/datepicker/zyfra-relative-datepicker/relative-datepicker.models.ts",
      "deprecated": false,
      "deprecationMessage": "",
      "type": "interface",
      "sourceCode": "export interface RelativeDateModel {\r\n  time: RelativeDateTimeId;\r\n  direction: RelativeDateDirectionId;\r\n  number: string;\r\n  period: RelativeDatePeriodId;\r\n}\r\n\r\n// Menu\r\nexport interface RelativeDateMenuItem<T = unknown> {\r\n  id: T;\r\n  groupId: keyof RelativeDateMenuItems;\r\n  active?: boolean;\r\n  icon: string;\r\n  label: string;\r\n}\r\n\r\nexport type RelativeDateTimeId = typeof DefaultRelativeMenuItems.time[number]['id'];\r\nexport type RelativeDateDirectionId = typeof DefaultRelativeMenuItems.direction[number]['id'];\r\nexport type RelativeDatePeriodId = typeof DefaultRelativeMenuItems.period[number]['id'];\r\n\r\nexport function getDefaultRelativeDateMenuItems(): RelativeDateMenuItems {\r\n  return DefaultRelativeMenuItems as any;\r\n}\r\n\r\nexport type IdByGroup<TProp extends keyof RelativeDateMenuItems> = RelativeDateMenuItems[TProp][number]['id'];\r\n\r\nexport interface RelativeDateMenuItems {\r\n  time: RelativeDateMenuItem<RelativeDateTimeId>[];\r\n  direction: RelativeDateMenuItem<RelativeDateDirectionId>[];\r\n  period: RelativeDateMenuItem<RelativeDatePeriodId>[];\r\n}\r\n\r\nconst DefaultRelativeMenuItems = {\r\n  time: [\r\n    {\r\n      id: 'current',\r\n      groupId: 'time',\r\n      icon: 'date-asterisk',\r\n      label: 'Текущее время',\r\n    },\r\n    {\r\n      id: 'midnight',\r\n      groupId: 'time',\r\n      icon: 'date-now',\r\n      label: 'Полночь текущих суток',\r\n    },\r\n  ],\r\n\r\n  direction: [\r\n    { id: 'plus', groupId: 'direction', icon: 'add-circle', label: 'Смещение вперед' },\r\n    {\r\n      id: 'minus',\r\n      groupId: 'direction',\r\n      icon: 'delete-minus-circle',\r\n      label: 'Смещение назад',\r\n    },\r\n  ],\r\n\r\n  period: [\r\n    {\r\n      id: 'year',\r\n      groupId: 'period',\r\n      icon: 'date-year',\r\n      label: 'Год',\r\n    },\r\n    {\r\n      id: 'month',\r\n      groupId: 'period',\r\n      icon: 'date-month',\r\n      label: 'Месяц',\r\n    },\r\n    {\r\n      id: 'day',\r\n      groupId: 'period',\r\n      icon: 'date-day',\r\n      label: 'День',\r\n    },\r\n    {\r\n      id: 'hour',\r\n      groupId: 'period',\r\n      icon: 'date-hour',\r\n      label: 'Час',\r\n    },\r\n    {\r\n      id: 'minute',\r\n      groupId: 'period',\r\n      icon: 'date-minute',\r\n      label: 'Минута',\r\n    },\r\n    {\r\n      id: 'second',\r\n      groupId: 'period',\r\n      icon: 'date-second',\r\n      label: 'Секунда',\r\n    },\r\n  ],\r\n} as const;\r\n",
      "properties": [
        {
          "name": "direction",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "RelativeDateMenuItem<RelativeDateDirectionId>[]",
          "optional": false,
          "description": "",
          "line": 30
        },
        {
          "name": "period",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "RelativeDateMenuItem<RelativeDatePeriodId>[]",
          "optional": false,
          "description": "",
          "line": 31
        },
        {
          "name": "time",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "RelativeDateMenuItem<RelativeDateTimeId>[]",
          "optional": false,
          "description": "",
          "line": 29
        }
      ],
      "indexSignatures": [],
      "kind": 164,
      "methods": []
    },
    {
      "name": "RelativeDateModel",
      "id": "interface-RelativeDateModel-9461f6ea84bcf063bef243f4d1d78b3c",
      "file": "libs/components/src/lib/datepicker/zyfra-relative-datepicker/relative-datepicker.models.ts",
      "deprecated": false,
      "deprecationMessage": "",
      "type": "interface",
      "sourceCode": "export interface RelativeDateModel {\r\n  time: RelativeDateTimeId;\r\n  direction: RelativeDateDirectionId;\r\n  number: string;\r\n  period: RelativeDatePeriodId;\r\n}\r\n\r\n// Menu\r\nexport interface RelativeDateMenuItem<T = unknown> {\r\n  id: T;\r\n  groupId: keyof RelativeDateMenuItems;\r\n  active?: boolean;\r\n  icon: string;\r\n  label: string;\r\n}\r\n\r\nexport type RelativeDateTimeId = typeof DefaultRelativeMenuItems.time[number]['id'];\r\nexport type RelativeDateDirectionId = typeof DefaultRelativeMenuItems.direction[number]['id'];\r\nexport type RelativeDatePeriodId = typeof DefaultRelativeMenuItems.period[number]['id'];\r\n\r\nexport function getDefaultRelativeDateMenuItems(): RelativeDateMenuItems {\r\n  return DefaultRelativeMenuItems as any;\r\n}\r\n\r\nexport type IdByGroup<TProp extends keyof RelativeDateMenuItems> = RelativeDateMenuItems[TProp][number]['id'];\r\n\r\nexport interface RelativeDateMenuItems {\r\n  time: RelativeDateMenuItem<RelativeDateTimeId>[];\r\n  direction: RelativeDateMenuItem<RelativeDateDirectionId>[];\r\n  period: RelativeDateMenuItem<RelativeDatePeriodId>[];\r\n}\r\n\r\nconst DefaultRelativeMenuItems = {\r\n  time: [\r\n    {\r\n      id: 'current',\r\n      groupId: 'time',\r\n      icon: 'date-asterisk',\r\n      label: 'Текущее время',\r\n    },\r\n    {\r\n      id: 'midnight',\r\n      groupId: 'time',\r\n      icon: 'date-now',\r\n      label: 'Полночь текущих суток',\r\n    },\r\n  ],\r\n\r\n  direction: [\r\n    { id: 'plus', groupId: 'direction', icon: 'add-circle', label: 'Смещение вперед' },\r\n    {\r\n      id: 'minus',\r\n      groupId: 'direction',\r\n      icon: 'delete-minus-circle',\r\n      label: 'Смещение назад',\r\n    },\r\n  ],\r\n\r\n  period: [\r\n    {\r\n      id: 'year',\r\n      groupId: 'period',\r\n      icon: 'date-year',\r\n      label: 'Год',\r\n    },\r\n    {\r\n      id: 'month',\r\n      groupId: 'period',\r\n      icon: 'date-month',\r\n      label: 'Месяц',\r\n    },\r\n    {\r\n      id: 'day',\r\n      groupId: 'period',\r\n      icon: 'date-day',\r\n      label: 'День',\r\n    },\r\n    {\r\n      id: 'hour',\r\n      groupId: 'period',\r\n      icon: 'date-hour',\r\n      label: 'Час',\r\n    },\r\n    {\r\n      id: 'minute',\r\n      groupId: 'period',\r\n      icon: 'date-minute',\r\n      label: 'Минута',\r\n    },\r\n    {\r\n      id: 'second',\r\n      groupId: 'period',\r\n      icon: 'date-second',\r\n      label: 'Секунда',\r\n    },\r\n  ],\r\n} as const;\r\n",
      "properties": [
        {
          "name": "direction",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "RelativeDateDirectionId",
          "optional": false,
          "description": "",
          "line": 4
        },
        {
          "name": "number",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 5
        },
        {
          "name": "period",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "RelativeDatePeriodId",
          "optional": false,
          "description": "",
          "line": 6
        },
        {
          "name": "time",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "RelativeDateTimeId",
          "optional": false,
          "description": "",
          "line": 3
        }
      ],
      "indexSignatures": [],
      "kind": 164,
      "methods": []
    },
    {
      "name": "Sale",
      "id": "interface-Sale-3f8a240d97fed32f761bd91b12cebd31",
      "file": "libs/components/src/lib/table/_story/data.ts",
      "deprecated": false,
      "deprecationMessage": "",
      "type": "interface",
      "sourceCode": "export const Products: Product[] = [\r\n  {\r\n    id: '1000',\r\n    code: 'f230fh0g3',\r\n    name: 'Bamboo Watch',\r\n    description: 'Product Description',\r\n    image: 'bamboo-watch.jpg',\r\n    price: 65,\r\n    category: 'Accessories',\r\n    quantity: 24,\r\n    inventoryStatus: 'INSTOCK',\r\n    rating: 5,\r\n  },\r\n  {\r\n    id: '1001',\r\n    code: 'nvklal433',\r\n    name: 'Black Watch',\r\n    description: 'Product Description',\r\n    image: 'black-watch.jpg',\r\n    price: 72,\r\n    category: 'Accessories',\r\n    quantity: 61,\r\n    inventoryStatus: 'INSTOCK',\r\n    rating: 4,\r\n  },\r\n  {\r\n    id: '1002',\r\n    code: 'zz21cz3c1',\r\n    name: 'Blue Band',\r\n    description: 'Product Description',\r\n    image: 'blue-band.jpg',\r\n    price: 79,\r\n    category: 'Fitness',\r\n    quantity: 2,\r\n    inventoryStatus: 'LOWSTOCK',\r\n    rating: 3,\r\n  },\r\n  {\r\n    id: '1003',\r\n    code: '244wgerg2',\r\n    name: 'Blue T-Shirt',\r\n    description: 'Product Description',\r\n    image: 'blue-t-shirt.jpg',\r\n    price: 29,\r\n    category: 'Clothing',\r\n    quantity: 25,\r\n    inventoryStatus: 'INSTOCK',\r\n    rating: 5,\r\n  },\r\n  {\r\n    id: '1004',\r\n    code: 'h456wer53',\r\n    name: 'Bracelet',\r\n    description: 'Product Description',\r\n    image: 'bracelet.jpg',\r\n    price: 15,\r\n    category: 'Accessories',\r\n    quantity: 73,\r\n    inventoryStatus: 'INSTOCK',\r\n    rating: 4,\r\n  },\r\n  {\r\n    id: '1005',\r\n    code: 'av2231fwg',\r\n    name: 'Brown Purse',\r\n    description: 'Product Description',\r\n    image: 'brown-purse.jpg',\r\n    price: 120,\r\n    category: 'Accessories',\r\n    quantity: 0,\r\n    inventoryStatus: 'OUTOFSTOCK',\r\n    rating: 4,\r\n  },\r\n  {\r\n    id: '1006',\r\n    code: 'bib36pfvm',\r\n    name: 'Chakra Bracelet',\r\n    description: 'Product Description',\r\n    image: 'chakra-bracelet.jpg',\r\n    price: 32,\r\n    category: 'Accessories',\r\n    quantity: 5,\r\n    inventoryStatus: 'LOWSTOCK',\r\n    rating: 3,\r\n  },\r\n  {\r\n    id: '1007',\r\n    code: 'mbvjkgip5',\r\n    name: 'Galaxy Earrings',\r\n    description: 'Product Description',\r\n    image: 'galaxy-earrings.jpg',\r\n    price: 34,\r\n    category: 'Accessories',\r\n    quantity: 23,\r\n    inventoryStatus: 'INSTOCK',\r\n    rating: 5,\r\n  },\r\n  {\r\n    id: '1008',\r\n    code: 'vbb124btr',\r\n    name: 'Game Controller',\r\n    description: 'Product Description',\r\n    image: 'game-controller.jpg',\r\n    price: 99,\r\n    category: 'Electronics',\r\n    quantity: 2,\r\n    inventoryStatus: 'LOWSTOCK',\r\n    rating: 4,\r\n  },\r\n  {\r\n    id: '1009',\r\n    code: 'cm230f032',\r\n    name: 'Gaming Set',\r\n    description: 'Product Description',\r\n    image: 'gaming-set.jpg',\r\n    price: 299,\r\n    category: 'Electronics',\r\n    quantity: 63,\r\n    inventoryStatus: 'INSTOCK',\r\n    rating: 3,\r\n  },\r\n];\r\n\r\ninterface Customer {\r\n  id: number;\r\n  name: string;\r\n  country: { code: string; name: string };\r\n  company: string;\r\n  date: Date;\r\n  status: string;\r\n  verified: boolean;\r\n  activity: number;\r\n  representative: { image: string; name: string };\r\n  balance: number;\r\n}\r\n\r\nexport const Customers: Customer[] = [\r\n  {\r\n    id: 1000,\r\n    name: 'James Butt',\r\n    country: {\r\n      name: 'Algeria',\r\n      code: 'dz',\r\n    },\r\n    company: 'Benton, John B Jr',\r\n    date: new Date('2015-09-13'),\r\n    status: 'unqualified',\r\n    verified: true,\r\n    activity: 17,\r\n    representative: {\r\n      name: 'Ioni Bowcher',\r\n      image: 'ionibowcher.png',\r\n    },\r\n    balance: 70663,\r\n  },\r\n  {\r\n    id: 1001,\r\n    name: 'Josephine Darakjy',\r\n    country: {\r\n      name: 'Egypt',\r\n      code: 'eg',\r\n    },\r\n    company: 'Chanay, Jeffrey A Esq',\r\n    date: new Date('2019-02-09'),\r\n    status: 'proposal',\r\n    verified: true,\r\n    activity: 0,\r\n    representative: {\r\n      name: 'Amy Elsner',\r\n      image: 'amyelsner.png',\r\n    },\r\n    balance: 82429,\r\n  },\r\n  {\r\n    id: 1002,\r\n    name: 'Art Venere',\r\n    country: {\r\n      name: 'Panama',\r\n      code: 'pa',\r\n    },\r\n    company: 'Chemel, James L Cpa',\r\n    date: new Date('2017-05-13'),\r\n    status: 'qualified',\r\n    verified: false,\r\n    activity: 63,\r\n    representative: {\r\n      name: 'Asiya Javayant',\r\n      image: 'asiyajavayant.png',\r\n    },\r\n    balance: 28334,\r\n  },\r\n  {\r\n    id: 1003,\r\n    name: 'Lenna Paprocki',\r\n    country: {\r\n      name: 'Slovenia',\r\n      code: 'si',\r\n    },\r\n    company: 'Feltz Printing Service',\r\n    date: new Date('2020-09-15'),\r\n    status: 'new',\r\n    verified: false,\r\n    activity: 37,\r\n    representative: {\r\n      name: 'Xuxue Feng',\r\n      image: 'xuxuefeng.png',\r\n    },\r\n    balance: 88521,\r\n  },\r\n  {\r\n    id: 1004,\r\n    name: 'Donette Foller',\r\n    country: {\r\n      name: 'South Africa',\r\n      code: 'za',\r\n    },\r\n    company: 'Printing Dimensions',\r\n    date: new Date('2016-05-20'),\r\n    status: 'proposal',\r\n    verified: true,\r\n    activity: 33,\r\n    representative: {\r\n      name: 'Asiya Javayant',\r\n      image: 'asiyajavayant.png',\r\n    },\r\n    balance: 93905,\r\n  },\r\n  {\r\n    id: 1005,\r\n    name: 'Simona Morasca',\r\n    country: {\r\n      name: 'Egypt',\r\n      code: 'eg',\r\n    },\r\n    company: 'Chapman, Ross E Esq',\r\n    date: new Date('2018-02-16'),\r\n    status: 'qualified',\r\n    verified: false,\r\n    activity: 68,\r\n    representative: {\r\n      name: 'Ivan Magalhaes',\r\n      image: 'ivanmagalhaes.png',\r\n    },\r\n    balance: 50041,\r\n  },\r\n  {\r\n    id: 1006,\r\n    name: 'Mitsue Tollner',\r\n    country: {\r\n      name: 'Paraguay',\r\n      code: 'py',\r\n    },\r\n    company: 'Morlong Associates',\r\n    date: new Date('2018-02-19'),\r\n    status: 'renewal',\r\n    verified: true,\r\n    activity: 54,\r\n    representative: {\r\n      name: 'Ivan Magalhaes',\r\n      image: 'ivanmagalhaes.png',\r\n    },\r\n    balance: 58706,\r\n  },\r\n  {\r\n    id: 1007,\r\n    name: 'Leota Dilliard',\r\n    country: {\r\n      name: 'Serbia',\r\n      code: 'rs',\r\n    },\r\n    company: 'Commercial Press',\r\n    date: new Date('2019-08-13'),\r\n    status: 'renewal',\r\n    verified: true,\r\n    activity: 69,\r\n    representative: {\r\n      name: 'Onyama Limba',\r\n      image: 'onyamalimba.png',\r\n    },\r\n    balance: 26640,\r\n  },\r\n  {\r\n    id: 1008,\r\n    name: 'Sage Wieser',\r\n    country: {\r\n      name: 'Egypt',\r\n      code: 'eg',\r\n    },\r\n    company: 'Truhlar And Truhlar Attys',\r\n    date: new Date('2018-11-21'),\r\n    status: 'unqualified',\r\n    verified: true,\r\n    activity: 76,\r\n    representative: {\r\n      name: 'Ivan Magalhaes',\r\n      image: 'ivanmagalhaes.png',\r\n    },\r\n    balance: 65369,\r\n  },\r\n  {\r\n    id: 1009,\r\n    name: 'Kris Marrier',\r\n    country: {\r\n      name: 'Mexico',\r\n      code: 'mx',\r\n    },\r\n    company: 'King, Christopher A Esq',\r\n    date: new Date('2015-07-07'),\r\n    status: 'proposal',\r\n    verified: false,\r\n    activity: 3,\r\n    representative: {\r\n      name: 'Onyama Limba',\r\n      image: 'onyamalimba.png',\r\n    },\r\n    balance: 63451,\r\n  },\r\n  {\r\n    id: 1010,\r\n    name: 'Minna Amigon',\r\n    country: {\r\n      name: 'Romania',\r\n      code: 'ro',\r\n    },\r\n    company: 'Dorl, James J Esq',\r\n    date: new Date('2018-11-07'),\r\n    status: 'qualified',\r\n    verified: false,\r\n    activity: 38,\r\n    representative: {\r\n      name: 'Anna Fali',\r\n      image: 'annafali.png',\r\n    },\r\n    balance: 71169,\r\n  },\r\n  {\r\n    id: 1011,\r\n    name: 'Abel Maclead',\r\n    country: {\r\n      name: 'Singapore',\r\n      code: 'sg',\r\n    },\r\n    company: 'Rangoni Of Florence',\r\n    date: new Date('2017-03-11'),\r\n    status: 'qualified',\r\n    verified: true,\r\n    activity: 87,\r\n    representative: {\r\n      name: 'Bernardo Dominic',\r\n      image: 'bernardodominic.png',\r\n    },\r\n    balance: 96842,\r\n  },\r\n  {\r\n    id: 1012,\r\n    name: 'Kiley Caldarera',\r\n    country: {\r\n      name: 'Serbia',\r\n      code: 'rs',\r\n    },\r\n    company: 'Feiner Bros',\r\n    date: new Date('2015-10-20'),\r\n    status: 'unqualified',\r\n    verified: false,\r\n    activity: 80,\r\n    representative: {\r\n      name: 'Onyama Limba',\r\n      image: 'onyamalimba.png',\r\n    },\r\n    balance: 92734,\r\n  },\r\n  {\r\n    id: 1013,\r\n    name: 'Graciela Ruta',\r\n    country: {\r\n      name: 'Chile',\r\n      code: 'cl',\r\n    },\r\n    company: 'Buckley Miller & Wright',\r\n    date: new Date('2016-07-25'),\r\n    status: 'negotiation',\r\n    verified: false,\r\n    activity: 59,\r\n    representative: {\r\n      name: 'Amy Elsner',\r\n      image: 'amyelsner.png',\r\n    },\r\n    balance: 45250,\r\n  },\r\n  {\r\n    id: 1014,\r\n    name: 'Cammy Albares',\r\n    country: {\r\n      name: 'Philippines',\r\n      code: 'ph',\r\n    },\r\n    company: 'Rousseaux, Michael Esq',\r\n    date: new Date('2019-06-25'),\r\n    status: 'new',\r\n    verified: true,\r\n    activity: 90,\r\n    representative: {\r\n      name: 'Asiya Javayant',\r\n      image: 'asiyajavayant.png',\r\n    },\r\n    balance: 30236,\r\n  },\r\n  {\r\n    id: 1015,\r\n    name: 'Mattie Poquette',\r\n    country: {\r\n      name: 'Venezuela',\r\n      code: 've',\r\n    },\r\n    company: 'Century Communications',\r\n    date: new Date('2017-12-12'),\r\n    status: 'negotiation',\r\n    verified: false,\r\n    activity: 52,\r\n    representative: {\r\n      name: 'Anna Fali',\r\n      image: 'annafali.png',\r\n    },\r\n    balance: 64533,\r\n  },\r\n  {\r\n    id: 1016,\r\n    name: 'Meaghan Garufi',\r\n    country: {\r\n      name: 'Malaysia',\r\n      code: 'my',\r\n    },\r\n    company: 'Bolton, Wilbur Esq',\r\n    date: new Date('2018-07-04'),\r\n    status: 'unqualified',\r\n    verified: false,\r\n    activity: 31,\r\n    representative: {\r\n      name: 'Ivan Magalhaes',\r\n      image: 'ivanmagalhaes.png',\r\n    },\r\n    balance: 37279,\r\n  },\r\n  {\r\n    id: 1017,\r\n    name: 'Gladys Rim',\r\n    country: {\r\n      name: 'Netherlands',\r\n      code: 'nl',\r\n    },\r\n    company: 'T M Byxbee Company Pc',\r\n    date: new Date('2020-02-27'),\r\n    status: 'renewal',\r\n    verified: true,\r\n    activity: 48,\r\n    representative: {\r\n      name: 'Stephen Shaw',\r\n      image: 'stephenshaw.png',\r\n    },\r\n    balance: 27381,\r\n  },\r\n  {\r\n    id: 1018,\r\n    name: 'Yuki Whobrey',\r\n    country: {\r\n      name: 'Israel',\r\n      code: 'il',\r\n    },\r\n    company: 'Farmers Insurance Group',\r\n    date: new Date('2017-12-21'),\r\n    status: 'negotiation',\r\n    verified: true,\r\n    activity: 16,\r\n    representative: {\r\n      name: 'Bernardo Dominic',\r\n      image: 'bernardodominic.png',\r\n    },\r\n    balance: 9257,\r\n  },\r\n  {\r\n    id: 1019,\r\n    name: 'Fletcher Flosi',\r\n    country: {\r\n      name: 'Argentina',\r\n      code: 'ar',\r\n    },\r\n    company: 'Post Box Services Plus',\r\n    date: new Date('2016-01-04'),\r\n    status: 'renewal',\r\n    verified: true,\r\n    activity: 19,\r\n    representative: {\r\n      name: 'Xuxue Feng',\r\n      image: 'xuxuefeng.png',\r\n    },\r\n    balance: 67783,\r\n  },\r\n  {\r\n    id: 1020,\r\n    name: 'Bette Nicka',\r\n    country: {\r\n      name: 'Paraguay',\r\n      code: 'py',\r\n    },\r\n    company: 'Sport En Art',\r\n    date: new Date('2016-10-21'),\r\n    status: 'renewal',\r\n    verified: false,\r\n    activity: 100,\r\n    representative: {\r\n      name: 'Onyama Limba',\r\n      image: 'onyamalimba.png',\r\n    },\r\n    balance: 4609,\r\n  },\r\n  {\r\n    id: 1021,\r\n    name: 'Veronika Inouye',\r\n    country: {\r\n      name: 'Ecuador',\r\n      code: 'ec',\r\n    },\r\n    company: 'C 4 Network Inc',\r\n    date: new Date('2017-03-24'),\r\n    status: 'renewal',\r\n    verified: false,\r\n    activity: 72,\r\n    representative: {\r\n      name: 'Ioni Bowcher',\r\n      image: 'ionibowcher.png',\r\n    },\r\n    balance: 26565,\r\n  },\r\n  {\r\n    id: 1022,\r\n    name: 'Willard Kolmetz',\r\n    country: {\r\n      name: 'Tunisia',\r\n      code: 'tn',\r\n    },\r\n    company: 'Ingalls, Donald R Esq',\r\n    date: new Date('2017-04-15'),\r\n    status: 'renewal',\r\n    verified: true,\r\n    activity: 94,\r\n    representative: {\r\n      name: 'Asiya Javayant',\r\n      image: 'asiyajavayant.png',\r\n    },\r\n    balance: 75876,\r\n  },\r\n  {\r\n    id: 1023,\r\n    name: 'Maryann Royster',\r\n    country: {\r\n      name: 'Belarus',\r\n      code: 'by',\r\n    },\r\n    company: 'Franklin, Peter L Esq',\r\n    date: new Date('2017-03-11'),\r\n    status: 'qualified',\r\n    verified: false,\r\n    activity: 56,\r\n    representative: {\r\n      name: 'Elwin Sharvill',\r\n      image: 'elwinsharvill.png',\r\n    },\r\n    balance: 41121,\r\n  },\r\n  {\r\n    id: 1024,\r\n    name: 'Alisha Slusarski',\r\n    country: {\r\n      name: 'Iceland',\r\n      code: 'is',\r\n    },\r\n    company: 'Wtlz Power 107 Fm',\r\n    date: new Date('2018-03-27'),\r\n    status: 'qualified',\r\n    verified: true,\r\n    activity: 7,\r\n    representative: {\r\n      name: 'Stephen Shaw',\r\n      image: 'stephenshaw.png',\r\n    },\r\n    balance: 91691,\r\n  },\r\n  {\r\n    id: 1025,\r\n    name: 'Allene Iturbide',\r\n    country: {\r\n      name: 'Italy',\r\n      code: 'it',\r\n    },\r\n    company: 'Ledecky, David Esq',\r\n    date: new Date('2016-02-20'),\r\n    status: 'qualified',\r\n    verified: true,\r\n    activity: 1,\r\n    representative: {\r\n      name: 'Ivan Magalhaes',\r\n      image: 'ivanmagalhaes.png',\r\n    },\r\n    balance: 40137,\r\n  },\r\n  {\r\n    id: 1026,\r\n    name: 'Chanel Caudy',\r\n    country: {\r\n      name: 'Argentina',\r\n      code: 'ar',\r\n    },\r\n    company: 'Professional Image Inc',\r\n    date: new Date('2018-06-24'),\r\n    status: 'new',\r\n    verified: true,\r\n    activity: 26,\r\n    representative: {\r\n      name: 'Ioni Bowcher',\r\n      image: 'ionibowcher.png',\r\n    },\r\n    balance: 21304,\r\n  },\r\n  {\r\n    id: 1027,\r\n    name: 'Ezekiel Chui',\r\n    country: {\r\n      name: 'Ireland',\r\n      code: 'ie',\r\n    },\r\n    company: 'Sider, Donald C Esq',\r\n    date: new Date('2016-09-24'),\r\n    status: 'new',\r\n    verified: false,\r\n    activity: 76,\r\n    representative: {\r\n      name: 'Amy Elsner',\r\n      image: 'amyelsner.png',\r\n    },\r\n    balance: 60454,\r\n  },\r\n  {\r\n    id: 1028,\r\n    name: 'Willow Kusko',\r\n    country: {\r\n      name: 'Romania',\r\n      code: 'ro',\r\n    },\r\n    company: 'U Pull It',\r\n    date: new Date('2020-04-11'),\r\n    status: 'qualified',\r\n    verified: true,\r\n    activity: 7,\r\n    representative: {\r\n      name: 'Onyama Limba',\r\n      image: 'onyamalimba.png',\r\n    },\r\n    balance: 17565,\r\n  },\r\n  {\r\n    id: 1029,\r\n    name: 'Bernardo Figeroa',\r\n    country: {\r\n      name: 'Israel',\r\n      code: 'il',\r\n    },\r\n    company: 'Clark, Richard Cpa',\r\n    date: new Date('2018-11-04'),\r\n    status: 'renewal',\r\n    verified: true,\r\n    activity: 81,\r\n    representative: {\r\n      name: 'Ioni Bowcher',\r\n      image: 'ionibowcher.png',\r\n    },\r\n    balance: 17774,\r\n  },\r\n  {\r\n    id: 1030,\r\n    name: 'Ammie Corrio',\r\n    country: {\r\n      name: 'Hungary',\r\n      code: 'hu',\r\n    },\r\n    company: 'Moskowitz, Barry S',\r\n    date: new Date('2016-06-11'),\r\n    status: 'negotiation',\r\n    verified: true,\r\n    activity: 56,\r\n    representative: {\r\n      name: 'Asiya Javayant',\r\n      image: 'asiyajavayant.png',\r\n    },\r\n    balance: 49201,\r\n  },\r\n  {\r\n    id: 1031,\r\n    name: 'Francine Vocelka',\r\n    country: {\r\n      name: 'Honduras',\r\n      code: 'hn',\r\n    },\r\n    company: 'Cascade Realty Advisors Inc',\r\n    date: new Date('2017-08-02'),\r\n    status: 'qualified',\r\n    verified: true,\r\n    activity: 94,\r\n    representative: {\r\n      name: 'Ioni Bowcher',\r\n      image: 'ionibowcher.png',\r\n    },\r\n    balance: 67126,\r\n  },\r\n  {\r\n    id: 1032,\r\n    name: 'Ernie Stenseth',\r\n    country: {\r\n      name: 'Australia',\r\n      code: 'au',\r\n    },\r\n    company: 'Knwz Newsradio',\r\n    date: new Date('2018-06-06'),\r\n    status: 'renewal',\r\n    verified: true,\r\n    activity: 68,\r\n    representative: {\r\n      name: 'Xuxue Feng',\r\n      image: 'xuxuefeng.png',\r\n    },\r\n    balance: 76017,\r\n  },\r\n  {\r\n    id: 1033,\r\n    name: 'Albina Glick',\r\n    country: {\r\n      name: 'Ukraine',\r\n      code: 'ua',\r\n    },\r\n    company: 'Giampetro, Anthony D',\r\n    date: new Date('2019-08-08'),\r\n    status: 'proposal',\r\n    verified: true,\r\n    activity: 85,\r\n    representative: {\r\n      name: 'Bernardo Dominic',\r\n      image: 'bernardodominic.png',\r\n    },\r\n    balance: 91201,\r\n  },\r\n  {\r\n    id: 1034,\r\n    name: 'Alishia Sergi',\r\n    country: {\r\n      name: 'Qatar',\r\n      code: 'qa',\r\n    },\r\n    company: 'Milford Enterprises Inc',\r\n    date: new Date('2018-05-19'),\r\n    status: 'negotiation',\r\n    verified: false,\r\n    activity: 46,\r\n    representative: {\r\n      name: 'Ivan Magalhaes',\r\n      image: 'ivanmagalhaes.png',\r\n    },\r\n    balance: 12237,\r\n  },\r\n  {\r\n    id: 1035,\r\n    name: 'Solange Shinko',\r\n    country: {\r\n      name: 'Cameroon',\r\n      code: 'cm',\r\n    },\r\n    company: 'Mosocco, Ronald A',\r\n    date: new Date('2015-02-12'),\r\n    status: 'qualified',\r\n    verified: true,\r\n    activity: 32,\r\n    representative: {\r\n      name: 'Onyama Limba',\r\n      image: 'onyamalimba.png',\r\n    },\r\n    balance: 34072,\r\n  },\r\n  {\r\n    id: 1036,\r\n    name: 'Jose Stockham',\r\n    country: {\r\n      name: 'Italy',\r\n      code: 'it',\r\n    },\r\n    company: 'Tri State Refueler Co',\r\n    date: new Date('2018-04-25'),\r\n    status: 'qualified',\r\n    verified: true,\r\n    activity: 77,\r\n    representative: {\r\n      name: 'Amy Elsner',\r\n      image: 'amyelsner.png',\r\n    },\r\n    balance: 94909,\r\n  },\r\n  {\r\n    id: 1037,\r\n    name: 'Rozella Ostrosky',\r\n    country: {\r\n      name: 'Venezuela',\r\n      code: 've',\r\n    },\r\n    company: 'Parkway Company',\r\n    date: new Date('2016-02-27'),\r\n    status: 'unqualified',\r\n    verified: true,\r\n    activity: 66,\r\n    representative: {\r\n      name: 'Amy Elsner',\r\n      image: 'amyelsner.png',\r\n    },\r\n    balance: 57245,\r\n  },\r\n  {\r\n    id: 1038,\r\n    name: 'Valentine Gillian',\r\n    country: {\r\n      name: 'Paraguay',\r\n      code: 'py',\r\n    },\r\n    company: 'Fbs Business Finance',\r\n    date: new Date('2019-09-17'),\r\n    status: 'qualified',\r\n    verified: true,\r\n    activity: 25,\r\n    representative: {\r\n      name: 'Bernardo Dominic',\r\n      image: 'bernardodominic.png',\r\n    },\r\n    balance: 75502,\r\n  },\r\n  {\r\n    id: 1039,\r\n    name: 'Kati Rulapaugh',\r\n    country: {\r\n      name: 'Puerto Rico',\r\n      code: 'pr',\r\n    },\r\n    company: 'Eder Assocs Consltng Engrs Pc',\r\n    date: new Date('2016-12-03'),\r\n    status: 'renewal',\r\n    verified: false,\r\n    activity: 51,\r\n    representative: {\r\n      name: 'Ioni Bowcher',\r\n      image: 'ionibowcher.png',\r\n    },\r\n    balance: 82075,\r\n  },\r\n  {\r\n    id: 1040,\r\n    name: 'Youlanda Schemmer',\r\n    country: {\r\n      name: 'Bolivia',\r\n      code: 'bo',\r\n    },\r\n    company: 'Tri M Tool Inc',\r\n    date: new Date('2017-12-15'),\r\n    status: 'negotiation',\r\n    verified: true,\r\n    activity: 49,\r\n    representative: {\r\n      name: 'Xuxue Feng',\r\n      image: 'xuxuefeng.png',\r\n    },\r\n    balance: 19208,\r\n  },\r\n  {\r\n    id: 1041,\r\n    name: 'Dyan Oldroyd',\r\n    country: {\r\n      name: 'Argentina',\r\n      code: 'ar',\r\n    },\r\n    company: 'International Eyelets Inc',\r\n    date: new Date('2017-02-02'),\r\n    status: 'qualified',\r\n    verified: false,\r\n    activity: 5,\r\n    representative: {\r\n      name: 'Amy Elsner',\r\n      image: 'amyelsner.png',\r\n    },\r\n    balance: 50194,\r\n  },\r\n  {\r\n    id: 1042,\r\n    name: 'Roxane Campain',\r\n    country: {\r\n      name: 'France',\r\n      code: 'fr',\r\n    },\r\n    company: 'Rapid Trading Intl',\r\n    date: new Date('2018-12-25'),\r\n    status: 'unqualified',\r\n    verified: false,\r\n    activity: 100,\r\n    representative: {\r\n      name: 'Anna Fali',\r\n      image: 'annafali.png',\r\n    },\r\n    balance: 77714,\r\n  },\r\n  {\r\n    id: 1043,\r\n    name: 'Lavera Perin',\r\n    country: {\r\n      name: 'Vietnam',\r\n      code: 'vn',\r\n    },\r\n    company: 'Abc Enterprises Inc',\r\n    date: new Date('2018-04-10'),\r\n    status: 'qualified',\r\n    verified: false,\r\n    activity: 71,\r\n    representative: {\r\n      name: 'Stephen Shaw',\r\n      image: 'stephenshaw.png',\r\n    },\r\n    balance: 35740,\r\n  },\r\n  {\r\n    id: 1044,\r\n    name: 'Erick Ferencz',\r\n    country: {\r\n      name: 'Belgium',\r\n      code: 'be',\r\n    },\r\n    company: 'Cindy Turner Associates',\r\n    date: new Date('2018-05-06'),\r\n    status: 'unqualified',\r\n    verified: true,\r\n    activity: 54,\r\n    representative: {\r\n      name: 'Amy Elsner',\r\n      image: 'amyelsner.png',\r\n    },\r\n    balance: 30790,\r\n  },\r\n  {\r\n    id: 1045,\r\n    name: 'Fatima Saylors',\r\n    country: {\r\n      name: 'Canada',\r\n      code: 'ca',\r\n    },\r\n    company: 'Stanton, James D Esq',\r\n    date: new Date('2019-07-10'),\r\n    status: 'renewal',\r\n    verified: true,\r\n    activity: 93,\r\n    representative: {\r\n      name: 'Onyama Limba',\r\n      image: 'onyamalimba.png',\r\n    },\r\n    balance: 52343,\r\n  },\r\n  {\r\n    id: 1046,\r\n    name: 'Jina Briddick',\r\n    country: {\r\n      name: 'Mexico',\r\n      code: 'mx',\r\n    },\r\n    company: 'Grace Pastries Inc',\r\n    date: new Date('2018-02-19'),\r\n    status: 'unqualified',\r\n    verified: false,\r\n    activity: 97,\r\n    representative: {\r\n      name: 'Xuxue Feng',\r\n      image: 'xuxuefeng.png',\r\n    },\r\n    balance: 53966,\r\n  },\r\n  {\r\n    id: 1047,\r\n    name: 'Kanisha Waycott',\r\n    country: {\r\n      name: 'Ecuador',\r\n      code: 'ec',\r\n    },\r\n    company: 'Schroer, Gene E Esq',\r\n    date: new Date('2019-11-27'),\r\n    status: 'new',\r\n    verified: false,\r\n    activity: 80,\r\n    representative: {\r\n      name: 'Xuxue Feng',\r\n      image: 'xuxuefeng.png',\r\n    },\r\n    balance: 9920,\r\n  },\r\n  {\r\n    id: 1048,\r\n    name: 'Emerson Bowley',\r\n    country: {\r\n      name: 'Finland',\r\n      code: 'fi',\r\n    },\r\n    company: 'Knights Inn',\r\n    date: new Date('2018-11-24'),\r\n    status: 'new',\r\n    verified: false,\r\n    activity: 63,\r\n    representative: {\r\n      name: 'Stephen Shaw',\r\n      image: 'stephenshaw.png',\r\n    },\r\n    balance: 78069,\r\n  },\r\n  {\r\n    id: 1049,\r\n    name: 'Blair Malet',\r\n    country: {\r\n      name: 'Finland',\r\n      code: 'fi',\r\n    },\r\n    company: 'Bollinger Mach Shp & Shipyard',\r\n    date: new Date('2018-04-19'),\r\n    status: 'new',\r\n    verified: true,\r\n    activity: 92,\r\n    representative: {\r\n      name: 'Asiya Javayant',\r\n      image: 'asiyajavayant.png',\r\n    },\r\n    balance: 65005,\r\n  },\r\n];\r\n\r\ninterface Sale {\r\n  product: string;\r\n  lastYearSale: number;\r\n  thisYearSale: number;\r\n  lastYearProfit: number;\r\n  thisYearProfit: number;\r\n}\r\n\r\nexport const Sales: Sale[] = [\r\n  {\r\n    product: 'Bamboo Watch',\r\n    lastYearSale: 51,\r\n    thisYearSale: 40,\r\n    lastYearProfit: 54406,\r\n    thisYearProfit: 43342,\r\n  },\r\n  {\r\n    product: 'Black Watch',\r\n    lastYearSale: 83,\r\n    thisYearSale: 9,\r\n    lastYearProfit: 423132,\r\n    thisYearProfit: 312122,\r\n  },\r\n  { product: 'Blue Band', lastYearSale: 38, thisYearSale: 5, lastYearProfit: 12321, thisYearProfit: 8500 },\r\n  {\r\n    product: 'Blue T-Shirt',\r\n    lastYearSale: 49,\r\n    thisYearSale: 22,\r\n    lastYearProfit: 745232,\r\n    thisYearProfit: 65323,\r\n  },\r\n  {\r\n    product: 'Brown Purse',\r\n    lastYearSale: 17,\r\n    thisYearSale: 79,\r\n    lastYearProfit: 643242,\r\n    thisYearProfit: 500332,\r\n  },\r\n  {\r\n    product: 'Chakra Bracelet',\r\n    lastYearSale: 52,\r\n    thisYearSale: 65,\r\n    lastYearProfit: 421132,\r\n    thisYearProfit: 150005,\r\n  },\r\n  {\r\n    product: 'Galaxy Earrings',\r\n    lastYearSale: 82,\r\n    thisYearSale: 12,\r\n    lastYearProfit: 131211,\r\n    thisYearProfit: 100214,\r\n  },\r\n  {\r\n    product: 'Game Controller',\r\n    lastYearSale: 44,\r\n    thisYearSale: 45,\r\n    lastYearProfit: 66442,\r\n    thisYearProfit: 53322,\r\n  },\r\n  {\r\n    product: 'Gaming Set',\r\n    lastYearSale: 90,\r\n    thisYearSale: 56,\r\n    lastYearProfit: 765442,\r\n    thisYearProfit: 296232,\r\n  },\r\n  {\r\n    product: 'Gold Phone Case',\r\n    lastYearSale: 75,\r\n    thisYearSale: 54,\r\n    lastYearProfit: 21212,\r\n    thisYearProfit: 12533,\r\n  },\r\n];\r\n\r\nexport interface Product {\r\n  id: string;\r\n  code: string;\r\n  name: string;\r\n  description: string;\r\n  image: string;\r\n  price: number;\r\n  category: string;\r\n  quantity: number;\r\n  inventoryStatus: string;\r\n  rating: number;\r\n}\r\n\r\nconst ProductsSmall: Product[] = [\r\n  {\r\n    id: '1000',\r\n    code: 'f230fh0g3',\r\n    name: 'Bamboo Watch',\r\n    description: 'Product Description',\r\n    image: 'bamboo-watch.jpg',\r\n    price: 65,\r\n    category: 'Accessories',\r\n    quantity: 24,\r\n    inventoryStatus: 'INSTOCK',\r\n    rating: 5,\r\n  },\r\n  {\r\n    id: '1001',\r\n    code: 'nvklal433',\r\n    name: 'Black Watch',\r\n    description: 'Product Description',\r\n    image: 'black-watch.jpg',\r\n    price: 72,\r\n    category: 'Accessories',\r\n    quantity: 61,\r\n    inventoryStatus: 'INSTOCK',\r\n    rating: 4,\r\n  },\r\n  {\r\n    id: '1002',\r\n    code: 'zz21cz3c1',\r\n    name: 'Blue Band',\r\n    description: 'Product Description',\r\n    image: 'blue-band.jpg',\r\n    price: 79,\r\n    category: 'Fitness',\r\n    quantity: 2,\r\n    inventoryStatus: 'LOWSTOCK',\r\n    rating: 3,\r\n  },\r\n  {\r\n    id: '1003',\r\n    code: '244wgerg2',\r\n    name: 'Blue T-Shirt',\r\n    description: 'Product Description',\r\n    image: 'blue-t-shirt.jpg',\r\n    price: 29,\r\n    category: 'Clothing',\r\n    quantity: 25,\r\n    inventoryStatus: 'INSTOCK',\r\n    rating: 5,\r\n  },\r\n  {\r\n    id: '1004',\r\n    code: 'h456wer53',\r\n    name: 'Bracelet',\r\n    description: 'Product Description',\r\n    image: 'bracelet.jpg',\r\n    price: 15,\r\n    category: 'Accessories',\r\n    quantity: 73,\r\n    inventoryStatus: 'INSTOCK',\r\n    rating: 4,\r\n  },\r\n  {\r\n    id: '1005',\r\n    code: 'av2231fwg',\r\n    name: 'Brown Purse',\r\n    description: 'Product Description',\r\n    image: 'brown-purse.jpg',\r\n    price: 120,\r\n    category: 'Accessories',\r\n    quantity: 0,\r\n    inventoryStatus: 'OUTOFSTOCK',\r\n    rating: 4,\r\n  },\r\n  {\r\n    id: '1006',\r\n    code: 'bib36pfvm',\r\n    name: 'Chakra Bracelet',\r\n    description: 'Product Description',\r\n    image: 'chakra-bracelet.jpg',\r\n    price: 32,\r\n    category: 'Accessories',\r\n    quantity: 5,\r\n    inventoryStatus: 'LOWSTOCK',\r\n    rating: 3,\r\n  },\r\n  {\r\n    id: '1007',\r\n    code: 'mbvjkgip5',\r\n    name: 'Galaxy Earrings',\r\n    description: 'Product Description',\r\n    image: 'galaxy-earrings.jpg',\r\n    price: 34,\r\n    category: 'Accessories',\r\n    quantity: 23,\r\n    inventoryStatus: 'INSTOCK',\r\n    rating: 5,\r\n  },\r\n  {\r\n    id: '1008',\r\n    code: 'vbb124btr',\r\n    name: 'Game Controller',\r\n    description: 'Product Description',\r\n    image: 'game-controller.jpg',\r\n    price: 99,\r\n    category: 'Electronics',\r\n    quantity: 2,\r\n    inventoryStatus: 'LOWSTOCK',\r\n    rating: 4,\r\n  },\r\n  {\r\n    id: '1009',\r\n    code: 'cm230f032',\r\n    name: 'Gaming Set',\r\n    description: 'Product Description',\r\n    image: 'gaming-set.jpg',\r\n    price: 299,\r\n    category: 'Electronics',\r\n    quantity: 63,\r\n    inventoryStatus: 'INSTOCK',\r\n    rating: 3,\r\n  },\r\n];\r\n\r\ninterface ProductOrder {\r\n  id: string;\r\n  code: string;\r\n  name: string;\r\n  description: string;\r\n  image: string;\r\n  price: number;\r\n  category: string;\r\n  quantity: number;\r\n  inventoryStatus: string;\r\n  rating: number;\r\n  orders: Order[];\r\n}\r\n\r\ninterface Order {\r\n  id: string;\r\n  productCode: string;\r\n  date: string;\r\n  amount: number;\r\n  quantity: number;\r\n  customer: string;\r\n  status: string;\r\n}\r\n\r\nconst ProductsOrdersSmall: ProductOrder[] = [\r\n  {\r\n    id: '1000',\r\n    code: 'f230fh0g3',\r\n    name: 'Bamboo Watch',\r\n    description: 'Product Description',\r\n    image: 'bamboo-watch.jpg',\r\n    price: 65,\r\n    category: 'Accessories',\r\n    quantity: 24,\r\n    inventoryStatus: 'INSTOCK',\r\n    rating: 5,\r\n    orders: [\r\n      {\r\n        id: '1000',\r\n        productCode: 'f230fh0g3',\r\n        date: '13.08.2020',\r\n        amount: 65,\r\n        quantity: 1,\r\n        customer: 'David James',\r\n        status: 'PENDING',\r\n      },\r\n      {\r\n        id: '1001',\r\n        productCode: 'f230fh0g3',\r\n        date: '14.05.2020',\r\n        amount: 130,\r\n        quantity: 2,\r\n        customer: 'Leon Rodrigues',\r\n        status: 'DELIVERED',\r\n      },\r\n      {\r\n        id: '1002',\r\n        productCode: 'f230fh0g3',\r\n        date: '04.01.2019',\r\n        amount: 65,\r\n        quantity: 1,\r\n        customer: 'Juan Alejandro',\r\n        status: 'RETURNED',\r\n      },\r\n      {\r\n        id: '1003',\r\n        productCode: 'f230fh0g3',\r\n        date: '13.09.2020',\r\n        amount: 195,\r\n        quantity: 3,\r\n        customer: 'Claire Morrow',\r\n        status: 'CANCELLED',\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    id: '1001',\r\n    code: 'nvklal433',\r\n    name: 'Black Watch',\r\n    description: 'Product Description',\r\n    image: 'black-watch.jpg',\r\n    price: 72,\r\n    category: 'Accessories',\r\n    quantity: 61,\r\n    inventoryStatus: 'INSTOCK',\r\n    rating: 4,\r\n    orders: [\r\n      {\r\n        id: '2000',\r\n        productCode: 'nvklal433',\r\n        date: '14.05.2020',\r\n        amount: 72,\r\n        quantity: 1,\r\n        customer: 'Maisha Jefferson',\r\n        status: 'DELIVERED',\r\n      },\r\n      {\r\n        id: '2001',\r\n        productCode: 'nvklal433',\r\n        date: '28.02.2020',\r\n        amount: 144,\r\n        quantity: 2,\r\n        customer: 'Octavia Murillo',\r\n        status: 'PENDING',\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    id: '1002',\r\n    code: 'zz21cz3c1',\r\n    name: 'Blue Band',\r\n    description: 'Product Description',\r\n    image: 'blue-band.jpg',\r\n    price: 79,\r\n    category: 'Fitness',\r\n    quantity: 2,\r\n    inventoryStatus: 'LOWSTOCK',\r\n    rating: 3,\r\n    orders: [\r\n      {\r\n        id: '3000',\r\n        productCode: 'zz21cz3c1',\r\n        date: '05.07.2020',\r\n        amount: 79,\r\n        quantity: 1,\r\n        customer: 'Stacey Leja',\r\n        status: 'DELIVERED',\r\n      },\r\n      {\r\n        id: '3001',\r\n        productCode: 'zz21cz3c1',\r\n        date: '06.02.2020',\r\n        amount: 79,\r\n        quantity: 1,\r\n        customer: 'Ashley Wickens',\r\n        status: 'DELIVERED',\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    id: '1003',\r\n    code: '244wgerg2',\r\n    name: 'Blue T-Shirt',\r\n    description: 'Product Description',\r\n    image: 'blue-t-shirt.jpg',\r\n    price: 29,\r\n    category: 'Clothing',\r\n    quantity: 25,\r\n    inventoryStatus: 'INSTOCK',\r\n    rating: 5,\r\n    orders: [],\r\n  },\r\n  {\r\n    id: '1004',\r\n    code: 'h456wer53',\r\n    name: 'Bracelet',\r\n    description: 'Product Description',\r\n    image: 'bracelet.jpg',\r\n    price: 15,\r\n    category: 'Accessories',\r\n    quantity: 73,\r\n    inventoryStatus: 'INSTOCK',\r\n    rating: 4,\r\n    orders: [\r\n      {\r\n        id: '5000',\r\n        productCode: 'h456wer53',\r\n        date: '05.09.2020',\r\n        amount: 60,\r\n        quantity: 4,\r\n        customer: 'Mayumi Misaki',\r\n        status: 'PENDING',\r\n      },\r\n      {\r\n        id: '5001',\r\n        productCode: 'h456wer53',\r\n        date: '16.04.2019',\r\n        amount: 2,\r\n        quantity: 30,\r\n        customer: 'Francesco Salvatore',\r\n        status: 'DELIVERED',\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    id: '1005',\r\n    code: 'av2231fwg',\r\n    name: 'Brown Purse',\r\n    description: 'Product Description',\r\n    image: 'brown-purse.jpg',\r\n    price: 120,\r\n    category: 'Accessories',\r\n    quantity: 0,\r\n    inventoryStatus: 'OUTOFSTOCK',\r\n    rating: 4,\r\n    orders: [\r\n      {\r\n        id: '6000',\r\n        productCode: 'av2231fwg',\r\n        date: '25.01.2020',\r\n        amount: 120,\r\n        quantity: 1,\r\n        customer: 'Isabel Sinclair',\r\n        status: 'RETURNED',\r\n      },\r\n      {\r\n        id: '6001',\r\n        productCode: 'av2231fwg',\r\n        date: '12.03.2019',\r\n        amount: 240,\r\n        quantity: 2,\r\n        customer: 'Lionel Clifford',\r\n        status: 'DELIVERED',\r\n      },\r\n      {\r\n        id: '6002',\r\n        productCode: 'av2231fwg',\r\n        date: '05.05.2019',\r\n        amount: 120,\r\n        quantity: 1,\r\n        customer: 'Cody Chavez',\r\n        status: 'DELIVERED',\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    id: '1006',\r\n    code: 'bib36pfvm',\r\n    name: 'Chakra Bracelet',\r\n    description: 'Product Description',\r\n    image: 'chakra-bracelet.jpg',\r\n    price: 32,\r\n    category: 'Accessories',\r\n    quantity: 5,\r\n    inventoryStatus: 'LOWSTOCK',\r\n    rating: 3,\r\n    orders: [\r\n      {\r\n        id: '7000',\r\n        productCode: 'bib36pfvm',\r\n        date: '24.02.2020',\r\n        amount: 32,\r\n        quantity: 1,\r\n        customer: 'Arvin Darci',\r\n        status: 'DELIVERED',\r\n      },\r\n      {\r\n        id: '7001',\r\n        productCode: 'bib36pfvm',\r\n        date: '14.01.2020',\r\n        amount: 64,\r\n        quantity: 2,\r\n        customer: 'Izzy Jones',\r\n        status: 'PENDING',\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    id: '1007',\r\n    code: 'mbvjkgip5',\r\n    name: 'Galaxy Earrings',\r\n    description: 'Product Description',\r\n    image: 'galaxy-earrings.jpg',\r\n    price: 34,\r\n    category: 'Accessories',\r\n    quantity: 23,\r\n    inventoryStatus: 'INSTOCK',\r\n    rating: 5,\r\n    orders: [\r\n      {\r\n        id: '8000',\r\n        productCode: 'mbvjkgip5',\r\n        date: '19.06.2020',\r\n        amount: 34,\r\n        quantity: 1,\r\n        customer: 'Jennifer Smith',\r\n        status: 'DELIVERED',\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    id: '1008',\r\n    code: 'vbb124btr',\r\n    name: 'Game Controller',\r\n    description: 'Product Description',\r\n    image: 'game-controller.jpg',\r\n    price: 99,\r\n    category: 'Electronics',\r\n    quantity: 2,\r\n    inventoryStatus: 'LOWSTOCK',\r\n    rating: 4,\r\n    orders: [\r\n      {\r\n        id: '9000',\r\n        productCode: 'vbb124btr',\r\n        date: '05.01.2020',\r\n        amount: 99,\r\n        quantity: 1,\r\n        customer: 'Jeanfrancois David',\r\n        status: 'DELIVERED',\r\n      },\r\n      {\r\n        id: '9001',\r\n        productCode: 'vbb124btr',\r\n        date: '19.01.2020',\r\n        amount: 198,\r\n        quantity: 2,\r\n        customer: 'Ivar Greenwood',\r\n        status: 'RETURNED',\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    id: '1009',\r\n    code: 'cm230f032',\r\n    name: 'Gaming Set',\r\n    description: 'Product Description',\r\n    image: 'gaming-set.jpg',\r\n    price: 299,\r\n    category: 'Electronics',\r\n    quantity: 63,\r\n    inventoryStatus: 'INSTOCK',\r\n    rating: 3,\r\n    orders: [\r\n      {\r\n        id: '10000',\r\n        productCode: 'cm230f032',\r\n        date: '24.06.2020',\r\n        amount: 299,\r\n        quantity: 1,\r\n        customer: 'Kadeem Mujtaba',\r\n        status: 'PENDING',\r\n      },\r\n      {\r\n        id: '10001',\r\n        productCode: 'cm230f032',\r\n        date: '11.05.2020',\r\n        amount: 299,\r\n        quantity: 1,\r\n        customer: 'Ashley Wickens',\r\n        status: 'DELIVERED',\r\n      },\r\n      {\r\n        id: '10002',\r\n        productCode: 'cm230f032',\r\n        date: '07.02.2019',\r\n        amount: 299,\r\n        quantity: 1,\r\n        customer: 'Julie Johnson',\r\n        status: 'DELIVERED',\r\n      },\r\n      {\r\n        id: '10003',\r\n        productCode: 'cm230f032',\r\n        date: '26.04.2020',\r\n        amount: 299,\r\n        quantity: 1,\r\n        customer: 'Tony Costa',\r\n        status: 'CANCELLED',\r\n      },\r\n    ],\r\n  },\r\n];\r\n\r\nfunction cloneArrayOfObjects<T>(array: T[]): T[] {\r\n  return array.map(item => ({ ...item }));\r\n}\r\n\r\nexport function getProducts(): Product[] {\r\n  return cloneArrayOfObjects(Products);\r\n}\r\n\r\nexport function getProductsSmall(): Product[] {\r\n  return cloneArrayOfObjects(ProductsSmall);\r\n}\r\n\r\nexport function getSalesSmall(): Sale[] {\r\n  return cloneArrayOfObjects(Sales);\r\n}\r\n\r\nexport function getCustomers(): Customer[] {\r\n  return cloneArrayOfObjects(Customers);\r\n}\r\n\r\nexport function getProductsOrdersSmall(): ProductOrder[] {\r\n  return cloneArrayOfObjects(ProductsOrdersSmall);\r\n}\r\n",
      "properties": [
        {
          "name": "lastYearProfit",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "number",
          "optional": false,
          "description": "",
          "line": 1044
        },
        {
          "name": "lastYearSale",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "number",
          "optional": false,
          "description": "",
          "line": 1042
        },
        {
          "name": "product",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 1041
        },
        {
          "name": "thisYearProfit",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "number",
          "optional": false,
          "description": "",
          "line": 1045
        },
        {
          "name": "thisYearSale",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "number",
          "optional": false,
          "description": "",
          "line": 1043
        }
      ],
      "indexSignatures": [],
      "kind": 164,
      "methods": []
    },
    {
      "name": "SelectButtonChange",
      "id": "interface-SelectButtonChange-dc0e3a5e4213b54b89f7b691b59e9292",
      "file": "libs/components/src/lib/select-button/zyfra-select-button.component.ts",
      "deprecated": false,
      "deprecationMessage": "",
      "type": "interface",
      "sourceCode": "import { Component, Input, Output, EventEmitter, ChangeDetectionStrategy } from '@angular/core';\r\n\r\nexport interface SelectButtonOptionClick<T> {\r\n  index: number;\r\n  option: T;\r\n  originalEvent: PointerEvent;\r\n}\r\n\r\nexport interface SelectButtonChange<T> {\r\n  index: number;\r\n  value: T;\r\n}\r\n\r\n@Component({\r\n  selector: 'zyfra-select-button',\r\n  templateUrl: './zyfra-select-button.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class ZyfraSelectButtonComponent<OPTION, VALUE> {\r\n  @Input() options: OPTION[];\r\n  @Input() optionLabel: string;\r\n  @Input() optionValue: string;\r\n  @Input() optionDisabled: string;\r\n  @Input() multiple: boolean;\r\n  @Input() tabindex: number = 0;\r\n  @Input() style: string;\r\n  @Input() styleClass: string;\r\n  @Input() ariaLabelledBy: string;\r\n  @Input() disabled: boolean;\r\n  @Input() dataKey: string;\r\n\r\n  /**\r\n   * Optional Change emitter\r\n   */\r\n  @Output() onChange: EventEmitter<SelectButtonChange<VALUE>['value']> = new EventEmitter();\r\n\r\n  /**\r\n   * Optional OptionClick emitter\r\n   */\r\n  @Output() onOptionClick: EventEmitter<SelectButtonOptionClick<OPTION>> = new EventEmitter();\r\n\r\n  /**\r\n   * Optional Change handler\r\n   */\r\n  public handleChange(data: SelectButtonChange<VALUE>): void {\r\n    this.onChange.emit(data.value);\r\n  }\r\n\r\n  /**\r\n   * Optional OptionClick handler\r\n   */\r\n  public handleOptionClick(data: SelectButtonOptionClick<OPTION>): void {\r\n    this.onOptionClick.emit(data);\r\n  }\r\n}\r\n",
      "properties": [
        {
          "name": "index",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "number",
          "optional": false,
          "description": "",
          "line": 10
        },
        {
          "name": "value",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "T",
          "optional": false,
          "description": "",
          "line": 11
        }
      ],
      "indexSignatures": [],
      "kind": 164,
      "methods": []
    },
    {
      "name": "SelectButtonOptionClick",
      "id": "interface-SelectButtonOptionClick-dc0e3a5e4213b54b89f7b691b59e9292",
      "file": "libs/components/src/lib/select-button/zyfra-select-button.component.ts",
      "deprecated": false,
      "deprecationMessage": "",
      "type": "interface",
      "sourceCode": "import { Component, Input, Output, EventEmitter, ChangeDetectionStrategy } from '@angular/core';\r\n\r\nexport interface SelectButtonOptionClick<T> {\r\n  index: number;\r\n  option: T;\r\n  originalEvent: PointerEvent;\r\n}\r\n\r\nexport interface SelectButtonChange<T> {\r\n  index: number;\r\n  value: T;\r\n}\r\n\r\n@Component({\r\n  selector: 'zyfra-select-button',\r\n  templateUrl: './zyfra-select-button.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class ZyfraSelectButtonComponent<OPTION, VALUE> {\r\n  @Input() options: OPTION[];\r\n  @Input() optionLabel: string;\r\n  @Input() optionValue: string;\r\n  @Input() optionDisabled: string;\r\n  @Input() multiple: boolean;\r\n  @Input() tabindex: number = 0;\r\n  @Input() style: string;\r\n  @Input() styleClass: string;\r\n  @Input() ariaLabelledBy: string;\r\n  @Input() disabled: boolean;\r\n  @Input() dataKey: string;\r\n\r\n  /**\r\n   * Optional Change emitter\r\n   */\r\n  @Output() onChange: EventEmitter<SelectButtonChange<VALUE>['value']> = new EventEmitter();\r\n\r\n  /**\r\n   * Optional OptionClick emitter\r\n   */\r\n  @Output() onOptionClick: EventEmitter<SelectButtonOptionClick<OPTION>> = new EventEmitter();\r\n\r\n  /**\r\n   * Optional Change handler\r\n   */\r\n  public handleChange(data: SelectButtonChange<VALUE>): void {\r\n    this.onChange.emit(data.value);\r\n  }\r\n\r\n  /**\r\n   * Optional OptionClick handler\r\n   */\r\n  public handleOptionClick(data: SelectButtonOptionClick<OPTION>): void {\r\n    this.onOptionClick.emit(data);\r\n  }\r\n}\r\n",
      "properties": [
        {
          "name": "index",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "number",
          "optional": false,
          "description": "",
          "line": 4
        },
        {
          "name": "option",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "T",
          "optional": false,
          "description": "",
          "line": 5
        },
        {
          "name": "originalEvent",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "PointerEvent",
          "optional": false,
          "description": "",
          "line": 6
        }
      ],
      "indexSignatures": [],
      "kind": 164,
      "methods": []
    },
    {
      "name": "SettingsConfig",
      "id": "interface-SettingsConfig-57f079d3b616cde4f867bef250868c61",
      "file": "libs/components/src/lib/nav-menu/model/nav-menu-config.ts",
      "deprecated": false,
      "deprecationMessage": "",
      "type": "interface",
      "sourceCode": "import { ZyfraMenuItem } from './zyfra-menu-item.interface';\r\n\r\nexport type SelectionType = 'single' | 'checkbox';\r\nexport type MenuItemSize = 'standard' | 'enlarged';\r\nexport type ViewMode = 'rubricator' | 'folder' | 'hierarchy'\r\n\r\nexport interface NavMenuEvent {\r\n  item: ZyfraMenuItem,\r\n  groupIndex?: number\r\n}\r\n\r\nexport interface NavMenuSelectionEvent {\r\n  selection: ZyfraMenuItem | ZyfraMenuItem[],\r\n  groupIndex?: number\r\n}\r\n\r\nexport interface SettingsConfig {\r\n  singleGroup?: boolean,\r\n  selectionMode?: SelectionType,\r\n  selectedSize?: MenuItemSize;\r\n}\r\n\r\nexport const DEFAULT_SETTINGS: SettingsConfig = {\r\n  singleGroup: false,\r\n  selectionMode: 'single',\r\n  selectedSize: 'standard'\r\n};\r\n\r\nexport type HeaderConfig = {\r\n  settings?: boolean,\r\n  home?: boolean\r\n};\r\n\r\nexport interface ToolbarConfig {\r\n  filter?: boolean,\r\n  group?: boolean,\r\n  filesMode?: boolean,\r\n  rubricatorMode?: boolean,\r\n  search?: boolean,\r\n  closeAll?: boolean,\r\n  refresh?: boolean,\r\n}\r\n\r\nexport const DEFAULT_TOOLBAR_CONFIG: ToolbarConfig = {\r\n  filter: false,\r\n  group: false,\r\n  filesMode: false,\r\n  rubricatorMode: false,\r\n  search: false,\r\n  closeAll: false,\r\n  refresh: false,\r\n}\r\n",
      "properties": [
        {
          "name": "selectedSize",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "MenuItemSize",
          "optional": true,
          "description": "",
          "line": 20
        },
        {
          "name": "selectionMode",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "SelectionType",
          "optional": true,
          "description": "",
          "line": 19
        },
        {
          "name": "singleGroup",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "boolean",
          "optional": true,
          "description": "",
          "line": 18
        }
      ],
      "indexSignatures": [],
      "kind": 164,
      "methods": []
    },
    {
      "name": "StoryCity",
      "id": "interface-StoryCity-5122b97e5336cc17979c7c8ef36d1bf7",
      "file": "libs/components/src/lib/select-button/zyfra-select-button.component.stories.ts",
      "deprecated": false,
      "deprecationMessage": "",
      "type": "interface",
      "sourceCode": "import { CommonModule } from '@angular/common';\r\nimport { moduleMetadata } from '@storybook/angular';\r\nimport { Meta, Story } from '@storybook/angular/types-6-0';\r\nimport { ZyfraSelectButtonComponent } from './zyfra-select-button.component';\r\nimport { ZyfraSelectButtonModule } from './zyfra-select-button.module';\r\n\r\nexport default {\r\n  moduleId: module.id,\r\n  title: 'Buttons/SelectButton',\r\n  component: ZyfraSelectButtonComponent,\r\n  decorators: [\r\n    moduleMetadata({\r\n      imports: [CommonModule, ZyfraSelectButtonModule],\r\n    }),\r\n  ],\r\n  parameters: {\r\n    docs: {\r\n      page: require('./zyfra-select-button.component.story.doc.mdx').default,\r\n    },\r\n  },\r\n} as Meta;\r\n\r\ninterface StoryCity {\r\n  name: string;\r\n  code: string;\r\n}\r\n\r\nconst cities: StoryCity[] = [\r\n  { name: 'Russia', code: 'RU' },\r\n  { name: 'Rome', code: 'RM' },\r\n  { name: 'London', code: 'LDN' },\r\n  { name: 'Istanbul', code: 'IST' },\r\n  { name: 'Paris', code: 'PRS' },\r\n];\r\n\r\nconst Template: Story<ZyfraSelectButtonComponent<StoryCity, string>> = (args) => ({\r\n  component: ZyfraSelectButtonComponent,\r\n  props: args,\r\n});\r\n\r\nexport const Default = Template.bind({});\r\nDefault.args = {\r\n  options: cities,\r\n  optionLabel: 'name',\r\n  optionDisabled: 'inactive',\r\n  multiple: true,\r\n  optionValue: 'code',\r\n  disabled: false,\r\n  styleClass: 'selectbutton-default',\r\n};\r\n\r\nexport const DefaultMini = Template.bind({});\r\nDefaultMini.args = {\r\n  ...Default.args,\r\n  styleClass: 'p-selectbutton-default p-selectbutton-mini',\r\n};\r\n\r\nexport const Danger = Template.bind({});\r\nDanger.args = {\r\n  ...Default.args,\r\n  styleClass: 'p-selectbutton-danger',\r\n};\r\n",
      "properties": [
        {
          "name": "code",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 25
        },
        {
          "name": "name",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 24
        }
      ],
      "indexSignatures": [],
      "kind": 164,
      "methods": []
    },
    {
      "name": "ToolbarConfig",
      "id": "interface-ToolbarConfig-57f079d3b616cde4f867bef250868c61",
      "file": "libs/components/src/lib/nav-menu/model/nav-menu-config.ts",
      "deprecated": false,
      "deprecationMessage": "",
      "type": "interface",
      "sourceCode": "import { ZyfraMenuItem } from './zyfra-menu-item.interface';\r\n\r\nexport type SelectionType = 'single' | 'checkbox';\r\nexport type MenuItemSize = 'standard' | 'enlarged';\r\nexport type ViewMode = 'rubricator' | 'folder' | 'hierarchy'\r\n\r\nexport interface NavMenuEvent {\r\n  item: ZyfraMenuItem,\r\n  groupIndex?: number\r\n}\r\n\r\nexport interface NavMenuSelectionEvent {\r\n  selection: ZyfraMenuItem | ZyfraMenuItem[],\r\n  groupIndex?: number\r\n}\r\n\r\nexport interface SettingsConfig {\r\n  singleGroup?: boolean,\r\n  selectionMode?: SelectionType,\r\n  selectedSize?: MenuItemSize;\r\n}\r\n\r\nexport const DEFAULT_SETTINGS: SettingsConfig = {\r\n  singleGroup: false,\r\n  selectionMode: 'single',\r\n  selectedSize: 'standard'\r\n};\r\n\r\nexport type HeaderConfig = {\r\n  settings?: boolean,\r\n  home?: boolean\r\n};\r\n\r\nexport interface ToolbarConfig {\r\n  filter?: boolean,\r\n  group?: boolean,\r\n  filesMode?: boolean,\r\n  rubricatorMode?: boolean,\r\n  search?: boolean,\r\n  closeAll?: boolean,\r\n  refresh?: boolean,\r\n}\r\n\r\nexport const DEFAULT_TOOLBAR_CONFIG: ToolbarConfig = {\r\n  filter: false,\r\n  group: false,\r\n  filesMode: false,\r\n  rubricatorMode: false,\r\n  search: false,\r\n  closeAll: false,\r\n  refresh: false,\r\n}\r\n",
      "properties": [
        {
          "name": "closeAll",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "boolean",
          "optional": true,
          "description": "",
          "line": 40
        },
        {
          "name": "filesMode",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "boolean",
          "optional": true,
          "description": "",
          "line": 37
        },
        {
          "name": "filter",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "boolean",
          "optional": true,
          "description": "",
          "line": 35
        },
        {
          "name": "group",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "boolean",
          "optional": true,
          "description": "",
          "line": 36
        },
        {
          "name": "refresh",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "boolean",
          "optional": true,
          "description": "",
          "line": 41
        },
        {
          "name": "rubricatorMode",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "boolean",
          "optional": true,
          "description": "",
          "line": 38
        },
        {
          "name": "search",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "boolean",
          "optional": true,
          "description": "",
          "line": 39
        }
      ],
      "indexSignatures": [],
      "kind": 164,
      "methods": []
    },
    {
      "name": "TToggleButtonClick",
      "id": "interface-TToggleButtonClick-4d3e44ec5e568c53bad63add1efefe41",
      "file": "libs/components/src/lib/toggle-button/zyfra-toggle-button.component.ts",
      "deprecated": false,
      "deprecationMessage": "",
      "type": "interface",
      "sourceCode": "import { Component, Input, Output, EventEmitter, ChangeDetectionStrategy } from '@angular/core';\r\n\r\nexport interface TToggleButtonClick {\r\n  originalEvent: PointerEvent;\r\n  checked: boolean;\r\n}\r\n\r\n@Component({\r\n  selector: 'zyfra-toggle-button',\r\n  templateUrl: './zyfra-toggle-button.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class ZyfraToggleButtonComponent {\r\n  @Input() model = true;\r\n  @Input() onLabel: string = 'confirm';\r\n  @Input() offLabel: string;\r\n  @Input() onIcon = 'zyfra-icon selection-check-simple';\r\n  @Input() offIcon = 'zyfra-icon cancel-close';\r\n  @Input() iconPos: 'left' | 'right' = 'left';\r\n  @Input() disabled: boolean;\r\n  @Input() style: string;\r\n  @Input() styleClass: string;\r\n  @Input() tabindex: number;\r\n  @Input() inputId: string;\r\n  @Input() ariaLabelledBy: string;\r\n\r\n  @Output() onChange: EventEmitter<boolean> = new EventEmitter<boolean>();\r\n\r\n  public handleChange(event: TToggleButtonClick): void {\r\n    this.model = event.checked;\r\n    this.onChange.emit(this.model);\r\n  }\r\n}\r\n",
      "properties": [
        {
          "name": "checked",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "boolean",
          "optional": false,
          "description": "",
          "line": 5
        },
        {
          "name": "originalEvent",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "PointerEvent",
          "optional": false,
          "description": "",
          "line": 4
        }
      ],
      "indexSignatures": [],
      "kind": 164,
      "methods": []
    },
    {
      "name": "ZyfraAccordionOpenClose",
      "id": "interface-ZyfraAccordionOpenClose-e16615dedc4e5e24cb7a17d14fe9a38b",
      "file": "libs/components/src/lib/accordion/zyfra-accordion/zyfra-accordion.component.ts",
      "deprecated": false,
      "deprecationMessage": "",
      "type": "interface",
      "sourceCode": "import {\r\n  AfterViewInit,\r\n  ChangeDetectionStrategy,\r\n  Component,\r\n  ContentChildren,\r\n  EventEmitter,\r\n  Input,\r\n  OnDestroy,\r\n  OnInit,\r\n  Output,\r\n  QueryList,\r\n  ViewChild,\r\n} from '@angular/core';\r\nimport { Accordion } from 'primeng/accordion';\r\nimport { ZyfraAccordionTabComponent } from '../zyfra-accordion-tab/zyfra-accordion-tab.component';\r\nimport { Subscription } from 'rxjs';\r\n\r\nexport interface ZyfraAccordionOpenClose {\r\n  originalEvent: PointerEvent;\r\n  index: number;\r\n}\r\n\r\n@Component({\r\n  selector: 'zyfra-accordion',\r\n  templateUrl: './zyfra-accordion.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  providers: [\r\n    {\r\n      provide: Accordion,\r\n      useFactory: (zyfraAccordion: ZyfraAccordionComponent): Accordion => zyfraAccordion.accordion,\r\n      deps: [ZyfraAccordionComponent],\r\n    },\r\n  ],\r\n})\r\nexport class ZyfraAccordionComponent implements AfterViewInit, OnDestroy, OnInit {\r\n  /** allow multiple tabs be active at the same time. */\r\n  @Input() multiple = false;\r\n  /** inline style */\r\n  @Input() style: { [key: string]: string | number | null };\r\n  /** css class */\r\n  @Input() styleClass: string;\r\n  /** expand icon class */\r\n  @Input() expandIcon = 'zyfra-icon chevrons-double-up';\r\n  /** collapse icon class */\r\n  @Input() collapseIcon = 'zyfra-icon chevrons-double-down';\r\n\r\n  /** EventEmitter  */\r\n  @Output() activeIndexChange: EventEmitter<number | number[]> = new EventEmitter();\r\n  /** EventEmitter on closing tab */\r\n  @Output() onClose: EventEmitter<ZyfraAccordionOpenClose> = new EventEmitter();\r\n  /** EventEmitter on opening tab */\r\n  @Output() onOpen: EventEmitter<ZyfraAccordionOpenClose> = new EventEmitter();\r\n\r\n  /** primeng Accordion component */\r\n  @ViewChild(Accordion, { static: true }) accordion: Accordion;\r\n  /** zyfra AccordionTab component */\r\n  @ContentChildren(ZyfraAccordionTabComponent) tabs: QueryList<ZyfraAccordionTabComponent>;\r\n\r\n  private tabs$: Subscription;\r\n\r\n  ngOnInit(): void {\r\n    // Иначе в group-panels работает не корректно\r\n    this.accordion.collapseIcon = this.collapseIcon;\r\n    this.accordion.expandIcon = this.expandIcon;\r\n  }\r\n  \r\n  ngAfterViewInit(): void {\r\n    this.tabs$ = this.tabs.changes.subscribe(() => this.reInitTab());\r\n    this.reInitTab();\r\n  }\r\n\r\n  public reInitTab(): void {\r\n    const primengAccordionTabs = this.tabs.toArray().map((t) => t.tab);\r\n    this.accordion.tabList.reset(primengAccordionTabs);\r\n    this.accordion.tabList.notifyOnChanges();\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.tabs$?.unsubscribe();\r\n  }\r\n}\r\n",
      "properties": [
        {
          "name": "index",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "number",
          "optional": false,
          "description": "",
          "line": 20
        },
        {
          "name": "originalEvent",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "PointerEvent",
          "optional": false,
          "description": "",
          "line": 19
        }
      ],
      "indexSignatures": [],
      "kind": 164,
      "methods": []
    },
    {
      "name": "ZyfraDatePickerLocaleInterface",
      "id": "interface-ZyfraDatePickerLocaleInterface-d0f2e08d965a13bc3c8c8105be6725f6",
      "file": "libs/components/src/lib/datepicker/model/zyfra-date-picker.model.ts",
      "deprecated": false,
      "deprecationMessage": "",
      "type": "interface",
      "sourceCode": "export interface ZyfraDatePickerLocaleInterface {\r\n  locale: Locale;\r\n}\r\n",
      "properties": [
        {
          "name": "locale",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Locale",
          "optional": false,
          "description": "",
          "line": 2
        }
      ],
      "indexSignatures": [],
      "kind": 164,
      "methods": []
    },
    {
      "name": "ZyfraMenuAppItem",
      "id": "interface-ZyfraMenuAppItem-20ba14e606ecd0c8ecf0d503e919e930",
      "file": "libs/components/src/lib/menu-applications/zyfra-menu-applications.interface.ts",
      "deprecated": false,
      "deprecationMessage": "",
      "type": "interface",
      "sourceCode": "interface ZyfraMenuAppTransition {\r\n  delay: number;\r\n  duration: number;\r\n  timingFunction: string;\r\n}\r\n\r\nexport interface ZyfraMenuAppTransitionSettings {\r\n  open: ZyfraMenuAppTransition;\r\n  close: ZyfraMenuAppTransition;\r\n}\r\n\r\nexport interface ZyfraMenuAppItem {\r\n  title: string;\r\n  icon: string;\r\n  description?: string;\r\n}\r\n",
      "properties": [
        {
          "name": "description",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "string",
          "optional": true,
          "description": "",
          "line": 15
        },
        {
          "name": "icon",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 14
        },
        {
          "name": "title",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 13
        }
      ],
      "indexSignatures": [],
      "kind": 164,
      "methods": []
    },
    {
      "name": "ZyfraMenuAppTransition",
      "id": "interface-ZyfraMenuAppTransition-20ba14e606ecd0c8ecf0d503e919e930",
      "file": "libs/components/src/lib/menu-applications/zyfra-menu-applications.interface.ts",
      "deprecated": false,
      "deprecationMessage": "",
      "type": "interface",
      "sourceCode": "interface ZyfraMenuAppTransition {\r\n  delay: number;\r\n  duration: number;\r\n  timingFunction: string;\r\n}\r\n\r\nexport interface ZyfraMenuAppTransitionSettings {\r\n  open: ZyfraMenuAppTransition;\r\n  close: ZyfraMenuAppTransition;\r\n}\r\n\r\nexport interface ZyfraMenuAppItem {\r\n  title: string;\r\n  icon: string;\r\n  description?: string;\r\n}\r\n",
      "properties": [
        {
          "name": "delay",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "number",
          "optional": false,
          "description": "",
          "line": 2
        },
        {
          "name": "duration",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "number",
          "optional": false,
          "description": "",
          "line": 3
        },
        {
          "name": "timingFunction",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 4
        }
      ],
      "indexSignatures": [],
      "kind": 164,
      "methods": []
    },
    {
      "name": "ZyfraMenuAppTransitionSettings",
      "id": "interface-ZyfraMenuAppTransitionSettings-20ba14e606ecd0c8ecf0d503e919e930",
      "file": "libs/components/src/lib/menu-applications/zyfra-menu-applications.interface.ts",
      "deprecated": false,
      "deprecationMessage": "",
      "type": "interface",
      "sourceCode": "interface ZyfraMenuAppTransition {\r\n  delay: number;\r\n  duration: number;\r\n  timingFunction: string;\r\n}\r\n\r\nexport interface ZyfraMenuAppTransitionSettings {\r\n  open: ZyfraMenuAppTransition;\r\n  close: ZyfraMenuAppTransition;\r\n}\r\n\r\nexport interface ZyfraMenuAppItem {\r\n  title: string;\r\n  icon: string;\r\n  description?: string;\r\n}\r\n",
      "properties": [
        {
          "name": "close",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "ZyfraMenuAppTransition",
          "optional": false,
          "description": "",
          "line": 9
        },
        {
          "name": "open",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "ZyfraMenuAppTransition",
          "optional": false,
          "description": "",
          "line": 8
        }
      ],
      "indexSignatures": [],
      "kind": 164,
      "methods": []
    },
    {
      "name": "ZyfraMenuItem",
      "id": "interface-ZyfraMenuItem-5d32fc1c1e8124d9d27628033d41c28d",
      "file": "libs/components/src/lib/nav-menu/model/zyfra-menu-item.interface.ts",
      "deprecated": false,
      "deprecationMessage": "",
      "type": "interface",
      "sourceCode": "import { QueryParamsHandling } from '@angular/router';\r\n\r\nexport interface ZyfraMenuItem {\r\n  label?: string;\r\n  icon?: string;\r\n  command?: (event?: any) => void;\r\n  url?: string;\r\n  items?: ZyfraMenuItem[];\r\n  expanded?: boolean;\r\n  disabled?: boolean;\r\n  visible?: boolean;\r\n  target?: string;\r\n  escape?: boolean;\r\n  routerLinkActiveOptions?: any;\r\n  separator?: boolean;\r\n  badge?: string;\r\n  tooltip?: string;\r\n  tooltipPosition?: string;\r\n  badgeStyleClass?: string;\r\n  style?: any;\r\n  styleClass?: string;\r\n  title?: string;\r\n  id?: string;\r\n  automationId?: any;\r\n  tabindex?: string;\r\n  routerLink?: any;\r\n  queryParams?: {\r\n    [k: string]: any;\r\n  };\r\n  fragment?: string;\r\n  queryParamsHandling?: QueryParamsHandling;\r\n  preserveFragment?: boolean;\r\n  skipLocationChange?: boolean;\r\n  replaceUrl?: boolean;\r\n  state?: {\r\n    [k: string]: any;\r\n  };\r\n  tooltipOptions?: {\r\n    tooltipLabel?: string;\r\n    tooltipPosition?: string;\r\n    tooltipEvent?: string;\r\n    appendTo?: any;\r\n    positionStyle?: string;\r\n    tooltipStyleClass?: string;\r\n    tooltipZIndex?: string;\r\n    escape?: boolean;\r\n    disabled?: boolean;\r\n    positionTop?: number;\r\n    positionLeft?: number;\r\n    showDelay?: number;\r\n    hideDelay?: number;\r\n    life?: number;\r\n  };\r\n}\r\n",
      "properties": [
        {
          "name": "automationId",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "any",
          "optional": true,
          "description": "",
          "line": 24
        },
        {
          "name": "badge",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "string",
          "optional": true,
          "description": "",
          "line": 16
        },
        {
          "name": "badgeStyleClass",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "string",
          "optional": true,
          "description": "",
          "line": 19
        },
        {
          "name": "command",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "function",
          "optional": true,
          "description": "",
          "line": 6
        },
        {
          "name": "disabled",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "boolean",
          "optional": true,
          "description": "",
          "line": 10
        },
        {
          "name": "escape",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "boolean",
          "optional": true,
          "description": "",
          "line": 13
        },
        {
          "name": "expanded",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "boolean",
          "optional": true,
          "description": "",
          "line": 9
        },
        {
          "name": "fragment",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "string",
          "optional": true,
          "description": "",
          "line": 30
        },
        {
          "name": "icon",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "string",
          "optional": true,
          "description": "",
          "line": 5
        },
        {
          "name": "id",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "string",
          "optional": true,
          "description": "",
          "line": 23
        },
        {
          "name": "items",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "ZyfraMenuItem[]",
          "optional": true,
          "description": "",
          "line": 8
        },
        {
          "name": "label",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "string",
          "optional": true,
          "description": "",
          "line": 4
        },
        {
          "name": "preserveFragment",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "boolean",
          "optional": true,
          "description": "",
          "line": 32
        },
        {
          "name": "queryParams",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "literal type",
          "optional": true,
          "description": "",
          "line": 27
        },
        {
          "name": "queryParamsHandling",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "QueryParamsHandling",
          "optional": true,
          "description": "",
          "line": 31
        },
        {
          "name": "replaceUrl",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "boolean",
          "optional": true,
          "description": "",
          "line": 34
        },
        {
          "name": "routerLink",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "any",
          "optional": true,
          "description": "",
          "line": 26
        },
        {
          "name": "routerLinkActiveOptions",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "any",
          "optional": true,
          "description": "",
          "line": 14
        },
        {
          "name": "separator",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "boolean",
          "optional": true,
          "description": "",
          "line": 15
        },
        {
          "name": "skipLocationChange",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "boolean",
          "optional": true,
          "description": "",
          "line": 33
        },
        {
          "name": "state",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "literal type",
          "optional": true,
          "description": "",
          "line": 35
        },
        {
          "name": "style",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "any",
          "optional": true,
          "description": "",
          "line": 20
        },
        {
          "name": "styleClass",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "string",
          "optional": true,
          "description": "",
          "line": 21
        },
        {
          "name": "tabindex",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "string",
          "optional": true,
          "description": "",
          "line": 25
        },
        {
          "name": "target",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "string",
          "optional": true,
          "description": "",
          "line": 12
        },
        {
          "name": "title",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "string",
          "optional": true,
          "description": "",
          "line": 22
        },
        {
          "name": "tooltip",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "string",
          "optional": true,
          "description": "",
          "line": 17
        },
        {
          "name": "tooltipOptions",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "literal type",
          "optional": true,
          "description": "",
          "line": 38
        },
        {
          "name": "tooltipPosition",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "string",
          "optional": true,
          "description": "",
          "line": 18
        },
        {
          "name": "url",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "string",
          "optional": true,
          "description": "",
          "line": 7
        },
        {
          "name": "visible",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "boolean",
          "optional": true,
          "description": "",
          "line": 11
        }
      ],
      "indexSignatures": [],
      "kind": 164,
      "methods": []
    },
    {
      "name": "ZyfraTime",
      "id": "interface-ZyfraTime-ed30ff4c3295120800f74b0f157035b7",
      "file": "libs/components/src/lib/datepicker/model/zyfra-time.model.ts",
      "deprecated": false,
      "deprecationMessage": "",
      "type": "interface",
      "sourceCode": "export interface ZyfraTime {\r\n  value: string;\r\n  date: Date;\r\n}\r\n",
      "properties": [
        {
          "name": "date",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Date",
          "optional": false,
          "description": "",
          "line": 3
        },
        {
          "name": "value",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 2
        }
      ],
      "indexSignatures": [],
      "kind": 164,
      "methods": []
    }
  ],
  "injectables": [
    {
      "name": "NavMenuService",
      "id": "injectable-NavMenuService-8052d17fb4ee0c096edf5865b6fc16b8",
      "file": "libs/components/src/lib/nav-menu/service/selection.service.ts",
      "properties": [
        {
          "name": "selection",
          "defaultValue": "new BehaviorSubject<TreeNode>(null)",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "optional": false,
          "description": "",
          "line": 7,
          "modifierKind": [121]
        },
        {
          "name": "selection$",
          "defaultValue": "this.selection.asObservable()",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "optional": false,
          "description": "",
          "line": 8
        }
      ],
      "methods": [
        {
          "name": "selectionChange",
          "args": [
            {
              "name": "node",
              "type": "TreeNode",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 10,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [123],
          "jsdoctags": [
            {
              "name": "node",
              "type": "TreeNode",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        }
      ],
      "deprecated": false,
      "deprecationMessage": "",
      "description": "",
      "rawdescription": "\n",
      "sourceCode": "import { BehaviorSubject } from 'rxjs';\r\nimport { Injectable } from '@angular/core';\r\nimport { TreeNode } from 'primeng/api';\r\n\r\n@Injectable()\r\nexport class NavMenuService {\r\n  private selection = new BehaviorSubject<TreeNode>(null);\r\n  selection$ = this.selection.asObservable();\r\n\r\n  public selectionChange(node: TreeNode): void {\r\n    if (this.selection.value) {\r\n      this.selection.value.styleClass = '';\r\n    }\r\n    if (node) {\r\n      node.styleClass = 'active';\r\n    }\r\n    this.selection.next(node);\r\n  }\r\n}\r\n",
      "type": "injectable"
    },
    {
      "name": "ToastService",
      "id": "injectable-ToastService-c59966da1afd91a165617e7487cb4d0e",
      "file": "libs/components/src/lib/toast/toast.service.ts",
      "properties": [],
      "methods": [
        {
          "name": "add",
          "args": [
            {
              "name": "message",
              "type": "ToastMessage",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 10,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [123],
          "jsdoctags": [
            {
              "name": "message",
              "type": "ToastMessage",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "addAll",
          "args": [
            {
              "name": "messages",
              "type": "ToastMessage[]",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 14,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [123],
          "jsdoctags": [
            {
              "name": "messages",
              "type": "ToastMessage[]",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "clear",
          "args": [
            {
              "name": "key",
              "type": "string",
              "deprecated": false,
              "deprecationMessage": "",
              "optional": true
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 18,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [123],
          "jsdoctags": [
            {
              "name": "key",
              "type": "string",
              "deprecated": false,
              "deprecationMessage": "",
              "optional": true,
              "tagName": {
                "text": "param"
              }
            }
          ]
        }
      ],
      "deprecated": false,
      "deprecationMessage": "",
      "description": "",
      "rawdescription": "\n",
      "sourceCode": "import { Injectable, Optional } from '@angular/core';\r\nimport { Message, MessageService } from 'primeng/api';\r\n\r\nexport type ToastMessage = Message;\r\n\r\n@Injectable()\r\nexport class ToastService {\r\n  constructor(@Optional() private readonly messageService: MessageService) {}\r\n\r\n  public add(message: ToastMessage): void {\r\n    this.messageService.add(message);\r\n  }\r\n\r\n  public addAll(messages: ToastMessage[]): void {\r\n    this.messageService.addAll(messages);\r\n  }\r\n\r\n  public clear(key?: string): void {\r\n    this.messageService.clear(key);\r\n  }\r\n}\r\n",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "deprecated": false,
        "deprecationMessage": "",
        "args": [
          {
            "name": "messageService",
            "type": "MessageService",
            "deprecated": false,
            "deprecationMessage": ""
          }
        ],
        "line": 7,
        "jsdoctags": [
          {
            "name": "messageService",
            "type": "MessageService",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      "type": "injectable"
    },
    {
      "name": "ZyfraDropdownWithContentService",
      "id": "injectable-ZyfraDropdownWithContentService-434e8c2148ea38cd8a3c5a7873085df7",
      "file": "libs/components/src/lib/dropdown-with-content/zyfra-dropdown-with-content.service.ts",
      "properties": [],
      "methods": [
        {
          "name": "getHiddenElementDimensions",
          "args": [
            {
              "name": "element",
              "type": "HTMLElement",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "Dimensions",
          "typeParameters": [],
          "line": 62,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [121],
          "jsdoctags": [
            {
              "name": "element",
              "type": "HTMLElement",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "getViewport",
          "args": [],
          "optional": false,
          "returnType": "Dimensions",
          "typeParameters": [],
          "line": 77,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [121]
        },
        {
          "name": "relativePosition",
          "args": [
            {
              "name": "dropdownPanelElement",
              "type": "HTMLElement",
              "deprecated": false,
              "deprecationMessage": ""
            },
            {
              "name": "target",
              "type": "HTMLElement",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 25,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [121],
          "jsdoctags": [
            {
              "name": "dropdownPanelElement",
              "type": "HTMLElement",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "target",
              "type": "HTMLElement",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "setDropdownPanelPosition",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 13,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [123]
        }
      ],
      "deprecated": false,
      "deprecationMessage": "",
      "description": "",
      "rawdescription": "\n",
      "sourceCode": "import { DOCUMENT } from '@angular/common';\r\nimport { ElementRef, Inject, Injectable } from '@angular/core';\r\n\r\ninterface Dimensions {\r\n  width: number;\r\n  height: number;\r\n}\r\n\r\n@Injectable()\r\nexport class ZyfraDropdownWithContentService {\r\n  constructor(@Inject(DOCUMENT) private document: Document, private element: ElementRef) {}\r\n\r\n  public setDropdownPanelPosition(): void {\r\n    const dropdownPanel: HTMLElement = this.element.nativeElement.querySelector('.p-dropdown-panel');\r\n    const targetHeightElement: HTMLElement = this.element.nativeElement.firstElementChild;\r\n    dropdownPanel.style.visibility = 'hidden';\r\n\r\n    setTimeout(() => {\r\n      this.relativePosition(dropdownPanel, targetHeightElement);\r\n      dropdownPanel.style.visibility = 'visible';\r\n    });\r\n  }\r\n\r\n  // https://github.com/primefaces/primeng/blob/master/src/app/components/dom/domhandler.ts#L94\r\n  private relativePosition(dropdownPanelElement: HTMLElement, target: HTMLElement): void {\r\n    const elementDimensions = dropdownPanelElement.offsetParent\r\n      ? { width: dropdownPanelElement.offsetWidth, height: dropdownPanelElement.offsetHeight }\r\n      : this.getHiddenElementDimensions(dropdownPanelElement);\r\n\r\n    const targetHeight = target.offsetHeight;\r\n    const targetOffset = target.getBoundingClientRect();\r\n    const viewport = this.getViewport();\r\n\r\n    let top: number, left: number;\r\n\r\n    if (targetOffset.top + targetHeight + elementDimensions.height > viewport.height) {\r\n      top = -1 * elementDimensions.height;\r\n      dropdownPanelElement.style.transformOrigin = 'bottom';\r\n      if (targetOffset.top + top < 0) {\r\n        top = -1 * targetOffset.top;\r\n      }\r\n    } else {\r\n      top = targetHeight;\r\n      dropdownPanelElement.style.transformOrigin = 'top';\r\n    }\r\n\r\n    if (elementDimensions.width > viewport.width) {\r\n      // element wider then viewport and cannot fit on screen (align at left side of viewport)\r\n      left = targetOffset.left * -1;\r\n    } else if (targetOffset.left + elementDimensions.width > viewport.width) {\r\n      // element wider then viewport but can be fit on screen (align at right side of viewport)\r\n      left = (targetOffset.left + elementDimensions.width - viewport.width) * -1;\r\n    } else {\r\n      // element fits on screen (align with target)\r\n      left = 0;\r\n    }\r\n\r\n    dropdownPanelElement.style.top = top + 'px';\r\n    dropdownPanelElement.style.left = left + 'px';\r\n  }\r\n\r\n  private getHiddenElementDimensions(element: HTMLElement): Dimensions {\r\n    const dimensions: Dimensions = {\r\n      width: 0,\r\n      height: 0,\r\n    };\r\n    element.style.visibility = 'hidden';\r\n    element.style.display = 'block';\r\n    dimensions.width = element.offsetWidth;\r\n    dimensions.height = element.offsetHeight;\r\n    element.style.display = 'none';\r\n    element.style.visibility = 'visible';\r\n\r\n    return dimensions;\r\n  }\r\n\r\n  private getViewport(): Dimensions {\r\n    const win = this.document.defaultView,\r\n      d = this.document,\r\n      e = d.documentElement,\r\n      g = d.getElementsByTagName('body')[0],\r\n      w = win.innerWidth || e.clientWidth || g.clientWidth,\r\n      h = win.innerHeight || e.clientHeight || g.clientHeight;\r\n\r\n    return { width: w, height: h };\r\n  }\r\n}\r\n",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "deprecated": false,
        "deprecationMessage": "",
        "args": [
          {
            "name": "document",
            "type": "Document",
            "deprecated": false,
            "deprecationMessage": ""
          },
          {
            "name": "element",
            "type": "ElementRef",
            "deprecated": false,
            "deprecationMessage": ""
          }
        ],
        "line": 10,
        "jsdoctags": [
          {
            "name": "document",
            "type": "Document",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          },
          {
            "name": "element",
            "type": "ElementRef",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      "type": "injectable"
    },
    {
      "name": "ZyfraDynamicDialogService",
      "id": "injectable-ZyfraDynamicDialogService-1955029d71d64cb66a3a1dc465c345c5",
      "file": "libs/components/src/lib/dynamic-dialog/zyfra-dynamic-dialog.service.ts",
      "properties": [
        {
          "name": "config",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "ZyfraDynamicDialogConfig",
          "optional": false,
          "description": "",
          "line": 24,
          "modifierKind": [123]
        },
        {
          "name": "dialogComponentRefMap",
          "defaultValue": "new Map()",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Map<DynamicDialogRef | ComponentRef<DynamicDialogComponent>>",
          "optional": false,
          "description": "",
          "line": 23,
          "modifierKind": [123]
        },
        {
          "name": "ref",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "ZyfraDynamicDialogRef",
          "optional": false,
          "description": "",
          "line": 25,
          "modifierKind": [123]
        }
      ],
      "methods": [
        {
          "name": "appendDialogComponentToBody",
          "args": [
            {
              "name": "config",
              "type": "DynamicDialogConfig",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "DynamicDialogRef",
          "typeParameters": [],
          "line": 42,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [121],
          "jsdoctags": [
            {
              "name": "config",
              "type": "DynamicDialogConfig",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "open",
          "args": [
            {
              "name": "componentType",
              "type": "Type<>",
              "deprecated": false,
              "deprecationMessage": ""
            },
            {
              "name": "config",
              "type": "ZyfraDynamicDialogConfig",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "ZyfraDynamicDialogRef",
          "typeParameters": [],
          "line": 33,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [123],
          "jsdoctags": [
            {
              "name": "componentType",
              "type": "Type<>",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "config",
              "type": "ZyfraDynamicDialogConfig",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "removeDialogComponentFromBody",
          "args": [
            {
              "name": "dialogRef",
              "type": "DynamicDialogRef",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 72,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [121],
          "jsdoctags": [
            {
              "name": "dialogRef",
              "type": "DynamicDialogRef",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        }
      ],
      "deprecated": false,
      "deprecationMessage": "",
      "description": "",
      "rawdescription": "\n",
      "sourceCode": "import {\r\n  ApplicationRef,\r\n  ComponentFactoryResolver,\r\n  ComponentRef,\r\n  EmbeddedViewRef,\r\n  Injectable,\r\n  Injector,\r\n  Type,\r\n} from '@angular/core';\r\nimport {\r\n  DynamicDialogComponent,\r\n  DynamicDialogConfig,\r\n  DynamicDialogInjector,\r\n  DynamicDialogRef,\r\n} from 'primeng/dynamicdialog';\r\nimport { ZyfraDynamicDialogRef } from '.';\r\nimport { ZyfraDynamicDialogConfig } from './zyfra-dynamic-dialog-config';\r\n\r\n@Injectable()\r\nexport class ZyfraDynamicDialogService {\r\n  // TODO: check why it's not exported from the module\r\n\r\n  public dialogComponentRefMap: Map<DynamicDialogRef, ComponentRef<DynamicDialogComponent>> = new Map();\r\n  public config: ZyfraDynamicDialogConfig;\r\n  public ref: ZyfraDynamicDialogRef;\r\n\r\n  constructor(\r\n    private componentFactoryResolver: ComponentFactoryResolver,\r\n    private appRef: ApplicationRef,\r\n    private injector: Injector\r\n  ) {}\r\n\r\n  public open(componentType: Type<unknown>, config: ZyfraDynamicDialogConfig): ZyfraDynamicDialogRef {\r\n    const dialogRef = this.appendDialogComponentToBody(config);\r\n    this.config = config;\r\n    this.ref = dialogRef;\r\n    this.dialogComponentRefMap.get(dialogRef).instance.childComponentType = componentType;\r\n\r\n    return dialogRef;\r\n  }\r\n\r\n  private appendDialogComponentToBody(config: DynamicDialogConfig): DynamicDialogRef {\r\n    const map = new WeakMap();\r\n    map.set(DynamicDialogConfig, config);\r\n\r\n    const dialogRef = new DynamicDialogRef();\r\n    map.set(DynamicDialogRef, dialogRef);\r\n\r\n    const sub = dialogRef.onClose.subscribe(() => {\r\n      this.dialogComponentRefMap.get(dialogRef).instance.close();\r\n    });\r\n\r\n    const destroySub = dialogRef.onDestroy.subscribe(() => {\r\n      this.removeDialogComponentFromBody(dialogRef);\r\n      destroySub.unsubscribe();\r\n      sub.unsubscribe();\r\n    });\r\n\r\n    const componentFactory = this.componentFactoryResolver.resolveComponentFactory(DynamicDialogComponent);\r\n    const componentRef = componentFactory.create(new DynamicDialogInjector(this.injector, map));\r\n\r\n    this.appRef.attachView(componentRef.hostView);\r\n\r\n    const domElem = (componentRef.hostView as EmbeddedViewRef<unknown>).rootNodes[0] as HTMLElement;\r\n    document.body.appendChild(domElem);\r\n\r\n    this.dialogComponentRefMap.set(dialogRef, componentRef);\r\n\r\n    return dialogRef;\r\n  }\r\n\r\n  private removeDialogComponentFromBody(dialogRef: DynamicDialogRef): void {\r\n    if (!dialogRef || !this.dialogComponentRefMap.has(dialogRef)) {\r\n      return;\r\n    }\r\n\r\n    const dialogComponentRef = this.dialogComponentRefMap.get(dialogRef);\r\n    this.appRef.detachView(dialogComponentRef.hostView);\r\n    dialogComponentRef.destroy();\r\n    this.dialogComponentRefMap.delete(dialogRef);\r\n  }\r\n}\r\n",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "deprecated": false,
        "deprecationMessage": "",
        "args": [
          {
            "name": "componentFactoryResolver",
            "type": "ComponentFactoryResolver",
            "deprecated": false,
            "deprecationMessage": ""
          },
          {
            "name": "appRef",
            "type": "ApplicationRef",
            "deprecated": false,
            "deprecationMessage": ""
          },
          {
            "name": "injector",
            "type": "Injector",
            "deprecated": false,
            "deprecationMessage": ""
          }
        ],
        "line": 25,
        "jsdoctags": [
          {
            "name": "componentFactoryResolver",
            "type": "ComponentFactoryResolver",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          },
          {
            "name": "appRef",
            "type": "ApplicationRef",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          },
          {
            "name": "injector",
            "type": "Injector",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      "type": "injectable"
    },
    {
      "name": "ZyfraSplitterTemplatesService",
      "id": "injectable-ZyfraSplitterTemplatesService-8f5328451849cc79689c7414d26bd034",
      "file": "libs/components/src/lib/splitter/zyfra-splitter-templates.service.ts",
      "properties": [
        {
          "name": "list$",
          "defaultValue": "this.listSource$.asObservable()",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "optional": false,
          "description": "",
          "line": 9,
          "modifierKind": [123, 143]
        },
        {
          "name": "listSet",
          "defaultValue": "new Set<ZyfraSplitterTemplateDirective>()",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "optional": false,
          "description": "",
          "line": 7,
          "modifierKind": [121, 143]
        },
        {
          "name": "listSource$",
          "defaultValue": "new ReplaySubject<ZyfraSplitterTemplateDirective[]>(1)",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "optional": false,
          "description": "",
          "line": 8,
          "modifierKind": [121, 143]
        }
      ],
      "methods": [
        {
          "name": "add",
          "args": [
            {
              "name": "template",
              "type": "ZyfraSplitterTemplateDirective",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 11,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [123],
          "jsdoctags": [
            {
              "name": "template",
              "type": "ZyfraSplitterTemplateDirective",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "emit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 21,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [121]
        },
        {
          "name": "remove",
          "args": [
            {
              "name": "template",
              "type": "ZyfraSplitterTemplateDirective",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 16,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [123],
          "jsdoctags": [
            {
              "name": "template",
              "type": "ZyfraSplitterTemplateDirective",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        }
      ],
      "deprecated": false,
      "deprecationMessage": "",
      "description": "",
      "rawdescription": "\n",
      "sourceCode": "import { Injectable } from '@angular/core';\r\nimport { ReplaySubject } from 'rxjs';\r\nimport { ZyfraSplitterTemplateDirective } from './zyfra-splitter.directives';\r\n\r\n@Injectable()\r\nexport class ZyfraSplitterTemplatesService {\r\n  private readonly listSet = new Set<ZyfraSplitterTemplateDirective>();\r\n  private readonly listSource$ = new ReplaySubject<ZyfraSplitterTemplateDirective[]>(1);\r\n  public readonly list$ = this.listSource$.asObservable();\r\n\r\n  public add(template: ZyfraSplitterTemplateDirective): void {\r\n    this.listSet.add(template);\r\n    this.emit();\r\n  }\r\n\r\n  public remove(template: ZyfraSplitterTemplateDirective): void {\r\n    this.listSet.delete(template);\r\n    this.emit();\r\n  }\r\n\r\n  private emit(): void {\r\n    this.listSource$.next([...this.listSet]);\r\n  }\r\n}\r\n",
      "type": "injectable"
    },
    {
      "name": "ZyfraTooltipOverlayManager",
      "id": "injectable-ZyfraTooltipOverlayManager-1e6706ad8f2a3b1b6f8ad366e86c884f",
      "file": "libs/components/src/lib/tooltip/zyfra-tooltip-overlay-manager.service.ts",
      "properties": [
        {
          "name": "className",
          "defaultValue": "'zyfra-tooltip-overlay-container'",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 9,
          "modifierKind": [121, 143]
        },
        {
          "name": "innerContainer",
          "defaultValue": "null",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "HTMLElement",
          "optional": false,
          "description": "",
          "line": 8,
          "modifierKind": [121]
        },
        {
          "name": "renderer",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Renderer2",
          "optional": false,
          "description": "",
          "line": 10,
          "modifierKind": [121]
        }
      ],
      "methods": [
        {
          "name": "append",
          "args": [
            {
              "name": "element",
              "type": "HTMLElement",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 36,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [123],
          "jsdoctags": [
            {
              "name": "element",
              "type": "HTMLElement",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "create",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 34,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [123]
        },
        {
          "name": "remove",
          "args": [
            {
              "name": "element",
              "type": "HTMLElement",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 40,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [123],
          "jsdoctags": [
            {
              "name": "element",
              "type": "HTMLElement",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        }
      ],
      "deprecated": false,
      "deprecationMessage": "",
      "description": "",
      "rawdescription": "\n",
      "sourceCode": "import { Inject, Injectable, Renderer2, RendererFactory2 } from '@angular/core';\r\nimport { DOCUMENT } from '@angular/common';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class ZyfraTooltipOverlayManager {\r\n  private innerContainer: HTMLElement = null;\r\n  private readonly className = 'zyfra-tooltip-overlay-container';\r\n  private renderer: Renderer2;\r\n\r\n  constructor(@Inject(DOCUMENT) private document: Document, rendererFactory: RendererFactory2) {\r\n    this.renderer = rendererFactory.createRenderer(null, null);\r\n  }\r\n\r\n  private get container(): HTMLElement {\r\n    if (!this.innerContainer) {\r\n      this.innerContainer = this.document.querySelector(`.${this.className}`);\r\n      if (!this.innerContainer) {\r\n        this.innerContainer = this.renderer.createElement('div');\r\n        this.renderer.addClass(this.innerContainer, this.className);\r\n        this.renderer.setStyle(\r\n          this.innerContainer,\r\n          'cssText',\r\n          'position:fixed; top:0; left:0; width:100%; height:100%; pointer-events:none; z-index:99999;'\r\n        );\r\n        this.document.body.appendChild(this.innerContainer);\r\n      }\r\n    }\r\n    return this.innerContainer;\r\n  }\r\n\r\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\r\n  public create(): void {}\r\n\r\n  public append(element: HTMLElement): void {\r\n    this.container.appendChild(element);\r\n  }\r\n\r\n  public remove(element: HTMLElement): void {\r\n    this.container.removeChild(element);\r\n  }\r\n}\r\n",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "deprecated": false,
        "deprecationMessage": "",
        "args": [
          {
            "name": "document",
            "type": "Document",
            "deprecated": false,
            "deprecationMessage": ""
          },
          {
            "name": "rendererFactory",
            "type": "RendererFactory2",
            "deprecated": false,
            "deprecationMessage": ""
          }
        ],
        "line": 10,
        "jsdoctags": [
          {
            "name": "document",
            "type": "Document",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          },
          {
            "name": "rendererFactory",
            "type": "RendererFactory2",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      "accessors": {
        "container": {
          "name": "container",
          "getSignature": {
            "name": "container",
            "type": "",
            "returnType": "HTMLElement",
            "line": 16
          }
        }
      },
      "type": "injectable"
    }
  ],
  "guards": [],
  "interceptors": [],
  "classes": [
    {
      "name": "AccessorImplClass",
      "id": "class-AccessorImplClass-1e5e2e0caccb4c35de56f01ca46fa9ae",
      "file": "libs/components/src/lib/@core/value-accessor/accessor-impl.class.ts",
      "deprecated": false,
      "deprecationMessage": "",
      "type": "class",
      "sourceCode": "import { ControlValueAccessor } from '@angular/forms';\r\n\r\nexport abstract class AccessorImplClass implements ControlValueAccessor {\r\n  public accessorValue: unknown;\r\n  public accessorOnChangeFn: (_: unknown) => unknown;\r\n  public accessorOnTouchedFn: VoidFunction;\r\n  public accessorIsDisabled: boolean;\r\n\r\n  public writeValue(obj: unknown): void {\r\n    this.accessorValue = obj;\r\n  }\r\n\r\n  public registerOnChange(fn: (_: unknown) => unknown): void {\r\n    this.accessorOnChangeFn = fn;\r\n  }\r\n\r\n  public registerOnTouched(fn: VoidFunction): void {\r\n    this.accessorOnTouchedFn = fn;\r\n  }\r\n\r\n  public setDisabledState(isDisabled: boolean): void {\r\n    this.accessorIsDisabled = isDisabled;\r\n  }\r\n}\r\n",
      "properties": [
        {
          "name": "accessorIsDisabled",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "boolean",
          "optional": false,
          "description": "",
          "line": 7,
          "modifierKind": [123]
        },
        {
          "name": "accessorOnChangeFn",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "function",
          "optional": false,
          "description": "",
          "line": 5,
          "modifierKind": [123]
        },
        {
          "name": "accessorOnTouchedFn",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "VoidFunction",
          "optional": false,
          "description": "",
          "line": 6,
          "modifierKind": [123]
        },
        {
          "name": "accessorValue",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "optional": false,
          "description": "",
          "line": 4,
          "modifierKind": [123]
        }
      ],
      "methods": [
        {
          "name": "registerOnChange",
          "args": [
            {
              "name": "fn",
              "type": "function",
              "deprecated": false,
              "deprecationMessage": "",
              "function": [
                {
                  "name": "_",
                  "type": "",
                  "deprecated": false,
                  "deprecationMessage": ""
                }
              ]
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 13,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [123],
          "jsdoctags": [
            {
              "name": "fn",
              "type": "function",
              "deprecated": false,
              "deprecationMessage": "",
              "function": [
                {
                  "name": "_",
                  "type": "",
                  "deprecated": false,
                  "deprecationMessage": ""
                }
              ],
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "registerOnTouched",
          "args": [
            {
              "name": "fn",
              "type": "VoidFunction",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 17,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [123],
          "jsdoctags": [
            {
              "name": "fn",
              "type": "VoidFunction",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "setDisabledState",
          "args": [
            {
              "name": "isDisabled",
              "type": "boolean",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 21,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [123],
          "jsdoctags": [
            {
              "name": "isDisabled",
              "type": "boolean",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "writeValue",
          "args": [
            {
              "name": "obj",
              "type": "",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 9,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [123],
          "jsdoctags": [
            {
              "name": "obj",
              "type": "",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        }
      ],
      "indexSignatures": [],
      "inputsClass": [],
      "outputsClass": [],
      "hostBindings": [],
      "hostListeners": [],
      "implements": ["ControlValueAccessor"]
    },
    {
      "name": "ZyfraDynamicDialogConfig",
      "id": "class-ZyfraDynamicDialogConfig-5f70545e848cacf543269288816442dd",
      "file": "libs/components/src/lib/dynamic-dialog/zyfra-dynamic-dialog-config.ts",
      "deprecated": false,
      "deprecationMessage": "",
      "type": "class",
      "sourceCode": "import { DynamicDialogConfig } from 'primeng/dynamicdialog';\r\n\r\nexport class ZyfraDynamicDialogConfig extends DynamicDialogConfig { }\r\n",
      "properties": [],
      "methods": [],
      "indexSignatures": [],
      "extends": "DynamicDialogConfig",
      "inputsClass": [],
      "outputsClass": [],
      "hostBindings": [],
      "hostListeners": []
    },
    {
      "name": "ZyfraDynamicDialogRef",
      "id": "class-ZyfraDynamicDialogRef-3daaa45f9e27849f27fe08cc03e25f6d",
      "file": "libs/components/src/lib/dynamic-dialog/zyfra-dynamic-dialog-ref.ts",
      "deprecated": false,
      "deprecationMessage": "",
      "type": "class",
      "sourceCode": "import { DynamicDialogRef } from 'primeng/dynamicdialog';\r\n\r\nexport class ZyfraDynamicDialogRef extends DynamicDialogRef { }\r\n",
      "properties": [],
      "methods": [],
      "indexSignatures": [],
      "extends": "DynamicDialogRef",
      "inputsClass": [],
      "outputsClass": [],
      "hostBindings": [],
      "hostListeners": []
    },
    {
      "name": "ZyfraTooltipOptionsModel",
      "id": "class-ZyfraTooltipOptionsModel-2d79673d670954fbf7f52a0c519639ad",
      "file": "libs/components/src/lib/tooltip/zyfra-tooltip.model.ts",
      "deprecated": false,
      "deprecationMessage": "",
      "type": "class",
      "sourceCode": "import { TemplateRef } from '@angular/core';\r\n\r\nexport class ZyfraTooltipOptionsModel {\r\n  left?: number;\r\n  top?: number;\r\n  className?: string;\r\n  content?: string | TemplateRef<any>;\r\n  context: Record<string, unknown>;\r\n}\r\n",
      "properties": [
        {
          "name": "className",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "string",
          "optional": true,
          "description": "",
          "line": 6
        },
        {
          "name": "content",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "string | TemplateRef<any>",
          "optional": true,
          "description": "",
          "line": 7
        },
        {
          "name": "context",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Record<string | >",
          "optional": false,
          "description": "",
          "line": 8
        },
        {
          "name": "left",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "number",
          "optional": true,
          "description": "",
          "line": 4
        },
        {
          "name": "top",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "number",
          "optional": true,
          "description": "",
          "line": 5
        }
      ],
      "methods": [],
      "indexSignatures": [],
      "inputsClass": [],
      "outputsClass": [],
      "hostBindings": [],
      "hostListeners": []
    }
  ],
  "directives": [
    {
      "name": "BaseTableTemplateDirective",
      "id": "directive-BaseTableTemplateDirective-a606f0bf713d9d1ded58bfe4b84e832f",
      "file": "libs/components/src/lib/@core/base-table/directives/base-table-template.directive.ts",
      "type": "directive",
      "description": "",
      "rawdescription": "\n",
      "sourceCode": "import { Directive, Input, TemplateRef } from '@angular/core';\r\n\r\nexport type TableTemplateType =\r\n  | 'caption'\r\n  | 'header'\r\n  | 'headergrouped'\r\n  | 'body'\r\n  | 'loadingbody'\r\n  | 'footer'\r\n  | 'footergrouped'\r\n  | 'summary'\r\n  | 'colgroup'\r\n  | 'rowexpansion'\r\n  | 'groupheader'\r\n  | 'rowspan'\r\n  | 'groupfooter'\r\n  | 'frozenrows'\r\n  | 'frozenheader'\r\n  | 'frozenbody'\r\n  | 'frozenfooter'\r\n  | 'frozencolgroup'\r\n  | 'frozenrowexpansion'\r\n  | 'emptymessage'\r\n  | 'paginatorleft'\r\n  | 'paginatorright'\r\n  | 'paginatordropdownitem'\r\n  | 'input'\r\n  | 'output'\r\n  | 'filter';\r\n\r\n@Directive({\r\n  selector: '[zyfraTableTemplate]',\r\n})\r\nexport class BaseTableTemplateDirective {\r\n  @Input() zyfraTableTemplate: TableTemplateType;\r\n\r\n  constructor(public templateRef: TemplateRef<unknown>) {}\r\n\r\n  get template(): TemplateRef<unknown> {\r\n    return this.templateRef;\r\n  }\r\n\r\n  public getType(): TableTemplateType {\r\n    return this.zyfraTableTemplate;\r\n  }\r\n}\r\n",
      "selector": "[zyfraTableTemplate]",
      "providers": [],
      "inputsClass": [
        {
          "name": "zyfraTableTemplate",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 35,
          "type": "TableTemplateType"
        }
      ],
      "outputsClass": [],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "propertiesClass": [
        {
          "name": "templateRef",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "TemplateRef<>",
          "optional": false,
          "description": "",
          "line": 37,
          "modifierKind": [123]
        }
      ],
      "methodsClass": [
        {
          "name": "getType",
          "args": [],
          "optional": false,
          "returnType": "TableTemplateType",
          "typeParameters": [],
          "line": 43,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [123]
        }
      ],
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "deprecated": false,
        "deprecationMessage": "",
        "args": [
          {
            "name": "templateRef",
            "type": "TemplateRef<>",
            "deprecated": false,
            "deprecationMessage": ""
          }
        ],
        "line": 35,
        "jsdoctags": [
          {
            "name": "templateRef",
            "type": "TemplateRef<>",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      "accessors": {
        "template": {
          "name": "template",
          "getSignature": {
            "name": "template",
            "type": "",
            "returnType": "TemplateRef<>",
            "line": 39
          }
        }
      }
    },
    {
      "name": "ValueAccessorFormComponent",
      "id": "directive-ValueAccessorFormComponent-62581859181a30b9f7c9356185203c9d",
      "file": "libs/components/src/lib/@core/value-accessor/value-accessor-form-component.directive.ts",
      "type": "directive",
      "description": "",
      "rawdescription": "\n",
      "sourceCode": "import { AfterViewInit, Directive, Provider, Type, ViewChild } from '@angular/core';\r\nimport { ControlValueAccessor, DefaultValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\r\nimport { AccessorImplClass } from './accessor-impl.class';\r\n\r\nexport function provideValueAccessor(type: Type<unknown>): Provider {\r\n  return {\r\n    provide: NG_VALUE_ACCESSOR,\r\n    useExisting: type,\r\n    multi: true,\r\n  };\r\n}\r\n\r\n@Directive()\r\nexport abstract class ValueAccessorFormComponent\r\n  extends AccessorImplClass\r\n  implements ControlValueAccessor, AfterViewInit\r\n{\r\n  @ViewChild(DefaultValueAccessor) private valueAccessor: DefaultValueAccessor;\r\n\r\n  ngAfterViewInit(): void {\r\n    this.valueAccessor.writeValue(this.accessorValue);\r\n    this.valueAccessor.registerOnChange(this.accessorOnChangeFn);\r\n    this.valueAccessor.registerOnTouched(this.accessorOnTouchedFn);\r\n    this.valueAccessor.setDisabledState(this.accessorIsDisabled);\r\n\r\n    this.valueAccessor.onChange = this.accessorOnChangeFn;\r\n    this.valueAccessor.onTouched = this.accessorOnTouchedFn;\r\n  }\r\n\r\n  public override writeValue(obj: unknown): void {\r\n    super.writeValue(obj);\r\n\r\n    this.valueAccessor?.writeValue(obj);\r\n  }\r\n\r\n  public override setDisabledState(isDisabled: boolean): void {\r\n    super.setDisabledState(isDisabled);\r\n    this.valueAccessor?.setDisabledState(isDisabled);\r\n  }\r\n}\r\n",
      "providers": [],
      "inputsClass": [],
      "outputsClass": [],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "propertiesClass": [
        {
          "name": "valueAccessor",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "DefaultValueAccessor",
          "optional": false,
          "description": "",
          "line": 18,
          "decorators": [
            {
              "name": "ViewChild",
              "stringifiedArguments": "DefaultValueAccessor"
            }
          ],
          "modifierKind": [121]
        }
      ],
      "methodsClass": [
        {
          "name": "ngAfterViewInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 20,
          "deprecated": false,
          "deprecationMessage": ""
        },
        {
          "name": "setDisabledState",
          "args": [
            {
              "name": "isDisabled",
              "type": "boolean",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 36,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [123, 157],
          "jsdoctags": [
            {
              "name": "isDisabled",
              "type": "boolean",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "writeValue",
          "args": [
            {
              "name": "obj",
              "type": "",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 30,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [123, 157],
          "jsdoctags": [
            {
              "name": "obj",
              "type": "",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        }
      ],
      "implements": ["ControlValueAccessor", "AfterViewInit"]
    },
    {
      "name": "WrappedFormComponent",
      "id": "directive-WrappedFormComponent-dcc852acc735c23895ab1d9ab89ca20c",
      "file": "libs/components/src/lib/@core/value-accessor/wrapped-form.component.ts",
      "type": "directive",
      "description": "",
      "rawdescription": "\n",
      "sourceCode": "import { Directive, Injector, Optional, Self } from '@angular/core';\r\nimport { ControlValueAccessor, FormControl, NgControl } from '@angular/forms';\r\nimport { AccessorImplClass } from './accessor-impl.class';\r\n\r\n@Directive()\r\nexport abstract class WrappedFormComponent extends AccessorImplClass implements ControlValueAccessor {\r\n  public readonly formControl: FormControl;\r\n\r\n  constructor(public readonly injector: Injector, @Optional() @Self() public readonly ngControl: NgControl) {\r\n    super();\r\n\r\n    if (ngControl != null) {\r\n      ngControl.valueAccessor = this;\r\n      this.formControl = ngControl.control as FormControl;\r\n    }\r\n  }\r\n\r\n  public override setDisabledState(isDisabled: boolean): void {\r\n    if (isDisabled) {\r\n      this.formControl.disable({ emitEvent: false });\r\n    } else {\r\n      this.formControl.enable({ emitEvent: false });\r\n    }\r\n    super.setDisabledState(this.accessorIsDisabled);\r\n  }\r\n}\r\n",
      "providers": [],
      "inputsClass": [],
      "outputsClass": [],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "propertiesClass": [
        {
          "name": "formControl",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "FormControl",
          "optional": false,
          "description": "",
          "line": 7,
          "modifierKind": [123, 143]
        },
        {
          "name": "injector",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Injector",
          "optional": false,
          "description": "",
          "line": 9,
          "modifierKind": [123, 143]
        },
        {
          "name": "ngControl",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "NgControl",
          "optional": false,
          "description": "",
          "line": 9,
          "decorators": [
            {
              "name": "Optional",
              "stringifiedArguments": ""
            },
            {
              "name": "Self",
              "stringifiedArguments": ""
            }
          ],
          "modifierKind": [123, 143]
        }
      ],
      "methodsClass": [
        {
          "name": "setDisabledState",
          "args": [
            {
              "name": "isDisabled",
              "type": "boolean",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 18,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [123, 157],
          "jsdoctags": [
            {
              "name": "isDisabled",
              "type": "boolean",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        }
      ],
      "implements": ["ControlValueAccessor"],
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "deprecated": false,
        "deprecationMessage": "",
        "args": [
          {
            "name": "injector",
            "type": "Injector",
            "deprecated": false,
            "deprecationMessage": ""
          },
          {
            "name": "ngControl",
            "type": "NgControl",
            "deprecated": false,
            "deprecationMessage": ""
          }
        ],
        "line": 7,
        "jsdoctags": [
          {
            "name": "injector",
            "type": "Injector",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          },
          {
            "name": "ngControl",
            "type": "NgControl",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          }
        ]
      }
    },
    {
      "name": "ZyfraAutofocusDirective",
      "id": "directive-ZyfraAutofocusDirective-0ea38ff2775994c8fc90836493331d04",
      "file": "libs/components/src/lib/nav-menu/directives/zyfra-autofocus.directives.ts",
      "type": "directive",
      "description": "",
      "rawdescription": "\n",
      "sourceCode": "import {\r\n  Directive, ElementRef,\r\n  Input, OnInit,\r\n} from '@angular/core';\r\n\r\n@Directive({\r\n  selector: '[zyfraAutofocus]'\r\n})\r\nexport class ZyfraAutofocusDirective implements OnInit {\r\n  @Input() set zyfraAutofocus(condition: boolean) {\r\n    this.focus = condition !== false;\r\n  }\r\n\r\n  private focus = true;\r\n\r\n  constructor(private el: ElementRef) { }\r\n\r\n  ngOnInit(): void {\r\n    if (this.focus) {\r\n      this.el.nativeElement.focus();\r\n    }\r\n  }\r\n}\r\n",
      "selector": "[zyfraAutofocus]",
      "providers": [],
      "inputsClass": [
        {
          "name": "zyfraAutofocus",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 10,
          "type": "boolean"
        }
      ],
      "outputsClass": [],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "propertiesClass": [
        {
          "name": "focus",
          "defaultValue": "true",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "optional": false,
          "description": "",
          "line": 14,
          "modifierKind": [121]
        }
      ],
      "methodsClass": [
        {
          "name": "ngOnInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 18,
          "deprecated": false,
          "deprecationMessage": ""
        }
      ],
      "implements": ["OnInit"],
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "deprecated": false,
        "deprecationMessage": "",
        "args": [
          {
            "name": "el",
            "type": "ElementRef",
            "deprecated": false,
            "deprecationMessage": ""
          }
        ],
        "line": 14,
        "jsdoctags": [
          {
            "name": "el",
            "type": "ElementRef",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      "accessors": {
        "zyfraAutofocus": {
          "name": "zyfraAutofocus",
          "setSignature": {
            "name": "zyfraAutofocus",
            "type": "void",
            "deprecated": false,
            "deprecationMessage": "",
            "args": [
              {
                "name": "condition",
                "type": "boolean",
                "deprecated": false,
                "deprecationMessage": ""
              }
            ],
            "returnType": "void",
            "line": 10,
            "jsdoctags": [
              {
                "name": "condition",
                "type": "boolean",
                "deprecated": false,
                "deprecationMessage": "",
                "tagName": {
                  "text": "param"
                }
              }
            ]
          }
        }
      }
    },
    {
      "name": "ZyfraBaseSearchCellComponent",
      "id": "directive-ZyfraBaseSearchCellComponent-ab80d95eaabb57f38fac71cbcdc73f9d",
      "file": "libs/components/src/lib/@core/base-table/search-cell/base-search-cell.component.ts",
      "type": "directive",
      "description": "",
      "rawdescription": "\n",
      "sourceCode": "import {\r\n  HostBinding,\r\n  Input,\r\n  Output,\r\n  EventEmitter,\r\n  Directive\r\n} from '@angular/core';\r\n\r\ntype ValueChangeEvent = {\r\n  field: string;\r\n  value: string;\r\n};\r\n\r\n@Directive()\r\nexport abstract class ZyfraBaseSearchCellComponent {\r\n  @Input() placeholder = '';\r\n  @Input() field: string;\r\n  /**\r\n   * If the value is true, then the native filtering of the table will be used,\r\n   * otherwise the valueChange event will be emitted\r\n   */\r\n  @Input() isNativeFiltering = true;\r\n  @Input() matchMode = 'contains';\r\n\r\n  @Output() valueChange = new EventEmitter<ValueChangeEvent>();\r\n\r\n  @HostBinding('class') hostClass = 'search-cell';\r\n\r\n  public readonly abstract table: any;\r\n\r\n\r\n  // TODO refactor this, need form control\r\n  public filter(value: any, field: string, matchMode: string): void {\r\n    if (this.isNativeFiltering) {\r\n      this.table.filter(value, field, matchMode);\r\n    } else {\r\n      this.valueChange.emit({ field, value });\r\n    }\r\n  }\r\n}\r\n",
      "providers": [],
      "inputsClass": [
        {
          "name": "field",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 17,
          "type": "string"
        },
        {
          "name": "isNativeFiltering",
          "defaultValue": "true",
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "If the value is true, then the native filtering of the table will be used,\r\notherwise the valueChange event will be emitted",
          "description": "<p>If the value is true, then the native filtering of the table will be used,\notherwise the valueChange event will be emitted</p>\n",
          "line": 22,
          "type": "boolean"
        },
        {
          "name": "matchMode",
          "defaultValue": "'contains'",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 23,
          "type": "string"
        },
        {
          "name": "placeholder",
          "defaultValue": "''",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 16,
          "type": "string"
        }
      ],
      "outputsClass": [
        {
          "name": "valueChange",
          "defaultValue": "new EventEmitter<ValueChangeEvent>()",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 25,
          "type": "EventEmitter"
        }
      ],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [
        {
          "name": "class",
          "defaultValue": "'search-cell'",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 27,
          "type": "string"
        }
      ],
      "hostListeners": [],
      "propertiesClass": [
        {
          "name": "hostClass",
          "defaultValue": "'search-cell'",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 27,
          "decorators": [
            {
              "name": "HostBinding",
              "stringifiedArguments": "'class'"
            }
          ]
        },
        {
          "name": "table",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "any",
          "optional": false,
          "description": "",
          "line": 29,
          "modifierKind": [123, 143, 126]
        }
      ],
      "methodsClass": [
        {
          "name": "filter",
          "args": [
            {
              "name": "value",
              "type": "any",
              "deprecated": false,
              "deprecationMessage": ""
            },
            {
              "name": "field",
              "type": "string",
              "deprecated": false,
              "deprecationMessage": ""
            },
            {
              "name": "matchMode",
              "type": "string",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 33,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [123],
          "jsdoctags": [
            {
              "name": "value",
              "type": "any",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "field",
              "type": "string",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "matchMode",
              "type": "string",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        }
      ]
    },
    {
      "name": "ZyfraBaseTableComponent",
      "id": "directive-ZyfraBaseTableComponent-820239a5acf62cced3ff1192e92dd8e0",
      "file": "libs/components/src/lib/@core/base-table/zyfra-base-table.directive.ts",
      "type": "directive",
      "description": "",
      "rawdescription": "\n",
      "sourceCode": "import {\r\n  AfterContentInit,\r\n  Directive,\r\n  EventEmitter,\r\n  Input,\r\n  OnChanges,\r\n  Output,\r\n  QueryList,\r\n  SimpleChanges,\r\n  TemplateRef,\r\n} from '@angular/core';\r\nimport { SortMeta } from 'primeng/api';\r\nimport { TableSortEvent } from '../../table/zyfra-table.types';\r\nimport { BaseTableTemplateDirective } from './directives/base-table-template.directive';\r\nimport { SortOrder } from './shared-table.types';\r\n\r\n@Directive({\r\n  selector: '[zyfraBaseTable]',\r\n})\r\nexport class ZyfraBaseTableComponent<T = unknown> implements OnChanges, AfterContentInit {\r\n  @Output() activeElementChange: EventEmitter<T>;\r\n\r\n  styleClasses = 'p-datatable-gridlines';\r\n\r\n  public bodyTemplate: TemplateRef<any>;\r\n  public captionTemplate: TemplateRef<any>;\r\n  public colGroupTemplate: TemplateRef<any>;\r\n  public emptyMessageTemplate: TemplateRef<any>;\r\n  public footerTemplate: TemplateRef<any>;\r\n  public frozenBodyTemplate: TemplateRef<any>;\r\n  public frozenColGroupTemplate: TemplateRef<any>;\r\n  public frozenFooterTemplate: TemplateRef<any>;\r\n  public frozenHeaderTemplate: TemplateRef<any>;\r\n  public headerTemplate: TemplateRef<any>;\r\n  public paginatorDropdownItemTemplate: TemplateRef<any>;\r\n  public paginatorLeftTemplate: TemplateRef<any>;\r\n  public paginatorRightTemplate: TemplateRef<any>;\r\n  public summaryTemplate: TemplateRef<any>;\r\n\r\n  //region Inputs\r\n  /**\r\n   * Table title\r\n   */\r\n  @Input() title = '';\r\n  /**\r\n   * An array of objects to display\r\n   */\r\n  @Input() value: T[] = [];\r\n  /**\r\n   * An array of objects to represent dynamic columns\r\n   */\r\n  @Input() columns: any[];\r\n  /**\r\n   * Inline style of the component\r\n   */\r\n  @Input() style: any;\r\n  /**\r\n   * Style class of the component\r\n   */\r\n  @Input() styleClass: string;\r\n  /**\r\n   * Inline style of the table\r\n   */\r\n  @Input() tableStyle: Record<string, string>;\r\n  /**\r\n   * Style class of the table\r\n   */\r\n  @Input() tableStyleClass: string;\r\n  /**\r\n   * Whether the cell widths scale according to their content or not\r\n   */\r\n  @Input() autoLayout: boolean;\r\n  /**\r\n   * Defines if data is loaded and interacted with in lazy manner\r\n   */\r\n  @Input() lazy = false;\r\n  /**\r\n   * Whether to call lazy loading on initialization\r\n   */\r\n  @Input() lazyLoadOnInit = true;\r\n  /**\r\n   * When specified as true, enables the pagination\r\n   */\r\n  @Input() paginator: boolean;\r\n  /**\r\n   * Number of rows to display per page\r\n   */\r\n  @Input() rows = 10;\r\n  /**\r\n   * Index of the first row to be displayed\r\n   */\r\n  @Input() first = 0;\r\n  /**\r\n   * Number of total records, defaults to length of value when not defined\r\n   */\r\n  @Input() pageLinks = 5;\r\n  /**\r\n   * Number of page links to display in paginator\r\n   */\r\n  @Input() rowsPerPageOptions: any[];\r\n  /**\r\n   * Whether to show it even there is only one page\r\n   */\r\n  @Input() alwaysShowPaginator = true;\r\n  /**\r\n   * Position of the paginator, options are \"top\",\"bottom\" or \"both\"\r\n   */\r\n  @Input() paginatorPosition: 'top' | 'bottom' | 'both' = 'bottom';\r\n  /**\r\n   * Target element to attach the paginator dropdown overlay,\r\n   * valid values are \"body\" or a local ng-template variable of another element\r\n   * (note: use binding with brackets for template variables, e.g. [appendTo]=\"mydiv\" for a div element having #mydiv as variable name)\r\n   */\r\n  @Input() paginatorDropdownAppendTo: any;\r\n  /**\r\n   * Template of the current page report element.\r\n   * Available placeholders are {currentPage},{totalPages},{rows},{first},{last} and {totalRecords}\r\n   */\r\n  @Input() currentPageReportTemplate = '{currentPage} of {totalPages}';\r\n  /**\r\n   * Whether to display current page report\r\n   */\r\n  @Input() showCurrentPageReport: boolean;\r\n  /**\r\n   * Whether to display a dropdown to navigate to any page\r\n   */\r\n  @Input() showJumpToPageDropdown: boolean;\r\n  /**\r\n   * When enabled, icons are displayed on paginator to go first and last page\r\n   */\r\n  @Input() showFirstLastIcon = true;\r\n  /**\r\n   * Whether to show page links\r\n   */\r\n  @Input() showPageLinks = true;\r\n  /**\r\n   * Context menu selection\r\n   */\r\n  @Input() contextMenuSelection: any;\r\n  /**\r\n   * Context menu selection mode\r\n   */\r\n  @Input() contextMenuSelectionMode: 'separate' | 'joint' = 'separate';\r\n  /**\r\n   * Sort order to use when an unsorted column gets sorted by user interaction\r\n   */\r\n  @Input() defaultSortOrder = 1;\r\n  /**\r\n   * Defines whether sorting works on single column or on multiple columns\r\n   */\r\n  @Input() sortMode: 'single' | 'multiple' = 'single';\r\n  /**\r\n   * When true, resets paginator to first page after sorting\r\n   */\r\n  @Input() resetPageOnSort = true;\r\n  /**\r\n   * Whether to use the default sorting or a custom one using sortFunction\r\n   */\r\n  @Input() customSort: boolean;\r\n  /**\r\n   * Specifies the selection mode, valid values are \"single\" and \"multiple\"\r\n   */\r\n  @Input() selectionMode: 'single' | 'multiple';\r\n  /**\r\n   * A property to uniquely identify a record in data\r\n   */\r\n  @Input() dataKey: string;\r\n  /**\r\n   * Defines whether metaKey is should be considered for the selection.\r\n   * On touch enabled devices, metaKeySelection is turned off automatically\r\n   */\r\n  @Input() metaKeySelection: boolean;\r\n  /**\r\n   * Algorithm to define if a row is selected,\r\n   * valid values are \"equals\" that compares by reference and \"deepEquals\" that compares all fields\r\n   */\r\n  @Input() compareSelectionBy: 'deepEquals' | 'equals' = 'deepEquals';\r\n  /**\r\n   * Adds hover effect to rows without the need for selectionMode\r\n   */\r\n  @Input() rowHover: boolean;\r\n  /**\r\n   * Displays a loader to indicate data load is in progress\r\n   */\r\n  @Input() loading: boolean;\r\n  /**\r\n   * The icon to show while indicating data load is in progress\r\n   */\r\n  @Input() loadingIcon = 'pi pi-spinner';\r\n  /**\r\n   * Whether to show the loading mask when loading property is true\r\n   */\r\n  @Input() showLoader = true;\r\n  /**\r\n   * When specifies, enables horizontal and/or vertical scrolling\r\n   */\r\n  @Input() scrollable: boolean;\r\n  /**\r\n   * Height of the scroll viewport in fixed pixels or the \"flex\" keyword for a dynamic size\r\n   */\r\n  @Input() scrollHeight: string;\r\n  /**\r\n   * Whether the data should be loaded on demand during scroll\r\n   */\r\n  @Input() virtualScroll: boolean;\r\n  /**\r\n   * Height of a row to use in calculations of virtual scrolling\r\n   */\r\n  @Input() virtualRowHeight = 32;\r\n  /**\r\n   * Minimum amount of content buffer (in pixels) that the viewport must render\r\n   */\r\n  @Input() minBufferPx: number;\r\n  /**\r\n   * Configures how much buffer space to render back up to when it detects that more buffer is required\r\n   */\r\n  @Input() maxBufferPx: number;\r\n  /**\r\n   * Width of the frozen columns container\r\n   */\r\n  @Input() frozenWidth: string;\r\n  /**\r\n   * An array of objects to represent dynamic columns that are frozen\r\n   */\r\n  @Input() frozenColumns: any[];\r\n  /**\r\n   * When enabled, columns can be resized using drag and drop\r\n   */\r\n  @Input() resizableColumns: boolean;\r\n  /**\r\n   * Defines whether the overall table width should change on column resize, valid values are \"fit\" and \"expand\"\r\n   */\r\n  @Input() columnResizeMode: 'fit' | 'expand' = 'fit';\r\n  /**\r\n   * When enabled, columns can be reordered using drag and drop\r\n   */\r\n  @Input() reorderableColumns: boolean;\r\n  /**\r\n   * Local ng-template varilable of a ContextMenu\r\n   */\r\n  @Input() contextMenu: any;\r\n  /**\r\n   * An array of fields as string to use in global filtering\r\n   */\r\n  @Input() globalFilterFields: string[];\r\n  /**\r\n   * Delay in milliseconds before filtering the data\r\n   */\r\n  @Input() filterDelay = 300;\r\n  /**\r\n   * Mode for filtering valid values are \"lenient\" and \"strict\". Default is lenient.\r\n   */\r\n  @Input() filterMode: 'lenient' | 'strict' = 'lenient';\r\n  /**\r\n   * Locale to use in filtering. The default locale is the host environment's current locale.\r\n   */\r\n  @Input() filterLocale: string;\r\n  /**\r\n   * Number of total records, defaults to length of value when not defined\r\n   */\r\n  @Input() totalRecords: number;\r\n  /**\r\n   * Name of the field to sort data by default\r\n   */\r\n  @Input() sortField: string;\r\n  /**\r\n   * Order to sort when default sorting is enabled\r\n   */\r\n  @Input() sortOrder: number;\r\n  /**\r\n   * An array of SortMeta objects to sort the data by default in multiple sort mode\r\n   */\r\n  @Input() multiSortMeta: SortMeta[];\r\n  /**\r\n   * Selected row in single mode or an array of values in multiple mode\r\n   */\r\n  @Input() selection: any;\r\n  /**\r\n   * When true turns on striped display mode\r\n   */\r\n  @Input() stripedMode = false;\r\n  //endregion\r\n\r\n  //region Outputs\r\n  /**\r\n   * Callback to invoke when data is filtered\r\n   */\r\n  @Output() onFilter = new EventEmitter<{ filters: Record<string, unknown>; filteredValue: unknown }>();\r\n  /**\r\n   * Callback to invoke when pagination occurs\r\n   */\r\n  @Output() page = new EventEmitter<{ first: number; rows: number }>();\r\n  /**\r\n   * Callback to invoke when a column gets sorted\r\n   */\r\n  @Output() onSort = new EventEmitter<{\r\n    field: string;\r\n    order: SortOrder;\r\n    multisortmeta: SortMeta[];\r\n  } | null>();\r\n\r\n  /**\r\n   * Callback to invoke when paging, sorting or filtering happens in lazy mode\r\n   */\r\n  @Output() lazyLoad = new EventEmitter<{\r\n    first: number;\r\n    rows: number;\r\n    sortField: string;\r\n    sortOrder: SortOrder;\r\n    multiSortMeta: SortMeta[];\r\n    filters: Record<string, unknown>;\r\n    globalFilter: unknown;\r\n  }>();\r\n\r\n  /**\r\n   * A function to implement custom sorting\r\n   */\r\n  @Output() sortFunction = new EventEmitter<TableSortEvent>();\r\n  /**\r\n   * Callback to invoke when a node is selected with right click\r\n   */\r\n  @Output() contextMenuSelect = new EventEmitter<{ originalEvent: Event; node: unknown }>();\r\n  /**\r\n   * Callback to invoke when a column is resized\r\n   */\r\n  @Output() colResize = new EventEmitter<{ element: unknown; delta: unknown }>();\r\n\r\n  /**\r\n   * Callback to invoke when a column is reordered\r\n   */\r\n  @Output() colReorder = new EventEmitter<{ dragIndex: number; dropIndex: number; columns: string[] }>();\r\n  /**\r\n   * Callback to invoke when a cell switches to edit mode.\r\n   */\r\n  @Output() editInit = new EventEmitter<{ column: unknown; data: unknown; originalEvent: Event }>();\r\n  /**\r\n   * Callback to invoke when cell edit is completed\r\n   */\r\n  @Output() editComplete = new EventEmitter<{ column: unknown; data: unknown }>();\r\n  /**\r\n   * Callback to invoke when cell edit is cancelled with escape key\r\n   */\r\n  @Output() editCancel = new EventEmitter<{ column: unknown; data: unknown }>();\r\n  /**\r\n   * Callback to invoke when state of header checkbox changes\r\n   */\r\n  @Output() headerCheckboxToggle = new EventEmitter<{ originalEvent: Event; checked: boolean }>();\r\n  /**\r\n   * Callback to invoke when selection is changed\r\n   */\r\n  @Output() selectionChange = new EventEmitter<unknown>();\r\n  //endregion\r\n\r\n  private initialData: T[];\r\n  private _activeElement: T;\r\n\r\n  public getContentTemplate(): QueryList<BaseTableTemplateDirective> {\r\n    throw new Error(`Method 'getContentTemplate' should be overridden`);\r\n  }\r\n\r\n  public getTable(): any {\r\n    throw new Error(`Method 'getTable' should be overridden`);\r\n  }\r\n\r\n  public initTemplateByType(item: BaseTableTemplateDirective): void {\r\n    throw new Error(`Method 'initTemplateByType' should be overridden`);\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    if (changes.value) {\r\n      this.initialData = Array.isArray(changes.value.currentValue) ? [...changes.value.currentValue] : [];\r\n      this.value = this.initialData;\r\n    }\r\n\r\n    this.checkUpdateStyleClasses(changes);\r\n  }\r\n\r\n  ngAfterContentInit(): void {\r\n    this.getContentTemplate().forEach(item => {\r\n      switch (item.getType()) {\r\n        case 'caption':\r\n          this.captionTemplate = item.template;\r\n          break;\r\n\r\n        case 'header':\r\n          this.headerTemplate = item.template;\r\n          break;\r\n\r\n        case 'body':\r\n          this.bodyTemplate = item.template;\r\n          break;\r\n\r\n        case 'footer':\r\n          this.footerTemplate = item.template;\r\n          break;\r\n\r\n        case 'summary':\r\n          this.summaryTemplate = item.template;\r\n          break;\r\n\r\n        case 'colgroup':\r\n          this.colGroupTemplate = item.template;\r\n          break;\r\n\r\n        case 'emptymessage':\r\n          this.emptyMessageTemplate = item.template;\r\n          break;\r\n\r\n        case 'paginatorleft':\r\n          this.paginatorLeftTemplate = item.template;\r\n          break;\r\n\r\n        case 'paginatorright':\r\n          this.paginatorRightTemplate = item.template;\r\n          break;\r\n\r\n        case 'paginatordropdownitem':\r\n          this.paginatorDropdownItemTemplate = item.template;\r\n          break;\r\n\r\n        case 'frozenheader':\r\n          this.frozenHeaderTemplate = item.template;\r\n          break;\r\n\r\n        case 'frozenbody':\r\n          this.frozenBodyTemplate = item.template;\r\n          break;\r\n\r\n        case 'frozenfooter':\r\n          this.frozenFooterTemplate = item.template;\r\n          break;\r\n\r\n        case 'frozencolgroup':\r\n          this.frozenColGroupTemplate = item.template;\r\n          break;\r\n        default:\r\n          this.initTemplateByType(item);\r\n      }\r\n    });\r\n  }\r\n\r\n  public setValue(value: T[]): void {\r\n    this.value = value;\r\n  }\r\n\r\n  public resetScrollTop(): void {\r\n    this.getTable().resetScrollTop();\r\n  }\r\n\r\n  public scrollToVirtualIndex(index: number): void {\r\n    this.getTable().scrollToVirtualIndex(index);\r\n  }\r\n\r\n  public scrollTo(options: any): void {\r\n    this.getTable().scrollTo(options);\r\n  }\r\n\r\n  public resetSort(): void {\r\n    const table = this.getTable();\r\n\r\n    table._sortField = null;\r\n    table._sortOrder = 0;\r\n    table._multiSortMeta = null;\r\n    table.tableService.onSort(null);\r\n\r\n    if (this.lazy) {\r\n      table.onLazyLoad.emit(table.createLazyLoadMetadata());\r\n    } else {\r\n      this.totalRecords = table._value ? table._value.length : 0;\r\n      this.setValue([...this.initialData]);\r\n    }\r\n\r\n    this.onSort.emit(null);\r\n  }\r\n\r\n  public filter(value: any, field: string, matchMode: string): void {\r\n    this.getTable().filter(value, field, matchMode);\r\n  }\r\n\r\n  public filterGlobal(value, matchMode): void {\r\n    return this.getTable().filterGlobal(value, matchMode);\r\n  }\r\n\r\n  public isSelected(rowData): boolean {\r\n    return this.getTable().isSelected(rowData);\r\n  }\r\n\r\n  protected updateStyleClasses(): void {\r\n    const classes = ['p-datatable-gridlines'];\r\n\r\n    if (this.paginator) {\r\n      classes.push('zyfra-table_paginator');\r\n    }\r\n\r\n    if (this.stripedMode) {\r\n      classes.push('zyfra-table_striped');\r\n    }\r\n\r\n    classes.push(this.styleClass);\r\n\r\n    this.styleClasses = classes.join(' ');\r\n  }\r\n\r\n  protected checkUpdateStyleClasses(changes: SimpleChanges): void {\r\n    if (changes.styleClass || changes.paginator || changes.stripedMode) {\r\n      this.updateStyleClasses();\r\n    }\r\n  }\r\n\r\n  set activeElement(activeElement: T) {\r\n    if (this.activeElement === activeElement) {\r\n      return;\r\n    }\r\n\r\n    this._activeElement = activeElement;\r\n    this.activeElementChange.emit(this.activeElement);\r\n  }\r\n\r\n  get activeElement(): T {\r\n    return this._activeElement;\r\n  }\r\n}\r\n",
      "selector": "[zyfraBaseTable]",
      "providers": [],
      "inputsClass": [
        {
          "name": "alwaysShowPaginator",
          "defaultValue": "true",
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "Whether to show it even there is only one page",
          "description": "<p>Whether to show it even there is only one page</p>\n",
          "line": 104,
          "type": "boolean"
        },
        {
          "name": "autoLayout",
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "Whether the cell widths scale according to their content or not",
          "description": "<p>Whether the cell widths scale according to their content or not</p>\n",
          "line": 72,
          "type": "boolean"
        },
        {
          "name": "columnResizeMode",
          "defaultValue": "'fit'",
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "Defines whether the overall table width should change on column resize, valid values are \"fit\" and \"expand\"",
          "description": "<p>Defines whether the overall table width should change on column resize, valid values are &quot;fit&quot; and &quot;expand&quot;</p>\n",
          "line": 233,
          "type": "\"fit\" | \"expand\""
        },
        {
          "name": "columns",
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "An array of objects to represent dynamic columns",
          "description": "<p>An array of objects to represent dynamic columns</p>\n",
          "line": 52,
          "type": "any[]"
        },
        {
          "name": "compareSelectionBy",
          "defaultValue": "'deepEquals'",
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "Algorithm to define if a row is selected,\r\nvalid values are \"equals\" that compares by reference and \"deepEquals\" that compares all fields",
          "description": "<p>Algorithm to define if a row is selected,\nvalid values are &quot;equals&quot; that compares by reference and &quot;deepEquals&quot; that compares all fields</p>\n",
          "line": 177,
          "type": "\"deepEquals\" | \"equals\""
        },
        {
          "name": "contextMenu",
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "Local ng-template varilable of a ContextMenu",
          "description": "<p>Local ng-template varilable of a ContextMenu</p>\n",
          "line": 241,
          "type": "any"
        },
        {
          "name": "contextMenuSelection",
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "Context menu selection",
          "description": "<p>Context menu selection</p>\n",
          "line": 139,
          "type": "any"
        },
        {
          "name": "contextMenuSelectionMode",
          "defaultValue": "'separate'",
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "Context menu selection mode",
          "description": "<p>Context menu selection mode</p>\n",
          "line": 143,
          "type": "\"separate\" | \"joint\""
        },
        {
          "name": "currentPageReportTemplate",
          "defaultValue": "'{currentPage} of {totalPages}'",
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "Template of the current page report element.\r\nAvailable placeholders are {currentPage},{totalPages},{rows},{first},{last} and {totalRecords}",
          "description": "<p>Template of the current page report element.\nAvailable placeholders are {currentPage},{totalPages},{rows},{first},{last} and {totalRecords}</p>\n",
          "line": 119,
          "type": "string"
        },
        {
          "name": "customSort",
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "Whether to use the default sorting or a custom one using sortFunction",
          "description": "<p>Whether to use the default sorting or a custom one using sortFunction</p>\n",
          "line": 159,
          "type": "boolean"
        },
        {
          "name": "dataKey",
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "A property to uniquely identify a record in data",
          "description": "<p>A property to uniquely identify a record in data</p>\n",
          "line": 167,
          "type": "string"
        },
        {
          "name": "defaultSortOrder",
          "defaultValue": "1",
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "Sort order to use when an unsorted column gets sorted by user interaction",
          "description": "<p>Sort order to use when an unsorted column gets sorted by user interaction</p>\n",
          "line": 147,
          "type": "number"
        },
        {
          "name": "filterDelay",
          "defaultValue": "300",
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "Delay in milliseconds before filtering the data",
          "description": "<p>Delay in milliseconds before filtering the data</p>\n",
          "line": 249,
          "type": "number"
        },
        {
          "name": "filterLocale",
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "Locale to use in filtering. The default locale is the host environment's current locale.",
          "description": "<p>Locale to use in filtering. The default locale is the host environment&#39;s current locale.</p>\n",
          "line": 257,
          "type": "string"
        },
        {
          "name": "filterMode",
          "defaultValue": "'lenient'",
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "Mode for filtering valid values are \"lenient\" and \"strict\". Default is lenient.",
          "description": "<p>Mode for filtering valid values are &quot;lenient&quot; and &quot;strict&quot;. Default is lenient.</p>\n",
          "line": 253,
          "type": "\"lenient\" | \"strict\""
        },
        {
          "name": "first",
          "defaultValue": "0",
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "Index of the first row to be displayed",
          "description": "<p>Index of the first row to be displayed</p>\n",
          "line": 92,
          "type": "number"
        },
        {
          "name": "frozenColumns",
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "An array of objects to represent dynamic columns that are frozen",
          "description": "<p>An array of objects to represent dynamic columns that are frozen</p>\n",
          "line": 225,
          "type": "any[]"
        },
        {
          "name": "frozenWidth",
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "Width of the frozen columns container",
          "description": "<p>Width of the frozen columns container</p>\n",
          "line": 221,
          "type": "string"
        },
        {
          "name": "globalFilterFields",
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "An array of fields as string to use in global filtering",
          "description": "<p>An array of fields as string to use in global filtering</p>\n",
          "line": 245,
          "type": "string[]"
        },
        {
          "name": "lazy",
          "defaultValue": "false",
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "Defines if data is loaded and interacted with in lazy manner",
          "description": "<p>Defines if data is loaded and interacted with in lazy manner</p>\n",
          "line": 76,
          "type": "boolean"
        },
        {
          "name": "lazyLoadOnInit",
          "defaultValue": "true",
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "Whether to call lazy loading on initialization",
          "description": "<p>Whether to call lazy loading on initialization</p>\n",
          "line": 80,
          "type": "boolean"
        },
        {
          "name": "loading",
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "Displays a loader to indicate data load is in progress",
          "description": "<p>Displays a loader to indicate data load is in progress</p>\n",
          "line": 185,
          "type": "boolean"
        },
        {
          "name": "loadingIcon",
          "defaultValue": "'pi pi-spinner'",
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "The icon to show while indicating data load is in progress",
          "description": "<p>The icon to show while indicating data load is in progress</p>\n",
          "line": 189,
          "type": "string"
        },
        {
          "name": "maxBufferPx",
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "Configures how much buffer space to render back up to when it detects that more buffer is required",
          "description": "<p>Configures how much buffer space to render back up to when it detects that more buffer is required</p>\n",
          "line": 217,
          "type": "number"
        },
        {
          "name": "metaKeySelection",
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "Defines whether metaKey is should be considered for the selection.\r\nOn touch enabled devices, metaKeySelection is turned off automatically",
          "description": "<p>Defines whether metaKey is should be considered for the selection.\nOn touch enabled devices, metaKeySelection is turned off automatically</p>\n",
          "line": 172,
          "type": "boolean"
        },
        {
          "name": "minBufferPx",
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "Minimum amount of content buffer (in pixels) that the viewport must render",
          "description": "<p>Minimum amount of content buffer (in pixels) that the viewport must render</p>\n",
          "line": 213,
          "type": "number"
        },
        {
          "name": "multiSortMeta",
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "An array of SortMeta objects to sort the data by default in multiple sort mode",
          "description": "<p>An array of SortMeta objects to sort the data by default in multiple sort mode</p>\n",
          "line": 273,
          "type": "SortMeta[]"
        },
        {
          "name": "pageLinks",
          "defaultValue": "5",
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "Number of total records, defaults to length of value when not defined",
          "description": "<p>Number of total records, defaults to length of value when not defined</p>\n",
          "line": 96,
          "type": "number"
        },
        {
          "name": "paginator",
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "When specified as true, enables the pagination",
          "description": "<p>When specified as true, enables the pagination</p>\n",
          "line": 84,
          "type": "boolean"
        },
        {
          "name": "paginatorDropdownAppendTo",
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "Target element to attach the paginator dropdown overlay,\r\nvalid values are \"body\" or a local ng-template variable of another element\r\n(note: use binding with brackets for template variables, e.g. [appendTo]=\"mydiv\" for a div element having #mydiv as variable name)",
          "description": "<p>Target element to attach the paginator dropdown overlay,\nvalid values are &quot;body&quot; or a local ng-template variable of another element\n(note: use binding with brackets for template variables, e.g. [appendTo]=&quot;mydiv&quot; for a div element having #mydiv as variable name)</p>\n",
          "line": 114,
          "type": "any"
        },
        {
          "name": "paginatorPosition",
          "defaultValue": "'bottom'",
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "Position of the paginator, options are \"top\",\"bottom\" or \"both\"",
          "description": "<p>Position of the paginator, options are &quot;top&quot;,&quot;bottom&quot; or &quot;both&quot;</p>\n",
          "line": 108,
          "type": "\"top\" | \"bottom\" | \"both\""
        },
        {
          "name": "reorderableColumns",
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "When enabled, columns can be reordered using drag and drop",
          "description": "<p>When enabled, columns can be reordered using drag and drop</p>\n",
          "line": 237,
          "type": "boolean"
        },
        {
          "name": "resetPageOnSort",
          "defaultValue": "true",
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "When true, resets paginator to first page after sorting",
          "description": "<p>When true, resets paginator to first page after sorting</p>\n",
          "line": 155,
          "type": "boolean"
        },
        {
          "name": "resizableColumns",
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "When enabled, columns can be resized using drag and drop",
          "description": "<p>When enabled, columns can be resized using drag and drop</p>\n",
          "line": 229,
          "type": "boolean"
        },
        {
          "name": "rowHover",
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "Adds hover effect to rows without the need for selectionMode",
          "description": "<p>Adds hover effect to rows without the need for selectionMode</p>\n",
          "line": 181,
          "type": "boolean"
        },
        {
          "name": "rows",
          "defaultValue": "10",
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "Number of rows to display per page",
          "description": "<p>Number of rows to display per page</p>\n",
          "line": 88,
          "type": "number"
        },
        {
          "name": "rowsPerPageOptions",
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "Number of page links to display in paginator",
          "description": "<p>Number of page links to display in paginator</p>\n",
          "line": 100,
          "type": "any[]"
        },
        {
          "name": "scrollable",
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "When specifies, enables horizontal and/or vertical scrolling",
          "description": "<p>When specifies, enables horizontal and/or vertical scrolling</p>\n",
          "line": 197,
          "type": "boolean"
        },
        {
          "name": "scrollHeight",
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "Height of the scroll viewport in fixed pixels or the \"flex\" keyword for a dynamic size",
          "description": "<p>Height of the scroll viewport in fixed pixels or the &quot;flex&quot; keyword for a dynamic size</p>\n",
          "line": 201,
          "type": "string"
        },
        {
          "name": "selection",
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "Selected row in single mode or an array of values in multiple mode",
          "description": "<p>Selected row in single mode or an array of values in multiple mode</p>\n",
          "line": 277,
          "type": "any"
        },
        {
          "name": "selectionMode",
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "Specifies the selection mode, valid values are \"single\" and \"multiple\"",
          "description": "<p>Specifies the selection mode, valid values are &quot;single&quot; and &quot;multiple&quot;</p>\n",
          "line": 163,
          "type": "\"single\" | \"multiple\""
        },
        {
          "name": "showCurrentPageReport",
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "Whether to display current page report",
          "description": "<p>Whether to display current page report</p>\n",
          "line": 123,
          "type": "boolean"
        },
        {
          "name": "showFirstLastIcon",
          "defaultValue": "true",
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "When enabled, icons are displayed on paginator to go first and last page",
          "description": "<p>When enabled, icons are displayed on paginator to go first and last page</p>\n",
          "line": 131,
          "type": "boolean"
        },
        {
          "name": "showJumpToPageDropdown",
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "Whether to display a dropdown to navigate to any page",
          "description": "<p>Whether to display a dropdown to navigate to any page</p>\n",
          "line": 127,
          "type": "boolean"
        },
        {
          "name": "showLoader",
          "defaultValue": "true",
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "Whether to show the loading mask when loading property is true",
          "description": "<p>Whether to show the loading mask when loading property is true</p>\n",
          "line": 193,
          "type": "boolean"
        },
        {
          "name": "showPageLinks",
          "defaultValue": "true",
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "Whether to show page links",
          "description": "<p>Whether to show page links</p>\n",
          "line": 135,
          "type": "boolean"
        },
        {
          "name": "sortField",
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "Name of the field to sort data by default",
          "description": "<p>Name of the field to sort data by default</p>\n",
          "line": 265,
          "type": "string"
        },
        {
          "name": "sortMode",
          "defaultValue": "'single'",
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "Defines whether sorting works on single column or on multiple columns",
          "description": "<p>Defines whether sorting works on single column or on multiple columns</p>\n",
          "line": 151,
          "type": "\"single\" | \"multiple\""
        },
        {
          "name": "sortOrder",
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "Order to sort when default sorting is enabled",
          "description": "<p>Order to sort when default sorting is enabled</p>\n",
          "line": 269,
          "type": "number"
        },
        {
          "name": "stripedMode",
          "defaultValue": "false",
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "When true turns on striped display mode",
          "description": "<p>When true turns on striped display mode</p>\n",
          "line": 281,
          "type": "boolean"
        },
        {
          "name": "style",
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "Inline style of the component",
          "description": "<p>Inline style of the component</p>\n",
          "line": 56,
          "type": "any"
        },
        {
          "name": "styleClass",
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "Style class of the component",
          "description": "<p>Style class of the component</p>\n",
          "line": 60,
          "type": "string"
        },
        {
          "name": "tableStyle",
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "Inline style of the table",
          "description": "<p>Inline style of the table</p>\n",
          "line": 64,
          "type": "Record<string | string>"
        },
        {
          "name": "tableStyleClass",
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "Style class of the table",
          "description": "<p>Style class of the table</p>\n",
          "line": 68,
          "type": "string"
        },
        {
          "name": "title",
          "defaultValue": "''",
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "Table title",
          "description": "<p>Table title</p>\n",
          "line": 44,
          "type": "string"
        },
        {
          "name": "totalRecords",
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "Number of total records, defaults to length of value when not defined",
          "description": "<p>Number of total records, defaults to length of value when not defined</p>\n",
          "line": 261,
          "type": "number"
        },
        {
          "name": "value",
          "defaultValue": "[]",
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "An array of objects to display",
          "description": "<p>An array of objects to display</p>\n",
          "line": 48,
          "type": "T[]"
        },
        {
          "name": "virtualRowHeight",
          "defaultValue": "32",
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "Height of a row to use in calculations of virtual scrolling",
          "description": "<p>Height of a row to use in calculations of virtual scrolling</p>\n",
          "line": 209,
          "type": "number"
        },
        {
          "name": "virtualScroll",
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "Whether the data should be loaded on demand during scroll",
          "description": "<p>Whether the data should be loaded on demand during scroll</p>\n",
          "line": 205,
          "type": "boolean"
        }
      ],
      "outputsClass": [
        {
          "name": "activeElementChange",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 21,
          "type": "EventEmitter<T>"
        },
        {
          "name": "colReorder",
          "defaultValue": "new EventEmitter<{ dragIndex: number; dropIndex: number; columns: string[] }>()",
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "\n\nCallback to invoke when a column is reordered\n",
          "description": "<p>Callback to invoke when a column is reordered</p>\n",
          "line": 331,
          "type": "EventEmitter"
        },
        {
          "name": "colResize",
          "defaultValue": "new EventEmitter<{ element: unknown; delta: unknown }>()",
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "\n\nCallback to invoke when a column is resized\n",
          "description": "<p>Callback to invoke when a column is resized</p>\n",
          "line": 326,
          "type": "EventEmitter"
        },
        {
          "name": "contextMenuSelect",
          "defaultValue": "new EventEmitter<{ originalEvent: Event; node: unknown }>()",
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "\n\nCallback to invoke when a node is selected with right click\n",
          "description": "<p>Callback to invoke when a node is selected with right click</p>\n",
          "line": 322,
          "type": "EventEmitter"
        },
        {
          "name": "editCancel",
          "defaultValue": "new EventEmitter<{ column: unknown; data: unknown }>()",
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "\n\nCallback to invoke when cell edit is cancelled with escape key\n",
          "description": "<p>Callback to invoke when cell edit is cancelled with escape key</p>\n",
          "line": 343,
          "type": "EventEmitter"
        },
        {
          "name": "editComplete",
          "defaultValue": "new EventEmitter<{ column: unknown; data: unknown }>()",
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "\n\nCallback to invoke when cell edit is completed\n",
          "description": "<p>Callback to invoke when cell edit is completed</p>\n",
          "line": 339,
          "type": "EventEmitter"
        },
        {
          "name": "editInit",
          "defaultValue": "new EventEmitter<{ column: unknown; data: unknown; originalEvent: Event }>()",
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "\n\nCallback to invoke when a cell switches to edit mode.\n",
          "description": "<p>Callback to invoke when a cell switches to edit mode.</p>\n",
          "line": 335,
          "type": "EventEmitter"
        },
        {
          "name": "headerCheckboxToggle",
          "defaultValue": "new EventEmitter<{ originalEvent: Event; checked: boolean }>()",
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "\n\nCallback to invoke when state of header checkbox changes\n",
          "description": "<p>Callback to invoke when state of header checkbox changes</p>\n",
          "line": 347,
          "type": "EventEmitter"
        },
        {
          "name": "lazyLoad",
          "defaultValue": "new EventEmitter<{\r\n    first: number;\r\n    rows: number;\r\n    sortField: string;\r\n    sortOrder: SortOrder;\r\n    multiSortMeta: SortMeta[];\r\n    filters: Record<string, unknown>;\r\n    globalFilter: unknown;\r\n  }>()",
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "\n\nCallback to invoke when paging, sorting or filtering happens in lazy mode\n",
          "description": "<p>Callback to invoke when paging, sorting or filtering happens in lazy mode</p>\n",
          "line": 305,
          "type": "EventEmitter"
        },
        {
          "name": "onFilter",
          "defaultValue": "new EventEmitter<{ filters: Record<string, unknown>; filteredValue: unknown }>()",
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "\n\nCallback to invoke when data is filtered\n",
          "description": "<p>Callback to invoke when data is filtered</p>\n",
          "line": 288,
          "type": "EventEmitter"
        },
        {
          "name": "onSort",
          "defaultValue": "new EventEmitter<{\r\n    field: string;\r\n    order: SortOrder;\r\n    multisortmeta: SortMeta[];\r\n  } | null>()",
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "\n\nCallback to invoke when a column gets sorted\n",
          "description": "<p>Callback to invoke when a column gets sorted</p>\n",
          "line": 296,
          "type": "EventEmitter"
        },
        {
          "name": "page",
          "defaultValue": "new EventEmitter<{ first: number; rows: number }>()",
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "\n\nCallback to invoke when pagination occurs\n",
          "description": "<p>Callback to invoke when pagination occurs</p>\n",
          "line": 292,
          "type": "EventEmitter"
        },
        {
          "name": "selectionChange",
          "defaultValue": "new EventEmitter<unknown>()",
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "\n\nCallback to invoke when selection is changed\n",
          "description": "<p>Callback to invoke when selection is changed</p>\n",
          "line": 351,
          "type": "EventEmitter"
        },
        {
          "name": "sortFunction",
          "defaultValue": "new EventEmitter<TableSortEvent>()",
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "\n\nA function to implement custom sorting\n",
          "description": "<p>A function to implement custom sorting</p>\n",
          "line": 318,
          "type": "EventEmitter"
        }
      ],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "propertiesClass": [
        {
          "name": "_activeElement",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "T",
          "optional": false,
          "description": "",
          "line": 355,
          "modifierKind": [121]
        },
        {
          "name": "bodyTemplate",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "TemplateRef<any>",
          "optional": false,
          "description": "",
          "line": 25,
          "modifierKind": [123]
        },
        {
          "name": "captionTemplate",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "TemplateRef<any>",
          "optional": false,
          "description": "",
          "line": 26,
          "modifierKind": [123]
        },
        {
          "name": "colGroupTemplate",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "TemplateRef<any>",
          "optional": false,
          "description": "",
          "line": 27,
          "modifierKind": [123]
        },
        {
          "name": "emptyMessageTemplate",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "TemplateRef<any>",
          "optional": false,
          "description": "",
          "line": 28,
          "modifierKind": [123]
        },
        {
          "name": "footerTemplate",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "TemplateRef<any>",
          "optional": false,
          "description": "",
          "line": 29,
          "modifierKind": [123]
        },
        {
          "name": "frozenBodyTemplate",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "TemplateRef<any>",
          "optional": false,
          "description": "",
          "line": 30,
          "modifierKind": [123]
        },
        {
          "name": "frozenColGroupTemplate",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "TemplateRef<any>",
          "optional": false,
          "description": "",
          "line": 31,
          "modifierKind": [123]
        },
        {
          "name": "frozenFooterTemplate",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "TemplateRef<any>",
          "optional": false,
          "description": "",
          "line": 32,
          "modifierKind": [123]
        },
        {
          "name": "frozenHeaderTemplate",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "TemplateRef<any>",
          "optional": false,
          "description": "",
          "line": 33,
          "modifierKind": [123]
        },
        {
          "name": "headerTemplate",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "TemplateRef<any>",
          "optional": false,
          "description": "",
          "line": 34,
          "modifierKind": [123]
        },
        {
          "name": "initialData",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "T[]",
          "optional": false,
          "description": "",
          "line": 354,
          "modifierKind": [121]
        },
        {
          "name": "paginatorDropdownItemTemplate",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "TemplateRef<any>",
          "optional": false,
          "description": "",
          "line": 35,
          "modifierKind": [123]
        },
        {
          "name": "paginatorLeftTemplate",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "TemplateRef<any>",
          "optional": false,
          "description": "",
          "line": 36,
          "modifierKind": [123]
        },
        {
          "name": "paginatorRightTemplate",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "TemplateRef<any>",
          "optional": false,
          "description": "",
          "line": 37,
          "modifierKind": [123]
        },
        {
          "name": "styleClasses",
          "defaultValue": "'p-datatable-gridlines'",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 23
        },
        {
          "name": "summaryTemplate",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "TemplateRef<any>",
          "optional": false,
          "description": "",
          "line": 38,
          "modifierKind": [123]
        }
      ],
      "methodsClass": [
        {
          "name": "checkUpdateStyleClasses",
          "args": [
            {
              "name": "changes",
              "type": "SimpleChanges",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 504,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [122],
          "jsdoctags": [
            {
              "name": "changes",
              "type": "SimpleChanges",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "filter",
          "args": [
            {
              "name": "value",
              "type": "any",
              "deprecated": false,
              "deprecationMessage": ""
            },
            {
              "name": "field",
              "type": "string",
              "deprecated": false,
              "deprecationMessage": ""
            },
            {
              "name": "matchMode",
              "type": "string",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 476,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [123],
          "jsdoctags": [
            {
              "name": "value",
              "type": "any",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "field",
              "type": "string",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "matchMode",
              "type": "string",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "filterGlobal",
          "args": [
            {
              "name": "value",
              "type": "",
              "deprecated": false,
              "deprecationMessage": ""
            },
            {
              "name": "matchMode",
              "type": "",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 480,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [123],
          "jsdoctags": [
            {
              "name": "value",
              "type": "",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "matchMode",
              "type": "",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "getContentTemplate",
          "args": [],
          "optional": false,
          "returnType": "QueryList<BaseTableTemplateDirective>",
          "typeParameters": [],
          "line": 357,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [123]
        },
        {
          "name": "getTable",
          "args": [],
          "optional": false,
          "returnType": "any",
          "typeParameters": [],
          "line": 361,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [123]
        },
        {
          "name": "initTemplateByType",
          "args": [
            {
              "name": "item",
              "type": "BaseTableTemplateDirective",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 365,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [123],
          "jsdoctags": [
            {
              "name": "item",
              "type": "BaseTableTemplateDirective",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "isSelected",
          "args": [
            {
              "name": "rowData",
              "type": "",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "boolean",
          "typeParameters": [],
          "line": 484,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [123],
          "jsdoctags": [
            {
              "name": "rowData",
              "type": "",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "ngAfterContentInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 378,
          "deprecated": false,
          "deprecationMessage": ""
        },
        {
          "name": "ngOnChanges",
          "args": [
            {
              "name": "changes",
              "type": "SimpleChanges",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 369,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "changes",
              "type": "SimpleChanges",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "resetScrollTop",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 446,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [123]
        },
        {
          "name": "resetSort",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 458,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [123]
        },
        {
          "name": "scrollTo",
          "args": [
            {
              "name": "options",
              "type": "any",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 454,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [123],
          "jsdoctags": [
            {
              "name": "options",
              "type": "any",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "scrollToVirtualIndex",
          "args": [
            {
              "name": "index",
              "type": "number",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 450,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [123],
          "jsdoctags": [
            {
              "name": "index",
              "type": "number",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "setValue",
          "args": [
            {
              "name": "value",
              "type": "T[]",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 442,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [123],
          "jsdoctags": [
            {
              "name": "value",
              "type": "T[]",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "updateStyleClasses",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 488,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [122]
        }
      ],
      "implements": ["OnChanges", "AfterContentInit"],
      "accessors": {
        "activeElement": {
          "name": "activeElement",
          "setSignature": {
            "name": "activeElement",
            "type": "void",
            "deprecated": false,
            "deprecationMessage": "",
            "args": [
              {
                "name": "activeElement",
                "type": "T",
                "deprecated": false,
                "deprecationMessage": ""
              }
            ],
            "returnType": "void",
            "line": 510,
            "jsdoctags": [
              {
                "name": "activeElement",
                "type": "T",
                "deprecated": false,
                "deprecationMessage": "",
                "tagName": {
                  "text": "param"
                }
              }
            ]
          },
          "getSignature": {
            "name": "activeElement",
            "type": "",
            "returnType": "T",
            "line": 519
          }
        }
      }
    },
    {
      "name": "ZyfraCancelEditableRowDirective",
      "id": "directive-ZyfraCancelEditableRowDirective-f0f0c3b273d844275045194c025d92a6",
      "file": "libs/components/src/lib/table/directives/cancel-editable-row.directive.ts",
      "type": "directive",
      "description": "",
      "rawdescription": "\n",
      "sourceCode": "import { Directive } from '@angular/core';\r\nimport { CancelEditableRow } from 'primeng/table';\r\n\r\n@Directive({\r\n  selector: '[zyfraCancelEditableRow]'\r\n})\r\nexport class ZyfraCancelEditableRowDirective extends CancelEditableRow {}\r\n",
      "selector": "[zyfraCancelEditableRow]",
      "providers": [],
      "inputsClass": [],
      "outputsClass": [],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "propertiesClass": [],
      "methodsClass": []
    },
    {
      "name": "ZyfraDisableControlDirective",
      "id": "directive-ZyfraDisableControlDirective-e4f514fe8eae73e177c2e31b4d36e2ad",
      "file": "libs/components/src/lib/@core/shared/zyfra-disable-control.module.ts",
      "type": "directive",
      "description": "",
      "rawdescription": "\n",
      "sourceCode": "import { Directive, Input, NgModule } from '@angular/core';\r\nimport { NgControl } from '@angular/forms';\r\n\r\n@Directive({\r\n  selector: '[zyfraDisableControl]',\r\n})\r\nexport class ZyfraDisableControlDirective {\r\n  @Input() set zyfraDisableControl(condition: boolean) {\r\n    const conditionDisable = condition || this.ngControl.disabled;\r\n    const action = conditionDisable ? 'disable' : 'enable';\r\n    this.ngControl.control[action]();\r\n  }\r\n\r\n  constructor(private ngControl: NgControl) {}\r\n}\r\n\r\n@NgModule({\r\n  declarations: [ZyfraDisableControlDirective],\r\n  exports: [ZyfraDisableControlDirective],\r\n})\r\nexport class ZyfraDisableControlModule {}\r\n",
      "selector": "[zyfraDisableControl]",
      "providers": [],
      "inputsClass": [
        {
          "name": "zyfraDisableControl",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 8,
          "type": "boolean"
        }
      ],
      "outputsClass": [],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "propertiesClass": [],
      "methodsClass": [],
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "deprecated": false,
        "deprecationMessage": "",
        "args": [
          {
            "name": "ngControl",
            "type": "NgControl",
            "deprecated": false,
            "deprecationMessage": ""
          }
        ],
        "line": 12,
        "jsdoctags": [
          {
            "name": "ngControl",
            "type": "NgControl",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      "accessors": {
        "zyfraDisableControl": {
          "name": "zyfraDisableControl",
          "setSignature": {
            "name": "zyfraDisableControl",
            "type": "void",
            "deprecated": false,
            "deprecationMessage": "",
            "args": [
              {
                "name": "condition",
                "type": "boolean",
                "deprecated": false,
                "deprecationMessage": ""
              }
            ],
            "returnType": "void",
            "line": 8,
            "jsdoctags": [
              {
                "name": "condition",
                "type": "boolean",
                "deprecated": false,
                "deprecationMessage": "",
                "tagName": {
                  "text": "param"
                }
              }
            ]
          }
        }
      }
    },
    {
      "name": "ZyfraDropdownTemplateDirective",
      "id": "directive-ZyfraDropdownTemplateDirective-dc63f333f856029869f520c2f395c1bf",
      "file": "libs/components/src/lib/dropdown/zyfra-dropdown-template.directive.ts",
      "type": "directive",
      "description": "",
      "rawdescription": "\n",
      "sourceCode": "import { Directive, Input, TemplateRef } from '@angular/core';\r\n\r\ntype DropdownTemplateType = 'item' | 'group' | 'selectedItem' | 'header' | 'empty' | 'emptyfilter' | 'footer';\r\n\r\n@Directive({\r\n  selector: '[zyfraDropdownTemplate]',\r\n})\r\nexport class ZyfraDropdownTemplateDirective {\r\n  @Input() zyfraDropdownTemplate: DropdownTemplateType;\r\n\r\n  constructor(public templateRef: TemplateRef<any>) {}\r\n\r\n  get template(): TemplateRef<any> {\r\n    return this.templateRef;\r\n  }\r\n\r\n  public getType(): DropdownTemplateType {\r\n    return this.zyfraDropdownTemplate;\r\n  }\r\n}\r\n",
      "selector": "[zyfraDropdownTemplate]",
      "providers": [],
      "inputsClass": [
        {
          "name": "zyfraDropdownTemplate",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 9,
          "type": "DropdownTemplateType"
        }
      ],
      "outputsClass": [],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "propertiesClass": [
        {
          "name": "templateRef",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "TemplateRef<any>",
          "optional": false,
          "description": "",
          "line": 11,
          "modifierKind": [123]
        }
      ],
      "methodsClass": [
        {
          "name": "getType",
          "args": [],
          "optional": false,
          "returnType": "DropdownTemplateType",
          "typeParameters": [],
          "line": 17,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [123]
        }
      ],
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "deprecated": false,
        "deprecationMessage": "",
        "args": [
          {
            "name": "templateRef",
            "type": "TemplateRef<any>",
            "deprecated": false,
            "deprecationMessage": ""
          }
        ],
        "line": 9,
        "jsdoctags": [
          {
            "name": "templateRef",
            "type": "TemplateRef<any>",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      "accessors": {
        "template": {
          "name": "template",
          "getSignature": {
            "name": "template",
            "type": "",
            "returnType": "TemplateRef<any>",
            "line": 13
          }
        }
      }
    },
    {
      "name": "ZyfraEditableColumnDirective",
      "id": "directive-ZyfraEditableColumnDirective-bafa3e2bc604bce3d6499e09d2f9faad",
      "file": "libs/components/src/lib/table/directives/editable-column.directive.ts",
      "type": "directive",
      "description": "",
      "rawdescription": "\n",
      "sourceCode": "import { Directive, HostListener } from '@angular/core';\r\nimport { EditableColumn } from 'primeng/table';\r\n\r\n@Directive({\r\n  selector: '[zyfraEditableColumn]',\r\n  providers: [{ provide: EditableColumn, useClass: ZyfraEditableColumnDirective }]\r\n})\r\nexport class ZyfraEditableColumnDirective extends EditableColumn {\r\n  public override onClick(event: MouseEvent): void {\r\n    // doing nothing, redefining parent class method\r\n  }\r\n\r\n  @HostListener('dblclick', ['$event'])\r\n  public onDblClick(event: MouseEvent): void {\r\n    super.onClick(event);\r\n  }\r\n}\r\n",
      "selector": "[zyfraEditableColumn]",
      "providers": [
        {
          "name": "{ provide: EditableColumn, useClass: ZyfraEditableColumnDirective }",
          "type": "directive"
        }
      ],
      "inputsClass": [],
      "outputsClass": [],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [
        {
          "name": "dblclick",
          "args": [
            {
              "name": "event",
              "type": "MouseEvent",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "argsDecorator": ["$event"],
          "deprecated": false,
          "deprecationMessage": "",
          "line": 14
        }
      ],
      "propertiesClass": [],
      "methodsClass": [
        {
          "name": "onClick",
          "args": [
            {
              "name": "event",
              "type": "MouseEvent",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 9,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [123, 157],
          "jsdoctags": [
            {
              "name": "event",
              "type": "MouseEvent",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "onDblClick",
          "args": [
            {
              "name": "event",
              "type": "MouseEvent",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 14,
          "deprecated": false,
          "deprecationMessage": "",
          "decorators": [
            {
              "name": "HostListener",
              "stringifiedArguments": "'dblclick', ['$event']"
            }
          ],
          "modifierKind": [123],
          "jsdoctags": [
            {
              "name": "event",
              "type": "MouseEvent",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        }
      ]
    },
    {
      "name": "ZyfraEditableRowDirective",
      "id": "directive-ZyfraEditableRowDirective-00962d29e96979343c5a0bae4bb13141",
      "file": "libs/components/src/lib/table/directives/editable-row.directive.ts",
      "type": "directive",
      "description": "",
      "rawdescription": "\n",
      "sourceCode": "import { Directive, Input } from '@angular/core';\r\nimport { EditableRow } from 'primeng/table';\r\n\r\n@Directive({\r\n  selector: '[zyfraEditableRow]',\r\n  providers: [{ provide: EditableRow, useExisting: ZyfraEditableRowDirective }]\r\n})\r\nexport class ZyfraEditableRowDirective extends EditableRow {\r\n  @Input('zyfraEditableRow') override data: any;\r\n  @Input('zyfraEditableRowDisabled') override pEditableRowDisabled: boolean;\r\n}\r\n",
      "selector": "[zyfraEditableRow]",
      "providers": [
        {
          "name": "{ provide: EditableRow, useExisting: ZyfraEditableRowDirective }",
          "type": "directive"
        }
      ],
      "inputsClass": [
        {
          "name": "zyfraEditableRow",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 9,
          "type": "any"
        },
        {
          "name": "zyfraEditableRowDisabled",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 10,
          "type": "boolean"
        }
      ],
      "outputsClass": [],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "propertiesClass": [],
      "methodsClass": []
    },
    {
      "name": "ZyfraFrozenColumnDirective",
      "id": "directive-ZyfraFrozenColumnDirective-48f75c3f2546104a2e35b58c43fa6a0f",
      "file": "libs/components/src/lib/table/directives/frozen-column.directive.ts",
      "type": "directive",
      "description": "",
      "rawdescription": "\n",
      "sourceCode": "import { Directive } from '@angular/core';\r\nimport { FrozenColumn } from 'primeng/table';\r\n\r\n@Directive({\r\n  selector: '[zyfraFrozenColumn]'\r\n})\r\nexport class ZyfraFrozenColumnDirective extends FrozenColumn {}\r\n",
      "selector": "[zyfraFrozenColumn]",
      "providers": [],
      "inputsClass": [],
      "outputsClass": [],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "propertiesClass": [],
      "methodsClass": []
    },
    {
      "name": "ZyfraIconButtonDirective",
      "id": "directive-ZyfraIconButtonDirective-7ec8e69f16e1dcea27d9c6cad6957e89",
      "file": "libs/components/src/lib/icon-button/zyfra-icon-button.directive.ts",
      "type": "directive",
      "description": "",
      "rawdescription": "\n",
      "sourceCode": "import { Directive } from '@angular/core';\r\n\r\n@Directive({\r\n  selector: 'button[zyfraIconButton]',\r\n  // eslint-disable-next-line @angular-eslint/no-host-metadata-property\r\n  host: {\r\n    '[attr.type]': \"'button'\",\r\n    'class': 'zyfra-icon-button'\r\n  }\r\n})\r\nexport class ZyfraIconButtonDirective {\r\n}\r\n",
      "selector": "button[zyfraIconButton]",
      "providers": [],
      "inputsClass": [],
      "outputsClass": [],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "propertiesClass": [],
      "methodsClass": []
    },
    {
      "name": "ZyfraInitEditableRowDirective",
      "id": "directive-ZyfraInitEditableRowDirective-6aa1bb610c4d56aff5083bf3f6ca49ab",
      "file": "libs/components/src/lib/table/directives/init-editable-row.directive.ts",
      "type": "directive",
      "description": "",
      "rawdescription": "\n",
      "sourceCode": "import { Directive } from '@angular/core';\r\nimport { InitEditableRow } from 'primeng/table';\r\n\r\n@Directive({\r\n  selector: '[zyfraInitEditableRow]'\r\n})\r\nexport class ZyfraInitEditableRowDirective extends InitEditableRow {}\r\n",
      "selector": "[zyfraInitEditableRow]",
      "providers": [],
      "inputsClass": [],
      "outputsClass": [],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "propertiesClass": [],
      "methodsClass": []
    },
    {
      "name": "ZyfraInputDirective",
      "id": "directive-ZyfraInputDirective-a2f82992153681d67b249b3110c284ef",
      "file": "libs/components/src/lib/input-text/zyfra-input-text.directive.ts",
      "type": "directive",
      "description": "",
      "rawdescription": "\n",
      "sourceCode": "import {\r\n  ChangeDetectorRef,\r\n  Directive,\r\n  DoCheck,\r\n  ElementRef,\r\n  HostListener,\r\n  Input,\r\n  OnInit,\r\n  Optional,\r\n  Self,\r\n} from '@angular/core';\r\nimport { NgControl, Validators } from '@angular/forms';\r\nimport { ZuiDestroyService } from '@digital-plant/zyfra-helpers';\r\nimport { takeUntil, tap } from 'rxjs/operators';\r\nimport { ZyfraInputGroupControl } from '../input-group/zyfra-input-group-control.class';\r\n\r\n@Directive({\r\n  selector: 'input[zyfraInput],textarea[zyfraInput]',\r\n  // eslint-disable-next-line @angular-eslint/no-host-metadata-property\r\n  host: {\r\n    class: 'p-inputtext p-component p-element',\r\n    '[class.ng-invalid]': 'ngControl?.invalid',\r\n    '[class.ng-valid]': 'ngControl?.valid',\r\n    '[class.ng-dirty]': 'ngControl?.dirty',\r\n    '[class.ng-touched]': 'ngControl?.touched',\r\n    '[class.p-filled]': 'empty',\r\n    '[disabled]': 'disabled',\r\n    '[required]': 'required',\r\n  },\r\n  providers: [{ provide: ZyfraInputGroupControl, useExisting: ZyfraInputDirective }, ZuiDestroyService],\r\n})\r\nexport class ZyfraInputDirective implements ZyfraInputGroupControl<string>, DoCheck, OnInit {\r\n  /**\r\n   * Disabled input\r\n   */\r\n  @Input()\r\n  get disabled(): boolean {\r\n    if (this.ngControl && this.ngControl.disabled !== null) {\r\n      return this.ngControl.disabled;\r\n    }\r\n    return this._disabled;\r\n  }\r\n\r\n  set disabled(value: boolean) {\r\n    this._disabled = value;\r\n  }\r\n\r\n  protected _disabled = false;\r\n\r\n  /**\r\n   * Required input\r\n   */\r\n  @Input()\r\n  get required(): boolean {\r\n    return this._required ?? this.ngControl?.control?.hasValidator(Validators.required) ?? false;\r\n  }\r\n\r\n  set required(value: boolean) {\r\n    this._required = value;\r\n  }\r\n\r\n  protected _required: boolean | undefined;\r\n\r\n  /**\r\n   * Inputvalue input\r\n   */\r\n  @Input()\r\n  get value(): string {\r\n    return this._inputValue.value;\r\n  }\r\n\r\n  set value(value: string) {\r\n    if (value !== this.value) {\r\n      this._inputValue.value = value;\r\n    }\r\n  }\r\n  private _inputValue: { value: string };\r\n\r\n  /**\r\n   * Empty state\r\n   */\r\n  public empty: boolean;\r\n\r\n\r\n  @HostListener('input', ['$event'])\r\n  public onInput(e: unknown): void {\r\n    this.updateEmptyState();\r\n  }\r\n\r\n  /**\r\n   * Create instance\r\n   */\r\n  constructor(\r\n    @Optional() @Self() public readonly ngControl: NgControl,\r\n    private readonly zuiDestroyService: ZuiDestroyService,\r\n    private readonly cdRef: ChangeDetectorRef,\r\n    private readonly elementRef: ElementRef<HTMLInputElement | HTMLTextAreaElement>\r\n  ) {\r\n    this._inputValue = elementRef.nativeElement;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    if (this.ngControl) this.initControlListener();\r\n  }\r\n\r\n  ngDoCheck(): void {\r\n    this.updateEmptyState();\r\n  }\r\n\r\n  private initControlListener (): void {\r\n    this.ngControl.statusChanges.pipe(\r\n      tap(() => {\r\n        this.updateEmptyState();\r\n        this.cdRef.markForCheck();\r\n      }),\r\n      takeUntil(this.zuiDestroyService),\r\n    ).subscribe();\r\n  }\r\n\r\n  private updateEmptyState(): void {\r\n    this.empty =\r\n      (this.elementRef.nativeElement.value && this.elementRef.nativeElement.value.length) ||\r\n      (this.ngControl && this.ngControl.value);\r\n  }\r\n}\r\n",
      "selector": "input[zyfraInput],textarea[zyfraInput]",
      "providers": [
        {
          "name": "{ provide: ZyfraInputGroupControl, useExisting: ZyfraInputDirective }",
          "type": "directive"
        },
        {
          "name": "ZuiDestroyService"
        }
      ],
      "inputsClass": [
        {
          "name": "disabled",
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "Disabled input",
          "description": "<p>Disabled input</p>\n",
          "line": 37,
          "type": "boolean"
        },
        {
          "name": "required",
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "Required input",
          "description": "<p>Required input</p>\n",
          "line": 54,
          "type": "boolean"
        },
        {
          "name": "value",
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "Inputvalue input",
          "description": "<p>Inputvalue input</p>\n",
          "line": 68,
          "type": "string"
        }
      ],
      "outputsClass": [],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [
        {
          "name": "input",
          "args": [
            {
              "name": "e",
              "type": "",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "argsDecorator": ["$event"],
          "deprecated": false,
          "deprecationMessage": "",
          "line": 86
        }
      ],
      "propertiesClass": [
        {
          "name": "_disabled",
          "defaultValue": "false",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "optional": false,
          "description": "",
          "line": 48,
          "modifierKind": [122]
        },
        {
          "name": "_inputValue",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "literal type",
          "optional": false,
          "description": "",
          "line": 77,
          "modifierKind": [121]
        },
        {
          "name": "_required",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "boolean | undefined",
          "optional": false,
          "description": "",
          "line": 62,
          "modifierKind": [122]
        },
        {
          "name": "empty",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "boolean",
          "optional": false,
          "description": "<p>Empty state</p>\n",
          "line": 82,
          "rawdescription": "\n\nEmpty state\n",
          "modifierKind": [123]
        },
        {
          "name": "ngControl",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "NgControl",
          "optional": false,
          "description": "",
          "line": 94,
          "decorators": [
            {
              "name": "Optional",
              "stringifiedArguments": ""
            },
            {
              "name": "Self",
              "stringifiedArguments": ""
            }
          ],
          "modifierKind": [123, 143]
        }
      ],
      "methodsClass": [
        {
          "name": "initControlListener",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 110,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [121]
        },
        {
          "name": "ngDoCheck",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 106,
          "deprecated": false,
          "deprecationMessage": ""
        },
        {
          "name": "ngOnInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 102,
          "deprecated": false,
          "deprecationMessage": ""
        },
        {
          "name": "onInput",
          "args": [
            {
              "name": "e",
              "type": "",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 86,
          "deprecated": false,
          "deprecationMessage": "",
          "decorators": [
            {
              "name": "HostListener",
              "stringifiedArguments": "'input', ['$event']"
            }
          ],
          "modifierKind": [123],
          "jsdoctags": [
            {
              "name": "e",
              "type": "",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "updateEmptyState",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 120,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [121]
        }
      ],
      "implements": ["ZyfraInputGroupControl", "DoCheck", "OnInit"],
      "constructorObj": {
        "name": "constructor",
        "description": "<p>Create instance</p>\n",
        "deprecated": false,
        "deprecationMessage": "",
        "args": [
          {
            "name": "ngControl",
            "type": "NgControl",
            "deprecated": false,
            "deprecationMessage": ""
          },
          {
            "name": "zuiDestroyService",
            "type": "ZuiDestroyService",
            "deprecated": false,
            "deprecationMessage": ""
          },
          {
            "name": "cdRef",
            "type": "ChangeDetectorRef",
            "deprecated": false,
            "deprecationMessage": ""
          },
          {
            "name": "elementRef",
            "type": "ElementRef<HTMLInputElement | HTMLTextAreaElement>",
            "deprecated": false,
            "deprecationMessage": ""
          }
        ],
        "line": 88,
        "rawdescription": "\n\nCreate instance\n",
        "jsdoctags": [
          {
            "name": "ngControl",
            "type": "NgControl",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          },
          {
            "name": "zuiDestroyService",
            "type": "ZuiDestroyService",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          },
          {
            "name": "cdRef",
            "type": "ChangeDetectorRef",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          },
          {
            "name": "elementRef",
            "type": "ElementRef<HTMLInputElement | HTMLTextAreaElement>",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      "accessors": {
        "disabled": {
          "name": "disabled",
          "setSignature": {
            "name": "disabled",
            "type": "void",
            "deprecated": false,
            "deprecationMessage": "",
            "args": [
              {
                "name": "value",
                "type": "boolean",
                "deprecated": false,
                "deprecationMessage": ""
              }
            ],
            "returnType": "void",
            "line": 44,
            "jsdoctags": [
              {
                "name": "value",
                "type": "boolean",
                "deprecated": false,
                "deprecationMessage": "",
                "tagName": {
                  "text": "param"
                }
              }
            ]
          },
          "getSignature": {
            "name": "disabled",
            "type": "boolean",
            "returnType": "boolean",
            "line": 37,
            "rawdescription": "Disabled input",
            "description": "<p>Disabled input</p>\n"
          }
        },
        "required": {
          "name": "required",
          "setSignature": {
            "name": "required",
            "type": "void",
            "deprecated": false,
            "deprecationMessage": "",
            "args": [
              {
                "name": "value",
                "type": "boolean",
                "deprecated": false,
                "deprecationMessage": ""
              }
            ],
            "returnType": "void",
            "line": 58,
            "jsdoctags": [
              {
                "name": "value",
                "type": "boolean",
                "deprecated": false,
                "deprecationMessage": "",
                "tagName": {
                  "text": "param"
                }
              }
            ]
          },
          "getSignature": {
            "name": "required",
            "type": "boolean",
            "returnType": "boolean",
            "line": 54,
            "rawdescription": "Required input",
            "description": "<p>Required input</p>\n"
          }
        },
        "value": {
          "name": "value",
          "setSignature": {
            "name": "value",
            "type": "void",
            "deprecated": false,
            "deprecationMessage": "",
            "args": [
              {
                "name": "value",
                "type": "string",
                "deprecated": false,
                "deprecationMessage": ""
              }
            ],
            "returnType": "void",
            "line": 72,
            "jsdoctags": [
              {
                "name": "value",
                "type": "string",
                "deprecated": false,
                "deprecationMessage": "",
                "tagName": {
                  "text": "param"
                }
              }
            ]
          },
          "getSignature": {
            "name": "value",
            "type": "string",
            "returnType": "string",
            "line": 68,
            "rawdescription": "Inputvalue input",
            "description": "<p>Inputvalue input</p>\n"
          }
        }
      }
    },
    {
      "name": "ZyfraInputGroupControl",
      "id": "directive-ZyfraInputGroupControl-4c5d8784926879744a16ae32ac7cd510",
      "file": "libs/components/src/lib/input-group/zyfra-input-group-control.class.ts",
      "type": "directive",
      "description": "",
      "rawdescription": "\n",
      "sourceCode": "import { Directive } from '@angular/core';\r\nimport { AbstractControlDirective, NgControl } from '@angular/forms';\r\n\r\n@Directive()\r\nexport abstract class ZyfraInputGroupControl<T> {\r\n  /** The value of the control. */\r\n  value: T | null;\r\n\r\n  readonly empty: boolean;\r\n\r\n  /** Gets the AbstractControlDirective for this control. */\r\n  readonly ngControl: NgControl | AbstractControlDirective | null;\r\n\r\n  /** Whether the control is required. */\r\n  readonly required: boolean;\r\n\r\n  /** Whether the control is disabled. */\r\n  readonly disabled: boolean;\r\n}\r\n",
      "providers": [],
      "inputsClass": [],
      "outputsClass": [],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "propertiesClass": [
        {
          "name": "disabled",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "boolean",
          "optional": false,
          "description": "<p>Whether the control is disabled.</p>\n",
          "line": 18,
          "rawdescription": "\nWhether the control is disabled.",
          "modifierKind": [143]
        },
        {
          "name": "empty",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "boolean",
          "optional": false,
          "description": "",
          "line": 9,
          "modifierKind": [143]
        },
        {
          "name": "ngControl",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "NgControl | AbstractControlDirective | null",
          "optional": false,
          "description": "<p>Gets the AbstractControlDirective for this control.</p>\n",
          "line": 12,
          "rawdescription": "\nGets the AbstractControlDirective for this control.",
          "modifierKind": [143]
        },
        {
          "name": "required",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "boolean",
          "optional": false,
          "description": "<p>Whether the control is required.</p>\n",
          "line": 15,
          "rawdescription": "\nWhether the control is required.",
          "modifierKind": [143]
        },
        {
          "name": "value",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "T | null",
          "optional": false,
          "description": "<p>The value of the control.</p>\n",
          "line": 7,
          "rawdescription": "\nThe value of the control."
        }
      ],
      "methodsClass": []
    },
    {
      "name": "ZyfraNavMenuGroupDirective",
      "id": "directive-ZyfraNavMenuGroupDirective-e5ee7502aa1aea6411bbc6ed6b94bf3a",
      "file": "libs/components/src/lib/nav-menu/directives/nav-menu-group.directive.ts",
      "type": "directive",
      "description": "",
      "rawdescription": "\n",
      "sourceCode": "import { Directive, Input } from '@angular/core';\r\nimport { ZyfraMenuItem } from '../model/zyfra-menu-item.interface';\r\n@Directive({\r\n  selector: '[zyfraNavMenuGroup]'\r\n})\r\nexport class ZyfraNavMenuGroupDirective {\r\n  @Input() items: ZyfraMenuItem[] = [];\r\n  @Input() header: string;\r\n}\r\n",
      "selector": "[zyfraNavMenuGroup]",
      "providers": [],
      "inputsClass": [
        {
          "name": "header",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 8,
          "type": "string"
        },
        {
          "name": "items",
          "defaultValue": "[]",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 7,
          "type": "ZyfraMenuItem[]"
        }
      ],
      "outputsClass": [],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "propertiesClass": [],
      "methodsClass": []
    },
    {
      "name": "ZyfraReordableColumnDirective",
      "id": "directive-ZyfraReordableColumnDirective-9f08ad2ce2bf63ff4b2685851ef04d3b",
      "file": "libs/components/src/lib/table/directives/reordable-column.directive.ts",
      "type": "directive",
      "description": "",
      "rawdescription": "\n",
      "sourceCode": "import { Directive, HostBinding, Input } from '@angular/core';\r\nimport { ReorderableColumn } from 'primeng/table';\r\n\r\n@Directive({\r\n  selector: '[zyfraReordableColumn]',\r\n})\r\nexport class ZyfraReordableColumnDirective extends ReorderableColumn {\r\n  @Input('zyfraReordableColumnDisabled') override pReorderableColumnDisabled: boolean;\r\n\r\n  @HostBinding('attr.preorderablecolumn') reorderableColumnAttribute = true;\r\n}\r\n",
      "selector": "[zyfraReordableColumn]",
      "providers": [],
      "inputsClass": [
        {
          "name": "zyfraReordableColumnDisabled",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 8,
          "type": "boolean"
        }
      ],
      "outputsClass": [],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [
        {
          "name": "attr.preorderablecolumn",
          "defaultValue": "true",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 10,
          "type": "boolean"
        }
      ],
      "hostListeners": [],
      "propertiesClass": [
        {
          "name": "reorderableColumnAttribute",
          "defaultValue": "true",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "optional": false,
          "description": "",
          "line": 10,
          "decorators": [
            {
              "name": "HostBinding",
              "stringifiedArguments": "'attr.preorderablecolumn'"
            }
          ]
        }
      ],
      "methodsClass": []
    },
    {
      "name": "ZyfraReordableRowDirective",
      "id": "directive-ZyfraReordableRowDirective-1ef7db3716ca2133e37a05988dfa83b9",
      "file": "libs/components/src/lib/table/directives/reordable-row.directive.ts",
      "type": "directive",
      "description": "",
      "rawdescription": "\n",
      "sourceCode": "import { Directive, Input } from '@angular/core';\r\nimport { ReorderableRow } from 'primeng/table';\r\n\r\n@Directive({\r\n  selector: '[zyfraReordableRow]'\r\n})\r\nexport class ZyfraReordableRowDirective extends ReorderableRow {\r\n  @Input('zyfraReordableRow') override index: number;\r\n}\r\n",
      "selector": "[zyfraReordableRow]",
      "providers": [],
      "inputsClass": [
        {
          "name": "zyfraReordableRow",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 8,
          "type": "number"
        }
      ],
      "outputsClass": [],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "propertiesClass": [],
      "methodsClass": []
    },
    {
      "name": "ZyfraReordableRowHandlerDirective",
      "id": "directive-ZyfraReordableRowHandlerDirective-2bee186cef0694d2def5ef1835c4f612",
      "file": "libs/components/src/lib/table/directives/reordable-row-handler.directive.ts",
      "type": "directive",
      "description": "",
      "rawdescription": "\n",
      "sourceCode": "import { Directive, Input } from '@angular/core';\r\nimport { ReorderableRowHandle } from 'primeng/table';\r\n\r\n@Directive({\r\n  selector: '[zyfraReordableRowHandler]'\r\n})\r\nexport class ZyfraReordableRowHandlerDirective extends ReorderableRowHandle {\r\n  @Input('zyfraReordableRowHandler') override index: number;\r\n}\r\n",
      "selector": "[zyfraReordableRowHandler]",
      "providers": [],
      "inputsClass": [
        {
          "name": "zyfraReordableRowHandler",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 8,
          "type": "number"
        }
      ],
      "outputsClass": [],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "propertiesClass": [],
      "methodsClass": []
    },
    {
      "name": "ZyfraResizableColumnDirective",
      "id": "directive-ZyfraResizableColumnDirective-57593f4aa7f15b518c2c8baab5482948",
      "file": "libs/components/src/lib/table/directives/resizable-column.directive.ts",
      "type": "directive",
      "description": "",
      "rawdescription": "\n",
      "sourceCode": "import { Directive } from '@angular/core';\r\nimport { ResizableColumn } from 'primeng/table';\r\n\r\n@Directive({\r\n  selector: '[zyfraResizableColumn]'\r\n})\r\nexport class ZyfraResizableColumnDirective extends ResizableColumn {}\r\n",
      "selector": "[zyfraResizableColumn]",
      "providers": [],
      "inputsClass": [],
      "outputsClass": [],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "propertiesClass": [],
      "methodsClass": []
    },
    {
      "name": "ZyfraRowBaseDirective",
      "id": "directive-ZyfraRowBaseDirective-da3a6bbe42f924146c4ff65e027fb41b",
      "file": "libs/components/src/lib/@core/base-table/directives/zyfra-row-base.directive.ts",
      "type": "directive",
      "description": "",
      "rawdescription": "\n",
      "sourceCode": "import { Directive, HostBinding, HostListener, Inject, Input } from '@angular/core';\r\nimport { TargetTableToken } from '../target-table.token';\r\nimport { ZyfraBaseTableComponent } from '../zyfra-base-table.directive';\r\n\r\n@Directive({\r\n  selector: '[zyfraRow]',\r\n})\r\nexport class ZyfraRowBaseDirective<T> {\r\n  @Input('zyfraRow') data: T;\r\n  @Input('zyfraRowStatus') status: 'primary' | 'error' | 'warning' | 'info' = 'primary';\r\n\r\n  constructor(@Inject(TargetTableToken) private readonly targetTable: ZyfraBaseTableComponent<T>) {}\r\n\r\n  @HostBinding('class')\r\n  get rowStatusClass(): string {\r\n    return `row_status-${this.status}`;\r\n  }\r\n\r\n  @HostBinding('class.zyfra-active-element')\r\n  get isActiveElement(): boolean {\r\n    return this.data === this.targetTable.activeElement;\r\n  }\r\n\r\n  @HostListener('click')\r\n  public onRowClick(): void {\r\n    this.targetTable.activeElement = this.data;\r\n  }\r\n}\r\n",
      "selector": "[zyfraRow]",
      "providers": [],
      "inputsClass": [
        {
          "name": "zyfraRow",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 9,
          "type": "T"
        },
        {
          "name": "zyfraRowStatus",
          "defaultValue": "'primary'",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 10,
          "type": "\"primary\" | \"error\" | \"warning\" | \"info\""
        }
      ],
      "outputsClass": [],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [
        {
          "name": "class",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 15,
          "type": "string"
        },
        {
          "name": "class.zyfra-active-element",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 20,
          "type": "boolean"
        }
      ],
      "hostListeners": [
        {
          "name": "click",
          "args": [],
          "argsDecorator": [],
          "deprecated": false,
          "deprecationMessage": "",
          "line": 25
        }
      ],
      "propertiesClass": [],
      "methodsClass": [
        {
          "name": "onRowClick",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 25,
          "deprecated": false,
          "deprecationMessage": "",
          "decorators": [
            {
              "name": "HostListener",
              "stringifiedArguments": "'click'"
            }
          ],
          "modifierKind": [123]
        }
      ],
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "deprecated": false,
        "deprecationMessage": "",
        "args": [
          {
            "name": "targetTable",
            "type": "ZyfraBaseTableComponent<T>",
            "deprecated": false,
            "deprecationMessage": ""
          }
        ],
        "line": 10,
        "jsdoctags": [
          {
            "name": "targetTable",
            "type": "ZyfraBaseTableComponent<T>",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      "accessors": {
        "rowStatusClass": {
          "name": "rowStatusClass",
          "getSignature": {
            "name": "rowStatusClass",
            "type": "string",
            "returnType": "string",
            "line": 15
          }
        },
        "isActiveElement": {
          "name": "isActiveElement",
          "getSignature": {
            "name": "isActiveElement",
            "type": "boolean",
            "returnType": "boolean",
            "line": 20
          }
        }
      }
    },
    {
      "name": "ZyfraRowGroupHeaderDirective",
      "id": "directive-ZyfraRowGroupHeaderDirective-b9b04f2aee29ebf91e0e5e1599ae2458",
      "file": "libs/components/src/lib/table/directives/row-group-header.directive.ts",
      "type": "directive",
      "description": "",
      "rawdescription": "\n",
      "sourceCode": "import { Directive } from '@angular/core';\r\nimport { RowGroupHeader } from 'primeng/table';\r\n\r\n@Directive({\r\n  selector: '[zyfraRowGroupHeader]'\r\n})\r\nexport class ZyfraRowGroupHeaderDirective extends RowGroupHeader {}\r\n",
      "selector": "[zyfraRowGroupHeader]",
      "providers": [],
      "inputsClass": [],
      "outputsClass": [],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "propertiesClass": [],
      "methodsClass": []
    },
    {
      "name": "ZyfraSaveEditableRowDirective",
      "id": "directive-ZyfraSaveEditableRowDirective-890f5653b25f25ad163c7578e3e47200",
      "file": "libs/components/src/lib/table/directives/save-editable-row.directive.ts",
      "type": "directive",
      "description": "",
      "rawdescription": "\n",
      "sourceCode": "import { Directive } from '@angular/core';\r\nimport { SaveEditableRow } from 'primeng/table';\r\n\r\n@Directive({\r\n  selector: '[zyfraSaveEditableRow]'\r\n})\r\nexport class ZyfraSaveEditableRowDirective extends SaveEditableRow {}\r\n",
      "selector": "[zyfraSaveEditableRow]",
      "providers": [],
      "inputsClass": [],
      "outputsClass": [],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "propertiesClass": [],
      "methodsClass": []
    },
    {
      "name": "ZyfraSelectableRowDirective",
      "id": "directive-ZyfraSelectableRowDirective-20c2fbf7a35185a84f0856517a229d9d",
      "file": "libs/components/src/lib/table/directives/selectable-row.directive.ts",
      "type": "directive",
      "description": "",
      "rawdescription": "\n",
      "sourceCode": "import { Directive, HostBinding, Input } from '@angular/core';\r\nimport { SelectableRow } from 'primeng/table';\r\n\r\n@Directive({\r\n  selector: '[zyfraSelectableRow]',\r\n})\r\nexport class ZyfraSelectableRowDirective extends SelectableRow {\r\n  @Input('zyfraSelectableRow') override data: any;\r\n  @Input('zyfraSelectableRowIndex') override index: number;\r\n\r\n  @HostBinding('class.p-highlight')\r\n  get isSelected(): boolean {\r\n    return this.dt.isSelected(this.data);\r\n  }\r\n}\r\n",
      "selector": "[zyfraSelectableRow]",
      "providers": [],
      "inputsClass": [
        {
          "name": "zyfraSelectableRow",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 8,
          "type": "any"
        },
        {
          "name": "zyfraSelectableRowIndex",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 9,
          "type": "number"
        }
      ],
      "outputsClass": [],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [
        {
          "name": "class.p-highlight",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 12,
          "type": "boolean"
        }
      ],
      "hostListeners": [],
      "propertiesClass": [],
      "methodsClass": [],
      "accessors": {
        "isSelected": {
          "name": "isSelected",
          "getSignature": {
            "name": "isSelected",
            "type": "boolean",
            "returnType": "boolean",
            "line": 12
          }
        }
      }
    },
    {
      "name": "ZyfraSortableColumnDirective",
      "id": "directive-ZyfraSortableColumnDirective-d23a3ae7b1be4432d99a66323c89b1f1",
      "file": "libs/components/src/lib/table/directives/sortable-column.directive.ts",
      "type": "directive",
      "description": "",
      "rawdescription": "\n",
      "sourceCode": "import { Directive, Input } from '@angular/core';\r\nimport { SortableColumn } from 'primeng/table';\r\nimport { onSortColumnClick } from '../../@core/base-table';\r\nimport { ZyfraTableComponent } from '../zyfra-table.component';\r\n\r\n@Directive({\r\n  selector: '[zyfraSortableColumn]',\r\n})\r\nexport class ZyfraSortableColumnDirective extends SortableColumn {\r\n  @Input('zyfraSortableColumn') override field: string;\r\n  @Input('zyfraSortableColumnDisabled') override pSortableColumnDisabled: boolean;\r\n\r\n  constructor(private zyfraTable: ZyfraTableComponent) {\r\n    super(zyfraTable.table);\r\n  }\r\n\r\n  public override onClick(event: MouseEvent): void {\r\n    onSortColumnClick.call(this, event);\r\n  }\r\n\r\n  private canClick(event: MouseEvent): boolean {\r\n    return this.isEnabled() && !this.isFilterElement(event.target as HTMLElement);\r\n  }\r\n\r\n  private shouldReset(): boolean {\r\n    return (\r\n      this.zyfraTable.sortMode !== 'multiple' &&\r\n      ((this.zyfraTable.defaultSortOrder === 1 && this.sortOrder === 'descending') ||\r\n        (this.zyfraTable.defaultSortOrder === -1 && this.sortOrder === 'ascending'))\r\n    );\r\n  }\r\n\r\n  private emitSort(event: { field: string; originalEvent: MouseEvent }): void {\r\n    this.dt.sort(event);\r\n  }\r\n}\r\n",
      "selector": "[zyfraSortableColumn]",
      "providers": [],
      "inputsClass": [
        {
          "name": "zyfraSortableColumn",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 10,
          "type": "string"
        },
        {
          "name": "zyfraSortableColumnDisabled",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 11,
          "type": "boolean"
        }
      ],
      "outputsClass": [],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "propertiesClass": [],
      "methodsClass": [
        {
          "name": "canClick",
          "args": [
            {
              "name": "event",
              "type": "MouseEvent",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "boolean",
          "typeParameters": [],
          "line": 21,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [121],
          "jsdoctags": [
            {
              "name": "event",
              "type": "MouseEvent",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "emitSort",
          "args": [
            {
              "name": "event",
              "type": "literal type",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 33,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [121],
          "jsdoctags": [
            {
              "name": "event",
              "type": "literal type",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "onClick",
          "args": [
            {
              "name": "event",
              "type": "MouseEvent",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 17,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [123, 157],
          "jsdoctags": [
            {
              "name": "event",
              "type": "MouseEvent",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "shouldReset",
          "args": [],
          "optional": false,
          "returnType": "boolean",
          "typeParameters": [],
          "line": 25,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [121]
        }
      ],
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "deprecated": false,
        "deprecationMessage": "",
        "args": [
          {
            "name": "zyfraTable",
            "type": "ZyfraTableComponent",
            "deprecated": false,
            "deprecationMessage": ""
          }
        ],
        "line": 11,
        "jsdoctags": [
          {
            "name": "zyfraTable",
            "type": "ZyfraTableComponent",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          }
        ]
      }
    },
    {
      "name": "ZyfraSplitterTemplateDirective",
      "id": "directive-ZyfraSplitterTemplateDirective-08471aa4c09dcce586c45d4559f8a0cf",
      "file": "libs/components/src/lib/splitter/zyfra-splitter.directives.ts",
      "type": "directive",
      "description": "",
      "rawdescription": "\n",
      "sourceCode": "import { Directive, Host, Input, OnChanges, OnDestroy, OnInit, SimpleChanges, TemplateRef } from '@angular/core';\r\nimport { ZyfraSplitterTemplatesService } from './zyfra-splitter-templates.service';\r\n\r\n@Directive({\r\n  selector: '[zyfraSplitterTemplate]',\r\n})\r\nexport class ZyfraSplitterTemplateDirective implements OnChanges, OnDestroy {\r\n  @Input() type: string;\r\n  @Input() visible: boolean = true;\r\n\r\n  constructor(\r\n    public readonly template: TemplateRef<unknown>,\r\n    @Host() private readonly zyfraSplitterService: ZyfraSplitterTemplatesService\r\n  ) {\r\n    this.zyfraSplitterService.add(this);\r\n  }\r\n\r\n  ngOnChanges(_changes: SimpleChanges): void {\r\n    if (this.visible) this.zyfraSplitterService.add(this); else this.zyfraSplitterService.remove(this);\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.zyfraSplitterService.remove(this);\r\n  }\r\n}\r\n",
      "selector": "[zyfraSplitterTemplate]",
      "providers": [],
      "inputsClass": [
        {
          "name": "type",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 8,
          "type": "string"
        },
        {
          "name": "visible",
          "defaultValue": "true",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 9,
          "type": "boolean"
        }
      ],
      "outputsClass": [],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "propertiesClass": [
        {
          "name": "template",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "TemplateRef<>",
          "optional": false,
          "description": "",
          "line": 12,
          "modifierKind": [123, 143]
        }
      ],
      "methodsClass": [
        {
          "name": "ngOnChanges",
          "args": [
            {
              "name": "_changes",
              "type": "SimpleChanges",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 18,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "_changes",
              "type": "SimpleChanges",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "ngOnDestroy",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 22,
          "deprecated": false,
          "deprecationMessage": ""
        }
      ],
      "implements": ["OnChanges", "OnDestroy"],
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "deprecated": false,
        "deprecationMessage": "",
        "args": [
          {
            "name": "template",
            "type": "TemplateRef<>",
            "deprecated": false,
            "deprecationMessage": ""
          },
          {
            "name": "zyfraSplitterService",
            "type": "ZyfraSplitterTemplatesService",
            "deprecated": false,
            "deprecationMessage": ""
          }
        ],
        "line": 9,
        "jsdoctags": [
          {
            "name": "template",
            "type": "TemplateRef<>",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          },
          {
            "name": "zyfraSplitterService",
            "type": "ZyfraSplitterTemplatesService",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          }
        ]
      }
    },
    {
      "name": "ZyfraTemplateDirective",
      "id": "directive-ZyfraTemplateDirective-9c43f4b239a8d08ac5a61a0e6131f02e",
      "file": "libs/components/src/lib/@core/shared/zyfra-template.module.ts",
      "type": "directive",
      "description": "",
      "rawdescription": "\n",
      "sourceCode": "import { NgModule,Directive, Input, TemplateRef  } from '@angular/core';\r\n\r\n@Directive({\r\n  selector: '[zyfraTemplate]',\r\n})\r\nexport class ZyfraTemplateDirective {\r\n  @Input() zyfraTemplate: string;\r\n\r\n  constructor(public templateRef: TemplateRef<unknown>) {}\r\n}\r\n\r\n@NgModule({\r\n  declarations: [ZyfraTemplateDirective],\r\n  exports: [ZyfraTemplateDirective],\r\n})\r\nexport class ZyfraTemplateModule {}\r\n",
      "selector": "[zyfraTemplate]",
      "providers": [],
      "inputsClass": [
        {
          "name": "zyfraTemplate",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 7,
          "type": "string"
        }
      ],
      "outputsClass": [],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "propertiesClass": [
        {
          "name": "templateRef",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "TemplateRef<>",
          "optional": false,
          "description": "",
          "line": 9,
          "modifierKind": [123]
        }
      ],
      "methodsClass": [],
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "deprecated": false,
        "deprecationMessage": "",
        "args": [
          {
            "name": "templateRef",
            "type": "TemplateRef<>",
            "deprecated": false,
            "deprecationMessage": ""
          }
        ],
        "line": 7,
        "jsdoctags": [
          {
            "name": "templateRef",
            "type": "TemplateRef<>",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          }
        ]
      }
    },
    {
      "name": "ZyfraTooltipDirective",
      "id": "directive-ZyfraTooltipDirective-a74909b46457ca64f157e007cbeb0aa9",
      "file": "libs/components/src/lib/tooltip/zyfra-tooltip.directive.ts",
      "type": "directive",
      "description": "",
      "rawdescription": "\n",
      "sourceCode": "import {\r\n  Directive,\r\n  Inject,\r\n  ComponentFactoryResolver,\r\n  Input,\r\n  ElementRef,\r\n  ViewContainerRef,\r\n  ComponentRef,\r\n  OnDestroy,\r\n  OnChanges,\r\n  SimpleChanges,\r\n  AfterViewInit,\r\n  TemplateRef,\r\n  HostListener,\r\n  Renderer2, NgZone,\r\n} from '@angular/core';\r\nimport { ZyfraTooltipComponent } from './zyfra-tooltip.component';\r\nimport { ZyfraTooltipOverlayManager } from './zyfra-tooltip-overlay-manager.service';\r\n\r\n@Directive({\r\n  selector: '[zyfraTooltip]',\r\n  exportAs: 'zyfraTooltip',\r\n})\r\nexport class ZyfraTooltipDirective implements OnDestroy, OnChanges, AfterViewInit {\r\n  constructor(\r\n    private elementRef: ElementRef<HTMLElement>,\r\n    @Inject(ComponentFactoryResolver)\r\n    private resolver: ComponentFactoryResolver,\r\n    private viewContainerRef: ViewContainerRef,\r\n    private zyfraTooltipOverlayManager: ZyfraTooltipOverlayManager,\r\n    private renderer: Renderer2,\r\n    private ngZone: NgZone,\r\n  ) {}\r\n\r\n  @Input() zyfraTooltip: string | TemplateRef<any> = null;\r\n  @Input() zyfraTooltipContext: Record<string, unknown>;\r\n  @Input() zyfraTooltipShow = false;\r\n  @Input() zyfraTooltipDelay = 400;\r\n  @Input() zyfraTooltipColor: 'primary' | 'secondary' | 'success' | 'info' | 'warning' | 'danger' = 'primary';\r\n  @Input() zyfraTooltipClass: string | string[] = '';\r\n  @Input() zyfraTooltipPosition: 'left' | 'right' | 'above' | 'below' = 'right';\r\n  @Input() zyfraTooltipOverflowText: HTMLElement;\r\n\r\n  /**\r\n   * MARGIN = 2 + 4\r\n   * 2 - базовый отступ согласно https://jira.zyfra.com/wiki/pages/viewpage.action?pageId=13729903\r\n   * 4 - ширина указателя тултипа\r\n   */\r\n  private readonly MARGIN = 6;\r\n  private tooltipStyle: string;\r\n  private mutationObserver: MutationObserver;\r\n  private componentFactory = this.resolver.resolveComponentFactory(ZyfraTooltipComponent);\r\n  private tooltipCmpRef: ComponentRef<ZyfraTooltipComponent> = null;\r\n  private tooltipElement: HTMLElement = null;\r\n  private coordinates = { left: 0, top: 0 };\r\n  private tooltipTimerId = null;\r\n\r\n  @HostListener('click', ['$event'])\r\n  public clickEvent(event: MouseEvent): void {\r\n    this.hide();\r\n  }\r\n\r\n  @HostListener('mouseenter', ['$event'])\r\n  public mouseenter(event: MouseEvent): void {\r\n    if (!this.zyfraTooltipShow) {\r\n      this.show();\r\n    }\r\n  }\r\n\r\n  @HostListener('mouseleave', ['$event'])\r\n  public mouseleave(event: MouseEvent): void {\r\n    if (!this.tooltipCmpRef) {\r\n      clearTimeout(this.tooltipTimerId);\r\n      this.zyfraTooltipShow = false;\r\n    } else {\r\n      this.hide();\r\n    }\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    if (this.zyfraTooltipShow) {\r\n      this.show();\r\n    }\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    if (this.tooltipCmpRef) {\r\n      let wereChanges = false;\r\n\r\n      if (changes.zyfraTooltipPosition) {\r\n        const change = changes.zyfraTooltipPosition;\r\n\r\n        if (!change.firstChange) {\r\n          this._setTooltipClasses();\r\n          wereChanges = true;\r\n        }\r\n      }\r\n\r\n      if (changes.zyfraTooltip) {\r\n        const change = changes.zyfraTooltip;\r\n        if (!change.firstChange) {\r\n          this.tooltipCmpRef.instance.options.content = change.currentValue;\r\n          wereChanges = true;\r\n        }\r\n      }\r\n\r\n      if (wereChanges) {\r\n        this.tooltipCmpRef.changeDetectorRef.detectChanges();\r\n        this._setOptions();\r\n      }\r\n    }\r\n  }\r\n\r\n  private _setTooltipClasses(): void {\r\n    this.tooltipCmpRef.instance.hostClasses = `\r\n      zyfra-tooltip\r\n      ${this.zyfraTooltipClass}\r\n      ${this.tooltipStyle}\r\n      zyfra-tooltip_color_${this.zyfraTooltipColor}\r\n      zyfra-tooltip_position_${this.zyfraTooltipPosition}\r\n    `;\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    if (this.tooltipCmpRef) {\r\n      this.tooltipCmpRef.destroy();\r\n      this.tooltipCmpRef = null;\r\n    }\r\n    if (this.mutationObserver) {\r\n      this.mutationObserver.disconnect();\r\n    }\r\n    this.hide();\r\n  }\r\n\r\n  public toggle(): void {\r\n    if (this.zyfraTooltipShow) {\r\n      this.hide();\r\n    } else {\r\n      this.show();\r\n    }\r\n  }\r\n\r\n  public tooltipForOverflowText(): boolean {\r\n    return this.zyfraTooltipOverflowText ? this.zyfraTooltipOverflowText.offsetWidth < this.zyfraTooltipOverflowText.scrollWidth : true;\r\n  }\r\n\r\n  public show(): void {\r\n    if (this.zyfraTooltip && this.tooltipForOverflowText()) {\r\n      this._showTooltip();\r\n      this.zyfraTooltipShow = true;\r\n    }\r\n  }\r\n\r\n  public hide(): void {\r\n    clearTimeout(this.tooltipTimerId);\r\n    if (this.tooltipCmpRef) {\r\n      this.renderer.setStyle(this.tooltipCmpRef.location.nativeElement, 'animation', 'tooltipOut 0.3s');\r\n    }\r\n    this.zyfraTooltipShow = false;\r\n  }\r\n\r\n  private _setOptions(): void {\r\n    const elementRect = this.elementRef.nativeElement.getBoundingClientRect();\r\n    const tooltipRect = this.tooltipElement.getBoundingClientRect();\r\n\r\n    this._setPosition(elementRect, tooltipRect);\r\n    this._setCoordinatesLeftAndTop(elementRect, tooltipRect);\r\n\r\n    this.tooltipCmpRef.instance.options.left = this.coordinates.left;\r\n    this.tooltipCmpRef.instance.options.top = this.coordinates.top;\r\n    this._setTooltipClasses();\r\n    this.tooltipCmpRef.changeDetectorRef.detectChanges();\r\n  }\r\n\r\n  private _setPosition(element: DOMRect, tooltip: DOMRect): void {\r\n    switch (this.zyfraTooltipPosition) {\r\n      case 'left':\r\n        if (element.left < tooltip.width + this.MARGIN) {\r\n          this.zyfraTooltipPosition = 'right';\r\n        }\r\n        break;\r\n      case 'right':\r\n        if (window.innerWidth - element.right < tooltip.width + this.MARGIN) {\r\n          this.zyfraTooltipPosition = 'left';\r\n        }\r\n        break;\r\n      case 'above':\r\n        if (element.top < tooltip.height + this.MARGIN) {\r\n          this.zyfraTooltipPosition = 'below';\r\n        }\r\n        break;\r\n      case 'below':\r\n        if (window.innerHeight - (element.top + element.height) < tooltip.height + this.MARGIN) {\r\n          this.zyfraTooltipPosition = 'above';\r\n        }\r\n        break;\r\n    }\r\n  }\r\n\r\n  private _setCoordinatesLeftAndTop(element: DOMRect, tooltip: DOMRect): void {\r\n    switch (this.zyfraTooltipPosition) {\r\n      case 'right': {\r\n        this.coordinates.top = this.getTopPositionForLeftAndRight(element, tooltip);\r\n        this.coordinates.left = element.right + this.MARGIN;\r\n        break;\r\n      }\r\n      case 'left': {\r\n        this.coordinates.top = this.getTopPositionForLeftAndRight(element, tooltip);\r\n        this.coordinates.left = element.left - tooltip.width - this.MARGIN;\r\n        break;\r\n      }\r\n      case 'above': {\r\n        this.coordinates.left = this.getLeftPositionForAboveAndBelow(element, tooltip);\r\n        this.coordinates.top = element.top - tooltip.height - this.MARGIN;\r\n        break;\r\n      }\r\n      case 'below': {\r\n        this.coordinates.left = this.getLeftPositionForAboveAndBelow(element, tooltip);\r\n        this.coordinates.top = element.bottom + this.MARGIN;\r\n        break;\r\n      }\r\n      default: {\r\n        this.coordinates.left = element.right + this.MARGIN;\r\n        this.coordinates.top = element.top;\r\n        break;\r\n      }\r\n    }\r\n  }\r\n\r\n  private getTopPositionForLeftAndRight(element: DOMRect, tooltip: DOMRect): number {\r\n    return (tooltip.height <= element.height)\r\n      ? element.top\r\n      : element.top - (tooltip.height - element.height) / 2;\r\n  }\r\n\r\n  private getLeftPositionForAboveAndBelow(element: DOMRect, tooltip: DOMRect): number {\r\n    if (element.width >= tooltip.width) {\r\n      return element.left + (element.width - tooltip.width) / 2;\r\n    } else if (element.left < tooltip.width / 2) {\r\n      return element.left;\r\n    } else if (element.left + tooltip.width >= window.innerWidth) {\r\n      return element.left - tooltip.width / 2;\r\n    } else {\r\n      return element.left - (tooltip.width - element.width) / 2;\r\n    }\r\n  }\r\n\r\n  private _showTooltip(): void {\r\n    this.tooltipTimerId = setTimeout(() => {\r\n      this.zyfraTooltipOverlayManager.create();\r\n\r\n      this.tooltipCmpRef = this.viewContainerRef.createComponent(this.componentFactory);\r\n      this.tooltipStyle = '';\r\n      this.tooltipCmpRef.instance.options = {\r\n        left: -1000,\r\n        top: -1000,\r\n        content: this.zyfraTooltip,\r\n        context: this.zyfraTooltipContext,\r\n      };\r\n      this._setTooltipClasses();\r\n      this.tooltipElement = this.tooltipCmpRef.location.nativeElement;\r\n      this.zyfraTooltipOverlayManager.append(this.tooltipElement);\r\n\r\n      this.ngZone.runOutsideAngular(() => {\r\n        setTimeout(() => {\r\n          this.mutationObserver = new MutationObserver((mutations: MutationRecord[]) => {\r\n            mutations.forEach((mutation: MutationRecord) => {\r\n              if (mutation.type === 'childList') {\r\n                this._setOptions();\r\n              }\r\n            });\r\n          });\r\n\r\n          this.mutationObserver.observe(this.tooltipElement, {\r\n            childList: true,\r\n          });\r\n\r\n          this.tooltipCmpRef.instance.close.subscribe(() => {\r\n            this.tooltipCmpRef.destroy();\r\n            this.tooltipCmpRef = null;\r\n\r\n            if (this.mutationObserver) {\r\n              this.mutationObserver.disconnect();\r\n            }\r\n          });\r\n          this._setOptions();\r\n          this.tooltipCmpRef.changeDetectorRef.detectChanges();\r\n        });\r\n      });\r\n    }, this.zyfraTooltipDelay);\r\n  }\r\n}\r\n",
      "selector": "[zyfraTooltip]",
      "providers": [],
      "inputsClass": [
        {
          "name": "zyfraTooltip",
          "defaultValue": "null",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 35,
          "type": "string | TemplateRef<any>"
        },
        {
          "name": "zyfraTooltipClass",
          "defaultValue": "''",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 40,
          "type": "string | string[]"
        },
        {
          "name": "zyfraTooltipColor",
          "defaultValue": "'primary'",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 39,
          "type": "\"primary\" | \"secondary\" | \"success\" | \"info\" | \"warning\" | \"danger\""
        },
        {
          "name": "zyfraTooltipContext",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 36,
          "type": "Record<string | >"
        },
        {
          "name": "zyfraTooltipDelay",
          "defaultValue": "400",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 38,
          "type": "number"
        },
        {
          "name": "zyfraTooltipOverflowText",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 42,
          "type": "HTMLElement"
        },
        {
          "name": "zyfraTooltipPosition",
          "defaultValue": "'right'",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 41,
          "type": "\"left\" | \"right\" | \"above\" | \"below\""
        },
        {
          "name": "zyfraTooltipShow",
          "defaultValue": "false",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 37,
          "type": "boolean"
        }
      ],
      "outputsClass": [],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [
        {
          "name": "click",
          "args": [
            {
              "name": "event",
              "type": "MouseEvent",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "argsDecorator": ["$event"],
          "deprecated": false,
          "deprecationMessage": "",
          "line": 59
        },
        {
          "name": "mouseenter",
          "args": [
            {
              "name": "event",
              "type": "MouseEvent",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "argsDecorator": ["$event"],
          "deprecated": false,
          "deprecationMessage": "",
          "line": 64
        },
        {
          "name": "mouseleave",
          "args": [
            {
              "name": "event",
              "type": "MouseEvent",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "argsDecorator": ["$event"],
          "deprecated": false,
          "deprecationMessage": "",
          "line": 71
        }
      ],
      "propertiesClass": [
        {
          "name": "componentFactory",
          "defaultValue": "this.resolver.resolveComponentFactory(ZyfraTooltipComponent)",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "optional": false,
          "description": "",
          "line": 52,
          "modifierKind": [121]
        },
        {
          "name": "coordinates",
          "defaultValue": "{ left: 0, top: 0 }",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "object",
          "optional": false,
          "description": "",
          "line": 55,
          "modifierKind": [121]
        },
        {
          "name": "MARGIN",
          "defaultValue": "6",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "number",
          "optional": false,
          "description": "<p>MARGIN = 2 + 4\n2 - базовый отступ согласно <a href=\"https://jira.zyfra.com/wiki/pages/viewpage.action?pageId=13729903\">https://jira.zyfra.com/wiki/pages/viewpage.action?pageId=13729903</a>\n4 - ширина указателя тултипа</p>\n",
          "line": 49,
          "rawdescription": "\n\nMARGIN = 2 + 4\n2 - базовый отступ согласно https://jira.zyfra.com/wiki/pages/viewpage.action?pageId=13729903\n4 - ширина указателя тултипа\n",
          "modifierKind": [121, 143]
        },
        {
          "name": "mutationObserver",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "MutationObserver",
          "optional": false,
          "description": "",
          "line": 51,
          "modifierKind": [121]
        },
        {
          "name": "tooltipCmpRef",
          "defaultValue": "null",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "ComponentRef<ZyfraTooltipComponent>",
          "optional": false,
          "description": "",
          "line": 53,
          "modifierKind": [121]
        },
        {
          "name": "tooltipElement",
          "defaultValue": "null",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "HTMLElement",
          "optional": false,
          "description": "",
          "line": 54,
          "modifierKind": [121]
        },
        {
          "name": "tooltipStyle",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 50,
          "modifierKind": [121]
        },
        {
          "name": "tooltipTimerId",
          "defaultValue": "null",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "null",
          "optional": false,
          "description": "",
          "line": 56,
          "modifierKind": [121]
        }
      ],
      "methodsClass": [
        {
          "name": "_setCoordinatesLeftAndTop",
          "args": [
            {
              "name": "element",
              "type": "DOMRect",
              "deprecated": false,
              "deprecationMessage": ""
            },
            {
              "name": "tooltip",
              "type": "DOMRect",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 200,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [121],
          "jsdoctags": [
            {
              "name": "element",
              "type": "DOMRect",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "tooltip",
              "type": "DOMRect",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "_setOptions",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 162,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [121]
        },
        {
          "name": "_setPosition",
          "args": [
            {
              "name": "element",
              "type": "DOMRect",
              "deprecated": false,
              "deprecationMessage": ""
            },
            {
              "name": "tooltip",
              "type": "DOMRect",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 175,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [121],
          "jsdoctags": [
            {
              "name": "element",
              "type": "DOMRect",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "tooltip",
              "type": "DOMRect",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "_setTooltipClasses",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 114,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [121]
        },
        {
          "name": "_showTooltip",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 248,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [121]
        },
        {
          "name": "clickEvent",
          "args": [
            {
              "name": "event",
              "type": "MouseEvent",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 59,
          "deprecated": false,
          "deprecationMessage": "",
          "decorators": [
            {
              "name": "HostListener",
              "stringifiedArguments": "'click', ['$event']"
            }
          ],
          "modifierKind": [123],
          "jsdoctags": [
            {
              "name": "event",
              "type": "MouseEvent",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "getLeftPositionForAboveAndBelow",
          "args": [
            {
              "name": "element",
              "type": "DOMRect",
              "deprecated": false,
              "deprecationMessage": ""
            },
            {
              "name": "tooltip",
              "type": "DOMRect",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "number",
          "typeParameters": [],
          "line": 236,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [121],
          "jsdoctags": [
            {
              "name": "element",
              "type": "DOMRect",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "tooltip",
              "type": "DOMRect",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "getTopPositionForLeftAndRight",
          "args": [
            {
              "name": "element",
              "type": "DOMRect",
              "deprecated": false,
              "deprecationMessage": ""
            },
            {
              "name": "tooltip",
              "type": "DOMRect",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "number",
          "typeParameters": [],
          "line": 230,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [121],
          "jsdoctags": [
            {
              "name": "element",
              "type": "DOMRect",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "tooltip",
              "type": "DOMRect",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "hide",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 154,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [123]
        },
        {
          "name": "mouseenter",
          "args": [
            {
              "name": "event",
              "type": "MouseEvent",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 64,
          "deprecated": false,
          "deprecationMessage": "",
          "decorators": [
            {
              "name": "HostListener",
              "stringifiedArguments": "'mouseenter', ['$event']"
            }
          ],
          "modifierKind": [123],
          "jsdoctags": [
            {
              "name": "event",
              "type": "MouseEvent",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "mouseleave",
          "args": [
            {
              "name": "event",
              "type": "MouseEvent",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 71,
          "deprecated": false,
          "deprecationMessage": "",
          "decorators": [
            {
              "name": "HostListener",
              "stringifiedArguments": "'mouseleave', ['$event']"
            }
          ],
          "modifierKind": [123],
          "jsdoctags": [
            {
              "name": "event",
              "type": "MouseEvent",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "ngAfterViewInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 80,
          "deprecated": false,
          "deprecationMessage": ""
        },
        {
          "name": "ngOnChanges",
          "args": [
            {
              "name": "changes",
              "type": "SimpleChanges",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 86,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "changes",
              "type": "SimpleChanges",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "ngOnDestroy",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 124,
          "deprecated": false,
          "deprecationMessage": ""
        },
        {
          "name": "show",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 147,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [123]
        },
        {
          "name": "toggle",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 135,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [123]
        },
        {
          "name": "tooltipForOverflowText",
          "args": [],
          "optional": false,
          "returnType": "boolean",
          "typeParameters": [],
          "line": 143,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [123]
        }
      ],
      "implements": ["OnDestroy", "OnChanges", "AfterViewInit"],
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "deprecated": false,
        "deprecationMessage": "",
        "args": [
          {
            "name": "elementRef",
            "type": "ElementRef<HTMLElement>",
            "deprecated": false,
            "deprecationMessage": ""
          },
          {
            "name": "resolver",
            "type": "ComponentFactoryResolver",
            "deprecated": false,
            "deprecationMessage": ""
          },
          {
            "name": "viewContainerRef",
            "type": "ViewContainerRef",
            "deprecated": false,
            "deprecationMessage": ""
          },
          {
            "name": "zyfraTooltipOverlayManager",
            "type": "ZyfraTooltipOverlayManager",
            "deprecated": false,
            "deprecationMessage": ""
          },
          {
            "name": "renderer",
            "type": "Renderer2",
            "deprecated": false,
            "deprecationMessage": ""
          },
          {
            "name": "ngZone",
            "type": "NgZone",
            "deprecated": false,
            "deprecationMessage": ""
          }
        ],
        "line": 24,
        "jsdoctags": [
          {
            "name": "elementRef",
            "type": "ElementRef<HTMLElement>",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          },
          {
            "name": "resolver",
            "type": "ComponentFactoryResolver",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          },
          {
            "name": "viewContainerRef",
            "type": "ViewContainerRef",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          },
          {
            "name": "zyfraTooltipOverlayManager",
            "type": "ZyfraTooltipOverlayManager",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          },
          {
            "name": "renderer",
            "type": "Renderer2",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          },
          {
            "name": "ngZone",
            "type": "NgZone",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          }
        ]
      }
    },
    {
      "name": "ZyfraTreeTableEditableColumnDirective",
      "id": "directive-ZyfraTreeTableEditableColumnDirective-eb4597cf76b579530ff69dd63a3daafd",
      "file": "libs/components/src/lib/tree-table/directives/tree-table-editable-column.directive.ts",
      "type": "directive",
      "description": "",
      "rawdescription": "\n",
      "sourceCode": "import { Directive, HostListener, Input } from '@angular/core';\r\nimport { TTEditableColumn } from 'primeng/treetable';\r\n\r\n@Directive({\r\n  selector: '[zyfraTTEditableColumn]',\r\n})\r\nexport class ZyfraTreeTableEditableColumnDirective extends TTEditableColumn {\r\n  @Input('zyfraTTEditableColumn') override data: any;\r\n  @Input('zyfraTTEditableColumnField') override field: any;\r\n  @Input('zyfraTTEditableColumnDisabled') override ttEditableColumnDisabled: boolean;\r\n\r\n  public override onClick(event: MouseEvent): void {\r\n    // doing nothing, redefining parent class method\r\n  }\r\n\r\n  @HostListener('dblclick', ['$event'])\r\n  public onDblClick(event: MouseEvent): void {\r\n    super.onClick(event);\r\n  }\r\n}\r\n",
      "selector": "[zyfraTTEditableColumn]",
      "providers": [],
      "inputsClass": [
        {
          "name": "zyfraTTEditableColumn",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 8,
          "type": "any"
        },
        {
          "name": "zyfraTTEditableColumnDisabled",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 10,
          "type": "boolean"
        },
        {
          "name": "zyfraTTEditableColumnField",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 9,
          "type": "any"
        }
      ],
      "outputsClass": [],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [
        {
          "name": "dblclick",
          "args": [
            {
              "name": "event",
              "type": "MouseEvent",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "argsDecorator": ["$event"],
          "deprecated": false,
          "deprecationMessage": "",
          "line": 17
        }
      ],
      "propertiesClass": [],
      "methodsClass": [
        {
          "name": "onClick",
          "args": [
            {
              "name": "event",
              "type": "MouseEvent",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 12,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [123, 157],
          "jsdoctags": [
            {
              "name": "event",
              "type": "MouseEvent",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "onDblClick",
          "args": [
            {
              "name": "event",
              "type": "MouseEvent",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 17,
          "deprecated": false,
          "deprecationMessage": "",
          "decorators": [
            {
              "name": "HostListener",
              "stringifiedArguments": "'dblclick', ['$event']"
            }
          ],
          "modifierKind": [123],
          "jsdoctags": [
            {
              "name": "event",
              "type": "MouseEvent",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        }
      ]
    },
    {
      "name": "ZyfraTreeTableReorderableColumnDirective",
      "id": "directive-ZyfraTreeTableReorderableColumnDirective-9d6c1888d0bc03fd0d4d6ec15bbdbddf",
      "file": "libs/components/src/lib/tree-table/directives/tree-table-reorderable-column.directive.ts",
      "type": "directive",
      "description": "",
      "rawdescription": "\n",
      "sourceCode": "import { Directive, HostBinding, Input } from '@angular/core';\r\nimport { TTReorderableColumn } from 'primeng/treetable';\r\n\r\n@Directive({\r\n  selector: '[zyfraTTReorderableColumn]',\r\n})\r\nexport class ZyfraTreeTableReorderableColumnDirective extends TTReorderableColumn {\r\n  @Input('zyfraTTReorderableColumnDisabled') override ttReorderableColumnDisabled: boolean;\r\n\r\n  @HostBinding('attr.ttreorderablecolumn') reorderableTTColumnAttribute = true;\r\n}\r\n",
      "selector": "[zyfraTTReorderableColumn]",
      "providers": [],
      "inputsClass": [
        {
          "name": "zyfraTTReorderableColumnDisabled",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 8,
          "type": "boolean"
        }
      ],
      "outputsClass": [],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [
        {
          "name": "attr.ttreorderablecolumn",
          "defaultValue": "true",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 10,
          "type": "boolean"
        }
      ],
      "hostListeners": [],
      "propertiesClass": [
        {
          "name": "reorderableTTColumnAttribute",
          "defaultValue": "true",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "optional": false,
          "description": "",
          "line": 10,
          "decorators": [
            {
              "name": "HostBinding",
              "stringifiedArguments": "'attr.ttreorderablecolumn'"
            }
          ]
        }
      ],
      "methodsClass": []
    },
    {
      "name": "ZyfraTreeTableRowDirective",
      "id": "directive-ZyfraTreeTableRowDirective-a7a7d1e142dc0ba03c274c77f69893d5",
      "file": "libs/components/src/lib/tree-table/directives/tree-table-row.directive.ts",
      "type": "directive",
      "description": "",
      "rawdescription": "\n",
      "sourceCode": "import { Directive, Input } from '@angular/core';\r\nimport { TTRow } from 'primeng/treetable';\r\n\r\n@Directive({\r\n  selector: '[zyfraTTRow]'\r\n})\r\nexport class ZyfraTreeTableRowDirective extends TTRow {\r\n  @Input('zyfraTTRow') override rowNode: any;\r\n}\r\n",
      "selector": "[zyfraTTRow]",
      "providers": [],
      "inputsClass": [
        {
          "name": "zyfraTTRow",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 8,
          "type": "any"
        }
      ],
      "outputsClass": [],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "propertiesClass": [],
      "methodsClass": []
    },
    {
      "name": "ZyfraTreeTableSelectableRowDirective",
      "id": "directive-ZyfraTreeTableSelectableRowDirective-68c08fae6bd8082811b34c1cd07fdfe5",
      "file": "libs/components/src/lib/tree-table/directives/tree-table-selectable-row.directive.ts",
      "type": "directive",
      "description": "",
      "rawdescription": "\n",
      "sourceCode": "import { Directive, Input } from '@angular/core';\r\nimport { TTSelectableRow } from 'primeng/treetable';\r\n\r\n@Directive({\r\n  selector: '[zyfraTTSelectableRow]',\r\n})\r\nexport class ZyfraTreeTableSelectableRowDirective extends TTSelectableRow {\r\n  @Input('zyfraTTSelectableRow') override rowNode: any;\r\n  @Input('zyfraTTSelectableRowDisabled') override ttSelectableRowDisabled: boolean;\r\n\r\n  public override onClick(event): void {\r\n    if (this.isEnabled()) {\r\n      this.tt.toggleNodeWithCheckbox({\r\n        rowNode: this.rowNode,\r\n        originalEvent: event,\r\n      });\r\n    }\r\n  }\r\n}\r\n",
      "selector": "[zyfraTTSelectableRow]",
      "providers": [],
      "inputsClass": [
        {
          "name": "zyfraTTSelectableRow",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 8,
          "type": "any"
        },
        {
          "name": "zyfraTTSelectableRowDisabled",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 9,
          "type": "boolean"
        }
      ],
      "outputsClass": [],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "propertiesClass": [],
      "methodsClass": [
        {
          "name": "onClick",
          "args": [
            {
              "name": "event",
              "type": "",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 11,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [123, 157],
          "jsdoctags": [
            {
              "name": "event",
              "type": "",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        }
      ]
    },
    {
      "name": "ZyfraTreeTableSortableColumnDirective",
      "id": "directive-ZyfraTreeTableSortableColumnDirective-5603490455211ccd1cb06cdab532f0f3",
      "file": "libs/components/src/lib/tree-table/directives/tree-table-sortable-column.directive.ts",
      "type": "directive",
      "description": "",
      "rawdescription": "\n",
      "sourceCode": "import { Directive, Input } from '@angular/core';\r\nimport { TTSortableColumn } from 'primeng/treetable';\r\nimport { onSortColumnClick } from '../../@core/base-table';\r\nimport { ZyfraTreeTableComponent } from '../tree-table.component';\r\n\r\n@Directive({\r\n  selector: '[zyfraTTSortableColumn]',\r\n})\r\nexport class ZyfraTreeTableSortableColumnDirective extends TTSortableColumn {\r\n  @Input('zyfraTTSortableColumn') override field: string;\r\n  @Input('zyfraTTSortableColumnDisabled') override ttSortableColumnDisabled: boolean;\r\n\r\n  constructor(private zyfraTable: ZyfraTreeTableComponent) {\r\n    super(zyfraTable.table);\r\n  }\r\n\r\n  public override onClick(event: MouseEvent): void {\r\n    onSortColumnClick.call(this, event);\r\n  }\r\n\r\n  private canClick(): boolean {\r\n    return this.isEnabled();\r\n  }\r\n\r\n  private shouldReset(): boolean {\r\n    const table = this.zyfraTable.table;\r\n\r\n    return (\r\n      (table.defaultSortOrder === 1 && table.sortOrder === -1) ||\r\n      (table.defaultSortOrder === -1 && table.sortOrder === 1)\r\n    );\r\n  }\r\n\r\n  private emitSort(event: { field: string; originalEvent: PointerEvent }): void {\r\n    this.tt.sort(event);\r\n  }\r\n}\r\n",
      "selector": "[zyfraTTSortableColumn]",
      "providers": [],
      "inputsClass": [
        {
          "name": "zyfraTTSortableColumn",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 10,
          "type": "string"
        },
        {
          "name": "zyfraTTSortableColumnDisabled",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 11,
          "type": "boolean"
        }
      ],
      "outputsClass": [],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "propertiesClass": [],
      "methodsClass": [
        {
          "name": "canClick",
          "args": [],
          "optional": false,
          "returnType": "boolean",
          "typeParameters": [],
          "line": 21,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [121]
        },
        {
          "name": "emitSort",
          "args": [
            {
              "name": "event",
              "type": "literal type",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 34,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [121],
          "jsdoctags": [
            {
              "name": "event",
              "type": "literal type",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "onClick",
          "args": [
            {
              "name": "event",
              "type": "MouseEvent",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 17,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [123, 157],
          "jsdoctags": [
            {
              "name": "event",
              "type": "MouseEvent",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "shouldReset",
          "args": [],
          "optional": false,
          "returnType": "boolean",
          "typeParameters": [],
          "line": 25,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [121]
        }
      ],
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "deprecated": false,
        "deprecationMessage": "",
        "args": [
          {
            "name": "zyfraTable",
            "type": "ZyfraTreeTableComponent",
            "deprecated": false,
            "deprecationMessage": ""
          }
        ],
        "line": 11,
        "jsdoctags": [
          {
            "name": "zyfraTable",
            "type": "ZyfraTreeTableComponent",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          }
        ]
      }
    }
  ],
  "components": [
    {
      "name": "Calendar",
      "id": "component-Calendar-4af50dc34b817deb8f2598f0e127b729",
      "file": "libs/components/src/lib/datepicker/calendar/zyfra-calendar.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "styleUrls": [],
      "styles": [],
      "template": "",
      "templateUrl": [],
      "viewProviders": [],
      "inputsClass": [
        {
          "name": "appendTo",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 76,
          "type": "any"
        },
        {
          "name": "ariaLabelledBy",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 54,
          "type": "string"
        },
        {
          "name": "autoZIndex",
          "defaultValue": "true",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 116,
          "type": "boolean"
        },
        {
          "name": "baseZIndex",
          "defaultValue": "0",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 118,
          "type": "number"
        },
        {
          "name": "clearButtonStyleClass",
          "defaultValue": "'p-button-text'",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 114,
          "type": "string"
        },
        {
          "name": "dataType",
          "defaultValue": "'date'",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 104,
          "type": "string"
        },
        {
          "name": "dateFormat",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 60,
          "type": "string"
        },
        {
          "name": "defaultDate",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 306,
          "type": "Date | null"
        },
        {
          "name": "disabled",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 58,
          "type": "any"
        },
        {
          "name": "disabledDates",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 348,
          "type": "Date[]"
        },
        {
          "name": "disabledDays",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 359,
          "type": "number[]"
        },
        {
          "name": "firstDayOfWeek",
          "defaultValue": "0",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 134,
          "type": "number"
        },
        {
          "name": "focusTrap",
          "defaultValue": "true",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 132,
          "type": "boolean"
        },
        {
          "name": "hideOnDateTimeSelect",
          "defaultValue": "true",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 126,
          "type": "boolean"
        },
        {
          "name": "hideTransitionOptions",
          "defaultValue": "'.1s linear'",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 138,
          "type": "string"
        },
        {
          "name": "hourFormat",
          "defaultValue": "'24'",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 86,
          "type": "string"
        },
        {
          "name": "icon",
          "defaultValue": "'pi pi-calendar'",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 74,
          "type": "string"
        },
        {
          "name": "iconAriaLabel",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 56,
          "type": "string"
        },
        {
          "name": "inline",
          "defaultValue": "false",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 66,
          "type": "boolean"
        },
        {
          "name": "inputId",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 46,
          "type": "string"
        },
        {
          "name": "inputStyle",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 42,
          "type": "any"
        },
        {
          "name": "inputStyleClass",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 50,
          "type": "string"
        },
        {
          "name": "keepInvalid",
          "defaultValue": "false",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 124,
          "type": "boolean"
        },
        {
          "name": "label",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 44,
          "type": "string"
        },
        {
          "name": "locale",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 427,
          "type": ""
        },
        {
          "name": "maxDate",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 336,
          "type": "Date | null"
        },
        {
          "name": "maxDateCount",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 108,
          "type": "number"
        },
        {
          "name": "minDate",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 324,
          "type": "Date | null"
        },
        {
          "name": "monthNavigator",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 82,
          "type": "boolean"
        },
        {
          "name": "multipleSeparator",
          "defaultValue": "','",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 62,
          "type": "string"
        },
        {
          "name": "name",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 48,
          "type": "string"
        },
        {
          "name": "numberOfMonths",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 415,
          "type": "number"
        },
        {
          "name": "panelStyle",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 122,
          "type": "any"
        },
        {
          "name": "panelStyleClass",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 120,
          "type": "string"
        },
        {
          "name": "placeholder",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 52,
          "type": "string"
        },
        {
          "name": "rangeSeparator",
          "defaultValue": "'-'",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 64,
          "type": "string"
        },
        {
          "name": "readonlyInput",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 78,
          "type": "boolean"
        },
        {
          "name": "required",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 98,
          "type": "boolean"
        },
        {
          "name": "responsiveOptions",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 404,
          "type": "any[]"
        },
        {
          "name": "selectionMode",
          "defaultValue": "'single'",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 106,
          "type": "string"
        },
        {
          "name": "selectOtherMonths",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 70,
          "type": "boolean"
        },
        {
          "name": "shortYearCutoff",
          "defaultValue": "'+10'",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 80,
          "type": "any"
        },
        {
          "name": "showButtonBar",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 110,
          "type": "boolean"
        },
        {
          "name": "showIcon",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 72,
          "type": "boolean"
        },
        {
          "name": "showOnFocus",
          "defaultValue": "true",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 100,
          "type": "boolean"
        },
        {
          "name": "showOtherMonths",
          "defaultValue": "true",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 68,
          "type": "boolean"
        },
        {
          "name": "showSeconds",
          "defaultValue": "false",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 96,
          "type": "boolean"
        },
        {
          "name": "showTime",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 387,
          "type": "boolean"
        },
        {
          "name": "showTransitionOptions",
          "defaultValue": "'.12s cubic-bezier(0, 0, 0.2, 1)'",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 136,
          "type": "string"
        },
        {
          "name": "showWeek",
          "defaultValue": "false",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 102,
          "type": "boolean"
        },
        {
          "name": "stepHour",
          "defaultValue": "1",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 90,
          "type": "number"
        },
        {
          "name": "stepMinute",
          "defaultValue": "1",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 92,
          "type": "number"
        },
        {
          "name": "stepSecond",
          "defaultValue": "1",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 94,
          "type": "number"
        },
        {
          "name": "style",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 38,
          "type": "any"
        },
        {
          "name": "styleClass",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 40,
          "type": "string"
        },
        {
          "name": "tabindex",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 164,
          "type": "number"
        },
        {
          "name": "timeOnly",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 88,
          "type": "boolean"
        },
        {
          "name": "timeSeparator",
          "defaultValue": "':'",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 130,
          "type": "string"
        },
        {
          "name": "todayButtonStyleClass",
          "defaultValue": "'p-button-text'",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 112,
          "type": "string"
        },
        {
          "name": "touchUI",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 128,
          "type": "boolean"
        },
        {
          "name": "view",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 297,
          "type": "string"
        },
        {
          "name": "yearNavigator",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 84,
          "type": "boolean"
        },
        {
          "name": "yearRange",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 371,
          "type": "string"
        }
      ],
      "outputsClass": [
        {
          "name": "onBlur",
          "defaultValue": "new EventEmitter()",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 142,
          "type": "EventEmitter<any>"
        },
        {
          "name": "onClearClick",
          "defaultValue": "new EventEmitter()",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 152,
          "type": "EventEmitter<any>"
        },
        {
          "name": "onClickOutside",
          "defaultValue": "new EventEmitter()",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 158,
          "type": "EventEmitter<any>"
        },
        {
          "name": "onClose",
          "defaultValue": "new EventEmitter()",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 144,
          "type": "EventEmitter<any>"
        },
        {
          "name": "onFocus",
          "defaultValue": "new EventEmitter()",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 140,
          "type": "EventEmitter<any>"
        },
        {
          "name": "onInput",
          "defaultValue": "new EventEmitter()",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 148,
          "type": "EventEmitter<any>"
        },
        {
          "name": "onMonthChange",
          "defaultValue": "new EventEmitter()",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 154,
          "type": "EventEmitter<any>"
        },
        {
          "name": "onSelect",
          "defaultValue": "new EventEmitter()",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 146,
          "type": "EventEmitter<any>"
        },
        {
          "name": "onShow",
          "defaultValue": "new EventEmitter()",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 160,
          "type": "EventEmitter<any>"
        },
        {
          "name": "onTodayClick",
          "defaultValue": "new EventEmitter()",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 150,
          "type": "EventEmitter<any>"
        },
        {
          "name": "onYearChange",
          "defaultValue": "new EventEmitter()",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 156,
          "type": "EventEmitter<any>"
        }
      ],
      "propertiesClass": [
        {
          "name": "_defaultDate",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Date | null",
          "optional": false,
          "description": "",
          "line": 322
        },
        {
          "name": "_disabledDates",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Array<Date>",
          "optional": false,
          "description": "",
          "line": 261
        },
        {
          "name": "_disabledDays",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Array<number>",
          "optional": false,
          "description": "",
          "line": 263
        },
        {
          "name": "_locale",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "LocaleSettings",
          "optional": false,
          "description": "",
          "line": 283
        },
        {
          "name": "_maxDate",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Date | null",
          "optional": false,
          "description": "",
          "line": 243
        },
        {
          "name": "_minDate",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Date | null",
          "optional": false,
          "description": "",
          "line": 241
        },
        {
          "name": "_numberOfMonths",
          "defaultValue": "1",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "number",
          "optional": false,
          "description": "",
          "line": 291
        },
        {
          "name": "_responsiveOptions",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "any[]",
          "optional": false,
          "description": "",
          "line": 285
        },
        {
          "name": "_showTime",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "boolean",
          "optional": false,
          "description": "",
          "line": 245
        },
        {
          "name": "_view",
          "defaultValue": "'date'",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 293
        },
        {
          "name": "_yearRange",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 247
        },
        {
          "name": "animationEndListener",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "any",
          "optional": false,
          "description": "",
          "line": 227
        },
        {
          "name": "attributeSelector",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 289
        },
        {
          "name": "calendarElement",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "any",
          "optional": false,
          "description": "",
          "line": 221
        },
        {
          "name": "containerViewChild",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "ElementRef",
          "optional": false,
          "description": "",
          "line": 166,
          "decorators": [
            {
              "name": "ViewChild",
              "stringifiedArguments": "'container', {static: false}"
            }
          ]
        },
        {
          "name": "contentViewChild",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "ElementRef",
          "optional": false,
          "description": "",
          "line": 185
        },
        {
          "name": "convertTo24Hour",
          "defaultValue": "function (hours: number, pm: boolean) {\r\n    if (this.hourFormat == '12') {\r\n      if (hours === 12) {\r\n        return pm ? 12 : 0;\r\n      } else {\r\n        return pm ? hours + 12 : hours;\r\n      }\r\n    }\r\n    return hours;\r\n  }",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "optional": false,
          "description": "",
          "line": 1811
        },
        {
          "name": "currentHour",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "number",
          "optional": false,
          "description": "",
          "line": 199
        },
        {
          "name": "currentMinute",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "number",
          "optional": false,
          "description": "",
          "line": 201
        },
        {
          "name": "currentMonth",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "number",
          "optional": false,
          "description": "",
          "line": 195
        },
        {
          "name": "currentSecond",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "number",
          "optional": false,
          "description": "",
          "line": 203
        },
        {
          "name": "currentView",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 287
        },
        {
          "name": "currentYear",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "number",
          "optional": false,
          "description": "",
          "line": 197
        },
        {
          "name": "dates",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "any[]",
          "optional": false,
          "description": "",
          "line": 189
        },
        {
          "name": "dateTemplate",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "TemplateRef<any>",
          "optional": false,
          "description": "",
          "line": 251
        },
        {
          "name": "decadeTemplate",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "TemplateRef<any>",
          "optional": false,
          "description": "",
          "line": 259
        },
        {
          "name": "disabledDateTemplate",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "TemplateRef<any>",
          "optional": false,
          "description": "",
          "line": 257
        },
        {
          "name": "documentClickListener",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "any",
          "optional": false,
          "description": "",
          "line": 225
        },
        {
          "name": "documentResizeListener",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "any",
          "optional": false,
          "description": "",
          "line": 273
        },
        {
          "name": "filled",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "boolean",
          "optional": false,
          "description": "",
          "line": 237
        },
        {
          "name": "focus",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "boolean",
          "optional": false,
          "description": "",
          "line": 233
        },
        {
          "name": "focusElement",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "any",
          "optional": false,
          "description": "",
          "line": 269
        },
        {
          "name": "footerTemplate",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "TemplateRef<any>",
          "optional": false,
          "description": "",
          "line": 255
        },
        {
          "name": "headerTemplate",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "TemplateRef<any>",
          "optional": false,
          "description": "",
          "line": 253
        },
        {
          "name": "initialized",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "boolean",
          "optional": false,
          "description": "",
          "line": 279
        },
        {
          "name": "inputFieldValue",
          "defaultValue": "null",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 239
        },
        {
          "name": "inputfieldViewChild",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "ElementRef",
          "optional": false,
          "description": "",
          "line": 168,
          "decorators": [
            {
              "name": "ViewChild",
              "stringifiedArguments": "'inputfield', {static: false}"
            }
          ]
        },
        {
          "name": "isKeydown",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "boolean",
          "optional": false,
          "description": "",
          "line": 235
        },
        {
          "name": "isMonthNavigate",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "boolean",
          "optional": false,
          "description": "",
          "line": 277
        },
        {
          "name": "mask",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "HTMLDivElement",
          "optional": false,
          "description": "",
          "line": 207
        },
        {
          "name": "maskClickListener",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Function",
          "optional": false,
          "description": "",
          "line": 209
        },
        {
          "name": "months",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "any[]",
          "optional": false,
          "description": "",
          "line": 191
        },
        {
          "name": "navigationState",
          "defaultValue": "null",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "any",
          "optional": false,
          "description": "",
          "line": 275
        },
        {
          "name": "onModelChange",
          "defaultValue": "() => {...}",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Function",
          "optional": false,
          "description": "",
          "line": 217
        },
        {
          "name": "onModelTouched",
          "defaultValue": "() => {...}",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Function",
          "optional": false,
          "description": "",
          "line": 219
        },
        {
          "name": "overlay",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "HTMLDivElement",
          "optional": false,
          "description": "",
          "line": 211
        },
        {
          "name": "overlayVisible",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "boolean",
          "optional": false,
          "description": "",
          "line": 215
        },
        {
          "name": "pm",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "boolean",
          "optional": false,
          "description": "",
          "line": 205
        },
        {
          "name": "preventDocumentListener",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "boolean",
          "optional": false,
          "description": "",
          "line": 249
        },
        {
          "name": "preventFocus",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "boolean",
          "optional": false,
          "description": "",
          "line": 295
        },
        {
          "name": "responsiveStyleElement",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "any",
          "optional": false,
          "description": "",
          "line": 213
        },
        {
          "name": "scrollHandler",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "any",
          "optional": false,
          "description": "",
          "line": 271
        },
        {
          "name": "selectElement",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "any",
          "optional": false,
          "description": "",
          "line": 265
        },
        {
          "name": "templates",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "QueryList<any>",
          "optional": false,
          "description": "",
          "line": 162,
          "decorators": [
            {
              "name": "ContentChildren",
              "stringifiedArguments": "PrimeTemplate"
            }
          ]
        },
        {
          "name": "ticksTo1970",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "number",
          "optional": false,
          "description": "",
          "line": 229
        },
        {
          "name": "timePickerTimer",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "any",
          "optional": false,
          "description": "",
          "line": 223
        },
        {
          "name": "todayElement",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "any",
          "optional": false,
          "description": "",
          "line": 267
        },
        {
          "name": "translationSubscription",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Subscription",
          "optional": false,
          "description": "",
          "line": 281
        },
        {
          "name": "value",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "any",
          "optional": false,
          "description": "",
          "line": 187
        },
        {
          "name": "weekDays",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "string[]",
          "optional": false,
          "description": "",
          "line": 193
        },
        {
          "name": "yearOptions",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "number[]",
          "optional": false,
          "description": "",
          "line": 231
        }
      ],
      "methodsClass": [
        {
          "name": "alignOverlay",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 2259,
          "deprecated": false,
          "deprecationMessage": ""
        },
        {
          "name": "appendOverlay",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 2246,
          "deprecated": false,
          "deprecationMessage": ""
        },
        {
          "name": "bindDocumentClickListener",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 2796,
          "deprecated": false,
          "deprecationMessage": ""
        },
        {
          "name": "bindDocumentResizeListener",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 2822,
          "deprecated": false,
          "deprecationMessage": ""
        },
        {
          "name": "bindScrollListener",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 2836,
          "deprecated": false,
          "deprecationMessage": ""
        },
        {
          "name": "clearTimePickerTimer",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 1937,
          "deprecated": false,
          "deprecationMessage": ""
        },
        {
          "name": "createMonth",
          "args": [
            {
              "name": "month",
              "type": "number",
              "deprecated": false,
              "deprecationMessage": ""
            },
            {
              "name": "year",
              "type": "number",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "{ month: number; year: number; dates: {}; weekNumbers: {}; }",
          "typeParameters": [],
          "line": 599,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "month",
              "type": "number",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "year",
              "type": "number",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "createMonths",
          "args": [
            {
              "name": "month",
              "type": "number",
              "deprecated": false,
              "deprecationMessage": ""
            },
            {
              "name": "year",
              "type": "number",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 576,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "month",
              "type": "number",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "year",
              "type": "number",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "createResponsiveStyle",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 2747,
          "deprecated": false,
          "deprecationMessage": ""
        },
        {
          "name": "createWeekDays",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 547,
          "deprecated": false,
          "deprecationMessage": ""
        },
        {
          "name": "daylightSavingAdjust",
          "args": [
            {
              "name": "date",
              "type": "",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "any",
          "typeParameters": [],
          "line": 2711,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "date",
              "type": "",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "decrementDecade",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 765,
          "deprecated": false,
          "deprecationMessage": ""
        },
        {
          "name": "decrementHour",
          "args": [
            {
              "name": "event",
              "type": "",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 1944,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "event",
              "type": "",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "decrementMinute",
          "args": [
            {
              "name": "event",
              "type": "",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 1975,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "event",
              "type": "",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "decrementSecond",
          "args": [
            {
              "name": "event",
              "type": "",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 1995,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "event",
              "type": "",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "decrementYear",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 753,
          "deprecated": false,
          "deprecationMessage": ""
        },
        {
          "name": "destroyMask",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 2303,
          "deprecated": false,
          "deprecationMessage": ""
        },
        {
          "name": "destroyResponsiveStyleElement",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 2789,
          "deprecated": false,
          "deprecationMessage": ""
        },
        {
          "name": "disableModality",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 2295,
          "deprecated": false,
          "deprecationMessage": ""
        },
        {
          "name": "enableModality",
          "args": [
            {
              "name": "element",
              "type": "",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 2279,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "element",
              "type": "",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "formatDate",
          "args": [
            {
              "name": "date",
              "type": "",
              "deprecated": false,
              "deprecationMessage": ""
            },
            {
              "name": "format",
              "type": "",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "string",
          "typeParameters": [],
          "line": 2367,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "date",
              "type": "",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "format",
              "type": "",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "formatDateTime",
          "args": [
            {
              "name": "date",
              "type": "",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "any",
          "typeParameters": [],
          "line": 894,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "date",
              "type": "",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "formatTime",
          "args": [
            {
              "name": "date",
              "type": "",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "string",
          "typeParameters": [],
          "line": 2465,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "date",
              "type": "",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "getDateFormat",
          "args": [],
          "optional": false,
          "returnType": "any",
          "typeParameters": [],
          "line": 2362,
          "deprecated": false,
          "deprecationMessage": ""
        },
        {
          "name": "getDaysCountInMonth",
          "args": [
            {
              "name": "month",
              "type": "number",
              "deprecated": false,
              "deprecationMessage": ""
            },
            {
              "name": "year",
              "type": "number",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "number",
          "typeParameters": [],
          "line": 1005,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "month",
              "type": "number",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "year",
              "type": "number",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "getDaysCountInPrevMonth",
          "args": [
            {
              "name": "month",
              "type": "number",
              "deprecated": false,
              "deprecationMessage": ""
            },
            {
              "name": "year",
              "type": "number",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "number",
          "typeParameters": [],
          "line": 1009,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "month",
              "type": "number",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "year",
              "type": "number",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "getFirstDayOfMonthIndex",
          "args": [
            {
              "name": "month",
              "type": "number",
              "deprecated": false,
              "deprecationMessage": ""
            },
            {
              "name": "year",
              "type": "number",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "any",
          "typeParameters": [],
          "line": 995,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "month",
              "type": "number",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "year",
              "type": "number",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "getMonthName",
          "args": [
            {
              "name": "index",
              "type": "",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "any",
          "typeParameters": [],
          "line": 1250,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "index",
              "type": "",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "getNextMonthAndYear",
          "args": [
            {
              "name": "month",
              "type": "number",
              "deprecated": false,
              "deprecationMessage": ""
            },
            {
              "name": "year",
              "type": "number",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "{ month: any; year: any; }",
          "typeParameters": [],
          "line": 1028,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "month",
              "type": "number",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "year",
              "type": "number",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "getPreviousMonthAndYear",
          "args": [
            {
              "name": "month",
              "type": "number",
              "deprecated": false,
              "deprecationMessage": ""
            },
            {
              "name": "year",
              "type": "number",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "{ month: any; year: any; }",
          "typeParameters": [],
          "line": 1014,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "month",
              "type": "number",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "year",
              "type": "number",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "getSundayIndex",
          "args": [],
          "optional": false,
          "returnType": "number",
          "typeParameters": [],
          "line": 1042,
          "deprecated": false,
          "deprecationMessage": ""
        },
        {
          "name": "getTranslation",
          "args": [
            {
              "name": "option",
              "type": "string",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "any",
          "typeParameters": [],
          "line": 535,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "option",
              "type": "string",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "getWeekNumber",
          "args": [
            {
              "name": "date",
              "type": "Date",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "any",
          "typeParameters": [],
          "line": 590,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "date",
              "type": "Date",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "hideOverlay",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 2174,
          "deprecated": false,
          "deprecationMessage": ""
        },
        {
          "name": "incrementDecade",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 769,
          "deprecated": false,
          "deprecationMessage": ""
        },
        {
          "name": "incrementHour",
          "args": [
            {
              "name": "event",
              "type": "",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 1866,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "event",
              "type": "",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "incrementMinute",
          "args": [
            {
              "name": "event",
              "type": "",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 1965,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "event",
              "type": "",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "incrementSecond",
          "args": [
            {
              "name": "event",
              "type": "",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 1985,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "event",
              "type": "",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "incrementYear",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 773,
          "deprecated": false,
          "deprecationMessage": ""
        },
        {
          "name": "initFocusableCell",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 1695,
          "deprecated": false,
          "deprecationMessage": ""
        },
        {
          "name": "initTime",
          "args": [
            {
              "name": "date",
              "type": "Date",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 677,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "date",
              "type": "Date",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "isComparable",
          "args": [],
          "optional": false,
          "returnType": "boolean",
          "typeParameters": [],
          "line": 1075,
          "deprecated": false,
          "deprecationMessage": ""
        },
        {
          "name": "isDateBetween",
          "args": [
            {
              "name": "start",
              "type": "",
              "deprecated": false,
              "deprecationMessage": ""
            },
            {
              "name": "end",
              "type": "",
              "deprecated": false,
              "deprecationMessage": ""
            },
            {
              "name": "dateMeta",
              "type": "",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "boolean",
          "typeParameters": [],
          "line": 1111,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "start",
              "type": "",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "end",
              "type": "",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "dateMeta",
              "type": "",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "isDateDisabled",
          "args": [
            {
              "name": "day",
              "type": "number",
              "deprecated": false,
              "deprecationMessage": ""
            },
            {
              "name": "month",
              "type": "number",
              "deprecated": false,
              "deprecationMessage": ""
            },
            {
              "name": "year",
              "type": "number",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "boolean",
          "typeParameters": [],
          "line": 1186,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "day",
              "type": "number",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "month",
              "type": "number",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "year",
              "type": "number",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "isDateEquals",
          "args": [
            {
              "name": "value",
              "type": "",
              "deprecated": false,
              "deprecationMessage": ""
            },
            {
              "name": "dateMeta",
              "type": "",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "boolean",
          "typeParameters": [],
          "line": 1101,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "value",
              "type": "",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "dateMeta",
              "type": "",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "isDayDisabled",
          "args": [
            {
              "name": "day",
              "type": "number",
              "deprecated": false,
              "deprecationMessage": ""
            },
            {
              "name": "month",
              "type": "number",
              "deprecated": false,
              "deprecationMessage": ""
            },
            {
              "name": "year",
              "type": "number",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "boolean",
          "typeParameters": [],
          "line": 1202,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "day",
              "type": "number",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "month",
              "type": "number",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "year",
              "type": "number",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "isMonthSelected",
          "args": [
            {
              "name": "month",
              "type": "",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "boolean",
          "typeParameters": [],
          "line": 1079,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "month",
              "type": "",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "isMultipleSelection",
          "args": [],
          "optional": false,
          "returnType": "boolean",
          "typeParameters": [],
          "line": 1129,
          "deprecated": false,
          "deprecationMessage": ""
        },
        {
          "name": "isNavIconClicked",
          "args": [
            {
              "name": "event",
              "type": "Event",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "any",
          "typeParameters": [],
          "line": 2863,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "event",
              "type": "Event",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "isOutsideClicked",
          "args": [
            {
              "name": "event",
              "type": "Event",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "boolean",
          "typeParameters": [],
          "line": 2854,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "event",
              "type": "Event",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "isRangeSelection",
          "args": [],
          "optional": false,
          "returnType": "boolean",
          "typeParameters": [],
          "line": 1125,
          "deprecated": false,
          "deprecationMessage": ""
        },
        {
          "name": "isSelectable",
          "args": [
            {
              "name": "day",
              "type": "",
              "deprecated": false,
              "deprecationMessage": ""
            },
            {
              "name": "month",
              "type": "",
              "deprecated": false,
              "deprecationMessage": ""
            },
            {
              "name": "year",
              "type": "",
              "deprecated": false,
              "deprecationMessage": ""
            },
            {
              "name": "otherMonth",
              "type": "",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "boolean",
          "typeParameters": [],
          "line": 1137,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "day",
              "type": "",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "month",
              "type": "",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "year",
              "type": "",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "otherMonth",
              "type": "",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "isSelected",
          "args": [
            {
              "name": "dateMeta",
              "type": "",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "boolean",
          "typeParameters": [],
          "line": 1047,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "dateMeta",
              "type": "",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "isSingleSelection",
          "args": [],
          "optional": false,
          "returnType": "boolean",
          "typeParameters": [],
          "line": 1121,
          "deprecated": false,
          "deprecationMessage": ""
        },
        {
          "name": "isToday",
          "args": [
            {
              "name": "today",
              "type": "",
              "deprecated": false,
              "deprecationMessage": ""
            },
            {
              "name": "day",
              "type": "",
              "deprecated": false,
              "deprecationMessage": ""
            },
            {
              "name": "month",
              "type": "",
              "deprecated": false,
              "deprecationMessage": ""
            },
            {
              "name": "year",
              "type": "",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "boolean",
          "typeParameters": [],
          "line": 1133,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "today",
              "type": "",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "day",
              "type": "",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "month",
              "type": "",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "year",
              "type": "",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "isValidSelection",
          "args": [
            {
              "name": "value",
              "type": "",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "boolean",
          "typeParameters": [],
          "line": 2070,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "value",
              "type": "",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "isYearSelected",
          "args": [
            {
              "name": "year",
              "type": "",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "boolean",
          "typeParameters": [],
          "line": 1091,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "year",
              "type": "",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "monthPickerValues",
          "args": [],
          "optional": false,
          "returnType": "{}",
          "typeParameters": [],
          "line": 557,
          "deprecated": false,
          "deprecationMessage": ""
        },
        {
          "name": "navBackward",
          "args": [
            {
              "name": "event",
              "type": "",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 691,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "event",
              "type": "",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "navForward",
          "args": [
            {
              "name": "event",
              "type": "",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 722,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "event",
              "type": "",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "navigateToMonth",
          "args": [
            {
              "name": "prev",
              "type": "",
              "deprecated": false,
              "deprecationMessage": ""
            },
            {
              "name": "groupIndex",
              "type": "",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 1599,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "prev",
              "type": "",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "groupIndex",
              "type": "",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "ngAfterContentInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 491,
          "deprecated": false,
          "deprecationMessage": ""
        },
        {
          "name": "ngAfterViewInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 521,
          "deprecated": false,
          "deprecationMessage": ""
        },
        {
          "name": "ngOnDestroy",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 2891,
          "deprecated": false,
          "deprecationMessage": ""
        },
        {
          "name": "ngOnInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 440,
          "deprecated": false,
          "deprecationMessage": ""
        },
        {
          "name": "onButtonClick",
          "args": [
            {
              "name": "event",
              "type": "",
              "deprecated": false,
              "deprecationMessage": ""
            },
            {
              "name": "inputfield",
              "type": "",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 1234,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "event",
              "type": "",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "inputfield",
              "type": "",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "onClearButtonClick",
          "args": [
            {
              "name": "event",
              "type": "",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 2740,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "event",
              "type": "",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "onContainerButtonKeydown",
          "args": [
            {
              "name": "event",
              "type": "",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 1268,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "event",
              "type": "",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "onDateCellKeydown",
          "args": [
            {
              "name": "event",
              "type": "",
              "deprecated": false,
              "deprecationMessage": ""
            },
            {
              "name": "date",
              "type": "",
              "deprecated": false,
              "deprecationMessage": ""
            },
            {
              "name": "groupIndex",
              "type": "",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 1313,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "event",
              "type": "",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "date",
              "type": "",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "groupIndex",
              "type": "",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "onDateSelect",
          "args": [
            {
              "name": "event",
              "type": "",
              "deprecated": false,
              "deprecationMessage": ""
            },
            {
              "name": "dateMeta",
              "type": "",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 795,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "event",
              "type": "",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "dateMeta",
              "type": "",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "onInputBlur",
          "args": [
            {
              "name": "event",
              "type": "Event",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 1225,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "event",
              "type": "Event",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "onInputClick",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 1219,
          "deprecated": false,
          "deprecationMessage": ""
        },
        {
          "name": "onInputFocus",
          "args": [
            {
              "name": "event",
              "type": "Event",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 1211,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "event",
              "type": "Event",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "onInputKeydown",
          "args": [
            {
              "name": "event",
              "type": "",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 1289,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "event",
              "type": "",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "onMonthCellKeydown",
          "args": [
            {
              "name": "event",
              "type": "",
              "deprecated": false,
              "deprecationMessage": ""
            },
            {
              "name": "index",
              "type": "",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 1433,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "event",
              "type": "",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "index",
              "type": "",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "onMonthDropdownChange",
          "args": [
            {
              "name": "m",
              "type": "string",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 1799,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "m",
              "type": "string",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "onMonthSelect",
          "args": [
            {
              "name": "event",
              "type": "",
              "deprecated": false,
              "deprecationMessage": ""
            },
            {
              "name": "index",
              "type": "",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 838,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "event",
              "type": "",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "index",
              "type": "",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "onNextButtonClick",
          "args": [
            {
              "name": "event",
              "type": "",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 1263,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "event",
              "type": "",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "onOverlayAnimationDone",
          "args": [
            {
              "name": "event",
              "type": "AnimationEvent",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 2225,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "event",
              "type": "AnimationEvent",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "onOverlayAnimationStart",
          "args": [
            {
              "name": "event",
              "type": "AnimationEvent",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 2196,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "event",
              "type": "AnimationEvent",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "onOverlayClick",
          "args": [
            {
              "name": "event",
              "type": "",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 1243,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "event",
              "type": "",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "onOverlayHide",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 2878,
          "deprecated": false,
          "deprecationMessage": ""
        },
        {
          "name": "onPrevButtonClick",
          "args": [
            {
              "name": "event",
              "type": "",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 1258,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "event",
              "type": "",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "onTimePickerElementMouseDown",
          "args": [
            {
              "name": "event",
              "type": "Event",
              "deprecated": false,
              "deprecationMessage": ""
            },
            {
              "name": "type",
              "type": "number",
              "deprecated": false,
              "deprecationMessage": ""
            },
            {
              "name": "direction",
              "type": "number",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 1887,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "event",
              "type": "Event",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "type",
              "type": "number",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "direction",
              "type": "number",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "onTimePickerElementMouseLeave",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 1901,
          "deprecated": false,
          "deprecationMessage": ""
        },
        {
          "name": "onTimePickerElementMouseUp",
          "args": [
            {
              "name": "event",
              "type": "Event",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 1894,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "event",
              "type": "Event",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "onTodayButtonClick",
          "args": [
            {
              "name": "event",
              "type": "",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 2725,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "event",
              "type": "",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "onUserInput",
          "args": [
            {
              "name": "event",
              "type": "",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 2047,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "event",
              "type": "",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "onWindowResize",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 2872,
          "deprecated": false,
          "deprecationMessage": ""
        },
        {
          "name": "onYearCellKeydown",
          "args": [
            {
              "name": "event",
              "type": "",
              "deprecated": false,
              "deprecationMessage": ""
            },
            {
              "name": "index",
              "type": "",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 1520,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "event",
              "type": "",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "index",
              "type": "",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "onYearDropdownChange",
          "args": [
            {
              "name": "y",
              "type": "string",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 1805,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "y",
              "type": "string",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "onYearSelect",
          "args": [
            {
              "name": "event",
              "type": "",
              "deprecated": false,
              "deprecationMessage": ""
            },
            {
              "name": "year",
              "type": "",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 850,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "event",
              "type": "",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "year",
              "type": "",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "parseDate",
          "args": [
            {
              "name": "value",
              "type": "",
              "deprecated": false,
              "deprecationMessage": ""
            },
            {
              "name": "format",
              "type": "",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "any",
          "typeParameters": [],
          "line": 2534,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "value",
              "type": "",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "format",
              "type": "",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "parseDateTime",
          "args": [
            {
              "name": "text",
              "type": "",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "Date",
          "typeParameters": [],
          "line": 2110,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "text",
              "type": "",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "parseTime",
          "args": [
            {
              "name": "value",
              "type": "",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "{ hour: any; minute: any; second: any; }",
          "typeParameters": [],
          "line": 2499,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "value",
              "type": "",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "parseValueFromString",
          "args": [
            {
              "name": "text",
              "type": "string",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "Date | []",
          "typeParameters": [],
          "line": 2084,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "text",
              "type": "string",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "populateTime",
          "args": [
            {
              "name": "value",
              "type": "",
              "deprecated": false,
              "deprecationMessage": ""
            },
            {
              "name": "timeString",
              "type": "",
              "deprecated": false,
              "deprecationMessage": ""
            },
            {
              "name": "ampm",
              "type": "",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 2133,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "value",
              "type": "",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "timeString",
              "type": "",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "ampm",
              "type": "",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "populateYearOptions",
          "args": [
            {
              "name": "start",
              "type": "",
              "deprecated": false,
              "deprecationMessage": ""
            },
            {
              "name": "end",
              "type": "",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 539,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "start",
              "type": "",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "end",
              "type": "",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "registerOnChange",
          "args": [
            {
              "name": "fn",
              "type": "Function",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 2349,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "fn",
              "type": "Function",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "registerOnTouched",
          "args": [
            {
              "name": "fn",
              "type": "Function",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 2353,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "fn",
              "type": "Function",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "repeat",
          "args": [
            {
              "name": "event",
              "type": "Event",
              "deprecated": false,
              "deprecationMessage": ""
            },
            {
              "name": "interval",
              "type": "number",
              "deprecated": false,
              "deprecationMessage": ""
            },
            {
              "name": "type",
              "type": "number",
              "deprecated": false,
              "deprecationMessage": ""
            },
            {
              "name": "direction",
              "type": "number",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 1908,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "event",
              "type": "Event",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "interval",
              "type": "number",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "type",
              "type": "number",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "direction",
              "type": "number",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "restoreOverlayAppend",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 2253,
          "deprecated": false,
          "deprecationMessage": ""
        },
        {
          "name": "selectDate",
          "args": [
            {
              "name": "dateMeta",
              "type": "",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 923,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "dateMeta",
              "type": "",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "setCurrentHourPM",
          "args": [
            {
              "name": "hours",
              "type": "number",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 910,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "hours",
              "type": "number",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "setDisabledState",
          "args": [
            {
              "name": "val",
              "type": "boolean",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 2357,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "val",
              "type": "boolean",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "shouldSelectDate",
          "args": [
            {
              "name": "dateMeta",
              "type": "",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "boolean",
          "typeParameters": [],
          "line": 832,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "dateMeta",
              "type": "",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "showOverlay",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 2162,
          "deprecated": false,
          "deprecationMessage": ""
        },
        {
          "name": "switchToMonthView",
          "args": [
            {
              "name": "event",
              "type": "",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 785,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "event",
              "type": "",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "switchToYearView",
          "args": [
            {
              "name": "event",
              "type": "",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 790,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "event",
              "type": "",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "switchViewButtonDisabled",
          "args": [],
          "optional": false,
          "returnType": "any",
          "typeParameters": [],
          "line": 1254,
          "deprecated": false,
          "deprecationMessage": ""
        },
        {
          "name": "toggle",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 2185,
          "deprecated": false,
          "deprecationMessage": ""
        },
        {
          "name": "toggleAMPM",
          "args": [
            {
              "name": "event",
              "type": "",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 2038,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "event",
              "type": "",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "trapFocus",
          "args": [
            {
              "name": "event",
              "type": "",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 1765,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "event",
              "type": "",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "unbindAnimationEndListener",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 2331,
          "deprecated": false,
          "deprecationMessage": ""
        },
        {
          "name": "unbindDocumentClickListener",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 2815,
          "deprecated": false,
          "deprecationMessage": ""
        },
        {
          "name": "unbindDocumentResizeListener",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 2829,
          "deprecated": false,
          "deprecationMessage": ""
        },
        {
          "name": "unbindMaskClickListener",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 2324,
          "deprecated": false,
          "deprecationMessage": ""
        },
        {
          "name": "unbindScrollListener",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 2848,
          "deprecated": false,
          "deprecationMessage": ""
        },
        {
          "name": "updateFilledState",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 2721,
          "deprecated": false,
          "deprecationMessage": ""
        },
        {
          "name": "updateFocus",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 1630,
          "deprecated": false,
          "deprecationMessage": ""
        },
        {
          "name": "updateInputfield",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 860,
          "deprecated": false,
          "deprecationMessage": ""
        },
        {
          "name": "updateModel",
          "args": [
            {
              "name": "value",
              "type": "",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 977,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "value",
              "type": "",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "updateTime",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 2005,
          "deprecated": false,
          "deprecationMessage": ""
        },
        {
          "name": "updateUI",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 2145,
          "deprecated": false,
          "deprecationMessage": ""
        },
        {
          "name": "validateTime",
          "args": [
            {
              "name": "hour",
              "type": "number",
              "deprecated": false,
              "deprecationMessage": ""
            },
            {
              "name": "minute",
              "type": "number",
              "deprecated": false,
              "deprecationMessage": ""
            },
            {
              "name": "second",
              "type": "number",
              "deprecated": false,
              "deprecationMessage": ""
            },
            {
              "name": "pm",
              "type": "boolean",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "boolean",
          "typeParameters": [],
          "line": 1822,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "hour",
              "type": "number",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "minute",
              "type": "number",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "second",
              "type": "number",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "pm",
              "type": "boolean",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "writeValue",
          "args": [
            {
              "name": "value",
              "type": "any",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 2338,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "value",
              "type": "any",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "yearPickerValues",
          "args": [],
          "optional": false,
          "returnType": "{}",
          "typeParameters": [],
          "line": 566,
          "deprecated": false,
          "deprecationMessage": ""
        }
      ],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "description": "<p>Forked from <a href=\"https://github.com/primefaces/primeng/blob/master/src/app/components/calendar/calendar.ts\">https://github.com/primefaces/primeng/blob/master/src/app/components/calendar/calendar.ts</a>\nUpdate this after release primeng,  Last changes 20.12.2021</p>\n",
      "rawdescription": "\n\nForked from https://github.com/primefaces/primeng/blob/master/src/app/components/calendar/calendar.ts\nUpdate this after release primeng,  Last changes 20.12.2021\n",
      "type": "component",
      "sourceCode": "import { animate, state, style, transition, trigger } from '@angular/animations';\r\nimport { ChangeDetectorRef, forwardRef, NgZone, Renderer2 } from '@angular/core';\r\nimport {\r\n  Component,\r\n  Input,\r\n  ChangeDetectionStrategy,\r\n  Output,\r\n  EventEmitter,\r\n  OnInit,\r\n  OnDestroy,\r\n  ViewChild,\r\n  ContentChildren,\r\n  QueryList,\r\n  ElementRef,\r\n  TemplateRef,\r\n} from '@angular/core';\r\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\r\nimport { OverlayService, PrimeNGConfig, PrimeTemplate, TranslationKeys } from 'primeng/api';\r\nimport { LocaleSettings } from 'primeng/calendar';\r\nimport { ConnectedOverlayScrollHandler, DomHandler } from 'primeng/dom';\r\nimport { UniqueComponentId, ZIndexUtils } from 'primeng/utils';\r\nimport { Subscription } from 'rxjs';\r\n\r\nexport const CALENDAR_VALUE_ACCESSOR: any = {\r\n  provide: NG_VALUE_ACCESSOR,\r\n  useExisting: forwardRef(() => ZyfraCalendarComponent),\r\n  multi: true,\r\n};\r\n\r\n/**\r\n * Forked from https://github.com/primefaces/primeng/blob/master/src/app/components/calendar/calendar.ts\r\n * Update this after release primeng,  Last changes 20.12.2021\r\n */\r\n@Component({ template: '' })\r\nabstract class Calendar implements OnInit, OnDestroy, ControlValueAccessor {\r\n  @Input() style: any;\r\n\r\n  @Input() styleClass: string;\r\n\r\n  @Input() inputStyle: any;\r\n\r\n  @Input() label: string;\r\n\r\n  @Input() inputId: string;\r\n\r\n  @Input() name: string;\r\n\r\n  @Input() inputStyleClass: string;\r\n\r\n  @Input() placeholder: string;\r\n\r\n  @Input() ariaLabelledBy: string;\r\n\r\n  @Input() iconAriaLabel: string;\r\n\r\n  @Input() disabled: any;\r\n\r\n  @Input() dateFormat: string;\r\n\r\n  @Input() multipleSeparator: string = ',';\r\n\r\n  @Input() rangeSeparator: string = '-';\r\n\r\n  @Input() inline: boolean = false;\r\n\r\n  @Input() showOtherMonths: boolean = true;\r\n\r\n  @Input() selectOtherMonths: boolean;\r\n\r\n  @Input() showIcon: boolean;\r\n\r\n  @Input() icon: string = 'pi pi-calendar';\r\n\r\n  @Input() appendTo: any;\r\n\r\n  @Input() readonlyInput: boolean;\r\n\r\n  @Input() shortYearCutoff: any = '+10';\r\n\r\n  @Input() monthNavigator: boolean;\r\n\r\n  @Input() yearNavigator: boolean;\r\n\r\n  @Input() hourFormat: string = '24';\r\n\r\n  @Input() timeOnly: boolean;\r\n\r\n  @Input() stepHour: number = 1;\r\n\r\n  @Input() stepMinute: number = 1;\r\n\r\n  @Input() stepSecond: number = 1;\r\n\r\n  @Input() showSeconds: boolean = false;\r\n\r\n  @Input() required: boolean;\r\n\r\n  @Input() showOnFocus: boolean = true;\r\n\r\n  @Input() showWeek: boolean = false;\r\n\r\n  @Input() dataType: string = 'date';\r\n\r\n  @Input() selectionMode: string = 'single';\r\n\r\n  @Input() maxDateCount: number;\r\n\r\n  @Input() showButtonBar: boolean;\r\n\r\n  @Input() todayButtonStyleClass: string = 'p-button-text';\r\n\r\n  @Input() clearButtonStyleClass: string = 'p-button-text';\r\n\r\n  @Input() autoZIndex: boolean = true;\r\n\r\n  @Input() baseZIndex: number = 0;\r\n\r\n  @Input() panelStyleClass: string;\r\n\r\n  @Input() panelStyle: any;\r\n\r\n  @Input() keepInvalid: boolean = false;\r\n\r\n  @Input() hideOnDateTimeSelect: boolean = true;\r\n\r\n  @Input() touchUI: boolean;\r\n\r\n  @Input() timeSeparator: string = ':';\r\n\r\n  @Input() focusTrap: boolean = true;\r\n\r\n  @Input() firstDayOfWeek: number = 0;\r\n\r\n  @Input() showTransitionOptions: string = '.12s cubic-bezier(0, 0, 0.2, 1)';\r\n\r\n  @Input() hideTransitionOptions: string = '.1s linear';\r\n\r\n  @Output() onFocus: EventEmitter<any> = new EventEmitter();\r\n\r\n  @Output() onBlur: EventEmitter<any> = new EventEmitter();\r\n\r\n  @Output() onClose: EventEmitter<any> = new EventEmitter();\r\n\r\n  @Output() onSelect: EventEmitter<any> = new EventEmitter();\r\n\r\n  @Output() onInput: EventEmitter<any> = new EventEmitter();\r\n\r\n  @Output() onTodayClick: EventEmitter<any> = new EventEmitter();\r\n\r\n  @Output() onClearClick: EventEmitter<any> = new EventEmitter();\r\n\r\n  @Output() onMonthChange: EventEmitter<any> = new EventEmitter();\r\n\r\n  @Output() onYearChange: EventEmitter<any> = new EventEmitter();\r\n\r\n  @Output() onClickOutside: EventEmitter<any> = new EventEmitter();\r\n\r\n  @Output() onShow: EventEmitter<any> = new EventEmitter();\r\n\r\n  @ContentChildren(PrimeTemplate) templates: QueryList<any>;\r\n\r\n  @Input() tabindex: number;\r\n\r\n  @ViewChild('container', { static: false }) containerViewChild: ElementRef;\r\n\r\n  @ViewChild('inputfield', { static: false }) inputfieldViewChild: ElementRef;\r\n\r\n  @ViewChild('contentWrapper', { static: false }) set content(content: ElementRef) {\r\n    this.contentViewChild = content;\r\n\r\n    if (this.contentViewChild) {\r\n      if (this.isMonthNavigate) {\r\n        Promise.resolve(null).then(() => this.updateFocus());\r\n        this.isMonthNavigate = false;\r\n      } else {\r\n        if (!this.focus) {\r\n          this.initFocusableCell();\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  contentViewChild: ElementRef;\r\n\r\n  value: any;\r\n\r\n  dates: any[];\r\n\r\n  months: any[];\r\n\r\n  weekDays: string[];\r\n\r\n  currentMonth: number;\r\n\r\n  currentYear: number;\r\n\r\n  currentHour: number;\r\n\r\n  currentMinute: number;\r\n\r\n  currentSecond: number;\r\n\r\n  pm: boolean;\r\n\r\n  mask: HTMLDivElement;\r\n\r\n  maskClickListener: Function;\r\n\r\n  overlay: HTMLDivElement;\r\n\r\n  responsiveStyleElement: any;\r\n\r\n  overlayVisible: boolean;\r\n\r\n  onModelChange: Function = () => {};\r\n\r\n  onModelTouched: Function = () => {};\r\n\r\n  calendarElement: any;\r\n\r\n  timePickerTimer: any;\r\n\r\n  documentClickListener: any;\r\n\r\n  animationEndListener: any;\r\n\r\n  ticksTo1970: number;\r\n\r\n  yearOptions: number[];\r\n\r\n  focus: boolean;\r\n\r\n  isKeydown: boolean;\r\n\r\n  filled: boolean;\r\n\r\n  inputFieldValue: string = null;\r\n\r\n  _minDate: Date | null;\r\n\r\n  _maxDate: Date | null;\r\n\r\n  _showTime: boolean;\r\n\r\n  _yearRange: string;\r\n\r\n  preventDocumentListener: boolean;\r\n\r\n  dateTemplate: TemplateRef<any>;\r\n\r\n  headerTemplate: TemplateRef<any>;\r\n\r\n  footerTemplate: TemplateRef<any>;\r\n\r\n  disabledDateTemplate: TemplateRef<any>;\r\n\r\n  decadeTemplate: TemplateRef<any>;\r\n\r\n  _disabledDates: Array<Date>;\r\n\r\n  _disabledDays: Array<number>;\r\n\r\n  selectElement: any;\r\n\r\n  todayElement: any;\r\n\r\n  focusElement: any;\r\n\r\n  scrollHandler: any;\r\n\r\n  documentResizeListener: any;\r\n\r\n  navigationState: any = null;\r\n\r\n  isMonthNavigate: boolean;\r\n\r\n  initialized: boolean;\r\n\r\n  translationSubscription: Subscription;\r\n\r\n  _locale: LocaleSettings;\r\n\r\n  _responsiveOptions: any[];\r\n\r\n  currentView: string;\r\n\r\n  attributeSelector: string;\r\n\r\n  _numberOfMonths: number = 1;\r\n\r\n  _view: string = 'date';\r\n\r\n  preventFocus: boolean;\r\n\r\n  @Input() get view(): string {\r\n    return this._view;\r\n  }\r\n\r\n  set view(view: string) {\r\n    this._view = view;\r\n    this.currentView = this._view;\r\n  }\r\n\r\n  @Input() get defaultDate(): Date | null {\r\n    return this._defaultDate;\r\n  }\r\n\r\n  set defaultDate(defaultDate: Date | null) {\r\n    this._defaultDate = defaultDate;\r\n\r\n    if (this.initialized) {\r\n      const date = defaultDate || new Date();\r\n      this.currentMonth = date.getMonth();\r\n      this.currentYear = date.getFullYear();\r\n      this.initTime(date);\r\n      this.createMonths(this.currentMonth, this.currentYear);\r\n    }\r\n  }\r\n\r\n  _defaultDate: Date | null;\r\n\r\n  @Input() get minDate(): Date | null {\r\n    return this._minDate;\r\n  }\r\n\r\n  set minDate(date: Date | null) {\r\n    this._minDate = date;\r\n\r\n    if (this.currentMonth != undefined && this.currentMonth != null && this.currentYear) {\r\n      this.createMonths(this.currentMonth, this.currentYear);\r\n    }\r\n  }\r\n\r\n  @Input() get maxDate(): Date | null {\r\n    return this._maxDate;\r\n  }\r\n\r\n  set maxDate(date: Date | null) {\r\n    this._maxDate = date;\r\n\r\n    if (this.currentMonth != undefined && this.currentMonth != null && this.currentYear) {\r\n      this.createMonths(this.currentMonth, this.currentYear);\r\n    }\r\n  }\r\n\r\n  @Input() get disabledDates(): Date[] {\r\n    return this._disabledDates;\r\n  }\r\n\r\n  set disabledDates(disabledDates: Date[]) {\r\n    this._disabledDates = disabledDates;\r\n    if (this.currentMonth != undefined && this.currentMonth != null && this.currentYear) {\r\n      this.createMonths(this.currentMonth, this.currentYear);\r\n    }\r\n  }\r\n\r\n  @Input() get disabledDays(): number[] {\r\n    return this._disabledDays;\r\n  }\r\n\r\n  set disabledDays(disabledDays: number[]) {\r\n    this._disabledDays = disabledDays;\r\n\r\n    if (this.currentMonth != undefined && this.currentMonth != null && this.currentYear) {\r\n      this.createMonths(this.currentMonth, this.currentYear);\r\n    }\r\n  }\r\n\r\n  @Input() get yearRange(): string {\r\n    return this._yearRange;\r\n  }\r\n\r\n  set yearRange(yearRange: string) {\r\n    this._yearRange = yearRange;\r\n\r\n    if (yearRange) {\r\n      const years = yearRange.split(':');\r\n      const yearStart = parseInt(years[0]);\r\n      const yearEnd = parseInt(years[1]);\r\n\r\n      this.populateYearOptions(yearStart, yearEnd);\r\n    }\r\n  }\r\n\r\n  @Input() get showTime(): boolean {\r\n    return this._showTime;\r\n  }\r\n\r\n  set showTime(showTime: boolean) {\r\n    this._showTime = showTime;\r\n\r\n    if (this.currentHour === undefined) {\r\n      this.initTime(this.value || new Date());\r\n    }\r\n    this.updateInputfield();\r\n  }\r\n\r\n  get locale() {\r\n    return this._locale;\r\n  }\r\n\r\n  @Input() get responsiveOptions(): any[] {\r\n    return this._responsiveOptions;\r\n  }\r\n\r\n  set responsiveOptions(responsiveOptions: any[]) {\r\n    this._responsiveOptions = responsiveOptions;\r\n\r\n    this.destroyResponsiveStyleElement();\r\n    this.createResponsiveStyle();\r\n  }\r\n\r\n  @Input() get numberOfMonths(): number {\r\n    return this._numberOfMonths;\r\n  }\r\n\r\n  set numberOfMonths(numberOfMonths: number) {\r\n    this._numberOfMonths = numberOfMonths;\r\n\r\n    this.destroyResponsiveStyleElement();\r\n    this.createResponsiveStyle();\r\n  }\r\n\r\n  @Input()\r\n  set locale(newLocale: LocaleSettings) {\r\n    console.warn('Locale property has no effect, use new i18n API instead.');\r\n  }\r\n\r\n  constructor(\r\n    el: ElementRef,\r\n    renderer: Renderer2,\r\n    cd: ChangeDetectorRef,\r\n    zone: NgZone,\r\n    config: PrimeNGConfig,\r\n    overlayService: OverlayService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.attributeSelector = UniqueComponentId();\r\n    const date = this.defaultDate || new Date();\r\n    this.createResponsiveStyle();\r\n    this.currentMonth = date.getMonth();\r\n    this.currentYear = date.getFullYear();\r\n    this.currentView = this.view;\r\n\r\n    if (this.view === 'date') {\r\n      this.createWeekDays();\r\n      this.initTime(date);\r\n      this.createMonths(this.currentMonth, this.currentYear);\r\n      this.ticksTo1970 =\r\n        ((1970 - 1) * 365 + Math.floor(1970 / 4) - Math.floor(1970 / 100) + Math.floor(1970 / 400)) *\r\n        24 *\r\n        60 *\r\n        60 *\r\n        10000000;\r\n    }\r\n\r\n    this.translationSubscription = this.config.translationObserver.subscribe(() => {\r\n      this.createWeekDays();\r\n    });\r\n\r\n    this.initialized = true;\r\n\r\n    this.config.setTranslation({\r\n      dayNames: ['Воскресенье', 'Понедельник', 'Вторник', 'Среда', 'Четверг', 'Пятница', 'Суббота'],\r\n      dayNamesShort: ['Вс', 'Пн', 'Вт', 'Ср', 'Чт', 'Пт', 'Сб'],\r\n      dayNamesMin: ['Вс', 'Пн', 'Вт', 'Ср', 'Чт', 'Пт', 'Сб'],\r\n      monthNames: [\r\n        'Январь',\r\n        'Февраль',\r\n        'Март',\r\n        'Апрель',\r\n        'Май',\r\n        'Июнь',\r\n        'Июль',\r\n        'Август',\r\n        'Сентябрь',\r\n        'Октябрь',\r\n        'Ноябрь',\r\n        'Декабрь',\r\n      ],\r\n      monthNamesShort: ['Янв', 'Фев', 'Мар', 'Апр', 'Май', 'Июн', 'Июл', 'Авг', 'Сен', 'Окт', 'Ноя', 'Дек'],\r\n      today: 'Сегодня',\r\n      clear: 'Очистить',\r\n      weekHeader: 'Нед',\r\n    });\r\n  }\r\n\r\n  ngAfterContentInit() {\r\n    this.templates.forEach(item => {\r\n      switch (item.getType()) {\r\n        case 'date':\r\n          this.dateTemplate = item.template;\r\n          break;\r\n\r\n        case 'decade':\r\n          this.decadeTemplate = item.template;\r\n          break;\r\n\r\n        case 'disabledDate':\r\n          this.disabledDateTemplate = item.template;\r\n          break;\r\n\r\n        case 'header':\r\n          this.headerTemplate = item.template;\r\n          break;\r\n\r\n        case 'footer':\r\n          this.footerTemplate = item.template;\r\n          break;\r\n\r\n        default:\r\n          this.dateTemplate = item.template;\r\n          break;\r\n      }\r\n    });\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    if (this.inline) {\r\n      this.contentViewChild && this.contentViewChild.nativeElement.setAttribute(this.attributeSelector, '');\r\n\r\n      if (!this.disabled) {\r\n        this.initFocusableCell();\r\n        if (this.numberOfMonths === 1) {\r\n          this.contentViewChild.nativeElement.style.width =\r\n            DomHandler.getOuterWidth(this.containerViewChild.nativeElement) + 'px';\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  getTranslation(option: string) {\r\n    return this.config.getTranslation(option);\r\n  }\r\n\r\n  populateYearOptions(start, end) {\r\n    this.yearOptions = [];\r\n\r\n    for (let i = start; i <= end; i++) {\r\n      this.yearOptions.push(i);\r\n    }\r\n  }\r\n\r\n  createWeekDays() {\r\n    this.weekDays = [];\r\n    let dayIndex = this.firstDayOfWeek;\r\n    let dayLabels = this.getTranslation(TranslationKeys.DAY_NAMES_MIN);\r\n    for (let i = 0; i < 7; i++) {\r\n      this.weekDays.push(dayLabels[dayIndex]);\r\n      dayIndex = dayIndex == 6 ? 0 : ++dayIndex;\r\n    }\r\n  }\r\n\r\n  monthPickerValues() {\r\n    let monthPickerValues = [];\r\n    for (let i = 0; i <= 11; i++) {\r\n      monthPickerValues.push(this.config.getTranslation('monthNamesShort')[i]);\r\n    }\r\n\r\n    return monthPickerValues;\r\n  }\r\n\r\n  yearPickerValues() {\r\n    let yearPickerValues = [];\r\n    let base = this.currentYear - (this.currentYear % 10);\r\n    for (let i = 0; i < 10; i++) {\r\n      yearPickerValues.push(base + i);\r\n    }\r\n\r\n    return yearPickerValues;\r\n  }\r\n\r\n  createMonths(month: number, year: number) {\r\n    this.months = this.months = [];\r\n    for (let i = 0; i < this.numberOfMonths; i++) {\r\n      let m = month + i;\r\n      let y = year;\r\n      if (m > 11) {\r\n        m = (m % 11) - 1;\r\n        y = year + 1;\r\n      }\r\n\r\n      this.months.push(this.createMonth(m, y));\r\n    }\r\n  }\r\n\r\n  getWeekNumber(date: Date) {\r\n    let checkDate = new Date(date.getTime());\r\n    checkDate.setDate(checkDate.getDate() + 4 - (checkDate.getDay() || 7));\r\n    let time = checkDate.getTime();\r\n    checkDate.setMonth(0);\r\n    checkDate.setDate(1);\r\n    return Math.floor(Math.round((time - checkDate.getTime()) / 86400000) / 7) + 1;\r\n  }\r\n\r\n  createMonth(month: number, year: number) {\r\n    let dates = [];\r\n    let firstDay = this.getFirstDayOfMonthIndex(month, year);\r\n    let daysLength = this.getDaysCountInMonth(month, year);\r\n    let prevMonthDaysLength = this.getDaysCountInPrevMonth(month, year);\r\n    let dayNo = 1;\r\n    let today = new Date();\r\n    let weekNumbers = [];\r\n    let monthRows = Math.ceil((daysLength + firstDay) / 7);\r\n\r\n    for (let i = 0; i < monthRows; i++) {\r\n      let week = [];\r\n\r\n      if (i == 0) {\r\n        for (let j = prevMonthDaysLength - firstDay + 1; j <= prevMonthDaysLength; j++) {\r\n          let prev = this.getPreviousMonthAndYear(month, year);\r\n          week.push({\r\n            day: j,\r\n            month: prev.month,\r\n            year: prev.year,\r\n            otherMonth: true,\r\n            today: this.isToday(today, j, prev.month, prev.year),\r\n            selectable: this.isSelectable(j, prev.month, prev.year, true),\r\n          });\r\n        }\r\n\r\n        let remainingDaysLength = 7 - week.length;\r\n        for (let j = 0; j < remainingDaysLength; j++) {\r\n          week.push({\r\n            day: dayNo,\r\n            month: month,\r\n            year: year,\r\n            today: this.isToday(today, dayNo, month, year),\r\n            selectable: this.isSelectable(dayNo, month, year, false),\r\n          });\r\n          dayNo++;\r\n        }\r\n      } else {\r\n        for (let j = 0; j < 7; j++) {\r\n          if (dayNo > daysLength) {\r\n            let next = this.getNextMonthAndYear(month, year);\r\n            week.push({\r\n              day: dayNo - daysLength,\r\n              month: next.month,\r\n              year: next.year,\r\n              otherMonth: true,\r\n              today: this.isToday(today, dayNo - daysLength, next.month, next.year),\r\n              selectable: this.isSelectable(dayNo - daysLength, next.month, next.year, true),\r\n            });\r\n          } else {\r\n            week.push({\r\n              day: dayNo,\r\n              month: month,\r\n              year: year,\r\n              today: this.isToday(today, dayNo, month, year),\r\n              selectable: this.isSelectable(dayNo, month, year, false),\r\n            });\r\n          }\r\n\r\n          dayNo++;\r\n        }\r\n      }\r\n\r\n      if (this.showWeek) {\r\n        weekNumbers.push(this.getWeekNumber(new Date(week[0].year, week[0].month, week[0].day)));\r\n      }\r\n\r\n      dates.push(week);\r\n    }\r\n\r\n    return {\r\n      month: month,\r\n      year: year,\r\n      dates: dates,\r\n      weekNumbers: weekNumbers,\r\n    };\r\n  }\r\n\r\n  initTime(date: Date) {\r\n    this.pm = date.getHours() > 11;\r\n\r\n    if (this.showTime) {\r\n      this.currentMinute = date.getMinutes();\r\n      this.currentSecond = date.getSeconds();\r\n      this.setCurrentHourPM(date.getHours());\r\n    } else if (this.timeOnly) {\r\n      this.currentMinute = 0;\r\n      this.currentHour = 0;\r\n      this.currentSecond = 0;\r\n    }\r\n  }\r\n\r\n  navBackward(event) {\r\n    if (this.disabled) {\r\n      event.preventDefault();\r\n      return;\r\n    }\r\n\r\n    this.isMonthNavigate = true;\r\n\r\n    if (this.currentView === 'month') {\r\n      this.decrementYear();\r\n      setTimeout(() => {\r\n        this.updateFocus();\r\n      }, 1);\r\n    } else if (this.currentView === 'year') {\r\n      this.decrementDecade();\r\n      setTimeout(() => {\r\n        this.updateFocus();\r\n      }, 1);\r\n    } else {\r\n      if (this.currentMonth === 0) {\r\n        this.currentMonth = 11;\r\n        this.decrementYear();\r\n      } else {\r\n        this.currentMonth--;\r\n      }\r\n\r\n      this.onMonthChange.emit({ month: this.currentMonth + 1, year: this.currentYear });\r\n      this.createMonths(this.currentMonth, this.currentYear);\r\n    }\r\n  }\r\n\r\n  navForward(event) {\r\n    if (this.disabled) {\r\n      event.preventDefault();\r\n      return;\r\n    }\r\n\r\n    this.isMonthNavigate = true;\r\n\r\n    if (this.currentView === 'month') {\r\n      this.incrementYear();\r\n      setTimeout(() => {\r\n        this.updateFocus();\r\n      }, 1);\r\n    } else if (this.currentView === 'year') {\r\n      this.incrementDecade();\r\n      setTimeout(() => {\r\n        this.updateFocus();\r\n      }, 1);\r\n    } else {\r\n      if (this.currentMonth === 11) {\r\n        this.currentMonth = 0;\r\n        this.incrementYear();\r\n      } else {\r\n        this.currentMonth++;\r\n      }\r\n\r\n      this.onMonthChange.emit({ month: this.currentMonth + 1, year: this.currentYear });\r\n      this.createMonths(this.currentMonth, this.currentYear);\r\n    }\r\n  }\r\n\r\n  decrementYear() {\r\n    this.currentYear--;\r\n\r\n    if (this.yearNavigator && this.currentYear < this.yearOptions[0]) {\r\n      let difference = this.yearOptions[this.yearOptions.length - 1] - this.yearOptions[0];\r\n      this.populateYearOptions(\r\n        this.yearOptions[0] - difference,\r\n        this.yearOptions[this.yearOptions.length - 1] - difference\r\n      );\r\n    }\r\n  }\r\n\r\n  decrementDecade() {\r\n    this.currentYear = this.currentYear - 10;\r\n  }\r\n\r\n  incrementDecade() {\r\n    this.currentYear = this.currentYear + 10;\r\n  }\r\n\r\n  incrementYear() {\r\n    this.currentYear++;\r\n\r\n    if (this.yearNavigator && this.currentYear > this.yearOptions[this.yearOptions.length - 1]) {\r\n      let difference = this.yearOptions[this.yearOptions.length - 1] - this.yearOptions[0];\r\n      this.populateYearOptions(\r\n        this.yearOptions[0] + difference,\r\n        this.yearOptions[this.yearOptions.length - 1] + difference\r\n      );\r\n    }\r\n  }\r\n\r\n  switchToMonthView(event) {\r\n    this.currentView = 'month';\r\n    event.preventDefault();\r\n  }\r\n\r\n  switchToYearView(event) {\r\n    this.currentView = 'year';\r\n    event.preventDefault();\r\n  }\r\n\r\n  onDateSelect(event, dateMeta) {\r\n    if (this.disabled || !dateMeta.selectable) {\r\n      event.preventDefault();\r\n      return;\r\n    }\r\n\r\n    if (this.isMultipleSelection() && this.isSelected(dateMeta)) {\r\n      this.value = this.value.filter((date, i) => {\r\n        return !this.isDateEquals(date, dateMeta);\r\n      });\r\n      if (this.value.length === 0) {\r\n        this.value = null;\r\n      }\r\n      this.updateModel(this.value);\r\n    } else {\r\n      if (this.shouldSelectDate(dateMeta)) {\r\n        this.selectDate(dateMeta);\r\n      }\r\n    }\r\n\r\n    if (this.isSingleSelection() && this.hideOnDateTimeSelect) {\r\n      setTimeout(() => {\r\n        event.preventDefault();\r\n        this.hideOverlay();\r\n\r\n        if (this.mask) {\r\n          this.disableModality();\r\n        }\r\n\r\n        this.cd.markForCheck();\r\n      }, 150);\r\n    }\r\n\r\n    this.updateInputfield();\r\n    event.preventDefault();\r\n  }\r\n\r\n  shouldSelectDate(dateMeta) {\r\n    if (this.isMultipleSelection())\r\n      return this.maxDateCount != null ? this.maxDateCount > (this.value ? this.value.length : 0) : true;\r\n    else return true;\r\n  }\r\n\r\n  onMonthSelect(event, index) {\r\n    if (this.view === 'month') {\r\n      this.onDateSelect(event, { year: this.currentYear, month: index, day: 1, selectable: true });\r\n    } else {\r\n      this.currentMonth = index;\r\n      this.currentView = 'date';\r\n      this.createMonths(this.currentMonth, this.currentYear);\r\n      this.cd.markForCheck();\r\n      this.onMonthChange.emit({ month: this.currentMonth + 1, year: this.currentYear });\r\n    }\r\n  }\r\n\r\n  onYearSelect(event, year) {\r\n    if (this.view === 'year') {\r\n      this.onDateSelect(event, { year: year, month: 0, day: 1, selectable: true });\r\n    } else {\r\n      this.currentYear = year;\r\n      this.currentView = 'month';\r\n      this.onYearChange.emit({ month: this.currentMonth + 1, year: this.currentYear });\r\n    }\r\n  }\r\n\r\n  updateInputfield() {\r\n    let formattedValue = '';\r\n\r\n    if (this.value) {\r\n      if (this.isSingleSelection()) {\r\n        formattedValue = this.formatDateTime(this.value);\r\n      } else if (this.isMultipleSelection()) {\r\n        for (let i = 0; i < this.value.length; i++) {\r\n          let dateAsString = this.formatDateTime(this.value[i]);\r\n          formattedValue += dateAsString;\r\n          if (i !== this.value.length - 1) {\r\n            formattedValue += this.multipleSeparator + ' ';\r\n          }\r\n        }\r\n      } else if (this.isRangeSelection()) {\r\n        if (this.value && this.value.length) {\r\n          let startDate = this.value[0];\r\n          let endDate = this.value[1];\r\n\r\n          formattedValue = this.formatDateTime(startDate);\r\n          if (endDate) {\r\n            formattedValue += ' ' + this.rangeSeparator + ' ' + this.formatDateTime(endDate);\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    this.inputFieldValue = formattedValue;\r\n    this.updateFilledState();\r\n    if (this.inputfieldViewChild && this.inputfieldViewChild.nativeElement) {\r\n      this.inputfieldViewChild.nativeElement.value = this.inputFieldValue;\r\n    }\r\n  }\r\n\r\n  formatDateTime(date) {\r\n    let formattedValue = null;\r\n    if (date) {\r\n      if (this.timeOnly) {\r\n        formattedValue = this.formatTime(date);\r\n      } else {\r\n        formattedValue = this.formatDate(date, this.getDateFormat());\r\n        if (this.showTime) {\r\n          formattedValue += ' ' + this.formatTime(date);\r\n        }\r\n      }\r\n    }\r\n\r\n    return formattedValue;\r\n  }\r\n\r\n  setCurrentHourPM(hours: number) {\r\n    if (this.hourFormat == '12') {\r\n      this.pm = hours > 11;\r\n      if (hours >= 12) {\r\n        this.currentHour = hours == 12 ? 12 : hours - 12;\r\n      } else {\r\n        this.currentHour = hours == 0 ? 12 : hours;\r\n      }\r\n    } else {\r\n      this.currentHour = hours;\r\n    }\r\n  }\r\n\r\n  selectDate(dateMeta) {\r\n    let date = new Date(dateMeta.year, dateMeta.month, dateMeta.day);\r\n\r\n    if (this.showTime) {\r\n      if (this.hourFormat == '12') {\r\n        if (this.currentHour === 12) date.setHours(this.pm ? 12 : 0);\r\n        else date.setHours(this.pm ? this.currentHour + 12 : this.currentHour);\r\n      } else {\r\n        date.setHours(this.currentHour);\r\n      }\r\n\r\n      date.setMinutes(this.currentMinute);\r\n      date.setSeconds(this.currentSecond);\r\n    }\r\n\r\n    if (this.minDate && this.minDate > date) {\r\n      date = this.minDate;\r\n      this.setCurrentHourPM(date.getHours());\r\n      this.currentMinute = date.getMinutes();\r\n      this.currentSecond = date.getSeconds();\r\n    }\r\n\r\n    if (this.maxDate && this.maxDate < date) {\r\n      date = this.maxDate;\r\n      this.setCurrentHourPM(date.getHours());\r\n      this.currentMinute = date.getMinutes();\r\n      this.currentSecond = date.getSeconds();\r\n    }\r\n\r\n    if (this.isSingleSelection()) {\r\n      this.updateModel(date);\r\n    } else if (this.isMultipleSelection()) {\r\n      this.updateModel(this.value ? [...this.value, date] : [date]);\r\n    } else if (this.isRangeSelection()) {\r\n      if (this.value && this.value.length) {\r\n        let startDate = this.value[0];\r\n        let endDate = this.value[1];\r\n\r\n        if (!endDate && date.getTime() >= startDate.getTime()) {\r\n          endDate = date;\r\n        } else {\r\n          startDate = date;\r\n          endDate = null;\r\n        }\r\n\r\n        this.updateModel([startDate, endDate]);\r\n      } else {\r\n        this.updateModel([date, null]);\r\n      }\r\n    }\r\n\r\n    this.onSelect.emit(date);\r\n  }\r\n\r\n  updateModel(value) {\r\n    this.value = value;\r\n\r\n    if (this.dataType == 'date') {\r\n      this.onModelChange(this.value);\r\n    } else if (this.dataType == 'string') {\r\n      if (this.isSingleSelection()) {\r\n        this.onModelChange(this.formatDateTime(this.value));\r\n      } else {\r\n        let stringArrValue = null;\r\n        if (this.value) {\r\n          stringArrValue = this.value.map(date => this.formatDateTime(date));\r\n        }\r\n        this.onModelChange(stringArrValue);\r\n      }\r\n    }\r\n  }\r\n\r\n  getFirstDayOfMonthIndex(month: number, year: number) {\r\n    let day = new Date();\r\n    day.setDate(1);\r\n    day.setMonth(month);\r\n    day.setFullYear(year);\r\n\r\n    let dayIndex = day.getDay() + this.getSundayIndex();\r\n    return dayIndex >= 7 ? dayIndex - 7 : dayIndex;\r\n  }\r\n\r\n  getDaysCountInMonth(month: number, year: number) {\r\n    return 32 - this.daylightSavingAdjust(new Date(year, month, 32)).getDate();\r\n  }\r\n\r\n  getDaysCountInPrevMonth(month: number, year: number) {\r\n    let prev = this.getPreviousMonthAndYear(month, year);\r\n    return this.getDaysCountInMonth(prev.month, prev.year);\r\n  }\r\n\r\n  getPreviousMonthAndYear(month: number, year: number) {\r\n    let m, y;\r\n\r\n    if (month === 0) {\r\n      m = 11;\r\n      y = year - 1;\r\n    } else {\r\n      m = month - 1;\r\n      y = year;\r\n    }\r\n\r\n    return { month: m, year: y };\r\n  }\r\n\r\n  getNextMonthAndYear(month: number, year: number) {\r\n    let m, y;\r\n\r\n    if (month === 11) {\r\n      m = 0;\r\n      y = year + 1;\r\n    } else {\r\n      m = month + 1;\r\n      y = year;\r\n    }\r\n\r\n    return { month: m, year: y };\r\n  }\r\n\r\n  getSundayIndex() {\r\n    return this.firstDayOfWeek > 0 ? 7 - this.firstDayOfWeek : 0;\r\n  }\r\n\r\n  // @ts-ignore\r\n  isSelected(dateMeta): boolean {\r\n    if (this.value) {\r\n      if (this.isSingleSelection()) {\r\n        return this.isDateEquals(this.value, dateMeta);\r\n      } else if (this.isMultipleSelection()) {\r\n        let selected = false;\r\n        for (let date of this.value) {\r\n          selected = this.isDateEquals(date, dateMeta);\r\n          if (selected) {\r\n            break;\r\n          }\r\n        }\r\n\r\n        return selected;\r\n      } else if (this.isRangeSelection()) {\r\n        if (this.value[1])\r\n          return (\r\n            this.isDateEquals(this.value[0], dateMeta) ||\r\n            this.isDateEquals(this.value[1], dateMeta) ||\r\n            this.isDateBetween(this.value[0], this.value[1], dateMeta)\r\n          );\r\n        else return this.isDateEquals(this.value[0], dateMeta);\r\n      }\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  isComparable() {\r\n    return this.value != null && typeof this.value !== 'string';\r\n  }\r\n\r\n  isMonthSelected(month) {\r\n    if (this.isComparable()) {\r\n      let value = this.isRangeSelection() ? this.value[0] : this.value;\r\n\r\n      return !this.isMultipleSelection()\r\n        ? value.getMonth() === month && value.getFullYear() === this.currentYear\r\n        : false;\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  isYearSelected(year) {\r\n    if (this.isComparable()) {\r\n      let value = this.isRangeSelection() ? this.value[0] : this.value;\r\n\r\n      return !this.isMultipleSelection() ? value.getFullYear() === year : false;\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  isDateEquals(value, dateMeta) {\r\n    if (value)\r\n      return (\r\n        value.getDate() === dateMeta.day &&\r\n        value.getMonth() === dateMeta.month &&\r\n        value.getFullYear() === dateMeta.year\r\n      );\r\n    else return false;\r\n  }\r\n\r\n  isDateBetween(start, end, dateMeta) {\r\n    let between: boolean = false;\r\n    if (start && end) {\r\n      let date: Date = new Date(dateMeta.year, dateMeta.month, dateMeta.day);\r\n      return start.getTime() <= date.getTime() && end.getTime() >= date.getTime();\r\n    }\r\n\r\n    return between;\r\n  }\r\n\r\n  isSingleSelection(): boolean {\r\n    return this.selectionMode === 'single';\r\n  }\r\n\r\n  isRangeSelection(): boolean {\r\n    return this.selectionMode === 'range';\r\n  }\r\n\r\n  isMultipleSelection(): boolean {\r\n    return this.selectionMode === 'multiple';\r\n  }\r\n\r\n  isToday(today, day, month, year): boolean {\r\n    return today.getDate() === day && today.getMonth() === month && today.getFullYear() === year;\r\n  }\r\n\r\n  isSelectable(day, month, year, otherMonth): boolean {\r\n    let validMin = true;\r\n    let validMax = true;\r\n    let validDate = true;\r\n    let validDay = true;\r\n\r\n    if (otherMonth && !this.selectOtherMonths) {\r\n      return false;\r\n    }\r\n\r\n    if (this.minDate) {\r\n      if (this.minDate.getFullYear() > year) {\r\n        validMin = false;\r\n      } else if (this.minDate.getFullYear() === year) {\r\n        if (this.minDate.getMonth() > month) {\r\n          validMin = false;\r\n        } else if (this.minDate.getMonth() === month) {\r\n          if (this.minDate.getDate() > day) {\r\n            validMin = false;\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    if (this.maxDate) {\r\n      if (this.maxDate.getFullYear() < year) {\r\n        validMax = false;\r\n      } else if (this.maxDate.getFullYear() === year) {\r\n        if (this.maxDate.getMonth() < month) {\r\n          validMax = false;\r\n        } else if (this.maxDate.getMonth() === month) {\r\n          if (this.maxDate.getDate() < day) {\r\n            validMax = false;\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    if (this.disabledDates) {\r\n      validDate = !this.isDateDisabled(day, month, year);\r\n    }\r\n\r\n    if (this.disabledDays) {\r\n      validDay = !this.isDayDisabled(day, month, year);\r\n    }\r\n\r\n    return validMin && validMax && validDate && validDay;\r\n  }\r\n\r\n  isDateDisabled(day: number, month: number, year: number): boolean {\r\n    if (this.disabledDates) {\r\n      for (let disabledDate of this.disabledDates) {\r\n        if (\r\n          disabledDate.getFullYear() === year &&\r\n          disabledDate.getMonth() === month &&\r\n          disabledDate.getDate() === day\r\n        ) {\r\n          return true;\r\n        }\r\n      }\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  isDayDisabled(day: number, month: number, year: number): boolean {\r\n    if (this.disabledDays) {\r\n      let weekday = new Date(year, month, day);\r\n      let weekdayNumber = weekday.getDay();\r\n      return this.disabledDays.indexOf(weekdayNumber) !== -1;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  onInputFocus(event: Event) {\r\n    this.focus = true;\r\n    if (this.showOnFocus) {\r\n      this.showOverlay();\r\n    }\r\n    this.onFocus.emit(event);\r\n  }\r\n\r\n  onInputClick() {\r\n    if (this.showOnFocus && !this.overlayVisible) {\r\n      this.showOverlay();\r\n    }\r\n  }\r\n\r\n  onInputBlur(event: Event) {\r\n    this.focus = false;\r\n    this.onBlur.emit(event);\r\n    if (!this.keepInvalid) {\r\n      this.updateInputfield();\r\n    }\r\n    this.onModelTouched();\r\n  }\r\n\r\n  onButtonClick(event, inputfield) {\r\n    if (!this.overlayVisible) {\r\n      inputfield.focus();\r\n      this.showOverlay();\r\n    } else {\r\n      this.hideOverlay();\r\n    }\r\n  }\r\n\r\n  onOverlayClick(event) {\r\n    this.overlayService.add({\r\n      originalEvent: event,\r\n      target: this.el.nativeElement,\r\n    });\r\n  }\r\n\r\n  getMonthName(index) {\r\n    return this.config.getTranslation('monthNames')[index];\r\n  }\r\n\r\n  switchViewButtonDisabled() {\r\n    return this.numberOfMonths > 1 || this.disabled;\r\n  }\r\n\r\n  onPrevButtonClick(event) {\r\n    this.navigationState = { backward: true, button: true };\r\n    this.navBackward(event);\r\n  }\r\n\r\n  onNextButtonClick(event) {\r\n    this.navigationState = { backward: false, button: true };\r\n    this.navForward(event);\r\n  }\r\n\r\n  onContainerButtonKeydown(event) {\r\n    switch (event.which) {\r\n      //tab\r\n      case 9:\r\n        if (!this.inline) {\r\n          this.trapFocus(event);\r\n        }\r\n        break;\r\n\r\n      //escape\r\n      case 27:\r\n        this.overlayVisible = false;\r\n        event.preventDefault();\r\n        break;\r\n\r\n      default:\r\n        //Noop\r\n        break;\r\n    }\r\n  }\r\n\r\n  onInputKeydown(event) {\r\n    this.isKeydown = true;\r\n    if (event.keyCode === 40 && this.contentViewChild) {\r\n      this.trapFocus(event);\r\n    } else if (event.keyCode === 27) {\r\n      if (this.overlayVisible) {\r\n        this.overlayVisible = false;\r\n        event.preventDefault();\r\n      }\r\n    } else if (event.keyCode === 13) {\r\n      if (this.overlayVisible) {\r\n        this.overlayVisible = false;\r\n        event.preventDefault();\r\n      }\r\n    } else if (event.keyCode === 9 && this.contentViewChild) {\r\n      DomHandler.getFocusableElements(this.contentViewChild.nativeElement).forEach(\r\n        el => (el.tabIndex = '-1')\r\n      );\r\n      if (this.overlayVisible) {\r\n        this.overlayVisible = false;\r\n      }\r\n    }\r\n  }\r\n\r\n  onDateCellKeydown(event, date, groupIndex) {\r\n    const cellContent = event.currentTarget;\r\n    const cell = cellContent.parentElement;\r\n\r\n    switch (event.which) {\r\n      //down arrow\r\n      case 40: {\r\n        cellContent.tabIndex = '-1';\r\n        let cellIndex = DomHandler.index(cell);\r\n        let nextRow = cell.parentElement.nextElementSibling;\r\n        if (nextRow) {\r\n          let focusCell = nextRow.children[cellIndex].children[0];\r\n          if (DomHandler.hasClass(focusCell, 'p-disabled')) {\r\n            this.navigationState = { backward: false };\r\n            this.navForward(event);\r\n          } else {\r\n            nextRow.children[cellIndex].children[0].tabIndex = '0';\r\n            nextRow.children[cellIndex].children[0].focus();\r\n          }\r\n        } else {\r\n          this.navigationState = { backward: false };\r\n          this.navForward(event);\r\n        }\r\n        event.preventDefault();\r\n        break;\r\n      }\r\n\r\n      //up arrow\r\n      case 38: {\r\n        cellContent.tabIndex = '-1';\r\n        let cellIndex = DomHandler.index(cell);\r\n        let prevRow = cell.parentElement.previousElementSibling;\r\n        if (prevRow) {\r\n          let focusCell = prevRow.children[cellIndex].children[0];\r\n          if (DomHandler.hasClass(focusCell, 'p-disabled')) {\r\n            this.navigationState = { backward: true };\r\n            this.navBackward(event);\r\n          } else {\r\n            focusCell.tabIndex = '0';\r\n            focusCell.focus();\r\n          }\r\n        } else {\r\n          this.navigationState = { backward: true };\r\n          this.navBackward(event);\r\n        }\r\n        event.preventDefault();\r\n        break;\r\n      }\r\n\r\n      //left arrow\r\n      case 37: {\r\n        cellContent.tabIndex = '-1';\r\n        let prevCell = cell.previousElementSibling;\r\n        if (prevCell) {\r\n          let focusCell = prevCell.children[0];\r\n          if (\r\n            DomHandler.hasClass(focusCell, 'p-disabled') ||\r\n            DomHandler.hasClass(focusCell.parentElement, 'p-datepicker-weeknumber')\r\n          ) {\r\n            this.navigateToMonth(true, groupIndex);\r\n          } else {\r\n            focusCell.tabIndex = '0';\r\n            focusCell.focus();\r\n          }\r\n        } else {\r\n          this.navigateToMonth(true, groupIndex);\r\n        }\r\n        event.preventDefault();\r\n        break;\r\n      }\r\n\r\n      //right arrow\r\n      case 39: {\r\n        cellContent.tabIndex = '-1';\r\n        let nextCell = cell.nextElementSibling;\r\n        if (nextCell) {\r\n          let focusCell = nextCell.children[0];\r\n          if (DomHandler.hasClass(focusCell, 'p-disabled')) {\r\n            this.navigateToMonth(false, groupIndex);\r\n          } else {\r\n            focusCell.tabIndex = '0';\r\n            focusCell.focus();\r\n          }\r\n        } else {\r\n          this.navigateToMonth(false, groupIndex);\r\n        }\r\n        event.preventDefault();\r\n        break;\r\n      }\r\n\r\n      //enter\r\n      //space\r\n      case 13:\r\n      case 32: {\r\n        this.onDateSelect(event, date);\r\n        event.preventDefault();\r\n        break;\r\n      }\r\n\r\n      //escape\r\n      case 27: {\r\n        this.overlayVisible = false;\r\n        event.preventDefault();\r\n        break;\r\n      }\r\n\r\n      //tab\r\n      case 9: {\r\n        if (!this.inline) {\r\n          this.trapFocus(event);\r\n        }\r\n        break;\r\n      }\r\n\r\n      default:\r\n        //no op\r\n        break;\r\n    }\r\n  }\r\n\r\n  onMonthCellKeydown(event, index) {\r\n    const cell = event.currentTarget;\r\n    switch (event.which) {\r\n      //arrows\r\n      case 38:\r\n      case 40: {\r\n        cell.tabIndex = '-1';\r\n        var cells = cell.parentElement.children;\r\n        var cellIndex = DomHandler.index(cell);\r\n        let nextCell = cells[event.which === 40 ? cellIndex + 3 : cellIndex - 3];\r\n        if (nextCell) {\r\n          nextCell.tabIndex = '0';\r\n          nextCell.focus();\r\n        }\r\n        event.preventDefault();\r\n        break;\r\n      }\r\n\r\n      //left arrow\r\n      case 37: {\r\n        cell.tabIndex = '-1';\r\n        let prevCell = cell.previousElementSibling;\r\n        if (prevCell) {\r\n          prevCell.tabIndex = '0';\r\n          prevCell.focus();\r\n        } else {\r\n          this.navigationState = { backward: true };\r\n          this.navBackward(event);\r\n        }\r\n\r\n        event.preventDefault();\r\n        break;\r\n      }\r\n\r\n      //right arrow\r\n      case 39: {\r\n        cell.tabIndex = '-1';\r\n        let nextCell = cell.nextElementSibling;\r\n        if (nextCell) {\r\n          nextCell.tabIndex = '0';\r\n          nextCell.focus();\r\n        } else {\r\n          this.navigationState = { backward: false };\r\n          this.navForward(event);\r\n        }\r\n\r\n        event.preventDefault();\r\n        break;\r\n      }\r\n\r\n      //enter\r\n      case 13: {\r\n        this.onMonthSelect(event, index);\r\n        event.preventDefault();\r\n        break;\r\n      }\r\n\r\n      //enter\r\n      //space\r\n      case 13:\r\n      case 32: {\r\n        this.overlayVisible = false;\r\n        event.preventDefault();\r\n        break;\r\n      }\r\n\r\n      //escape\r\n      case 27: {\r\n        this.overlayVisible = false;\r\n        event.preventDefault();\r\n        break;\r\n      }\r\n\r\n      //tab\r\n      case 9: {\r\n        if (!this.inline) {\r\n          this.trapFocus(event);\r\n        }\r\n        break;\r\n      }\r\n\r\n      default:\r\n        //no op\r\n        break;\r\n    }\r\n  }\r\n\r\n  onYearCellKeydown(event, index) {\r\n    const cell = event.currentTarget;\r\n\r\n    switch (event.which) {\r\n      //arrows\r\n      case 38:\r\n      case 40: {\r\n        cell.tabIndex = '-1';\r\n        var cells = cell.parentElement.children;\r\n        var cellIndex = DomHandler.index(cell);\r\n        let nextCell = cells[event.which === 40 ? cellIndex + 2 : cellIndex - 2];\r\n        if (nextCell) {\r\n          nextCell.tabIndex = '0';\r\n          nextCell.focus();\r\n        }\r\n        event.preventDefault();\r\n        break;\r\n      }\r\n\r\n      //left arrow\r\n      case 37: {\r\n        cell.tabIndex = '-1';\r\n        let prevCell = cell.previousElementSibling;\r\n        if (prevCell) {\r\n          prevCell.tabIndex = '0';\r\n          prevCell.focus();\r\n        } else {\r\n          this.navigationState = { backward: true };\r\n          this.navBackward(event);\r\n        }\r\n\r\n        event.preventDefault();\r\n        break;\r\n      }\r\n\r\n      //right arrow\r\n      case 39: {\r\n        cell.tabIndex = '-1';\r\n        let nextCell = cell.nextElementSibling;\r\n        if (nextCell) {\r\n          nextCell.tabIndex = '0';\r\n          nextCell.focus();\r\n        } else {\r\n          this.navigationState = { backward: false };\r\n          this.navForward(event);\r\n        }\r\n\r\n        event.preventDefault();\r\n        break;\r\n      }\r\n\r\n      //enter\r\n      //space\r\n      case 13:\r\n      case 32: {\r\n        this.onYearSelect(event, index);\r\n        event.preventDefault();\r\n        break;\r\n      }\r\n\r\n      //escape\r\n      case 27: {\r\n        this.overlayVisible = false;\r\n        event.preventDefault();\r\n        break;\r\n      }\r\n\r\n      //tab\r\n      case 9: {\r\n        this.trapFocus(event);\r\n        break;\r\n      }\r\n\r\n      default:\r\n        //no op\r\n        break;\r\n    }\r\n  }\r\n\r\n  navigateToMonth(prev, groupIndex) {\r\n    if (prev) {\r\n      if (this.numberOfMonths === 1 || groupIndex === 0) {\r\n        this.navigationState = { backward: true };\r\n        this.navBackward(event);\r\n      } else {\r\n        let prevMonthContainer = this.contentViewChild.nativeElement.children[groupIndex - 1];\r\n        let cells = DomHandler.find(\r\n          prevMonthContainer,\r\n          '.p-datepicker-calendar td span:not(.p-disabled):not(.p-ink)'\r\n        );\r\n        let focusCell = cells[cells.length - 1];\r\n        focusCell.tabIndex = '0';\r\n        focusCell.focus();\r\n      }\r\n    } else {\r\n      if (this.numberOfMonths === 1 || groupIndex === this.numberOfMonths - 1) {\r\n        this.navigationState = { backward: false };\r\n        this.navForward(event);\r\n      } else {\r\n        let nextMonthContainer = this.contentViewChild.nativeElement.children[groupIndex + 1];\r\n        let focusCell = DomHandler.findSingle(\r\n          nextMonthContainer,\r\n          '.p-datepicker-calendar td span:not(.p-disabled):not(.p-ink)'\r\n        );\r\n        focusCell.tabIndex = '0';\r\n        focusCell.focus();\r\n      }\r\n    }\r\n  }\r\n\r\n  updateFocus() {\r\n    let cell;\r\n\r\n    if (this.navigationState) {\r\n      if (this.navigationState.button) {\r\n        this.initFocusableCell();\r\n\r\n        if (this.navigationState.backward)\r\n          DomHandler.findSingle(this.contentViewChild.nativeElement, '.p-datepicker-prev').focus();\r\n        else DomHandler.findSingle(this.contentViewChild.nativeElement, '.p-datepicker-next').focus();\r\n      } else {\r\n        if (this.navigationState.backward) {\r\n          let cells;\r\n\r\n          if (this.currentView === 'month') {\r\n            cells = DomHandler.find(\r\n              this.contentViewChild.nativeElement,\r\n              '.p-monthpicker .p-monthpicker-month:not(.p-disabled)'\r\n            );\r\n          } else if (this.currentView === 'year') {\r\n            cells = DomHandler.find(\r\n              this.contentViewChild.nativeElement,\r\n              '.p-yearpicker .p-yearpicker-year:not(.p-disabled)'\r\n            );\r\n          } else {\r\n            cells = DomHandler.find(\r\n              this.contentViewChild.nativeElement,\r\n              '.p-datepicker-calendar td span:not(.p-disabled):not(.p-ink)'\r\n            );\r\n          }\r\n\r\n          if (cells && cells.length > 0) {\r\n            cell = cells[cells.length - 1];\r\n          }\r\n        } else {\r\n          if (this.currentView === 'month') {\r\n            cell = DomHandler.findSingle(\r\n              this.contentViewChild.nativeElement,\r\n              '.p-monthpicker .p-monthpicker-month:not(.p-disabled)'\r\n            );\r\n          } else if (this.currentView === 'year') {\r\n            cell = DomHandler.findSingle(\r\n              this.contentViewChild.nativeElement,\r\n              '.p-yearpicker .p-yearpicker-year:not(.p-disabled)'\r\n            );\r\n          } else {\r\n            cell = DomHandler.findSingle(\r\n              this.contentViewChild.nativeElement,\r\n              '.p-datepicker-calendar td span:not(.p-disabled):not(.p-ink)'\r\n            );\r\n          }\r\n        }\r\n\r\n        if (cell) {\r\n          cell.tabIndex = '0';\r\n          cell.focus();\r\n        }\r\n      }\r\n\r\n      this.navigationState = null;\r\n    } else {\r\n      this.initFocusableCell();\r\n    }\r\n  }\r\n\r\n  initFocusableCell() {\r\n    let cell;\r\n\r\n    if (this.currentView === 'month') {\r\n      let cells = DomHandler.find(\r\n        this.contentViewChild.nativeElement,\r\n        '.p-monthpicker .p-monthpicker-month:not(.p-disabled)'\r\n      );\r\n      let selectedCell = DomHandler.findSingle(\r\n        this.contentViewChild.nativeElement,\r\n        '.p-monthpicker .p-monthpicker-month.p-highlight'\r\n      );\r\n      cells.forEach(cell => (cell.tabIndex = -1));\r\n      cell = selectedCell || cells[0];\r\n\r\n      if (cells.length === 0) {\r\n        let disabledCells = DomHandler.find(\r\n          this.contentViewChild.nativeElement,\r\n          '.p-monthpicker .p-monthpicker-month.p-disabled[tabindex = \"0\"]'\r\n        );\r\n        disabledCells.forEach(cell => (cell.tabIndex = -1));\r\n      }\r\n    } else if (this.currentView === 'year') {\r\n      let cells = DomHandler.find(\r\n        this.contentViewChild.nativeElement,\r\n        '.p-yearpicker .p-yearpicker-year:not(.p-disabled)'\r\n      );\r\n      let selectedCell = DomHandler.findSingle(\r\n        this.contentViewChild.nativeElement,\r\n        '.p-yearpicker .p-yearpicker-year.p-highlight'\r\n      );\r\n      cells.forEach(cell => (cell.tabIndex = -1));\r\n      cell = selectedCell || cells[0];\r\n\r\n      if (cells.length === 0) {\r\n        let disabledCells = DomHandler.find(\r\n          this.contentViewChild.nativeElement,\r\n          '.p-yearpicker .p-yearpicker-year.p-disabled[tabindex = \"0\"]'\r\n        );\r\n        disabledCells.forEach(cell => (cell.tabIndex = -1));\r\n      }\r\n    } else {\r\n      cell = DomHandler.findSingle(this.contentViewChild.nativeElement, 'span.p-highlight');\r\n      if (!cell) {\r\n        let todayCell = DomHandler.findSingle(\r\n          this.contentViewChild.nativeElement,\r\n          'td.p-datepicker-today span:not(.p-disabled):not(.p-ink)'\r\n        );\r\n        if (todayCell) cell = todayCell;\r\n        else\r\n          cell = DomHandler.findSingle(\r\n            this.contentViewChild.nativeElement,\r\n            '.p-datepicker-calendar td span:not(.p-disabled):not(.p-ink)'\r\n          );\r\n      }\r\n    }\r\n\r\n    if (cell) {\r\n      cell.tabIndex = '0';\r\n\r\n      if (!this.preventFocus && (!this.navigationState || !this.navigationState.button)) {\r\n        setTimeout(() => {\r\n          cell.focus();\r\n        }, 1);\r\n      }\r\n\r\n      this.preventFocus = false;\r\n    }\r\n  }\r\n\r\n  trapFocus(event) {\r\n    let focusableElements = DomHandler.getFocusableElements(this.contentViewChild.nativeElement);\r\n\r\n    if (focusableElements && focusableElements.length > 0) {\r\n      if (!focusableElements[0].ownerDocument.activeElement) {\r\n        focusableElements[0].focus();\r\n      } else {\r\n        let focusedIndex = focusableElements.indexOf(focusableElements[0].ownerDocument.activeElement);\r\n\r\n        if (event.shiftKey) {\r\n          if (focusedIndex == -1 || focusedIndex === 0) {\r\n            if (this.focusTrap) {\r\n              focusableElements[focusableElements.length - 1].focus();\r\n            } else {\r\n              if (focusedIndex === -1) return this.hideOverlay();\r\n              else if (focusedIndex === 0) return;\r\n            }\r\n          } else {\r\n            focusableElements[focusedIndex - 1].focus();\r\n          }\r\n        } else {\r\n          if (focusedIndex == -1 || focusedIndex === focusableElements.length - 1) {\r\n            if (!this.focusTrap && focusedIndex != -1) return this.hideOverlay();\r\n            else focusableElements[0].focus();\r\n          } else {\r\n            focusableElements[focusedIndex + 1].focus();\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    event.preventDefault();\r\n  }\r\n\r\n  onMonthDropdownChange(m: string) {\r\n    this.currentMonth = parseInt(m);\r\n    this.onMonthChange.emit({ month: this.currentMonth + 1, year: this.currentYear });\r\n    this.createMonths(this.currentMonth, this.currentYear);\r\n  }\r\n\r\n  onYearDropdownChange(y: string) {\r\n    this.currentYear = parseInt(y);\r\n    this.onYearChange.emit({ month: this.currentMonth + 1, year: this.currentYear });\r\n    this.createMonths(this.currentMonth, this.currentYear);\r\n  }\r\n\r\n  convertTo24Hour = function (hours: number, pm: boolean) {\r\n    if (this.hourFormat == '12') {\r\n      if (hours === 12) {\r\n        return pm ? 12 : 0;\r\n      } else {\r\n        return pm ? hours + 12 : hours;\r\n      }\r\n    }\r\n    return hours;\r\n  };\r\n\r\n  validateTime(hour: number, minute: number, second: number, pm: boolean) {\r\n    let value = this.value;\r\n    const convertedHour = this.convertTo24Hour(hour, pm);\r\n    if (this.isRangeSelection()) {\r\n      value = this.value[1] || this.value[0];\r\n    }\r\n    if (this.isMultipleSelection()) {\r\n      value = this.value[this.value.length - 1];\r\n    }\r\n    const valueDateString = value ? value.toDateString() : null;\r\n    if (this.minDate && valueDateString && this.minDate.toDateString() === valueDateString) {\r\n      if (this.minDate.getHours() > convertedHour) {\r\n        return false;\r\n      }\r\n      if (this.minDate.getHours() === convertedHour) {\r\n        if (this.minDate.getMinutes() > minute) {\r\n          return false;\r\n        }\r\n        if (this.minDate.getMinutes() === minute) {\r\n          if (this.minDate.getSeconds() > second) {\r\n            return false;\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    if (this.maxDate && valueDateString && this.maxDate.toDateString() === valueDateString) {\r\n      if (this.maxDate.getHours() < convertedHour) {\r\n        return false;\r\n      }\r\n      if (this.maxDate.getHours() === convertedHour) {\r\n        if (this.maxDate.getMinutes() < minute) {\r\n          return false;\r\n        }\r\n        if (this.maxDate.getMinutes() === minute) {\r\n          if (this.maxDate.getSeconds() < second) {\r\n            return false;\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n\r\n  incrementHour(event) {\r\n    const prevHour = this.currentHour;\r\n    let newHour = this.currentHour + this.stepHour;\r\n    let newPM = this.pm;\r\n\r\n    if (this.hourFormat == '24') newHour = newHour >= 24 ? newHour - 24 : newHour;\r\n    else if (this.hourFormat == '12') {\r\n      // Before the AM/PM break, now after\r\n      if (prevHour < 12 && newHour > 11) {\r\n        newPM = !this.pm;\r\n      }\r\n      newHour = newHour >= 13 ? newHour - 12 : newHour;\r\n    }\r\n\r\n    if (this.validateTime(newHour, this.currentMinute, this.currentSecond, newPM)) {\r\n      this.currentHour = newHour;\r\n      this.pm = newPM;\r\n    }\r\n    event.preventDefault();\r\n  }\r\n\r\n  onTimePickerElementMouseDown(event: Event, type: number, direction: number) {\r\n    if (!this.disabled) {\r\n      this.repeat(event, null, type, direction);\r\n      event.preventDefault();\r\n    }\r\n  }\r\n\r\n  onTimePickerElementMouseUp(event: Event) {\r\n    if (!this.disabled) {\r\n      this.clearTimePickerTimer();\r\n      this.updateTime();\r\n    }\r\n  }\r\n\r\n  onTimePickerElementMouseLeave() {\r\n    if (!this.disabled && this.timePickerTimer) {\r\n      this.clearTimePickerTimer();\r\n      this.updateTime();\r\n    }\r\n  }\r\n\r\n  repeat(event: Event, interval: number, type: number, direction: number) {\r\n    let i = interval || 500;\r\n\r\n    this.clearTimePickerTimer();\r\n    this.timePickerTimer = setTimeout(() => {\r\n      this.repeat(event, 100, type, direction);\r\n      this.cd.markForCheck();\r\n    }, i);\r\n\r\n    switch (type) {\r\n      case 0:\r\n        if (direction === 1) this.incrementHour(event);\r\n        else this.decrementHour(event);\r\n        break;\r\n\r\n      case 1:\r\n        if (direction === 1) this.incrementMinute(event);\r\n        else this.decrementMinute(event);\r\n        break;\r\n\r\n      case 2:\r\n        if (direction === 1) this.incrementSecond(event);\r\n        else this.decrementSecond(event);\r\n        break;\r\n    }\r\n\r\n    this.updateInputfield();\r\n  }\r\n\r\n  clearTimePickerTimer() {\r\n    if (this.timePickerTimer) {\r\n      clearTimeout(this.timePickerTimer);\r\n      this.timePickerTimer = null;\r\n    }\r\n  }\r\n\r\n  decrementHour(event) {\r\n    let newHour = this.currentHour - this.stepHour;\r\n    let newPM = this.pm;\r\n\r\n    if (this.hourFormat == '24') newHour = newHour < 0 ? 24 + newHour : newHour;\r\n    else if (this.hourFormat == '12') {\r\n      // If we were at noon/midnight, then switch\r\n      if (this.currentHour === 12) {\r\n        newPM = !this.pm;\r\n      }\r\n      newHour = newHour <= 0 ? 12 + newHour : newHour;\r\n    }\r\n\r\n    if (this.validateTime(newHour, this.currentMinute, this.currentSecond, newPM)) {\r\n      this.currentHour = newHour;\r\n      this.pm = newPM;\r\n    }\r\n\r\n    event.preventDefault();\r\n  }\r\n\r\n  incrementMinute(event) {\r\n    let newMinute = this.currentMinute + this.stepMinute;\r\n    newMinute = newMinute > 59 ? newMinute - 60 : newMinute;\r\n    if (this.validateTime(this.currentHour, newMinute, this.currentSecond, this.pm)) {\r\n      this.currentMinute = newMinute;\r\n    }\r\n\r\n    event.preventDefault();\r\n  }\r\n\r\n  decrementMinute(event) {\r\n    let newMinute = this.currentMinute - this.stepMinute;\r\n    newMinute = newMinute < 0 ? 60 + newMinute : newMinute;\r\n    if (this.validateTime(this.currentHour, newMinute, this.currentSecond, this.pm)) {\r\n      this.currentMinute = newMinute;\r\n    }\r\n\r\n    event.preventDefault();\r\n  }\r\n\r\n  incrementSecond(event) {\r\n    let newSecond = this.currentSecond + this.stepSecond;\r\n    newSecond = newSecond > 59 ? newSecond - 60 : newSecond;\r\n    if (this.validateTime(this.currentHour, this.currentMinute, newSecond, this.pm)) {\r\n      this.currentSecond = newSecond;\r\n    }\r\n\r\n    event.preventDefault();\r\n  }\r\n\r\n  decrementSecond(event) {\r\n    let newSecond = this.currentSecond - this.stepSecond;\r\n    newSecond = newSecond < 0 ? 60 + newSecond : newSecond;\r\n    if (this.validateTime(this.currentHour, this.currentMinute, newSecond, this.pm)) {\r\n      this.currentSecond = newSecond;\r\n    }\r\n\r\n    event.preventDefault();\r\n  }\r\n\r\n  updateTime() {\r\n    let value = this.value;\r\n    if (this.isRangeSelection()) {\r\n      value = this.value[1] || this.value[0];\r\n    }\r\n    if (this.isMultipleSelection()) {\r\n      value = this.value[this.value.length - 1];\r\n    }\r\n    value = value ? new Date(value.getTime()) : new Date();\r\n\r\n    if (this.hourFormat == '12') {\r\n      if (this.currentHour === 12) value.setHours(this.pm ? 12 : 0);\r\n      else value.setHours(this.pm ? this.currentHour + 12 : this.currentHour);\r\n    } else {\r\n      value.setHours(this.currentHour);\r\n    }\r\n\r\n    value.setMinutes(this.currentMinute);\r\n    value.setSeconds(this.currentSecond);\r\n    if (this.isRangeSelection()) {\r\n      if (this.value[1]) value = [this.value[0], value];\r\n      else value = [value, null];\r\n    }\r\n\r\n    if (this.isMultipleSelection()) {\r\n      value = [...this.value.slice(0, -1), value];\r\n    }\r\n\r\n    this.updateModel(value);\r\n    this.onSelect.emit(value);\r\n    this.updateInputfield();\r\n  }\r\n\r\n  toggleAMPM(event) {\r\n    const newPM = !this.pm;\r\n    if (this.validateTime(this.currentHour, this.currentMinute, this.currentSecond, newPM)) {\r\n      this.pm = newPM;\r\n      this.updateTime();\r\n    }\r\n    event.preventDefault();\r\n  }\r\n\r\n  onUserInput(event) {\r\n    // IE 11 Workaround for input placeholder : https://github.com/primefaces/primeng/issues/2026\r\n    if (!this.isKeydown) {\r\n      return;\r\n    }\r\n    this.isKeydown = false;\r\n\r\n    let val = event.target.value;\r\n    try {\r\n      let value = this.parseValueFromString(val);\r\n      if (this.isValidSelection(value)) {\r\n        this.updateModel(value);\r\n        this.updateUI();\r\n      }\r\n    } catch (err) {\r\n      //invalid date\r\n      this.updateModel(null);\r\n    }\r\n\r\n    this.filled = val != null && val.length;\r\n    this.onInput.emit(event);\r\n  }\r\n\r\n  isValidSelection(value): boolean {\r\n    let isValid = true;\r\n    if (this.isSingleSelection()) {\r\n      if (!this.isSelectable(value.getDate(), value.getMonth(), value.getFullYear(), false)) {\r\n        isValid = false;\r\n      }\r\n    } else if (value.every(v => this.isSelectable(v.getDate(), v.getMonth(), v.getFullYear(), false))) {\r\n      if (this.isRangeSelection()) {\r\n        isValid = value.length > 1 && value[1] > value[0] ? true : false;\r\n      }\r\n    }\r\n    return isValid;\r\n  }\r\n\r\n  parseValueFromString(text: string): Date | Date[] {\r\n    if (!text || text.trim().length === 0) {\r\n      return null;\r\n    }\r\n\r\n    let value: any;\r\n\r\n    if (this.isSingleSelection()) {\r\n      value = this.parseDateTime(text);\r\n    } else if (this.isMultipleSelection()) {\r\n      let tokens = text.split(this.multipleSeparator);\r\n      value = [];\r\n      for (let token of tokens) {\r\n        value.push(this.parseDateTime(token.trim()));\r\n      }\r\n    } else if (this.isRangeSelection()) {\r\n      let tokens = text.split(' ' + this.rangeSeparator + ' ');\r\n      value = [];\r\n      for (let i = 0; i < tokens.length; i++) {\r\n        value[i] = this.parseDateTime(tokens[i].trim());\r\n      }\r\n    }\r\n\r\n    return value;\r\n  }\r\n\r\n  parseDateTime(text): Date {\r\n    let date: Date;\r\n    let parts: string[] = text.split(' ');\r\n\r\n    if (this.timeOnly) {\r\n      date = new Date();\r\n      this.populateTime(date, parts[0], parts[1]);\r\n    } else {\r\n      const dateFormat = this.getDateFormat();\r\n      if (this.showTime) {\r\n        let ampm = this.hourFormat == '12' ? parts.pop() : null;\r\n        let timeString = parts.pop();\r\n\r\n        date = this.parseDate(parts.join(' '), dateFormat);\r\n        this.populateTime(date, timeString, ampm);\r\n      } else {\r\n        date = this.parseDate(text, dateFormat);\r\n      }\r\n    }\r\n\r\n    return date;\r\n  }\r\n\r\n  populateTime(value, timeString, ampm) {\r\n    if (this.hourFormat == '12' && !ampm) {\r\n      throw 'Invalid Time';\r\n    }\r\n\r\n    this.pm = ampm === 'PM' || ampm === 'pm';\r\n    let time = this.parseTime(timeString);\r\n    value.setHours(time.hour);\r\n    value.setMinutes(time.minute);\r\n    value.setSeconds(time.second);\r\n  }\r\n\r\n  updateUI() {\r\n    let val = this.value || this.defaultDate || new Date();\r\n    if (Array.isArray(val)) {\r\n      val = val[0];\r\n    }\r\n\r\n    this.currentMonth = val.getMonth();\r\n    this.currentYear = val.getFullYear();\r\n    this.createMonths(this.currentMonth, this.currentYear);\r\n\r\n    if (this.showTime || this.timeOnly) {\r\n      this.setCurrentHourPM(val.getHours());\r\n      this.currentMinute = val.getMinutes();\r\n      this.currentSecond = val.getSeconds();\r\n    }\r\n  }\r\n\r\n  showOverlay() {\r\n    if (!this.overlayVisible) {\r\n      this.updateUI();\r\n\r\n      if (!this.touchUI) {\r\n        this.preventFocus = true;\r\n      }\r\n\r\n      this.overlayVisible = true;\r\n    }\r\n  }\r\n\r\n  hideOverlay() {\r\n    this.overlayVisible = false;\r\n    this.clearTimePickerTimer();\r\n\r\n    if (this.touchUI) {\r\n      this.disableModality();\r\n    }\r\n\r\n    this.cd.markForCheck();\r\n  }\r\n\r\n  toggle() {\r\n    if (!this.inline) {\r\n      if (!this.overlayVisible) {\r\n        this.showOverlay();\r\n        this.inputfieldViewChild.nativeElement.focus();\r\n      } else {\r\n        this.hideOverlay();\r\n      }\r\n    }\r\n  }\r\n\r\n  onOverlayAnimationStart(event: AnimationEvent) {\r\n    // @ts-ignore\r\n    switch (event.toState) {\r\n      case 'visible':\r\n      case 'visibleTouchUI':\r\n        if (!this.inline) {\r\n          // @ts-ignore\r\n          this.overlay = event.element;\r\n          this.overlay.setAttribute(this.attributeSelector, '');\r\n          this.appendOverlay();\r\n          this.updateFocus();\r\n          if (this.autoZIndex) {\r\n            if (this.touchUI)\r\n              ZIndexUtils.set('modal', this.overlay, this.baseZIndex || this.config.zIndex.modal);\r\n            else ZIndexUtils.set('overlay', this.overlay, this.baseZIndex || this.config.zIndex.overlay);\r\n          }\r\n\r\n          this.alignOverlay();\r\n          this.onShow.emit(event);\r\n        }\r\n        break;\r\n\r\n      case 'void':\r\n        this.onOverlayHide();\r\n        this.onClose.emit(event);\r\n        break;\r\n    }\r\n  }\r\n\r\n  onOverlayAnimationDone(event: AnimationEvent) {\r\n    // @ts-ignore\r\n    switch (event.toState) {\r\n      case 'visible':\r\n      case 'visibleTouchUI':\r\n        if (!this.inline) {\r\n          this.bindDocumentClickListener();\r\n          this.bindDocumentResizeListener();\r\n          this.bindScrollListener();\r\n        }\r\n        break;\r\n\r\n      case 'void':\r\n        if (this.autoZIndex) {\r\n          // @ts-ignore\r\n          ZIndexUtils.clear(event.element);\r\n        }\r\n        break;\r\n    }\r\n  }\r\n\r\n  appendOverlay() {\r\n    if (this.appendTo) {\r\n      if (this.appendTo === 'body') document.body.appendChild(this.overlay);\r\n      else DomHandler.appendChild(this.overlay, this.appendTo);\r\n    }\r\n  }\r\n\r\n  restoreOverlayAppend() {\r\n    if (this.overlay && this.appendTo) {\r\n      this.el.nativeElement.appendChild(this.overlay);\r\n    }\r\n  }\r\n\r\n  alignOverlay() {\r\n    if (this.touchUI) {\r\n      this.enableModality(this.overlay);\r\n    } else if (this.overlay) {\r\n      if (this.appendTo) {\r\n        if (this.view === 'date') {\r\n          this.overlay.style.width = DomHandler.getOuterWidth(this.overlay) + 'px';\r\n          this.overlay.style.minWidth =\r\n            DomHandler.getOuterWidth(this.inputfieldViewChild.nativeElement) + 'px';\r\n        } else {\r\n          this.overlay.style.width = DomHandler.getOuterWidth(this.inputfieldViewChild.nativeElement) + 'px';\r\n        }\r\n\r\n        DomHandler.absolutePosition(this.overlay, this.inputfieldViewChild.nativeElement);\r\n      } else {\r\n        DomHandler.relativePosition(this.overlay, this.inputfieldViewChild.nativeElement);\r\n      }\r\n    }\r\n  }\r\n\r\n  enableModality(element) {\r\n    if (!this.mask) {\r\n      this.mask = document.createElement('div');\r\n      this.mask.style.zIndex = String(parseInt(element.style.zIndex) - 1);\r\n      let maskStyleClass =\r\n        'p-component-overlay p-datepicker-mask p-datepicker-mask-scrollblocker p-component-overlay p-component-overlay-enter';\r\n      DomHandler.addMultipleClasses(this.mask, maskStyleClass);\r\n\r\n      this.maskClickListener = this.renderer.listen(this.mask, 'click', (event: any) => {\r\n        this.disableModality();\r\n      });\r\n      document.body.appendChild(this.mask);\r\n      DomHandler.addClass(document.body, 'p-overflow-hidden');\r\n    }\r\n  }\r\n\r\n  disableModality() {\r\n    if (this.mask) {\r\n      DomHandler.addClass(this.mask, 'p-component-overlay-leave');\r\n      this.animationEndListener = this.destroyMask.bind(this);\r\n      this.mask.addEventListener('animationend', this.animationEndListener);\r\n    }\r\n  }\r\n\r\n  destroyMask() {\r\n    document.body.removeChild(this.mask);\r\n    let bodyChildren = document.body.children;\r\n    let hasBlockerMasks: boolean;\r\n    for (let i = 0; i < bodyChildren.length; i++) {\r\n      let bodyChild = bodyChildren[i];\r\n      if (DomHandler.hasClass(bodyChild, 'p-datepicker-mask-scrollblocker')) {\r\n        hasBlockerMasks = true;\r\n        break;\r\n      }\r\n    }\r\n\r\n    if (!hasBlockerMasks) {\r\n      DomHandler.removeClass(document.body, 'p-overflow-hidden');\r\n    }\r\n\r\n    this.unbindAnimationEndListener();\r\n    this.unbindMaskClickListener();\r\n    this.mask = null;\r\n  }\r\n\r\n  unbindMaskClickListener() {\r\n    if (this.maskClickListener) {\r\n      this.maskClickListener();\r\n      this.maskClickListener = null;\r\n    }\r\n  }\r\n\r\n  unbindAnimationEndListener() {\r\n    if (this.animationEndListener && this.mask) {\r\n      this.mask.removeEventListener('animationend', this.animationEndListener);\r\n      this.animationEndListener = null;\r\n    }\r\n  }\r\n\r\n  writeValue(value: any): void {\r\n    this.value = value;\r\n    if (this.value && typeof this.value === 'string') {\r\n      this.value = this.parseValueFromString(this.value);\r\n    }\r\n\r\n    this.updateInputfield();\r\n    this.updateUI();\r\n    this.cd.markForCheck();\r\n  }\r\n\r\n  registerOnChange(fn: Function): void {\r\n    this.onModelChange = fn;\r\n  }\r\n\r\n  registerOnTouched(fn: Function): void {\r\n    this.onModelTouched = fn;\r\n  }\r\n\r\n  setDisabledState(val: boolean): void {\r\n    this.disabled = val;\r\n    this.cd.markForCheck();\r\n  }\r\n\r\n  getDateFormat() {\r\n    return this.dateFormat || this.getTranslation('dateFormat');\r\n  }\r\n\r\n  // Ported from jquery-ui datepicker formatDate\r\n  formatDate(date, format) {\r\n    if (!date) {\r\n      return '';\r\n    }\r\n\r\n    let iFormat;\r\n    const lookAhead = match => {\r\n        const matches = iFormat + 1 < format.length && format.charAt(iFormat + 1) === match;\r\n        if (matches) {\r\n          iFormat++;\r\n        }\r\n        return matches;\r\n      },\r\n      formatNumber = (match, value, len) => {\r\n        let num = '' + value;\r\n        if (lookAhead(match)) {\r\n          while (num.length < len) {\r\n            num = '0' + num;\r\n          }\r\n        }\r\n        return num;\r\n      },\r\n      formatName = (match, value, shortNames, longNames) => {\r\n        return lookAhead(match) ? longNames[value] : shortNames[value];\r\n      };\r\n    let output = '';\r\n    let literal = false;\r\n\r\n    if (date) {\r\n      for (iFormat = 0; iFormat < format.length; iFormat++) {\r\n        if (literal) {\r\n          if (format.charAt(iFormat) === \"'\" && !lookAhead(\"'\")) {\r\n            literal = false;\r\n          } else {\r\n            output += format.charAt(iFormat);\r\n          }\r\n        } else {\r\n          switch (format.charAt(iFormat)) {\r\n            case 'd':\r\n              output += formatNumber('d', date.getDate(), 2);\r\n              break;\r\n            case 'D':\r\n              output += formatName(\r\n                'D',\r\n                date.getDay(),\r\n                this.getTranslation(TranslationKeys.DAY_NAMES_SHORT),\r\n                this.getTranslation(TranslationKeys.DAY_NAMES)\r\n              );\r\n              break;\r\n            case 'o':\r\n              output += formatNumber(\r\n                'o',\r\n                Math.round(\r\n                  (new Date(date.getFullYear(), date.getMonth(), date.getDate()).getTime() -\r\n                    new Date(date.getFullYear(), 0, 0).getTime()) /\r\n                    86400000\r\n                ),\r\n                3\r\n              );\r\n              break;\r\n            case 'm':\r\n              output += formatNumber('m', date.getMonth() + 1, 2);\r\n              break;\r\n            case 'M':\r\n              output += formatName(\r\n                'M',\r\n                date.getMonth(),\r\n                this.getTranslation(TranslationKeys.MONTH_NAMES_SHORT),\r\n                this.getTranslation(TranslationKeys.MONTH_NAMES)\r\n              );\r\n              break;\r\n            case 'y':\r\n              output += lookAhead('y')\r\n                ? date.getFullYear()\r\n                : (date.getFullYear() % 100 < 10 ? '0' : '') + (date.getFullYear() % 100);\r\n              break;\r\n            case '@':\r\n              output += date.getTime();\r\n              break;\r\n            case '!':\r\n              output += date.getTime() * 10000 + this.ticksTo1970;\r\n              break;\r\n            case \"'\":\r\n              if (lookAhead(\"'\")) {\r\n                output += \"'\";\r\n              } else {\r\n                literal = true;\r\n              }\r\n              break;\r\n            default:\r\n              output += format.charAt(iFormat);\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return output;\r\n  }\r\n\r\n  formatTime(date) {\r\n    if (!date) {\r\n      return '';\r\n    }\r\n\r\n    let output = '';\r\n    let hours = date.getHours();\r\n    let minutes = date.getMinutes();\r\n    let seconds = date.getSeconds();\r\n\r\n    if (this.hourFormat == '12' && hours > 11 && hours != 12) {\r\n      hours -= 12;\r\n    }\r\n\r\n    if (this.hourFormat == '12') {\r\n      output += hours === 0 ? 12 : hours < 10 ? '0' + hours : hours;\r\n    } else {\r\n      output += hours < 10 ? '0' + hours : hours;\r\n    }\r\n    output += ':';\r\n    output += minutes < 10 ? '0' + minutes : minutes;\r\n\r\n    if (this.showSeconds) {\r\n      output += ':';\r\n      output += seconds < 10 ? '0' + seconds : seconds;\r\n    }\r\n\r\n    if (this.hourFormat == '12') {\r\n      output += date.getHours() > 11 ? ' PM' : ' AM';\r\n    }\r\n\r\n    return output;\r\n  }\r\n\r\n  parseTime(value) {\r\n    let tokens: string[] = value.split(':');\r\n    let validTokenLength = this.showSeconds ? 3 : 2;\r\n\r\n    if (tokens.length !== validTokenLength) {\r\n      throw 'Invalid time';\r\n    }\r\n\r\n    let h = parseInt(tokens[0]);\r\n    let m = parseInt(tokens[1]);\r\n    let s = this.showSeconds ? parseInt(tokens[2]) : null;\r\n\r\n    if (\r\n      isNaN(h) ||\r\n      isNaN(m) ||\r\n      h > 23 ||\r\n      m > 59 ||\r\n      (this.hourFormat == '12' && h > 12) ||\r\n      (this.showSeconds && (isNaN(s) || s > 59))\r\n    ) {\r\n      throw 'Invalid time';\r\n    } else {\r\n      if (this.hourFormat == '12') {\r\n        if (h !== 12 && this.pm) {\r\n          h += 12;\r\n        } else if (!this.pm && h === 12) {\r\n          h -= 12;\r\n        }\r\n      }\r\n\r\n      return { hour: h, minute: m, second: s };\r\n    }\r\n  }\r\n\r\n  // Ported from jquery-ui datepicker parseDate\r\n  parseDate(value, format) {\r\n    if (format == null || value == null) {\r\n      throw 'Invalid arguments';\r\n    }\r\n\r\n    value = typeof value === 'object' ? value.toString() : value + '';\r\n    if (value === '') {\r\n      return null;\r\n    }\r\n\r\n    let iFormat,\r\n      dim,\r\n      extra,\r\n      iValue = 0,\r\n      shortYearCutoff =\r\n        typeof this.shortYearCutoff !== 'string'\r\n          ? this.shortYearCutoff\r\n          : (new Date().getFullYear() % 100) + parseInt(this.shortYearCutoff, 10),\r\n      year = -1,\r\n      month = -1,\r\n      day = -1,\r\n      doy = -1,\r\n      literal = false,\r\n      date,\r\n      lookAhead = match => {\r\n        let matches = iFormat + 1 < format.length && format.charAt(iFormat + 1) === match;\r\n        if (matches) {\r\n          iFormat++;\r\n        }\r\n        return matches;\r\n      },\r\n      getNumber = match => {\r\n        let isDoubled = lookAhead(match),\r\n          size =\r\n            match === '@' ? 14 : match === '!' ? 20 : match === 'y' && isDoubled ? 4 : match === 'o' ? 3 : 2,\r\n          minSize = match === 'y' ? size : 1,\r\n          digits = new RegExp('^\\\\d{' + minSize + ',' + size + '}'),\r\n          num = value.substring(iValue).match(digits);\r\n        if (!num) {\r\n          throw 'Missing number at position ' + iValue;\r\n        }\r\n        iValue += num[0].length;\r\n        return parseInt(num[0], 10);\r\n      },\r\n      getName = (match, shortNames, longNames) => {\r\n        let index = -1;\r\n        let arr = lookAhead(match) ? longNames : shortNames;\r\n        let names = [];\r\n\r\n        for (let i = 0; i < arr.length; i++) {\r\n          names.push([i, arr[i]]);\r\n        }\r\n        names.sort((a, b) => {\r\n          return -(a[1].length - b[1].length);\r\n        });\r\n\r\n        for (let i = 0; i < names.length; i++) {\r\n          let name = names[i][1];\r\n          if (value.substr(iValue, name.length).toLowerCase() === name.toLowerCase()) {\r\n            index = names[i][0];\r\n            iValue += name.length;\r\n            break;\r\n          }\r\n        }\r\n\r\n        if (index !== -1) {\r\n          return index + 1;\r\n        } else {\r\n          throw 'Unknown name at position ' + iValue;\r\n        }\r\n      },\r\n      checkLiteral = () => {\r\n        if (value.charAt(iValue) !== format.charAt(iFormat)) {\r\n          throw 'Unexpected literal at position ' + iValue;\r\n        }\r\n        iValue++;\r\n      };\r\n\r\n    if (this.view === 'month') {\r\n      day = 1;\r\n    }\r\n\r\n    for (iFormat = 0; iFormat < format.length; iFormat++) {\r\n      if (literal) {\r\n        if (format.charAt(iFormat) === \"'\" && !lookAhead(\"'\")) {\r\n          literal = false;\r\n        } else {\r\n          checkLiteral();\r\n        }\r\n      } else {\r\n        switch (format.charAt(iFormat)) {\r\n          case 'd':\r\n            day = getNumber('d');\r\n            break;\r\n          case 'D':\r\n            getName(\r\n              'D',\r\n              this.getTranslation(TranslationKeys.DAY_NAMES_SHORT),\r\n              this.getTranslation(TranslationKeys.DAY_NAMES)\r\n            );\r\n            break;\r\n          case 'o':\r\n            doy = getNumber('o');\r\n            break;\r\n          case 'm':\r\n            month = getNumber('m');\r\n            break;\r\n          case 'M':\r\n            month = getName(\r\n              'M',\r\n              this.getTranslation(TranslationKeys.MONTH_NAMES_SHORT),\r\n              this.getTranslation(TranslationKeys.MONTH_NAMES)\r\n            );\r\n            break;\r\n          case 'y':\r\n            year = getNumber('y');\r\n            break;\r\n          case '@':\r\n            date = new Date(getNumber('@'));\r\n            year = date.getFullYear();\r\n            month = date.getMonth() + 1;\r\n            day = date.getDate();\r\n            break;\r\n          case '!':\r\n            date = new Date((getNumber('!') - this.ticksTo1970) / 10000);\r\n            year = date.getFullYear();\r\n            month = date.getMonth() + 1;\r\n            day = date.getDate();\r\n            break;\r\n          case \"'\":\r\n            if (lookAhead(\"'\")) {\r\n              checkLiteral();\r\n            } else {\r\n              literal = true;\r\n            }\r\n            break;\r\n          default:\r\n            checkLiteral();\r\n        }\r\n      }\r\n    }\r\n\r\n    if (iValue < value.length) {\r\n      extra = value.substr(iValue);\r\n      if (!/^\\s+/.test(extra)) {\r\n        throw 'Extra/unparsed characters found in date: ' + extra;\r\n      }\r\n    }\r\n\r\n    if (year === -1) {\r\n      year = new Date().getFullYear();\r\n    } else if (year < 100) {\r\n      year +=\r\n        new Date().getFullYear() - (new Date().getFullYear() % 100) + (year <= shortYearCutoff ? 0 : -100);\r\n    }\r\n\r\n    if (doy > -1) {\r\n      month = 1;\r\n      day = doy;\r\n      do {\r\n        dim = this.getDaysCountInMonth(year, month - 1);\r\n        if (day <= dim) {\r\n          break;\r\n        }\r\n        month++;\r\n        day -= dim;\r\n      } while (true);\r\n    }\r\n\r\n    date = this.daylightSavingAdjust(new Date(year, month - 1, day));\r\n    if (date.getFullYear() !== year || date.getMonth() + 1 !== month || date.getDate() !== day) {\r\n      throw 'Invalid date'; // E.g. 31/02/00\r\n    }\r\n\r\n    return date;\r\n  }\r\n\r\n  daylightSavingAdjust(date) {\r\n    if (!date) {\r\n      return null;\r\n    }\r\n\r\n    date.setHours(date.getHours() > 12 ? date.getHours() + 2 : 0);\r\n\r\n    return date;\r\n  }\r\n\r\n  updateFilledState() {\r\n    this.filled = this.inputFieldValue && this.inputFieldValue != '';\r\n  }\r\n\r\n  onTodayButtonClick(event) {\r\n    let date: Date = new Date();\r\n    let dateMeta = {\r\n      day: date.getDate(),\r\n      month: date.getMonth(),\r\n      year: date.getFullYear(),\r\n      otherMonth: date.getMonth() !== this.currentMonth || date.getFullYear() !== this.currentYear,\r\n      today: true,\r\n      selectable: true,\r\n    };\r\n\r\n    this.onDateSelect(event, dateMeta);\r\n    this.onTodayClick.emit(event);\r\n  }\r\n\r\n  onClearButtonClick(event) {\r\n    this.updateModel(null);\r\n    this.updateInputfield();\r\n    this.hideOverlay();\r\n    this.onClearClick.emit(event);\r\n  }\r\n\r\n  createResponsiveStyle() {\r\n    if (this.numberOfMonths > 1 && this.responsiveOptions) {\r\n      if (!this.responsiveStyleElement) {\r\n        this.responsiveStyleElement = document.createElement('style');\r\n        this.responsiveStyleElement.type = 'text/css';\r\n        document.body.appendChild(this.responsiveStyleElement);\r\n      }\r\n\r\n      let innerHTML = '';\r\n      if (this.responsiveOptions) {\r\n        let responsiveOptions = [...this.responsiveOptions]\r\n          .filter(o => !!(o.breakpoint && o.numMonths))\r\n          .sort((o1, o2) => -1 * o1.breakpoint.localeCompare(o2.breakpoint, undefined, { numeric: true }));\r\n\r\n        for (let i = 0; i < responsiveOptions.length; i++) {\r\n          let { breakpoint, numMonths } = responsiveOptions[i];\r\n          let styles = `\r\n                        .p-datepicker[${this.attributeSelector}] .p-datepicker-group:nth-child(${numMonths}) .p-datepicker-next {\r\n                            display: inline-flex !important;\r\n                        }\r\n                    `;\r\n\r\n          for (let j = numMonths; j < this.numberOfMonths; j++) {\r\n            styles += `\r\n                            .p-datepicker[${this.attributeSelector}] .p-datepicker-group:nth-child(${j + 1}) {\r\n                                display: none !important;\r\n                            }\r\n                        `;\r\n          }\r\n\r\n          innerHTML += `\r\n                        @media screen and (max-width: ${breakpoint}) {\r\n                            ${styles}\r\n                        }\r\n                    `;\r\n        }\r\n      }\r\n\r\n      this.responsiveStyleElement.innerHTML = innerHTML;\r\n    }\r\n  }\r\n\r\n  destroyResponsiveStyleElement() {\r\n    if (this.responsiveStyleElement) {\r\n      this.responsiveStyleElement.remove();\r\n      this.responsiveStyleElement = null;\r\n    }\r\n  }\r\n\r\n  bindDocumentClickListener() {\r\n    if (!this.documentClickListener) {\r\n      this.zone.runOutsideAngular(() => {\r\n        const documentTarget: any = this.el ? this.el.nativeElement.ownerDocument : 'document';\r\n\r\n        this.documentClickListener = this.renderer.listen(documentTarget, 'mousedown', event => {\r\n          if (this.isOutsideClicked(event) && this.overlayVisible) {\r\n            this.zone.run(() => {\r\n              this.hideOverlay();\r\n              this.onClickOutside.emit(event);\r\n\r\n              this.cd.markForCheck();\r\n            });\r\n          }\r\n        });\r\n      });\r\n    }\r\n  }\r\n\r\n  unbindDocumentClickListener() {\r\n    if (this.documentClickListener) {\r\n      this.documentClickListener();\r\n      this.documentClickListener = null;\r\n    }\r\n  }\r\n\r\n  bindDocumentResizeListener() {\r\n    if (!this.documentResizeListener && !this.touchUI) {\r\n      this.documentResizeListener = this.onWindowResize.bind(this);\r\n      window.addEventListener('resize', this.documentResizeListener);\r\n    }\r\n  }\r\n\r\n  unbindDocumentResizeListener() {\r\n    if (this.documentResizeListener) {\r\n      window.removeEventListener('resize', this.documentResizeListener);\r\n      this.documentResizeListener = null;\r\n    }\r\n  }\r\n\r\n  bindScrollListener() {\r\n    if (!this.scrollHandler) {\r\n      this.scrollHandler = new ConnectedOverlayScrollHandler(this.containerViewChild.nativeElement, () => {\r\n        if (this.overlayVisible) {\r\n          this.hideOverlay();\r\n        }\r\n      });\r\n    }\r\n\r\n    this.scrollHandler.bindScrollListener();\r\n  }\r\n\r\n  unbindScrollListener() {\r\n    if (this.scrollHandler) {\r\n      this.scrollHandler.unbindScrollListener();\r\n    }\r\n  }\r\n\r\n  isOutsideClicked(event: Event) {\r\n    return !(\r\n      this.el.nativeElement.isSameNode(event.target) ||\r\n      this.isNavIconClicked(event) ||\r\n      this.el.nativeElement.contains(event.target) ||\r\n      (this.overlay && this.overlay.contains(<Node>event.target))\r\n    );\r\n  }\r\n\r\n  isNavIconClicked(event: Event) {\r\n    return (\r\n      DomHandler.hasClass(event.target, 'p-datepicker-prev') ||\r\n      DomHandler.hasClass(event.target, 'p-datepicker-prev-icon') ||\r\n      DomHandler.hasClass(event.target, 'p-datepicker-next') ||\r\n      DomHandler.hasClass(event.target, 'p-datepicker-next-icon')\r\n    );\r\n  }\r\n\r\n  onWindowResize() {\r\n    if (this.overlayVisible && !DomHandler.isAndroid()) {\r\n      this.hideOverlay();\r\n    }\r\n  }\r\n\r\n  onOverlayHide() {\r\n    this.currentView = this.view;\r\n\r\n    if (this.mask) {\r\n      this.destroyMask();\r\n    }\r\n\r\n    this.unbindDocumentClickListener();\r\n    this.unbindDocumentResizeListener();\r\n    this.unbindScrollListener();\r\n    this.overlay = null;\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    if (this.scrollHandler) {\r\n      this.scrollHandler.destroy();\r\n      this.scrollHandler = null;\r\n    }\r\n\r\n    if (this.translationSubscription) {\r\n      this.translationSubscription.unsubscribe();\r\n    }\r\n\r\n    if (this.overlay && this.autoZIndex) {\r\n      ZIndexUtils.clear(this.overlay);\r\n    }\r\n\r\n    this.destroyResponsiveStyleElement();\r\n    this.clearTimePickerTimer();\r\n    this.restoreOverlayAppend();\r\n    this.onOverlayHide();\r\n  }\r\n}\r\n\r\nexport type CALENDAR_SELECTION_MODE = 'single' | 'range' | 'multiple';\r\n\r\n// eslint-disable-next-line @angular-eslint/prefer-on-push-component-change-detection\r\n@Component({\r\n  selector: 'zyfra-calendar',\r\n  templateUrl: './zyfra-calendar.component.html',\r\n  animations: [\r\n    trigger('overlayAnimation', [\r\n      state(\r\n        'visibleTouchUI',\r\n        style({\r\n          transform: 'translate(-50%,-50%)',\r\n          opacity: 1,\r\n        })\r\n      ),\r\n      transition('void => visible', [\r\n        style({ opacity: 0, transform: 'scaleY(0.8)' }),\r\n        animate('{{showTransitionParams}}', style({ opacity: 1, transform: '*' })),\r\n      ]),\r\n      transition('visible => void', [animate('{{hideTransitionParams}}', style({ opacity: 0 }))]),\r\n      transition('void => visibleTouchUI', [\r\n        style({ opacity: 0, transform: 'translate3d(-50%, -40%, 0) scale(0.9)' }),\r\n        animate('{{showTransitionParams}}'),\r\n      ]),\r\n      transition('visibleTouchUI => void', [\r\n        animate(\r\n          '{{hideTransitionParams}}',\r\n          style({\r\n            opacity: 0,\r\n            transform: 'translate3d(-50%, -40%, 0) scale(0.9)',\r\n          })\r\n        ),\r\n      ]),\r\n    ]),\r\n  ],\r\n  host: {\r\n    class: 'p-element p-inputwrapper',\r\n    '[class.p-inputwrapper-filled]': 'filled',\r\n    '[class.p-inputwrapper-focus]': 'focus',\r\n  },\r\n  providers: [CALENDAR_VALUE_ACCESSOR],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class ZyfraCalendarComponent extends Calendar {\r\n  constructor(\r\n    public el: ElementRef,\r\n    public renderer: Renderer2,\r\n    public cd: ChangeDetectorRef,\r\n    private zone: NgZone,\r\n    private config: PrimeNGConfig,\r\n    public overlayService: OverlayService\r\n  ) {\r\n    super(el, renderer, cd, zone, config, overlayService);\r\n  }\r\n\r\n  private isMonthInRange(month: number, start: Date, end: Date) {\r\n    return start.getFullYear() === this.currentYear && month >= start.getMonth() && month <= end.getMonth();\r\n  }\r\n\r\n  override isMonthSelected(month: number) {\r\n    if (this.isComparable()) {\r\n      return !this.isMultipleSelection()\r\n        ? this.value[0] && this.value[1] && this.isMonthInRange(month, this.value[0], this.value[1])\r\n        : false;\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  override registerOnChange(fn: Function): void {\r\n    super.registerOnChange((...args) => {\r\n      this.correctEndDateIfRange(args[0]);\r\n      return fn(...args);\r\n    });\r\n  }\r\n\r\n  private correctEndDateIfRange(value: Date | Date[]): void {\r\n    if (!this.isRangeSelection() || !(value[1] instanceof Date)) return;\r\n    if (this.view === 'month') {\r\n      // set end day if was selected month picker\r\n      value[1].setMonth(this.value[1].getMonth() + 1, 0);\r\n    } else if (this.view === 'year') {\r\n      // set end month and day if was selected year picker\r\n      value[1].setMonth(12, 0);\r\n    }\r\n    // set end time for day\r\n    value[1].setHours(23, 59, 59, 999);\r\n  }\r\n}\r\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "deprecated": false,
        "deprecationMessage": "",
        "args": [
          {
            "name": "el",
            "type": "ElementRef",
            "deprecated": false,
            "deprecationMessage": ""
          },
          {
            "name": "renderer",
            "type": "Renderer2",
            "deprecated": false,
            "deprecationMessage": ""
          },
          {
            "name": "cd",
            "type": "ChangeDetectorRef",
            "deprecated": false,
            "deprecationMessage": ""
          },
          {
            "name": "zone",
            "type": "NgZone",
            "deprecated": false,
            "deprecationMessage": ""
          },
          {
            "name": "config",
            "type": "PrimeNGConfig",
            "deprecated": false,
            "deprecationMessage": ""
          },
          {
            "name": "overlayService",
            "type": "OverlayService",
            "deprecated": false,
            "deprecationMessage": ""
          }
        ],
        "line": 429,
        "jsdoctags": [
          {
            "name": "el",
            "type": "ElementRef",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          },
          {
            "name": "renderer",
            "type": "Renderer2",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          },
          {
            "name": "cd",
            "type": "ChangeDetectorRef",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          },
          {
            "name": "zone",
            "type": "NgZone",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          },
          {
            "name": "config",
            "type": "PrimeNGConfig",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          },
          {
            "name": "overlayService",
            "type": "OverlayService",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      "implements": ["OnInit", "OnDestroy", "ControlValueAccessor"],
      "accessors": {
        "content": {
          "name": "content",
          "setSignature": {
            "name": "content",
            "type": "void",
            "deprecated": false,
            "deprecationMessage": "",
            "args": [
              {
                "name": "content",
                "type": "ElementRef",
                "deprecated": false,
                "deprecationMessage": ""
              }
            ],
            "returnType": "void",
            "line": 170,
            "jsdoctags": [
              {
                "name": "content",
                "type": "ElementRef",
                "deprecated": false,
                "deprecationMessage": "",
                "tagName": {
                  "text": "param"
                }
              }
            ]
          }
        },
        "view": {
          "name": "view",
          "setSignature": {
            "name": "view",
            "type": "void",
            "deprecated": false,
            "deprecationMessage": "",
            "args": [
              {
                "name": "view",
                "type": "string",
                "deprecated": false,
                "deprecationMessage": ""
              }
            ],
            "returnType": "void",
            "line": 301,
            "jsdoctags": [
              {
                "name": "view",
                "type": "string",
                "deprecated": false,
                "deprecationMessage": "",
                "tagName": {
                  "text": "param"
                }
              }
            ]
          },
          "getSignature": {
            "name": "view",
            "type": "string",
            "returnType": "string",
            "line": 297
          }
        },
        "defaultDate": {
          "name": "defaultDate",
          "setSignature": {
            "name": "defaultDate",
            "type": "void",
            "deprecated": false,
            "deprecationMessage": "",
            "args": [
              {
                "name": "defaultDate",
                "type": "Date | null",
                "deprecated": false,
                "deprecationMessage": ""
              }
            ],
            "returnType": "void",
            "line": 310,
            "jsdoctags": [
              {
                "name": "defaultDate",
                "type": "Date | null",
                "deprecated": false,
                "deprecationMessage": "",
                "tagName": {
                  "text": "param"
                }
              }
            ]
          },
          "getSignature": {
            "name": "defaultDate",
            "type": "",
            "returnType": "Date | null",
            "line": 306
          }
        },
        "minDate": {
          "name": "minDate",
          "setSignature": {
            "name": "minDate",
            "type": "void",
            "deprecated": false,
            "deprecationMessage": "",
            "args": [
              {
                "name": "date",
                "type": "Date | null",
                "deprecated": false,
                "deprecationMessage": ""
              }
            ],
            "returnType": "void",
            "line": 328,
            "jsdoctags": [
              {
                "name": "date",
                "type": "Date | null",
                "deprecated": false,
                "deprecationMessage": "",
                "tagName": {
                  "text": "param"
                }
              }
            ]
          },
          "getSignature": {
            "name": "minDate",
            "type": "",
            "returnType": "Date | null",
            "line": 324
          }
        },
        "maxDate": {
          "name": "maxDate",
          "setSignature": {
            "name": "maxDate",
            "type": "void",
            "deprecated": false,
            "deprecationMessage": "",
            "args": [
              {
                "name": "date",
                "type": "Date | null",
                "deprecated": false,
                "deprecationMessage": ""
              }
            ],
            "returnType": "void",
            "line": 340,
            "jsdoctags": [
              {
                "name": "date",
                "type": "Date | null",
                "deprecated": false,
                "deprecationMessage": "",
                "tagName": {
                  "text": "param"
                }
              }
            ]
          },
          "getSignature": {
            "name": "maxDate",
            "type": "",
            "returnType": "Date | null",
            "line": 336
          }
        },
        "disabledDates": {
          "name": "disabledDates",
          "setSignature": {
            "name": "disabledDates",
            "type": "void",
            "deprecated": false,
            "deprecationMessage": "",
            "args": [
              {
                "name": "disabledDates",
                "type": "Date[]",
                "deprecated": false,
                "deprecationMessage": ""
              }
            ],
            "returnType": "void",
            "line": 352,
            "jsdoctags": [
              {
                "name": "disabledDates",
                "type": "Date[]",
                "deprecated": false,
                "deprecationMessage": "",
                "tagName": {
                  "text": "param"
                }
              }
            ]
          },
          "getSignature": {
            "name": "disabledDates",
            "type": "[]",
            "returnType": "Date[]",
            "line": 348
          }
        },
        "disabledDays": {
          "name": "disabledDays",
          "setSignature": {
            "name": "disabledDays",
            "type": "void",
            "deprecated": false,
            "deprecationMessage": "",
            "args": [
              {
                "name": "disabledDays",
                "type": "number[]",
                "deprecated": false,
                "deprecationMessage": ""
              }
            ],
            "returnType": "void",
            "line": 363,
            "jsdoctags": [
              {
                "name": "disabledDays",
                "type": "number[]",
                "deprecated": false,
                "deprecationMessage": "",
                "tagName": {
                  "text": "param"
                }
              }
            ]
          },
          "getSignature": {
            "name": "disabledDays",
            "type": "[]",
            "returnType": "number[]",
            "line": 359
          }
        },
        "yearRange": {
          "name": "yearRange",
          "setSignature": {
            "name": "yearRange",
            "type": "void",
            "deprecated": false,
            "deprecationMessage": "",
            "args": [
              {
                "name": "yearRange",
                "type": "string",
                "deprecated": false,
                "deprecationMessage": ""
              }
            ],
            "returnType": "void",
            "line": 375,
            "jsdoctags": [
              {
                "name": "yearRange",
                "type": "string",
                "deprecated": false,
                "deprecationMessage": "",
                "tagName": {
                  "text": "param"
                }
              }
            ]
          },
          "getSignature": {
            "name": "yearRange",
            "type": "string",
            "returnType": "string",
            "line": 371
          }
        },
        "showTime": {
          "name": "showTime",
          "setSignature": {
            "name": "showTime",
            "type": "void",
            "deprecated": false,
            "deprecationMessage": "",
            "args": [
              {
                "name": "showTime",
                "type": "boolean",
                "deprecated": false,
                "deprecationMessage": ""
              }
            ],
            "returnType": "void",
            "line": 391,
            "jsdoctags": [
              {
                "name": "showTime",
                "type": "boolean",
                "deprecated": false,
                "deprecationMessage": "",
                "tagName": {
                  "text": "param"
                }
              }
            ]
          },
          "getSignature": {
            "name": "showTime",
            "type": "boolean",
            "returnType": "boolean",
            "line": 387
          }
        },
        "locale": {
          "name": "locale",
          "setSignature": {
            "name": "locale",
            "type": "void",
            "deprecated": false,
            "deprecationMessage": "",
            "args": [
              {
                "name": "newLocale",
                "type": "LocaleSettings",
                "deprecated": false,
                "deprecationMessage": ""
              }
            ],
            "returnType": "void",
            "line": 427,
            "jsdoctags": [
              {
                "name": "newLocale",
                "type": "LocaleSettings",
                "deprecated": false,
                "deprecationMessage": "",
                "tagName": {
                  "text": "param"
                }
              }
            ]
          },
          "getSignature": {
            "name": "locale",
            "type": "",
            "returnType": "",
            "line": 400
          }
        },
        "responsiveOptions": {
          "name": "responsiveOptions",
          "setSignature": {
            "name": "responsiveOptions",
            "type": "void",
            "deprecated": false,
            "deprecationMessage": "",
            "args": [
              {
                "name": "responsiveOptions",
                "type": "any[]",
                "deprecated": false,
                "deprecationMessage": ""
              }
            ],
            "returnType": "void",
            "line": 408,
            "jsdoctags": [
              {
                "name": "responsiveOptions",
                "type": "any[]",
                "deprecated": false,
                "deprecationMessage": "",
                "tagName": {
                  "text": "param"
                }
              }
            ]
          },
          "getSignature": {
            "name": "responsiveOptions",
            "type": "[]",
            "returnType": "any[]",
            "line": 404
          }
        },
        "numberOfMonths": {
          "name": "numberOfMonths",
          "setSignature": {
            "name": "numberOfMonths",
            "type": "void",
            "deprecated": false,
            "deprecationMessage": "",
            "args": [
              {
                "name": "numberOfMonths",
                "type": "number",
                "deprecated": false,
                "deprecationMessage": ""
              }
            ],
            "returnType": "void",
            "line": 419,
            "jsdoctags": [
              {
                "name": "numberOfMonths",
                "type": "number",
                "deprecated": false,
                "deprecationMessage": "",
                "tagName": {
                  "text": "param"
                }
              }
            ]
          },
          "getSignature": {
            "name": "numberOfMonths",
            "type": "number",
            "returnType": "number",
            "line": 415
          }
        }
      }
    },
    {
      "name": "CustomBlockableComponent",
      "id": "component-CustomBlockableComponent-693fbde65a23f4c30e6bebf5d4d5eb2c",
      "file": "libs/components/src/lib/block-ui/custom-blockable.ts",
      "changeDetection": "ChangeDetectionStrategy.OnPush",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "zyfra-test-custom-blockable",
      "styleUrls": [],
      "styles": [],
      "template": "<div #blockElement style=\"border: 2px solid #eee; padding: 5px; margin-top: 10px;\">\n  <h2>Custom Component</h2>\n  <p>\n    Lorem ipsum dolor sit amet, consectetur adipiscing elit. Vestibulum non dolor et elit elementum\n    pulvinar sit amet at erat. Nam fermentum faucibus diam, et egestas ligula pharetra a. Proin pretium,\n    eros id rhoncus imperdiet, neque ex convallis ipsum, ac semper tellus ipsum sit amet elit. Mauris\n    finibus fermentum tristique. Vivamus ac orci ut eros vestibulum vulputate. In sodales nisl venenatis\n    turpis malesuada, vitae suscipit diam ornare. Nullam lacinia orci posuere est sagittis, quis dictum\n    nisi condimentum. Mauris facilisis efficitur condimentum. Mauris lacinia purus eu rutrum elementum.\n    Suspendisse aliquam sapien venenatis lectus finibus faucibus. Quisque id congue dui. Aliquam erat\n    volutpat. Ut gravida, ante nec porttitor imperdiet, erat orci hendrerit lacus, vitae interdum diam\n    magna vitae dui.\n  </p>\n</div>\n",
      "templateUrl": [],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "blockElement",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "ElementRef<HTMLDivElement>",
          "optional": false,
          "description": "",
          "line": 25,
          "decorators": [
            {
              "name": "ViewChild",
              "stringifiedArguments": "'blockElement'"
            }
          ]
        }
      ],
      "methodsClass": [
        {
          "name": "getBlockableElement",
          "args": [],
          "optional": false,
          "returnType": "HTMLElement",
          "typeParameters": [],
          "line": 27,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [123]
        }
      ],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import { ChangeDetectionStrategy, Component, ElementRef, NgModule, ViewChild } from '@angular/core';\r\nimport { BlockableUI } from 'primeng/api';\r\n\r\n@Component({\r\n  selector: 'zyfra-test-custom-blockable',\r\n  template: `\r\n    <div #blockElement style=\"border: 2px solid #eee; padding: 5px; margin-top: 10px;\">\r\n      <h2>Custom Component</h2>\r\n      <p>\r\n        Lorem ipsum dolor sit amet, consectetur adipiscing elit. Vestibulum non dolor et elit elementum\r\n        pulvinar sit amet at erat. Nam fermentum faucibus diam, et egestas ligula pharetra a. Proin pretium,\r\n        eros id rhoncus imperdiet, neque ex convallis ipsum, ac semper tellus ipsum sit amet elit. Mauris\r\n        finibus fermentum tristique. Vivamus ac orci ut eros vestibulum vulputate. In sodales nisl venenatis\r\n        turpis malesuada, vitae suscipit diam ornare. Nullam lacinia orci posuere est sagittis, quis dictum\r\n        nisi condimentum. Mauris facilisis efficitur condimentum. Mauris lacinia purus eu rutrum elementum.\r\n        Suspendisse aliquam sapien venenatis lectus finibus faucibus. Quisque id congue dui. Aliquam erat\r\n        volutpat. Ut gravida, ante nec porttitor imperdiet, erat orci hendrerit lacus, vitae interdum diam\r\n        magna vitae dui.\r\n      </p>\r\n    </div>\r\n  `,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class CustomBlockableComponent implements BlockableUI {\r\n  @ViewChild('blockElement') blockElement: ElementRef<HTMLDivElement>;\r\n\r\n  public getBlockableElement(): HTMLElement {\r\n    return this.blockElement.nativeElement;\r\n  }\r\n}\r\n\r\n@NgModule({\r\n  declarations: [CustomBlockableComponent],\r\n  exports: [CustomBlockableComponent],\r\n})\r\nexport class CustomBlockableModule {}\r\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "implements": ["BlockableUI"]
    },
    {
      "name": "CustomCalendarComponent",
      "id": "component-CustomCalendarComponent-1044436104f5bdf1efd4aedd30f3ea79",
      "file": "libs/components/src/lib/datepicker/calendar/story/custom-calendar.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "zyfra-custom-calendar",
      "styleUrls": [],
      "styles": [],
      "template": "<zyfra-calendar\n  [placeholder]=\"placeholder\"\n  [ngModel]=\"calendarModel\"\n  [showTime]=\"true\"\n  [showSeconds]=\"true\"\n  [label]=\"label\"\n>\n  <div buttons-right>\n    <button class=\"zyfra-datepicker-control zyfra-datepicker-button\" type=\"button\">\n      <zyfra-dropdown\n        [options]=\"times\"\n        [ngModel]=\"timeModel\"\n        [disabled]=\"disabled\"\n        (ngModelChange)=\"setInputTime($event)\"\n        [panelStyleClass]=\"'zyfra-datepicker-dropdown-overlay'\"\n        [styleClass]=\"'zyfra-datepicker-dropdown'\"\n        [dropdownIcon]=\"'zyfra-icon date-update'\"\n        [optionLabel]=\"'value'\"\n      >\n      </zyfra-dropdown>\n    </button>\n  </div>\n</zyfra-calendar>\n",
      "templateUrl": [],
      "viewProviders": [],
      "inputsClass": [
        {
          "name": "disabled",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 39,
          "type": "any"
        },
        {
          "name": "label",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 40,
          "type": "any"
        },
        {
          "name": "placeholder",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 37,
          "type": "any"
        },
        {
          "name": "selectedTime",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 41,
          "type": "string"
        },
        {
          "name": "times",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 38,
          "type": "ZyfraTime[]"
        }
      ],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "calendarModel",
          "defaultValue": "'12/22/2021 18:00:00'",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 45,
          "modifierKind": [123]
        },
        {
          "name": "timeModel",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "ZyfraTime",
          "optional": false,
          "description": "",
          "line": 43,
          "modifierKind": [123]
        }
      ],
      "methodsClass": [
        {
          "name": "getDate",
          "args": [],
          "optional": false,
          "returnType": "string",
          "typeParameters": [],
          "line": 56,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [121]
        },
        {
          "name": "ngOnInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 51,
          "deprecated": false,
          "deprecationMessage": ""
        },
        {
          "name": "setInputTime",
          "args": [
            {
              "name": "time",
              "type": "ZyfraTime",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 47,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [123],
          "jsdoctags": [
            {
              "name": "time",
              "type": "ZyfraTime",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        }
      ],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "description": "<p>This component only for example in storybook</p>\n",
      "rawdescription": "\n\nThis component only for example in storybook\n",
      "type": "component",
      "sourceCode": "import { Component, Input, OnInit } from '@angular/core';\r\nimport { ZyfraTime } from '../../model/zyfra-time.model';\r\n\r\n/**\r\n * This component only for example in storybook\r\n */\r\n// eslint-disable-next-line @angular-eslint/prefer-on-push-component-change-detection\r\n@Component({\r\n  selector: 'zyfra-custom-calendar',\r\n  template: `\r\n    <zyfra-calendar\r\n      [placeholder]=\"placeholder\"\r\n      [ngModel]=\"calendarModel\"\r\n      [showTime]=\"true\"\r\n      [showSeconds]=\"true\"\r\n      [label]=\"label\"\r\n    >\r\n      <div buttons-right>\r\n        <button class=\"zyfra-datepicker-control zyfra-datepicker-button\" type=\"button\">\r\n          <zyfra-dropdown\r\n            [options]=\"times\"\r\n            [ngModel]=\"timeModel\"\r\n            [disabled]=\"disabled\"\r\n            (ngModelChange)=\"setInputTime($event)\"\r\n            [panelStyleClass]=\"'zyfra-datepicker-dropdown-overlay'\"\r\n            [styleClass]=\"'zyfra-datepicker-dropdown'\"\r\n            [dropdownIcon]=\"'zyfra-icon date-update'\"\r\n            [optionLabel]=\"'value'\"\r\n          >\r\n          </zyfra-dropdown>\r\n        </button>\r\n      </div>\r\n    </zyfra-calendar>\r\n  `,\r\n})\r\nexport class CustomCalendarComponent implements OnInit {\r\n  @Input() placeholder;\r\n  @Input() times: ZyfraTime[];\r\n  @Input() disabled;\r\n  @Input() label;\r\n  @Input() selectedTime: string;\r\n\r\n  public timeModel: ZyfraTime;\r\n\r\n  public calendarModel: string = '12/22/2021 18:00:00';\r\n\r\n  public setInputTime(time: ZyfraTime): void {\r\n    this.calendarModel = this.getDate() + ' ' + time.value;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.timeModel = this.times.find(t => t.value === this.selectedTime);\r\n    this.calendarModel = this.getDate() + ' ' + this.timeModel.value;\r\n  }\r\n\r\n  private getDate(): string {\r\n    return this.calendarModel.split(' ')[0];\r\n  }\r\n}\r\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "implements": ["OnInit"]
    },
    {
      "name": "ExampleDynamicDialogComponent",
      "id": "component-ExampleDynamicDialogComponent-9479d5936c0efdb0bc9494304e5a66b6",
      "file": "libs/components/src/lib/dynamic-dialog/zyfra-dynamic-dialog.component.stories.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "styleUrls": [],
      "styles": [],
      "template": "<div>\n  user component\n</div>",
      "templateUrl": [],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [],
      "methodsClass": [],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import { Component, Input, OnDestroy } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { moduleMetadata, Story, Meta } from '@storybook/angular';\r\nimport { ZyfraDynamicDialogModule, ZyfraDynamicDialogService, ZyfraDynamicDialogRef, ZyfraDynamicDialogConfig } from '.';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { ZyfraButtonModule } from '../button/zyfra-button.module';\r\n\r\n@Component({\r\n  selector: 'storybook-dynamic-dialog',\r\n  template: `\r\n  <zyfra-button (click)=\"open()\"\r\n                label=\"open dialog\"\r\n                icon=\"pi pi-check\"></zyfra-button>\r\n  `,\r\n  providers: [ZyfraDynamicDialogService]\r\n})\r\nclass ZyfraDynamicDialogComponent implements OnDestroy {\r\n\r\n  @Input() set data(data: unknown) {\r\n    this.options.data = data;\r\n  }\r\n  @Input() set header(header: string) {\r\n    this.options.header = header;\r\n  }\r\n  @Input() set footer(footer: string) {\r\n    this.options.footer = footer;\r\n  }\r\n  @Input() set width(width: string) {\r\n    this.options.width = width;\r\n  }\r\n  @Input() set height(height: string) {\r\n    this.options.height = height;\r\n  }\r\n  @Input() set closeOnEscape(closeOnEscape: boolean) {\r\n    this.options.closeOnEscape = closeOnEscape;\r\n  }\r\n  @Input() set baseZIndex(baseZIndex: number) {\r\n    this.options.baseZIndex = baseZIndex;\r\n  }\r\n  @Input() set autoZIndex(autoZIndex: boolean) {\r\n    this.options.autoZIndex = autoZIndex;\r\n  }\r\n  @Input() set dismissableMask(dismissableMask: boolean) {\r\n    this.options.dismissableMask = dismissableMask;\r\n  }\r\n  @Input() set rtl(rtl: boolean) {\r\n    this.options.rtl = rtl;\r\n  }\r\n  @Input() set style(style: string) {\r\n    this.options.style = style;\r\n  }\r\n  @Input() set contentStyle(contentStyle: string) {\r\n    this.options.contentStyle = contentStyle;\r\n  }\r\n  @Input() set styleClass(styleClass: string) {\r\n    this.options.styleClass = styleClass;\r\n  }\r\n  @Input() set transitionOptions(transitionOptions: string) {\r\n    this.options.transitionOptions = transitionOptions;\r\n  }\r\n  @Input() set closable(closable: boolean) {\r\n    this.options.closable = closable;\r\n  }\r\n  @Input() set showHeader(showHeader: boolean) {\r\n    this.options.showHeader = showHeader;\r\n  }\r\n\r\n  public options: ZyfraDynamicDialogConfig = {};\r\n\r\n  private ref: ZyfraDynamicDialogRef;\r\n\r\n  constructor(private dynamicDialogService: ZyfraDynamicDialogService) { }\r\n\r\n  public open(): void {\r\n    this.ref = this.dynamicDialogService.open(\r\n      ExampleDynamicDialogComponent, this.options\r\n    );\r\n  }\r\n\r\n  public ngOnDestroy(): void {\r\n    if (this.ref) {\r\n      this.ref.close();\r\n    }\r\n  }\r\n}\r\n\r\n@Component({\r\n  template: `\r\n  <div>\r\n    user component\r\n  </div>`\r\n})\r\nclass ExampleDynamicDialogComponent { }\r\n\r\nexport default {\r\n  title: 'Dialogs/DynamicDialog',\r\n  component: ZyfraDynamicDialogComponent,\r\n  decorators: [\r\n    moduleMetadata({\r\n      declarations: [\r\n        ZyfraDynamicDialogComponent,\r\n        ExampleDynamicDialogComponent\r\n      ],\r\n      imports: [\r\n        BrowserModule,\r\n        BrowserAnimationsModule,\r\n        CommonModule,\r\n        ZyfraButtonModule,\r\n        ZyfraDynamicDialogModule\r\n      ],\r\n    })\r\n  ],\r\n  parameters: {\r\n    docs: {\r\n      page: require('./zyfra-dynamic-dialog.story.doc.mdx').default,\r\n    },\r\n  },\r\n} as Meta;\r\n\r\nconst Template: Story<ZyfraDynamicDialogComponent> = (args: ZyfraDynamicDialogComponent) => ({\r\n  component: ZyfraDynamicDialogComponent,\r\n  props: args,\r\n});\r\n\r\n\r\nexport const Simple = Template.bind({});\r\nSimple.args = {\r\n  data: 'Some data',\r\n  header: \"Header\",\r\n  footer: \"Footer\",\r\n  width: \"500px\",\r\n  height: \"200px\",\r\n  closeOnEscape: false,\r\n  baseZIndex: 0,\r\n  autoZIndex: false,\r\n  dismissableMask: false,\r\n  rtl: false,\r\n  style: '',\r\n  contentStyle: '',\r\n  styleClass: '',\r\n  transitionOptions: '400ms cubic-bezier(0.25, 0.8, 0.25, 1)',\r\n  closable: true,\r\n  showHeader: true\r\n};\r\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": ""
    },
    {
      "name": "IconComponents",
      "id": "component-IconComponents-dfc8c9868f017538906f9ffcc0b49363",
      "file": "libs/components/src/lib/icon/zyfra-icon.component.stories.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "styleUrls": [],
      "styles": [
        "\n      :host {\n        font-family: Inter;\n        color: #777B92;\n      }\n\n      h4 {\n        text-transform: capitalize;\n        color: #353E50;\n      }\n\n      .icons {\n        display: flex;\n        flex-wrap: wrap;\n      }\n\n      .icon-def {\n        display: flex;\n        width: 90px;\n        height: 90px;\n        max-width: 90px;\n        flex-direction: column;\n        align-items: center;\n        margin: 4px;\n        padding-top: 8px;\n      }\n\n      .icon-def:hover {\n        background-color: #eeeeee99;\n      }\n\n      .icon {\n        font-size: 24px;\n        width: 24px;\n        height: 24px;\n      }\n\n      .name {\n        font-size: 12px;\n        text-align: center;\n        margin-top: 12px;\n        color: #353E50;\n      }\n    "
      ],
      "template": "<div *ngFor=\"let def of defs\">\n  <h4>{{ def.dir }}</h4>\n\n  <div class=\"icons\">\n    <div *ngFor=\"let name of def.data\" class=\"icon-def\">\n      <zyfra-icon [iconClass]=\"name\" class=\"icon\"></zyfra-icon>\n      <div class=\"name\">{{ name }}</div>\n    </div>\n  </div>\n</div>\n",
      "templateUrl": [],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "defs",
          "defaultValue": "IconDefs",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "optional": false,
          "description": "",
          "line": 71
        }
      ],
      "methodsClass": [],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import { CommonModule } from '@angular/common';\r\nimport { Component } from '@angular/core';\r\nimport { moduleMetadata, Story, Meta } from '@storybook/angular';\r\nimport { ZyfraIconComponent } from './zyfra-icon.component';\r\nimport { IconDefs } from './story/icon-definitions';\r\n\r\n//@ts-ignore\r\nimport doc from './zyfra-icon.component.story.doc.mdx';\r\n\r\n@Component({\r\n  template: `\r\n    <div *ngFor=\"let def of defs\">\r\n      <h4>{{ def.dir }}</h4>\r\n\r\n      <div class=\"icons\">\r\n        <div *ngFor=\"let name of def.data\" class=\"icon-def\">\r\n          <zyfra-icon [iconClass]=\"name\" class=\"icon\"></zyfra-icon>\r\n          <div class=\"name\">{{ name }}</div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  `,\r\n  styles: [\r\n    `\r\n      :host {\r\n        font-family: Inter;\r\n        color: #777B92;\r\n      }\r\n\r\n      h4 {\r\n        text-transform: capitalize;\r\n        color: #353E50;\r\n      }\r\n\r\n      .icons {\r\n        display: flex;\r\n        flex-wrap: wrap;\r\n      }\r\n\r\n      .icon-def {\r\n        display: flex;\r\n        width: 90px;\r\n        height: 90px;\r\n        max-width: 90px;\r\n        flex-direction: column;\r\n        align-items: center;\r\n        margin: 4px;\r\n        padding-top: 8px;\r\n      }\r\n\r\n      .icon-def:hover {\r\n        background-color: #eeeeee99;\r\n      }\r\n\r\n      .icon {\r\n        font-size: 24px;\r\n        width: 24px;\r\n        height: 24px;\r\n      }\r\n\r\n      .name {\r\n        font-size: 12px;\r\n        text-align: center;\r\n        margin-top: 12px;\r\n        color: #353E50;\r\n      }\r\n    `,\r\n  ],\r\n})\r\nclass IconComponents {\r\n  defs = IconDefs;\r\n}\r\n\r\nexport default {\r\n  title: 'Icons/IconComponent',\r\n  component: IconComponents,\r\n  decorators: [\r\n    moduleMetadata({\r\n      imports: [CommonModule],\r\n      declarations: [ZyfraIconComponent],\r\n    }),\r\n  ],\r\n  parameters: {\r\n    docs: {\r\n      page: doc,\r\n    },\r\n  },\r\n} as Meta<ZyfraIconComponent>;\r\n\r\nconst Template: Story<IconComponents> = (args: IconComponents) => ({\r\n  component: IconComponents,\r\n  props: args,\r\n});\r\n\r\nexport const IconsSet = Template.bind({});\r\nIconsSet.args = {};\r\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "\n      :host {\n        font-family: Inter;\n        color: #777B92;\n      }\n\n      h4 {\n        text-transform: capitalize;\n        color: #353E50;\n      }\n\n      .icons {\n        display: flex;\n        flex-wrap: wrap;\n      }\n\n      .icon-def {\n        display: flex;\n        width: 90px;\n        height: 90px;\n        max-width: 90px;\n        flex-direction: column;\n        align-items: center;\n        margin: 4px;\n        padding-top: 8px;\n      }\n\n      .icon-def:hover {\n        background-color: #eeeeee99;\n      }\n\n      .icon {\n        font-size: 24px;\n        width: 24px;\n        height: 24px;\n      }\n\n      .name {\n        font-size: 12px;\n        text-align: center;\n        margin-top: 12px;\n        color: #353E50;\n      }\n    \n"
    },
    {
      "name": "MyToastContainerComponent",
      "id": "component-MyToastContainerComponent-8f9293d126cec86b23c32d3565471dc3",
      "file": "libs/components/src/lib/toast/zyfra-toast.component.stories.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [
        {
          "name": "ToastService"
        }
      ],
      "selector": "toast-container",
      "styleUrls": [],
      "styles": [],
      "template": "<zyfra-button (click)=\"showMessage('myKey0')\" label=\"show config\"></zyfra-button>\n<zyfra-button (click)=\"showMessage()\" label=\"show default toast\"></zyfra-button>\n\n<!--  Default toast  -->\n<zyfra-toast></zyfra-toast>\n\n<!--  Custom toast  -->\n<zyfra-toast\n  [key]=\"'myKey0'\"\n  [position]=\"position\"\n  [showTransitionOptions]=\"showTransitionOptions\"\n  [preventOpenDuplicates]=\"preventOpenDuplicates\"\n  [preventDuplicates]=\"preventDuplicates\"\n  [customTemplate]=\"useCustomTemplate && customTemplate\"\n></zyfra-toast>\n\n<ng-template #customTemplate>\n  <div>\n    <p>content</p>\n    <ul>\n      <li>item 1 (for example)</li>\n      <li><b>item 2</b></li>\n    </ul>\n  </div>\n</ng-template>\n",
      "templateUrl": [],
      "viewProviders": [],
      "inputsClass": [
        {
          "name": "key",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 44,
          "type": "any"
        },
        {
          "name": "position",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 45,
          "type": "any"
        },
        {
          "name": "preventDuplicates",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 48,
          "type": "any"
        },
        {
          "name": "preventOpenDuplicates",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 47,
          "type": "any"
        },
        {
          "name": "showTransitionOptions",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 46,
          "type": "any"
        },
        {
          "name": "useCustomTemplate",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 49,
          "type": "any"
        }
      ],
      "outputsClass": [],
      "propertiesClass": [],
      "methodsClass": [
        {
          "name": "showMessage",
          "args": [
            {
              "name": "key",
              "type": "string",
              "deprecated": false,
              "deprecationMessage": "",
              "optional": true
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 53,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [123],
          "jsdoctags": [
            {
              "name": "key",
              "type": "string",
              "deprecated": false,
              "deprecationMessage": "",
              "optional": true,
              "tagName": {
                "text": "param"
              }
            }
          ]
        }
      ],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import { CommonModule } from '@angular/common';\r\nimport { Component, Input } from '@angular/core';\r\nimport { moduleMetadata } from '@storybook/angular';\r\nimport { Story, Meta } from '@storybook/angular/types-6-0';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { ToastService } from './toast.service';\r\nimport { ZyfraToastComponent } from './zyfra-toast.component';\r\nimport { ZyfraToastModule } from './zyfra-toast.module';\r\nimport { ZyfraButtonModule } from '../button';\r\n\r\n@Component({\r\n  selector: 'toast-container',\r\n  template: `\r\n    <zyfra-button (click)=\"showMessage('myKey0')\" label=\"show config\"></zyfra-button>\r\n    <zyfra-button (click)=\"showMessage()\" label=\"show default toast\"></zyfra-button>\r\n\r\n    <!--  Default toast  -->\r\n    <zyfra-toast></zyfra-toast>\r\n\r\n    <!--  Custom toast  -->\r\n    <zyfra-toast\r\n      [key]=\"'myKey0'\"\r\n      [position]=\"position\"\r\n      [showTransitionOptions]=\"showTransitionOptions\"\r\n      [preventOpenDuplicates]=\"preventOpenDuplicates\"\r\n      [preventDuplicates]=\"preventDuplicates\"\r\n      [customTemplate]=\"useCustomTemplate && customTemplate\"\r\n    ></zyfra-toast>\r\n\r\n    <ng-template #customTemplate>\r\n      <div>\r\n        <p>content</p>\r\n        <ul>\r\n          <li>item 1 (for example)</li>\r\n          <li><b>item 2</b></li>\r\n        </ul>\r\n      </div>\r\n    </ng-template>\r\n  `,\r\n  providers: [ToastService],\r\n})\r\nclass MyToastContainerComponent {\r\n  @Input() key;\r\n  @Input() position;\r\n  @Input() showTransitionOptions;\r\n  @Input() preventOpenDuplicates;\r\n  @Input() preventDuplicates;\r\n  @Input() useCustomTemplate;\r\n\r\n  constructor(private toast: ToastService) {}\r\n\r\n  public showMessage(key?: string) {\r\n    this.toast.add({ key, severity: 'success', summary: 'Summary Text', detail: 'Detail Text' });\r\n  }\r\n}\r\n\r\nexport default {\r\n  moduleId: module.id,\r\n  title: 'Messages/Toast',\r\n  component: MyToastContainerComponent,\r\n  decorators: [\r\n    moduleMetadata({\r\n      imports: [BrowserModule, BrowserAnimationsModule, CommonModule, ZyfraButtonModule, ZyfraToastModule],\r\n    }),\r\n  ],\r\n  parameters: {\r\n    docs: {\r\n      page: require('./zyfra-toast.component.story.doc.mdx').default,\r\n    },\r\n  },\r\n} as Meta;\r\n\r\nconst Template: Story<ZyfraToastComponent> = args => ({\r\n  template: `\r\n  <toast-container\r\n  [key]=\"key\"\r\n  [position]=\"position\"\r\n  [showTransitionOptions]=\"showTransitionOptions\"\r\n  [preventOpenDuplicates]=\"preventOpenDuplicates\"\r\n  [preventDuplicates]=\"preventDuplicates\"\r\n  [useCustomTemplate]=\"useCustomTemplate\"\r\n  ></toast-container>\r\n  `,\r\n  props: {\r\n    ...args,\r\n  },\r\n});\r\n\r\nexport const Simple = Template.bind({});\r\nSimple.args = {\r\n  position: 'bottom-center',\r\n  severity: 'success',\r\n  summary: 'Info',\r\n  detail: 'Message Content',\r\n  preventDuplicates: false,\r\n  preventOpenDuplicates: false,\r\n  life: 30000,\r\n};\r\n\r\nexport const NoIcons = Template.bind({});\r\nNoIcons.args = {\r\n  position: 'bottom-center',\r\n  closable: false,\r\n  detail: 'Message Content',\r\n  life: 3000,\r\n};\r\n\r\nexport const Animation = Template.bind({});\r\nAnimation.args = {\r\n  position: 'bottom-center',\r\n  detail: 'for Animation',\r\n  life: 3000,\r\n  showTransitionOptions: '3000ms ease-out',\r\n  hideTransitionOptions: '3000ms ease-in',\r\n};\r\n\r\nexport const CustomTemplate = Template.bind({});\r\nCustomTemplate.args = {\r\n  useCustomTemplate: true,\r\n  position: 'bottom-center',\r\n  severity: 'success',\r\n  summary: 'Info',\r\n  detail: 'Message Content',\r\n  life: 3000,\r\n  closable: true,\r\n};\r\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "deprecated": false,
        "deprecationMessage": "",
        "args": [
          {
            "name": "toast",
            "type": "ToastService",
            "deprecated": false,
            "deprecationMessage": ""
          }
        ],
        "line": 49,
        "jsdoctags": [
          {
            "name": "toast",
            "type": "ToastService",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          }
        ]
      }
    },
    {
      "name": "Page1Component",
      "id": "component-Page1Component-97c94fdb80f84db764764ab63ac35cbb",
      "file": "libs/components/src/lib/nav-menu/zyfra-nav-menu.component.stories.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "styleUrls": [],
      "styles": [],
      "template": "Страница 1",
      "templateUrl": [],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [],
      "methodsClass": [],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode": "import { moduleMetadata, Story, Meta } from '@storybook/angular';\r\nimport { ZyfraNavMenuComponent } from './components/zyfra-nav-menu/zyfra-nav-menu.component';\r\nimport { ZyfraNavMenuModule } from './zyfra-nav-menu.module';\r\nimport { action } from '@storybook/addon-actions';\r\nimport { ZyfraSplitterModule } from '../splitter';\r\nimport { APP_BASE_HREF } from '@angular/common';\r\nimport { basic, basicWithIcons, subItems, subItemsRubricator } from './dataForStories';\r\nimport { BadgeModule } from 'primeng/badge';\r\nimport { NavigationEnd, Router, RouterModule, Routes } from '@angular/router';\r\nimport {\r\n  AfterViewInit,\r\n  Component,\r\n  ContentChild,\r\n  OnDestroy,\r\n  TemplateRef,\r\n} from '@angular/core';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { filter, take, takeUntil } from 'rxjs/operators';\r\nimport { Subject } from 'rxjs';\r\nimport { ZyfraTemplateModule, ZyfraTemplateDirective } from '../@core/shared/zyfra-template.module';\r\n\r\n@Component({ template: 'Страница 1' })\r\nclass Page1Component {}\r\n\r\n@Component({ template: 'Страница 2' })\r\nclass Page2Component {}\r\n\r\n@Component({ template: 'Страница 3' })\r\nclass Page3Component {}\r\n\r\n@Component({\r\n  selector: 'wrapper',\r\n  template: '<ng-container *ngTemplateOutlet=\"tmpl\"></ng-container>'\r\n})\r\n\r\nclass WrapperComponent implements AfterViewInit, OnDestroy {\r\n  @ContentChild(ZyfraTemplateDirective) template: ZyfraTemplateDirective;\r\n  tmpl: TemplateRef<any>;\r\n\r\n  private destroyed$ = new Subject<void>();\r\n\r\n  constructor(private router: Router) { }\r\n\r\n  ngAfterViewInit(): void {\r\n    this.router.events\r\n      .pipe(\r\n        filter(event => event instanceof NavigationEnd),\r\n        take(1),\r\n        takeUntil(this.destroyed$)\r\n      )\r\n      .subscribe(() => this.tmpl = this.template.templateRef);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.destroyed$.next();\r\n    this.destroyed$.complete();\r\n  }\r\n}\r\n\r\nconst routes: Routes = [\r\n  { path: 'page1', component: Page1Component },\r\n  { path: 'page2', component: Page2Component },\r\n  { path: 'page3', component: Page3Component }\r\n];\r\n\r\nexport default {\r\n  title: 'Menu/NavMenu',\r\n  component: ZyfraNavMenuComponent,\r\n  decorators: [\r\n    moduleMetadata({\r\n      declarations: [\r\n        Page1Component,\r\n        Page2Component,\r\n        Page3Component,\r\n        WrapperComponent\r\n      ],\r\n      imports: [\r\n        BrowserAnimationsModule,\r\n        ZyfraNavMenuModule,\r\n        ZyfraSplitterModule,\r\n        ZyfraTemplateModule,\r\n        BadgeModule,\r\n        RouterModule.forRoot(routes, { useHash: true })\r\n      ],\r\n      providers: [{ provide: APP_BASE_HREF, useValue: '/' }]\r\n    })\r\n  ],\r\n  parameters: {\r\n    docs: {\r\n      page: require('./zyfra-nav-menu.component.story.doc.mdx').default,\r\n    },\r\n  },\r\n} as Meta<ZyfraNavMenuComponent>;\r\n\r\nconst actions = {\r\n  activeItemChange: action('activeItemChange'),\r\n  homeClick: action('homeClick'),\r\n  selectionChange: action('selectionChange'),\r\n  nodeCollapse: action('nodeCollapse'),\r\n  nodeExpand: action('nodeExpand'),\r\n};\r\n\r\nconst BasicTemplate: Story = (args) => ({\r\n  template:\r\n      `<wrapper>\r\n          <ng-template zyfraTemplate>\r\n              <zyfra-splitter layout=\"horizontal\" [panelSizes]=\"[25,75]\" [style]=\"{ height: '600px' }\">\r\n                  <ng-template zyfraSplitterTemplate>\r\n                      <zyfra-nav-menu [model]=\"model\"\r\n                                      [menuTitle]=\"menuTitle\"\r\n                                      [headerConfig]=\"headerConfig\"\r\n                                      [settingsConfig]=\"settingsConfig\"\r\n                                      [toolbarConfig]=\"toolbarConfig\"\r\n                                      [emptyMessage]=\"emptyMessage\"\r\n                                      (activeItemChange)=\"activeItemChange($event)\"\r\n                                      (selectionChange)=\"selectionChange($event)\"\r\n                                      (homeClick)=\"homeClick($event)\"\r\n                                      (nodeExpand)=\"nodeExpand($event)\"\r\n                                      (nodeCollapse)=\"nodeCollapse($event)\">\r\n                    </zyfra-nav-menu>\r\n                  </ng-template>\r\n                  <ng-template zyfraSplitterTemplate>\r\n                      <router-outlet></router-outlet>\r\n                  </ng-template>\r\n              </zyfra-splitter>\r\n          </ng-template>\r\n      </wrapper>`,\r\n  props: {\r\n    ...args,\r\n    ...actions\r\n  },\r\n});\r\n\r\nexport const Basic = BasicTemplate.bind({});\r\nBasic.args = {\r\n  model: [...basic],\r\n  menuTitle: 'Наименование приложения'\r\n};\r\n\r\nexport const BasicWithIcons = BasicTemplate.bind({});\r\nBasicWithIcons.args = {\r\n  model: [...basicWithIcons],\r\n  menuTitle: 'Наименование приложения',\r\n  headerConfig: {\r\n    home: true\r\n  }\r\n};\r\n\r\nexport const SubItems = BasicTemplate.bind({});\r\nSubItems.args = {\r\n  model: [...subItems],\r\n  menuTitle: 'Наименование приложения',\r\n  headerConfig: {\r\n    home: true\r\n  }\r\n};\r\n\r\nexport const EnlargedSize = BasicTemplate.bind({});\r\nEnlargedSize.args = {\r\n  model: [...subItems],\r\n  menuTitle: 'Наименование приложения',\r\n  headerConfig: {\r\n    home: true\r\n  },\r\n  settingsConfig: {\r\n    selectedSize: 'enlarged'\r\n  },\r\n};\r\n\r\nconst ExtraItemTemplate: Story = (args) => ({\r\n  template:\r\n      `<wrapper>\r\n          <ng-template zyfraTemplate>\r\n              <zyfra-splitter layout=\"horizontal\" [panelSizes]=\"[25,75]\" [style]=\"{ height: '600px' }\">\r\n                  <ng-template zyfraSplitterTemplate>\r\n                      <zyfra-nav-menu [model]=\"model\"\r\n                                      [menuTitle]=\"menuTitle\"\r\n                                      [emptyMessage]=\"emptyMessage\"\r\n                                      [headerConfig]=\"headerConfig\"\r\n                                      [settingsConfig]=\"settingsConfig\"\r\n                                      [toolbarConfig]=\"toolbarConfig\"\r\n                                      (activeItemChange)=\"activeItemChange($event)\"\r\n                                      (selectionChange)=\"selectionChange($event)\"\r\n                                      (homeClick)=\"homeClick($event)\"\r\n                                      (nodeExpand)=\"nodeExpand($event)\"\r\n                                      (nodeCollapse)=\"nodeCollapse($event)\">\r\n\r\n                           <ng-template let-item zyfraTemplate='menuitem'>\r\n                                  <p-badge *ngIf=\"item?.badge\" styleClass=\"p-badge-dot\" [severity]=\"item.badge\"></p-badge>\r\n                          </ng-template>\r\n\r\n                          <ng-template zyfraTemplate='toolbar'>\r\n                              <i class=\"toolbar-button zyfra-icon files-upload\"></i>\r\n                              <i class=\"toolbar-button zyfra-icon files-download\"></i>\r\n                          </ng-template>\r\n\r\n                          <ng-template zyfraTemplate='header'>\r\n                              <i class=\"toolbar-button zyfra-icon charts-pie\"></i>\r\n                          </ng-template>\r\n                    </zyfra-nav-menu>\r\n                  </ng-template>\r\n                  <ng-template zyfraSplitterTemplate>\r\n                      <router-outlet></router-outlet>\r\n                  </ng-template>\r\n              </zyfra-splitter>\r\n          </ng-template>\r\n      </wrapper>`,\r\n  props: {\r\n    ...args,\r\n    ...actions\r\n  },\r\n});\r\n\r\nexport const ExtraTemplates = ExtraItemTemplate.bind({});\r\nExtraTemplates.args = {\r\n  model: [...subItems],\r\n  menuTitle: 'Наименование приложения'\r\n};\r\n\r\nexport const MultipleSelection = BasicTemplate.bind({});\r\nMultipleSelection.args = {\r\n  model: [...subItems],\r\n  menuTitle: 'Наименование приложения',\r\n  headerConfig: {\r\n    home: true\r\n  },\r\n  settingsConfig: {\r\n    selectionMode: 'checkbox'\r\n  }\r\n};\r\n\r\nexport const Search = BasicTemplate.bind({});\r\nSearch.args = {\r\n  model: [...subItems],\r\n  menuTitle: 'Наименование приложения',\r\n  searchPlaceholder: 'Введите текст',\r\n  emptyMessage: '<Нет данных для отображения>',\r\n  headerConfig: {\r\n    home: true\r\n  },\r\n  toolbarConfig: {\r\n    search: true,\r\n    closeAll: true\r\n  }\r\n};\r\n\r\nexport const FolderMode = BasicTemplate.bind({});\r\nFolderMode.args = {\r\n  model: [...subItems],\r\n  menuTitle: 'Наименование приложения',\r\n  searchPlaceholder: 'Введите текст',\r\n  headerConfig: {\r\n    home: true\r\n  },\r\n  toolbarConfig: {\r\n    filesMode: true,\r\n    search: true,\r\n    closeAll: true\r\n  }\r\n};\r\n\r\nexport const RubricatorMode = BasicTemplate.bind({});\r\nRubricatorMode.args = {\r\n  model: [...subItemsRubricator],\r\n  menuTitle: 'Наименование приложения',\r\n  searchPlaceholder: 'Введите текст',\r\n  headerConfig: {\r\n    home: true\r\n  },\r\n  toolbarConfig: {\r\n    filesMode: true,\r\n    rubricatorMode: true,\r\n    search: true\r\n  }\r\n};\r\n\r\nconst GroupPanelTemplate: Story = (args) => ({\r\n  template:\r\n      `<wrapper>\r\n          <ng-template zyfraTemplate>\r\n              <zyfra-splitter layout=\"horizontal\" [panelSizes]=\"[25,75]\" [style]=\"{ height: '600px' }\">\r\n                  <ng-template zyfraSplitterTemplate>\r\n                      <zyfra-nav-menu [menuTitle]=\"menuTitle\"\r\n                                      [emptyMessage]=\"emptyMessage\"\r\n                                      [headerConfig]=\"headerConfig\"\r\n                                      [settingsConfig]=\"settingsConfig\"\r\n                                      [toolbarConfig]=\"toolbarConfig\"\r\n                                      [searchPlaceholder]=\"searchPlaceholder\"\r\n                                      (homeClick)=\"homeClick($event)\"\r\n                                      (activeItemChange)=\"activeItemChange($event)\"\r\n                                      (nodeCollapse)=\"nodeCollapse($event)\"\r\n                                      (nodeExpand)=\"nodeExpand($event)\"\r\n                                      (selectionChange)=\"selectionChange($event)\">\r\n                      <ng-template zyfraNavMenuGroup\r\n                                   [header]=\"header1\"\r\n                                   [items]=\"items1\"></ng-template>\r\n\r\n                      <ng-template zyfraNavMenuGroup\r\n                                   [header]=\"header2\"\r\n                                   [items]=\"items2\"></ng-template>\r\n\r\n                      <ng-template zyfraNavMenuGroup\r\n                                   [header]=\"header3\"\r\n                                   [items]=\"items3\"></ng-template>\r\n                      </zyfra-nav-menu>\r\n                  </ng-template>\r\n                  <ng-template zyfraSplitterTemplate>\r\n                      <router-outlet></router-outlet>\r\n                  </ng-template>\r\n              </zyfra-splitter>\r\n          </ng-template>\r\n      </wrapper>`,\r\n  props: {\r\n    ...args,\r\n    ...actions\r\n  },\r\n});\r\n\r\nexport const GroupPanels = GroupPanelTemplate.bind({});\r\nGroupPanels.args = {\r\n  header1: 'Групповая панель 1',\r\n  header2: 'Групповая панель 2',\r\n  header3: 'Групповая панель 3',\r\n  items1: [ ...subItems],\r\n  items2: [...basicWithIcons],\r\n  items3: [...basic],\r\n  menuTitle: 'Наименование приложения',\r\n  searchPlaceholder: 'Введите текст',\r\n  headerConfig: {\r\n    home: true\r\n  },\r\n  toolbarConfig: {\r\n    filesMode: true,\r\n    search: true\r\n  }\r\n};\r\n\r\nexport const SingleGroupPanel = GroupPanelTemplate.bind({});\r\nSingleGroupPanel.args = {\r\n  header1: 'Групповая панель 1',\r\n  header2: 'Групповая панель 2',\r\n  header3: 'Групповая панель 3',\r\n  items1: [...subItems],\r\n  items2: [...basicWithIcons],\r\n  items3: [...basic],\r\n  menuTitle: 'Наименование приложения',\r\n  searchPlaceholder: 'Введите текст',\r\n  headerConfig: {\r\n    home: true\r\n  },\r\n  settingsConfig: {\r\n    selectionMode: 'checkbox',\r\n    singleGroup: true,\r\n  },\r\n  toolbarConfig: {\r\n    filesMode: true,\r\n    search: true\r\n  }\r\n};\r\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": ""
    },
    {
      "name": "Page2Component",
      "id": "component-Page2Component-97c94fdb80f84db764764ab63ac35cbb",
      "file": "libs/components/src/lib/nav-menu/zyfra-nav-menu.component.stories.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "styleUrls": [],
      "styles": [],
      "template": "Страница 2",
      "templateUrl": [],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [],
      "methodsClass": [],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode": "import { moduleMetadata, Story, Meta } from '@storybook/angular';\r\nimport { ZyfraNavMenuComponent } from './components/zyfra-nav-menu/zyfra-nav-menu.component';\r\nimport { ZyfraNavMenuModule } from './zyfra-nav-menu.module';\r\nimport { action } from '@storybook/addon-actions';\r\nimport { ZyfraSplitterModule } from '../splitter';\r\nimport { APP_BASE_HREF } from '@angular/common';\r\nimport { basic, basicWithIcons, subItems, subItemsRubricator } from './dataForStories';\r\nimport { BadgeModule } from 'primeng/badge';\r\nimport { NavigationEnd, Router, RouterModule, Routes } from '@angular/router';\r\nimport {\r\n  AfterViewInit,\r\n  Component,\r\n  ContentChild,\r\n  OnDestroy,\r\n  TemplateRef,\r\n} from '@angular/core';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { filter, take, takeUntil } from 'rxjs/operators';\r\nimport { Subject } from 'rxjs';\r\nimport { ZyfraTemplateModule, ZyfraTemplateDirective } from '../@core/shared/zyfra-template.module';\r\n\r\n@Component({ template: 'Страница 1' })\r\nclass Page1Component {}\r\n\r\n@Component({ template: 'Страница 2' })\r\nclass Page2Component {}\r\n\r\n@Component({ template: 'Страница 3' })\r\nclass Page3Component {}\r\n\r\n@Component({\r\n  selector: 'wrapper',\r\n  template: '<ng-container *ngTemplateOutlet=\"tmpl\"></ng-container>'\r\n})\r\n\r\nclass WrapperComponent implements AfterViewInit, OnDestroy {\r\n  @ContentChild(ZyfraTemplateDirective) template: ZyfraTemplateDirective;\r\n  tmpl: TemplateRef<any>;\r\n\r\n  private destroyed$ = new Subject<void>();\r\n\r\n  constructor(private router: Router) { }\r\n\r\n  ngAfterViewInit(): void {\r\n    this.router.events\r\n      .pipe(\r\n        filter(event => event instanceof NavigationEnd),\r\n        take(1),\r\n        takeUntil(this.destroyed$)\r\n      )\r\n      .subscribe(() => this.tmpl = this.template.templateRef);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.destroyed$.next();\r\n    this.destroyed$.complete();\r\n  }\r\n}\r\n\r\nconst routes: Routes = [\r\n  { path: 'page1', component: Page1Component },\r\n  { path: 'page2', component: Page2Component },\r\n  { path: 'page3', component: Page3Component }\r\n];\r\n\r\nexport default {\r\n  title: 'Menu/NavMenu',\r\n  component: ZyfraNavMenuComponent,\r\n  decorators: [\r\n    moduleMetadata({\r\n      declarations: [\r\n        Page1Component,\r\n        Page2Component,\r\n        Page3Component,\r\n        WrapperComponent\r\n      ],\r\n      imports: [\r\n        BrowserAnimationsModule,\r\n        ZyfraNavMenuModule,\r\n        ZyfraSplitterModule,\r\n        ZyfraTemplateModule,\r\n        BadgeModule,\r\n        RouterModule.forRoot(routes, { useHash: true })\r\n      ],\r\n      providers: [{ provide: APP_BASE_HREF, useValue: '/' }]\r\n    })\r\n  ],\r\n  parameters: {\r\n    docs: {\r\n      page: require('./zyfra-nav-menu.component.story.doc.mdx').default,\r\n    },\r\n  },\r\n} as Meta<ZyfraNavMenuComponent>;\r\n\r\nconst actions = {\r\n  activeItemChange: action('activeItemChange'),\r\n  homeClick: action('homeClick'),\r\n  selectionChange: action('selectionChange'),\r\n  nodeCollapse: action('nodeCollapse'),\r\n  nodeExpand: action('nodeExpand'),\r\n};\r\n\r\nconst BasicTemplate: Story = (args) => ({\r\n  template:\r\n      `<wrapper>\r\n          <ng-template zyfraTemplate>\r\n              <zyfra-splitter layout=\"horizontal\" [panelSizes]=\"[25,75]\" [style]=\"{ height: '600px' }\">\r\n                  <ng-template zyfraSplitterTemplate>\r\n                      <zyfra-nav-menu [model]=\"model\"\r\n                                      [menuTitle]=\"menuTitle\"\r\n                                      [headerConfig]=\"headerConfig\"\r\n                                      [settingsConfig]=\"settingsConfig\"\r\n                                      [toolbarConfig]=\"toolbarConfig\"\r\n                                      [emptyMessage]=\"emptyMessage\"\r\n                                      (activeItemChange)=\"activeItemChange($event)\"\r\n                                      (selectionChange)=\"selectionChange($event)\"\r\n                                      (homeClick)=\"homeClick($event)\"\r\n                                      (nodeExpand)=\"nodeExpand($event)\"\r\n                                      (nodeCollapse)=\"nodeCollapse($event)\">\r\n                    </zyfra-nav-menu>\r\n                  </ng-template>\r\n                  <ng-template zyfraSplitterTemplate>\r\n                      <router-outlet></router-outlet>\r\n                  </ng-template>\r\n              </zyfra-splitter>\r\n          </ng-template>\r\n      </wrapper>`,\r\n  props: {\r\n    ...args,\r\n    ...actions\r\n  },\r\n});\r\n\r\nexport const Basic = BasicTemplate.bind({});\r\nBasic.args = {\r\n  model: [...basic],\r\n  menuTitle: 'Наименование приложения'\r\n};\r\n\r\nexport const BasicWithIcons = BasicTemplate.bind({});\r\nBasicWithIcons.args = {\r\n  model: [...basicWithIcons],\r\n  menuTitle: 'Наименование приложения',\r\n  headerConfig: {\r\n    home: true\r\n  }\r\n};\r\n\r\nexport const SubItems = BasicTemplate.bind({});\r\nSubItems.args = {\r\n  model: [...subItems],\r\n  menuTitle: 'Наименование приложения',\r\n  headerConfig: {\r\n    home: true\r\n  }\r\n};\r\n\r\nexport const EnlargedSize = BasicTemplate.bind({});\r\nEnlargedSize.args = {\r\n  model: [...subItems],\r\n  menuTitle: 'Наименование приложения',\r\n  headerConfig: {\r\n    home: true\r\n  },\r\n  settingsConfig: {\r\n    selectedSize: 'enlarged'\r\n  },\r\n};\r\n\r\nconst ExtraItemTemplate: Story = (args) => ({\r\n  template:\r\n      `<wrapper>\r\n          <ng-template zyfraTemplate>\r\n              <zyfra-splitter layout=\"horizontal\" [panelSizes]=\"[25,75]\" [style]=\"{ height: '600px' }\">\r\n                  <ng-template zyfraSplitterTemplate>\r\n                      <zyfra-nav-menu [model]=\"model\"\r\n                                      [menuTitle]=\"menuTitle\"\r\n                                      [emptyMessage]=\"emptyMessage\"\r\n                                      [headerConfig]=\"headerConfig\"\r\n                                      [settingsConfig]=\"settingsConfig\"\r\n                                      [toolbarConfig]=\"toolbarConfig\"\r\n                                      (activeItemChange)=\"activeItemChange($event)\"\r\n                                      (selectionChange)=\"selectionChange($event)\"\r\n                                      (homeClick)=\"homeClick($event)\"\r\n                                      (nodeExpand)=\"nodeExpand($event)\"\r\n                                      (nodeCollapse)=\"nodeCollapse($event)\">\r\n\r\n                           <ng-template let-item zyfraTemplate='menuitem'>\r\n                                  <p-badge *ngIf=\"item?.badge\" styleClass=\"p-badge-dot\" [severity]=\"item.badge\"></p-badge>\r\n                          </ng-template>\r\n\r\n                          <ng-template zyfraTemplate='toolbar'>\r\n                              <i class=\"toolbar-button zyfra-icon files-upload\"></i>\r\n                              <i class=\"toolbar-button zyfra-icon files-download\"></i>\r\n                          </ng-template>\r\n\r\n                          <ng-template zyfraTemplate='header'>\r\n                              <i class=\"toolbar-button zyfra-icon charts-pie\"></i>\r\n                          </ng-template>\r\n                    </zyfra-nav-menu>\r\n                  </ng-template>\r\n                  <ng-template zyfraSplitterTemplate>\r\n                      <router-outlet></router-outlet>\r\n                  </ng-template>\r\n              </zyfra-splitter>\r\n          </ng-template>\r\n      </wrapper>`,\r\n  props: {\r\n    ...args,\r\n    ...actions\r\n  },\r\n});\r\n\r\nexport const ExtraTemplates = ExtraItemTemplate.bind({});\r\nExtraTemplates.args = {\r\n  model: [...subItems],\r\n  menuTitle: 'Наименование приложения'\r\n};\r\n\r\nexport const MultipleSelection = BasicTemplate.bind({});\r\nMultipleSelection.args = {\r\n  model: [...subItems],\r\n  menuTitle: 'Наименование приложения',\r\n  headerConfig: {\r\n    home: true\r\n  },\r\n  settingsConfig: {\r\n    selectionMode: 'checkbox'\r\n  }\r\n};\r\n\r\nexport const Search = BasicTemplate.bind({});\r\nSearch.args = {\r\n  model: [...subItems],\r\n  menuTitle: 'Наименование приложения',\r\n  searchPlaceholder: 'Введите текст',\r\n  emptyMessage: '<Нет данных для отображения>',\r\n  headerConfig: {\r\n    home: true\r\n  },\r\n  toolbarConfig: {\r\n    search: true,\r\n    closeAll: true\r\n  }\r\n};\r\n\r\nexport const FolderMode = BasicTemplate.bind({});\r\nFolderMode.args = {\r\n  model: [...subItems],\r\n  menuTitle: 'Наименование приложения',\r\n  searchPlaceholder: 'Введите текст',\r\n  headerConfig: {\r\n    home: true\r\n  },\r\n  toolbarConfig: {\r\n    filesMode: true,\r\n    search: true,\r\n    closeAll: true\r\n  }\r\n};\r\n\r\nexport const RubricatorMode = BasicTemplate.bind({});\r\nRubricatorMode.args = {\r\n  model: [...subItemsRubricator],\r\n  menuTitle: 'Наименование приложения',\r\n  searchPlaceholder: 'Введите текст',\r\n  headerConfig: {\r\n    home: true\r\n  },\r\n  toolbarConfig: {\r\n    filesMode: true,\r\n    rubricatorMode: true,\r\n    search: true\r\n  }\r\n};\r\n\r\nconst GroupPanelTemplate: Story = (args) => ({\r\n  template:\r\n      `<wrapper>\r\n          <ng-template zyfraTemplate>\r\n              <zyfra-splitter layout=\"horizontal\" [panelSizes]=\"[25,75]\" [style]=\"{ height: '600px' }\">\r\n                  <ng-template zyfraSplitterTemplate>\r\n                      <zyfra-nav-menu [menuTitle]=\"menuTitle\"\r\n                                      [emptyMessage]=\"emptyMessage\"\r\n                                      [headerConfig]=\"headerConfig\"\r\n                                      [settingsConfig]=\"settingsConfig\"\r\n                                      [toolbarConfig]=\"toolbarConfig\"\r\n                                      [searchPlaceholder]=\"searchPlaceholder\"\r\n                                      (homeClick)=\"homeClick($event)\"\r\n                                      (activeItemChange)=\"activeItemChange($event)\"\r\n                                      (nodeCollapse)=\"nodeCollapse($event)\"\r\n                                      (nodeExpand)=\"nodeExpand($event)\"\r\n                                      (selectionChange)=\"selectionChange($event)\">\r\n                      <ng-template zyfraNavMenuGroup\r\n                                   [header]=\"header1\"\r\n                                   [items]=\"items1\"></ng-template>\r\n\r\n                      <ng-template zyfraNavMenuGroup\r\n                                   [header]=\"header2\"\r\n                                   [items]=\"items2\"></ng-template>\r\n\r\n                      <ng-template zyfraNavMenuGroup\r\n                                   [header]=\"header3\"\r\n                                   [items]=\"items3\"></ng-template>\r\n                      </zyfra-nav-menu>\r\n                  </ng-template>\r\n                  <ng-template zyfraSplitterTemplate>\r\n                      <router-outlet></router-outlet>\r\n                  </ng-template>\r\n              </zyfra-splitter>\r\n          </ng-template>\r\n      </wrapper>`,\r\n  props: {\r\n    ...args,\r\n    ...actions\r\n  },\r\n});\r\n\r\nexport const GroupPanels = GroupPanelTemplate.bind({});\r\nGroupPanels.args = {\r\n  header1: 'Групповая панель 1',\r\n  header2: 'Групповая панель 2',\r\n  header3: 'Групповая панель 3',\r\n  items1: [ ...subItems],\r\n  items2: [...basicWithIcons],\r\n  items3: [...basic],\r\n  menuTitle: 'Наименование приложения',\r\n  searchPlaceholder: 'Введите текст',\r\n  headerConfig: {\r\n    home: true\r\n  },\r\n  toolbarConfig: {\r\n    filesMode: true,\r\n    search: true\r\n  }\r\n};\r\n\r\nexport const SingleGroupPanel = GroupPanelTemplate.bind({});\r\nSingleGroupPanel.args = {\r\n  header1: 'Групповая панель 1',\r\n  header2: 'Групповая панель 2',\r\n  header3: 'Групповая панель 3',\r\n  items1: [...subItems],\r\n  items2: [...basicWithIcons],\r\n  items3: [...basic],\r\n  menuTitle: 'Наименование приложения',\r\n  searchPlaceholder: 'Введите текст',\r\n  headerConfig: {\r\n    home: true\r\n  },\r\n  settingsConfig: {\r\n    selectionMode: 'checkbox',\r\n    singleGroup: true,\r\n  },\r\n  toolbarConfig: {\r\n    filesMode: true,\r\n    search: true\r\n  }\r\n};\r\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": ""
    },
    {
      "name": "Page3Component",
      "id": "component-Page3Component-97c94fdb80f84db764764ab63ac35cbb",
      "file": "libs/components/src/lib/nav-menu/zyfra-nav-menu.component.stories.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "styleUrls": [],
      "styles": [],
      "template": "Страница 3",
      "templateUrl": [],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [],
      "methodsClass": [],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode": "import { moduleMetadata, Story, Meta } from '@storybook/angular';\r\nimport { ZyfraNavMenuComponent } from './components/zyfra-nav-menu/zyfra-nav-menu.component';\r\nimport { ZyfraNavMenuModule } from './zyfra-nav-menu.module';\r\nimport { action } from '@storybook/addon-actions';\r\nimport { ZyfraSplitterModule } from '../splitter';\r\nimport { APP_BASE_HREF } from '@angular/common';\r\nimport { basic, basicWithIcons, subItems, subItemsRubricator } from './dataForStories';\r\nimport { BadgeModule } from 'primeng/badge';\r\nimport { NavigationEnd, Router, RouterModule, Routes } from '@angular/router';\r\nimport {\r\n  AfterViewInit,\r\n  Component,\r\n  ContentChild,\r\n  OnDestroy,\r\n  TemplateRef,\r\n} from '@angular/core';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { filter, take, takeUntil } from 'rxjs/operators';\r\nimport { Subject } from 'rxjs';\r\nimport { ZyfraTemplateModule, ZyfraTemplateDirective } from '../@core/shared/zyfra-template.module';\r\n\r\n@Component({ template: 'Страница 1' })\r\nclass Page1Component {}\r\n\r\n@Component({ template: 'Страница 2' })\r\nclass Page2Component {}\r\n\r\n@Component({ template: 'Страница 3' })\r\nclass Page3Component {}\r\n\r\n@Component({\r\n  selector: 'wrapper',\r\n  template: '<ng-container *ngTemplateOutlet=\"tmpl\"></ng-container>'\r\n})\r\n\r\nclass WrapperComponent implements AfterViewInit, OnDestroy {\r\n  @ContentChild(ZyfraTemplateDirective) template: ZyfraTemplateDirective;\r\n  tmpl: TemplateRef<any>;\r\n\r\n  private destroyed$ = new Subject<void>();\r\n\r\n  constructor(private router: Router) { }\r\n\r\n  ngAfterViewInit(): void {\r\n    this.router.events\r\n      .pipe(\r\n        filter(event => event instanceof NavigationEnd),\r\n        take(1),\r\n        takeUntil(this.destroyed$)\r\n      )\r\n      .subscribe(() => this.tmpl = this.template.templateRef);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.destroyed$.next();\r\n    this.destroyed$.complete();\r\n  }\r\n}\r\n\r\nconst routes: Routes = [\r\n  { path: 'page1', component: Page1Component },\r\n  { path: 'page2', component: Page2Component },\r\n  { path: 'page3', component: Page3Component }\r\n];\r\n\r\nexport default {\r\n  title: 'Menu/NavMenu',\r\n  component: ZyfraNavMenuComponent,\r\n  decorators: [\r\n    moduleMetadata({\r\n      declarations: [\r\n        Page1Component,\r\n        Page2Component,\r\n        Page3Component,\r\n        WrapperComponent\r\n      ],\r\n      imports: [\r\n        BrowserAnimationsModule,\r\n        ZyfraNavMenuModule,\r\n        ZyfraSplitterModule,\r\n        ZyfraTemplateModule,\r\n        BadgeModule,\r\n        RouterModule.forRoot(routes, { useHash: true })\r\n      ],\r\n      providers: [{ provide: APP_BASE_HREF, useValue: '/' }]\r\n    })\r\n  ],\r\n  parameters: {\r\n    docs: {\r\n      page: require('./zyfra-nav-menu.component.story.doc.mdx').default,\r\n    },\r\n  },\r\n} as Meta<ZyfraNavMenuComponent>;\r\n\r\nconst actions = {\r\n  activeItemChange: action('activeItemChange'),\r\n  homeClick: action('homeClick'),\r\n  selectionChange: action('selectionChange'),\r\n  nodeCollapse: action('nodeCollapse'),\r\n  nodeExpand: action('nodeExpand'),\r\n};\r\n\r\nconst BasicTemplate: Story = (args) => ({\r\n  template:\r\n      `<wrapper>\r\n          <ng-template zyfraTemplate>\r\n              <zyfra-splitter layout=\"horizontal\" [panelSizes]=\"[25,75]\" [style]=\"{ height: '600px' }\">\r\n                  <ng-template zyfraSplitterTemplate>\r\n                      <zyfra-nav-menu [model]=\"model\"\r\n                                      [menuTitle]=\"menuTitle\"\r\n                                      [headerConfig]=\"headerConfig\"\r\n                                      [settingsConfig]=\"settingsConfig\"\r\n                                      [toolbarConfig]=\"toolbarConfig\"\r\n                                      [emptyMessage]=\"emptyMessage\"\r\n                                      (activeItemChange)=\"activeItemChange($event)\"\r\n                                      (selectionChange)=\"selectionChange($event)\"\r\n                                      (homeClick)=\"homeClick($event)\"\r\n                                      (nodeExpand)=\"nodeExpand($event)\"\r\n                                      (nodeCollapse)=\"nodeCollapse($event)\">\r\n                    </zyfra-nav-menu>\r\n                  </ng-template>\r\n                  <ng-template zyfraSplitterTemplate>\r\n                      <router-outlet></router-outlet>\r\n                  </ng-template>\r\n              </zyfra-splitter>\r\n          </ng-template>\r\n      </wrapper>`,\r\n  props: {\r\n    ...args,\r\n    ...actions\r\n  },\r\n});\r\n\r\nexport const Basic = BasicTemplate.bind({});\r\nBasic.args = {\r\n  model: [...basic],\r\n  menuTitle: 'Наименование приложения'\r\n};\r\n\r\nexport const BasicWithIcons = BasicTemplate.bind({});\r\nBasicWithIcons.args = {\r\n  model: [...basicWithIcons],\r\n  menuTitle: 'Наименование приложения',\r\n  headerConfig: {\r\n    home: true\r\n  }\r\n};\r\n\r\nexport const SubItems = BasicTemplate.bind({});\r\nSubItems.args = {\r\n  model: [...subItems],\r\n  menuTitle: 'Наименование приложения',\r\n  headerConfig: {\r\n    home: true\r\n  }\r\n};\r\n\r\nexport const EnlargedSize = BasicTemplate.bind({});\r\nEnlargedSize.args = {\r\n  model: [...subItems],\r\n  menuTitle: 'Наименование приложения',\r\n  headerConfig: {\r\n    home: true\r\n  },\r\n  settingsConfig: {\r\n    selectedSize: 'enlarged'\r\n  },\r\n};\r\n\r\nconst ExtraItemTemplate: Story = (args) => ({\r\n  template:\r\n      `<wrapper>\r\n          <ng-template zyfraTemplate>\r\n              <zyfra-splitter layout=\"horizontal\" [panelSizes]=\"[25,75]\" [style]=\"{ height: '600px' }\">\r\n                  <ng-template zyfraSplitterTemplate>\r\n                      <zyfra-nav-menu [model]=\"model\"\r\n                                      [menuTitle]=\"menuTitle\"\r\n                                      [emptyMessage]=\"emptyMessage\"\r\n                                      [headerConfig]=\"headerConfig\"\r\n                                      [settingsConfig]=\"settingsConfig\"\r\n                                      [toolbarConfig]=\"toolbarConfig\"\r\n                                      (activeItemChange)=\"activeItemChange($event)\"\r\n                                      (selectionChange)=\"selectionChange($event)\"\r\n                                      (homeClick)=\"homeClick($event)\"\r\n                                      (nodeExpand)=\"nodeExpand($event)\"\r\n                                      (nodeCollapse)=\"nodeCollapse($event)\">\r\n\r\n                           <ng-template let-item zyfraTemplate='menuitem'>\r\n                                  <p-badge *ngIf=\"item?.badge\" styleClass=\"p-badge-dot\" [severity]=\"item.badge\"></p-badge>\r\n                          </ng-template>\r\n\r\n                          <ng-template zyfraTemplate='toolbar'>\r\n                              <i class=\"toolbar-button zyfra-icon files-upload\"></i>\r\n                              <i class=\"toolbar-button zyfra-icon files-download\"></i>\r\n                          </ng-template>\r\n\r\n                          <ng-template zyfraTemplate='header'>\r\n                              <i class=\"toolbar-button zyfra-icon charts-pie\"></i>\r\n                          </ng-template>\r\n                    </zyfra-nav-menu>\r\n                  </ng-template>\r\n                  <ng-template zyfraSplitterTemplate>\r\n                      <router-outlet></router-outlet>\r\n                  </ng-template>\r\n              </zyfra-splitter>\r\n          </ng-template>\r\n      </wrapper>`,\r\n  props: {\r\n    ...args,\r\n    ...actions\r\n  },\r\n});\r\n\r\nexport const ExtraTemplates = ExtraItemTemplate.bind({});\r\nExtraTemplates.args = {\r\n  model: [...subItems],\r\n  menuTitle: 'Наименование приложения'\r\n};\r\n\r\nexport const MultipleSelection = BasicTemplate.bind({});\r\nMultipleSelection.args = {\r\n  model: [...subItems],\r\n  menuTitle: 'Наименование приложения',\r\n  headerConfig: {\r\n    home: true\r\n  },\r\n  settingsConfig: {\r\n    selectionMode: 'checkbox'\r\n  }\r\n};\r\n\r\nexport const Search = BasicTemplate.bind({});\r\nSearch.args = {\r\n  model: [...subItems],\r\n  menuTitle: 'Наименование приложения',\r\n  searchPlaceholder: 'Введите текст',\r\n  emptyMessage: '<Нет данных для отображения>',\r\n  headerConfig: {\r\n    home: true\r\n  },\r\n  toolbarConfig: {\r\n    search: true,\r\n    closeAll: true\r\n  }\r\n};\r\n\r\nexport const FolderMode = BasicTemplate.bind({});\r\nFolderMode.args = {\r\n  model: [...subItems],\r\n  menuTitle: 'Наименование приложения',\r\n  searchPlaceholder: 'Введите текст',\r\n  headerConfig: {\r\n    home: true\r\n  },\r\n  toolbarConfig: {\r\n    filesMode: true,\r\n    search: true,\r\n    closeAll: true\r\n  }\r\n};\r\n\r\nexport const RubricatorMode = BasicTemplate.bind({});\r\nRubricatorMode.args = {\r\n  model: [...subItemsRubricator],\r\n  menuTitle: 'Наименование приложения',\r\n  searchPlaceholder: 'Введите текст',\r\n  headerConfig: {\r\n    home: true\r\n  },\r\n  toolbarConfig: {\r\n    filesMode: true,\r\n    rubricatorMode: true,\r\n    search: true\r\n  }\r\n};\r\n\r\nconst GroupPanelTemplate: Story = (args) => ({\r\n  template:\r\n      `<wrapper>\r\n          <ng-template zyfraTemplate>\r\n              <zyfra-splitter layout=\"horizontal\" [panelSizes]=\"[25,75]\" [style]=\"{ height: '600px' }\">\r\n                  <ng-template zyfraSplitterTemplate>\r\n                      <zyfra-nav-menu [menuTitle]=\"menuTitle\"\r\n                                      [emptyMessage]=\"emptyMessage\"\r\n                                      [headerConfig]=\"headerConfig\"\r\n                                      [settingsConfig]=\"settingsConfig\"\r\n                                      [toolbarConfig]=\"toolbarConfig\"\r\n                                      [searchPlaceholder]=\"searchPlaceholder\"\r\n                                      (homeClick)=\"homeClick($event)\"\r\n                                      (activeItemChange)=\"activeItemChange($event)\"\r\n                                      (nodeCollapse)=\"nodeCollapse($event)\"\r\n                                      (nodeExpand)=\"nodeExpand($event)\"\r\n                                      (selectionChange)=\"selectionChange($event)\">\r\n                      <ng-template zyfraNavMenuGroup\r\n                                   [header]=\"header1\"\r\n                                   [items]=\"items1\"></ng-template>\r\n\r\n                      <ng-template zyfraNavMenuGroup\r\n                                   [header]=\"header2\"\r\n                                   [items]=\"items2\"></ng-template>\r\n\r\n                      <ng-template zyfraNavMenuGroup\r\n                                   [header]=\"header3\"\r\n                                   [items]=\"items3\"></ng-template>\r\n                      </zyfra-nav-menu>\r\n                  </ng-template>\r\n                  <ng-template zyfraSplitterTemplate>\r\n                      <router-outlet></router-outlet>\r\n                  </ng-template>\r\n              </zyfra-splitter>\r\n          </ng-template>\r\n      </wrapper>`,\r\n  props: {\r\n    ...args,\r\n    ...actions\r\n  },\r\n});\r\n\r\nexport const GroupPanels = GroupPanelTemplate.bind({});\r\nGroupPanels.args = {\r\n  header1: 'Групповая панель 1',\r\n  header2: 'Групповая панель 2',\r\n  header3: 'Групповая панель 3',\r\n  items1: [ ...subItems],\r\n  items2: [...basicWithIcons],\r\n  items3: [...basic],\r\n  menuTitle: 'Наименование приложения',\r\n  searchPlaceholder: 'Введите текст',\r\n  headerConfig: {\r\n    home: true\r\n  },\r\n  toolbarConfig: {\r\n    filesMode: true,\r\n    search: true\r\n  }\r\n};\r\n\r\nexport const SingleGroupPanel = GroupPanelTemplate.bind({});\r\nSingleGroupPanel.args = {\r\n  header1: 'Групповая панель 1',\r\n  header2: 'Групповая панель 2',\r\n  header3: 'Групповая панель 3',\r\n  items1: [...subItems],\r\n  items2: [...basicWithIcons],\r\n  items3: [...basic],\r\n  menuTitle: 'Наименование приложения',\r\n  searchPlaceholder: 'Введите текст',\r\n  headerConfig: {\r\n    home: true\r\n  },\r\n  settingsConfig: {\r\n    selectionMode: 'checkbox',\r\n    singleGroup: true,\r\n  },\r\n  toolbarConfig: {\r\n    filesMode: true,\r\n    search: true\r\n  }\r\n};\r\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": ""
    },
    {
      "name": "Splitter",
      "id": "component-Splitter-d53f72e33f459aa0e13cfc9bfdd742fe",
      "file": "libs/components/src/lib/splitter/p-splitter/splitter.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "styleUrls": [],
      "styles": [],
      "template": "",
      "templateUrl": [],
      "viewProviders": [],
      "inputsClass": [
        {
          "name": "gutterSize",
          "defaultValue": "4",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 30,
          "type": "number"
        },
        {
          "name": "layout",
          "defaultValue": "\"horizontal\"",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 28,
          "type": "string"
        },
        {
          "name": "minSizes",
          "defaultValue": "[]",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 32,
          "type": "number[]"
        },
        {
          "name": "panelSizes",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 42,
          "type": "number[]"
        },
        {
          "name": "panelStyle",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 22,
          "type": "any"
        },
        {
          "name": "panelStyleClass",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 18,
          "type": "string"
        },
        {
          "name": "stateKey",
          "defaultValue": "null",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 26,
          "type": "string"
        },
        {
          "name": "stateStorage",
          "defaultValue": "\"session\"",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 24,
          "type": "string"
        },
        {
          "name": "style",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 20,
          "type": "any"
        },
        {
          "name": "styleClass",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 16,
          "type": "string"
        }
      ],
      "outputsClass": [
        {
          "name": "onResizeEnd",
          "defaultValue": "new EventEmitter()",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 34,
          "type": "EventEmitter<any>"
        },
        {
          "name": "onResizeStart",
          "defaultValue": "new EventEmitter()",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 36,
          "type": "EventEmitter<any>"
        }
      ],
      "propertiesClass": [
        {
          "name": "_panelSizes",
          "defaultValue": "[]",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "number[]",
          "optional": false,
          "description": "",
          "line": 90
        },
        {
          "name": "cd",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "ChangeDetectorRef",
          "optional": false,
          "description": "",
          "line": 94,
          "modifierKind": [123]
        },
        {
          "name": "containerViewChild",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "ElementRef",
          "optional": false,
          "description": "",
          "line": 40,
          "decorators": [
            {
              "name": "ViewChild",
              "stringifiedArguments": "'container', {static: false}"
            }
          ]
        },
        {
          "name": "dragging",
          "defaultValue": "false",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "optional": false,
          "description": "",
          "line": 66
        },
        {
          "name": "gutterElement",
          "defaultValue": "null",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "null",
          "optional": false,
          "description": "",
          "line": 78
        },
        {
          "name": "mouseMoveListener",
          "defaultValue": "null",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "null",
          "optional": false,
          "description": "",
          "line": 68
        },
        {
          "name": "mouseUpListener",
          "defaultValue": "null",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "null",
          "optional": false,
          "description": "",
          "line": 70
        },
        {
          "name": "nested",
          "defaultValue": "false",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "optional": false,
          "description": "",
          "line": 62
        },
        {
          "name": "nextPanelElement",
          "defaultValue": "null",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "null",
          "optional": false,
          "description": "",
          "line": 84
        },
        {
          "name": "nextPanelSize",
          "defaultValue": "null",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "null",
          "optional": false,
          "description": "",
          "line": 86
        },
        {
          "name": "panels",
          "defaultValue": "[]",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "[]",
          "optional": false,
          "description": "",
          "line": 64
        },
        {
          "name": "prevPanelElement",
          "defaultValue": "null",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "null",
          "optional": false,
          "description": "",
          "line": 82
        },
        {
          "name": "prevPanelIndex",
          "defaultValue": "null",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "null",
          "optional": false,
          "description": "",
          "line": 92
        },
        {
          "name": "prevPanelSize",
          "defaultValue": "null",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "null",
          "optional": false,
          "description": "",
          "line": 88
        },
        {
          "name": "size",
          "defaultValue": "null",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "null",
          "optional": false,
          "description": "",
          "line": 76
        },
        {
          "name": "startPos",
          "defaultValue": "null",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "null",
          "optional": false,
          "description": "",
          "line": 80
        },
        {
          "name": "templates",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "QueryList<any>",
          "optional": false,
          "description": "",
          "line": 38,
          "decorators": [
            {
              "name": "ContentChildren",
              "stringifiedArguments": "PrimeTemplate"
            }
          ]
        },
        {
          "name": "touchEndListener",
          "defaultValue": "null",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "null",
          "optional": false,
          "description": "",
          "line": 74
        },
        {
          "name": "touchMoveListener",
          "defaultValue": "null",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "null",
          "optional": false,
          "description": "",
          "line": 72
        }
      ],
      "methodsClass": [
        {
          "name": "bindMouseListeners",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 214,
          "deprecated": false,
          "deprecationMessage": ""
        },
        {
          "name": "bindTouchListeners",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 229,
          "deprecated": false,
          "deprecationMessage": ""
        },
        {
          "name": "clear",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 268,
          "deprecated": false,
          "deprecationMessage": ""
        },
        {
          "name": "containerClass",
          "args": [],
          "optional": false,
          "returnType": "{ 'p-splitter p-component': boolean; 'p-splitter-horizontal': boolean; 'p-splitter-vertical': boolean; }",
          "typeParameters": [],
          "line": 332,
          "deprecated": false,
          "deprecationMessage": ""
        },
        {
          "name": "getStorage",
          "args": [],
          "optional": false,
          "returnType": "any",
          "typeParameters": [],
          "line": 298,
          "deprecated": false,
          "deprecationMessage": ""
        },
        {
          "name": "gutterStyle",
          "args": [],
          "optional": false,
          "returnType": "{ width: string; height?: undefined; } | { height: string; width?: undefined; }",
          "typeParameters": [],
          "line": 347,
          "deprecated": false,
          "deprecationMessage": ""
        },
        {
          "name": "horizontal",
          "args": [],
          "optional": false,
          "returnType": "boolean",
          "typeParameters": [],
          "line": 354,
          "deprecated": false,
          "deprecationMessage": ""
        },
        {
          "name": "isNested",
          "args": [],
          "optional": false,
          "returnType": "boolean",
          "typeParameters": [],
          "line": 280,
          "deprecated": false,
          "deprecationMessage": ""
        },
        {
          "name": "isStateful",
          "args": [],
          "optional": false,
          "returnType": "boolean",
          "typeParameters": [],
          "line": 294,
          "deprecated": false,
          "deprecationMessage": ""
        },
        {
          "name": "ngAfterContentInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 100,
          "deprecated": false,
          "deprecationMessage": ""
        },
        {
          "name": "ngAfterViewInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 113,
          "deprecated": false,
          "deprecationMessage": ""
        },
        {
          "name": "ngOnInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 96,
          "deprecated": false,
          "deprecationMessage": ""
        },
        {
          "name": "onGutterMouseDown",
          "args": [
            {
              "name": "event",
              "type": "",
              "deprecated": false,
              "deprecationMessage": ""
            },
            {
              "name": "index",
              "type": "",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 180,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "event",
              "type": "",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "index",
              "type": "",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "onGutterTouchEnd",
          "args": [
            {
              "name": "event",
              "type": "",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 194,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "event",
              "type": "",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "onGutterTouchStart",
          "args": [
            {
              "name": "event",
              "type": "",
              "deprecated": false,
              "deprecationMessage": ""
            },
            {
              "name": "index",
              "type": "",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 185,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "event",
              "type": "",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "index",
              "type": "",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "onResize",
          "args": [
            {
              "name": "event",
              "type": "",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 151,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "event",
              "type": "",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "panelContainerClass",
          "args": [],
          "optional": false,
          "returnType": "{ 'p-splitter-panel': boolean; 'p-splitter-panel-nested': boolean; }",
          "typeParameters": [],
          "line": 340,
          "deprecated": false,
          "deprecationMessage": ""
        },
        {
          "name": "resizeEnd",
          "args": [
            {
              "name": "event",
              "type": "",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 169,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "event",
              "type": "",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "resizeStart",
          "args": [
            {
              "name": "event",
              "type": "",
              "deprecated": false,
              "deprecationMessage": ""
            },
            {
              "name": "index",
              "type": "",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 136,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "event",
              "type": "",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "index",
              "type": "",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "restoreState",
          "args": [],
          "optional": false,
          "returnType": "boolean",
          "typeParameters": [],
          "line": 315,
          "deprecated": false,
          "deprecationMessage": ""
        },
        {
          "name": "saveState",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 311,
          "deprecated": false,
          "deprecationMessage": ""
        },
        {
          "name": "unbindMouseListeners",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 244,
          "deprecated": false,
          "deprecationMessage": ""
        },
        {
          "name": "unbindTouchListeners",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 256,
          "deprecated": false,
          "deprecationMessage": ""
        },
        {
          "name": "validateResize",
          "args": [
            {
              "name": "newPrevPanelSize",
              "type": "",
              "deprecated": false,
              "deprecationMessage": ""
            },
            {
              "name": "newNextPanelSize",
              "type": "",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "boolean",
          "typeParameters": [],
          "line": 202,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "newPrevPanelSize",
              "type": "",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "newNextPanelSize",
              "type": "",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        }
      ],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "description": "<p>Forked from <a href=\"https://github.com/primefaces/primeng/blob/master/src/app/components/splitter/splitter.ts\">https://github.com/primefaces/primeng/blob/master/src/app/components/splitter/splitter.ts</a>\nUpdate this after release primeng,  Last changes 20.12.2021\nConvert to abstract for extend</p>\n",
      "rawdescription": "\n\nForked from https://github.com/primefaces/primeng/blob/master/src/app/components/splitter/splitter.ts\nUpdate this after release primeng,  Last changes 20.12.2021\nConvert to abstract for extend\n",
      "type": "component",
      "sourceCode": "import { Component, ChangeDetectionStrategy, ViewEncapsulation, Input, ContentChildren, QueryList, ElementRef, ChangeDetectorRef, ViewChild, Output, EventEmitter } from '@angular/core';\r\nimport { DomHandler } from 'primeng/dom';\r\nimport { PrimeTemplate } from 'primeng/api';\r\nimport { timer } from 'rxjs';\r\n\r\n/**\r\n * Forked from https://github.com/primefaces/primeng/blob/master/src/app/components/splitter/splitter.ts\r\n * Update this after release primeng,  Last changes 20.12.2021\r\n * Convert to abstract for extend\r\n */\r\n@Component({template: ''})\r\nexport abstract class Splitter {\r\n\r\n    @Input() styleClass: string;\r\n\r\n    @Input() panelStyleClass: string;\r\n\r\n    @Input() style: any;\r\n\r\n    @Input() panelStyle: any;\r\n\r\n    @Input() stateStorage: string = \"session\";\r\n\r\n    @Input() stateKey: string = null;\r\n\r\n    @Input() layout: string = \"horizontal\";\r\n\r\n    @Input() gutterSize: number = 4;\r\n\r\n    @Input() minSizes: number[] = [];\r\n\r\n    @Output() onResizeEnd: EventEmitter<any> = new EventEmitter();\r\n\r\n    @Output() onResizeStart: EventEmitter<any> = new EventEmitter();\r\n\r\n    @ContentChildren(PrimeTemplate) templates: QueryList<any>;\r\n\r\n    @ViewChild('container', { static: false }) containerViewChild: ElementRef;\r\n\r\n    @Input() get panelSizes(): number[] {\r\n        return this._panelSizes;\r\n    }\r\n\r\n    set panelSizes(val: number[]) {\r\n        this._panelSizes = val;\r\n\r\n        if (this.el && this.el.nativeElement && this.panels.length > 0) {\r\n            let children = [...this.el.nativeElement.children[0].children].filter(child => DomHandler.hasClass(child, 'p-splitter-panel'));\r\n            let _panelSizes = [];\r\n\r\n            this.panels.map((panel, i) => {\r\n                let panelInitialSize = this.panelSizes.length -1 >= i ? this.panelSizes[i]: null;\r\n                let panelSize = panelInitialSize || (100 / this.panels.length);\r\n                _panelSizes[i] = panelSize;\r\n                children[i].style.flexBasis = 'calc(' + panelSize + '% - ' + ((this.panels.length - 1) * this.gutterSize) + 'px)';\r\n            });\r\n        }\r\n    }\r\n\r\n    nested = false;\r\n\r\n    panels = [];\r\n\r\n    dragging = false;\r\n\r\n    mouseMoveListener = null;\r\n\r\n    mouseUpListener = null;\r\n\r\n    touchMoveListener = null;\r\n\r\n    touchEndListener = null;\r\n\r\n    size = null;\r\n\r\n    gutterElement = null;\r\n\r\n    startPos = null;\r\n\r\n    prevPanelElement = null;\r\n\r\n    nextPanelElement = null;\r\n\r\n    nextPanelSize = null;\r\n\r\n    prevPanelSize = null;\r\n\r\n    _panelSizes: number[] = [];\r\n\r\n    prevPanelIndex = null;\r\n\r\n    constructor(public cd: ChangeDetectorRef, private el: ElementRef) { }\r\n\r\n    ngOnInit() {\r\n        this.nested = this.isNested();\r\n    }\r\n\r\n    ngAfterContentInit() {\r\n        this.templates.forEach((item) => {\r\n            switch(item.getType()) {\r\n                case 'panel':\r\n                    this.panels.push(item.template);\r\n                break;\r\n                default:\r\n                    this.panels.push(item.template);\r\n                break;\r\n            }\r\n        })\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n        if (this.panels && this.panels.length) {\r\n            let initialized = false;\r\n            if (this.isStateful()) {\r\n                initialized = this.restoreState();\r\n            }\r\n\r\n            if (!initialized) {\r\n                let children = [...this.el.nativeElement.children[0].children].filter(child => DomHandler.hasClass(child, 'p-splitter-panel'));\r\n                let _panelSizes = [];\r\n\r\n                this.panels.map((panel, i) => {\r\n                    let panelInitialSize = this.panelSizes.length -1 >= i ? this.panelSizes[i]: null;\r\n                    let panelSize = panelInitialSize || (100 / this.panels.length);\r\n                    _panelSizes[i] = panelSize;\r\n                    children[i].style.flexBasis = 'calc(' + panelSize + '% - ' + ((this.panels.length - 1) * this.gutterSize) + 'px)';\r\n                });\r\n\r\n                this._panelSizes = _panelSizes;\r\n            }\r\n        }\r\n    }\r\n\r\n    resizeStart(event, index) {\r\n        this.gutterElement = event.currentTarget;\r\n        this.size = this.horizontal() ? DomHandler.getWidth(this.containerViewChild.nativeElement) : DomHandler.getHeight(this.containerViewChild.nativeElement);\r\n        this.dragging = true;\r\n        this.startPos = this.horizontal() ? (event.pageX || event.changedTouches[0].pageX) : (event.pageY || event.changedTouches[0].pageY);\r\n        this.prevPanelElement = this.gutterElement.previousElementSibling;\r\n        this.nextPanelElement = this.gutterElement.nextElementSibling;\r\n        this.prevPanelSize = 100 * (this.horizontal() ? DomHandler.getOuterWidth(this.prevPanelElement, true): DomHandler.getOuterHeight(this.prevPanelElement, true)) / this.size;\r\n        this.nextPanelSize = 100 * (this.horizontal() ? DomHandler.getOuterWidth(this.nextPanelElement, true): DomHandler.getOuterHeight(this.nextPanelElement, true)) / this.size;\r\n        this.prevPanelIndex = index;\r\n        DomHandler.addClass(this.gutterElement, 'p-splitter-gutter-resizing');\r\n        DomHandler.addClass(this.containerViewChild.nativeElement, 'p-splitter-resizing');\r\n        this.onResizeStart.emit({originalEvent: event, sizes: this._panelSizes});\r\n    }\r\n\r\n    onResize(event) {\r\n        let newPos;\r\n        if (this.horizontal())\r\n            newPos = (event.pageX * 100 / this.size) - (this.startPos * 100 / this.size);\r\n        else\r\n            newPos = (event.pageY  * 100 / this.size) - (this.startPos * 100 / this.size);\r\n\r\n        let newPrevPanelSize = this.prevPanelSize + newPos;\r\n        let newNextPanelSize = this.nextPanelSize - newPos;\r\n\r\n        if (this.validateResize(newPrevPanelSize, newNextPanelSize)) {\r\n            this.prevPanelElement.style.flexBasis = 'calc(' + newPrevPanelSize + '% - ' + ((this.panels.length - 1) * this.gutterSize) + 'px)';\r\n            this.nextPanelElement.style.flexBasis = 'calc(' + newNextPanelSize + '% - ' + ((this.panels.length - 1) * this.gutterSize) + 'px)';\r\n            this._panelSizes[this.prevPanelIndex] = newPrevPanelSize;\r\n            this._panelSizes[this.prevPanelIndex + 1] = newNextPanelSize;\r\n        }\r\n    }\r\n\r\n    resizeEnd(event) {\r\n        if (this.isStateful()) {\r\n            this.saveState();\r\n        }\r\n\r\n        this.onResizeEnd.emit({originalEvent: event, sizes: this._panelSizes});\r\n        DomHandler.removeClass(this.gutterElement, 'p-splitter-gutter-resizing');\r\n        DomHandler.removeClass(this.containerViewChild.nativeElement, 'p-splitter-resizing');\r\n        this.clear();\r\n    }\r\n\r\n    onGutterMouseDown(event, index) {\r\n        this.resizeStart(event, index);\r\n        this.bindMouseListeners();\r\n    }\r\n\r\n    onGutterTouchStart(event, index) {\r\n        if (event.cancelable){\r\n            this.resizeStart(event, index);\r\n            this.bindTouchListeners();\r\n\r\n            event.preventDefault();\r\n        }\r\n    }\r\n\r\n    onGutterTouchEnd(event) {\r\n        this.resizeEnd(event);\r\n        this.unbindTouchListeners();\r\n\r\n        if (event.cancelable)\r\n            event.preventDefault();\r\n    }\r\n\r\n    validateResize(newPrevPanelSize, newNextPanelSize) {\r\n        if (this.minSizes.length >= 1 && this.minSizes[0] && this.minSizes[0] > newPrevPanelSize) {\r\n            return false;\r\n        }\r\n\r\n        if (this.minSizes.length > 1 && this.minSizes[1] && this.minSizes[1] > newNextPanelSize) {\r\n            return false;\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    bindMouseListeners() {\r\n        if (!this.mouseMoveListener) {\r\n            this.mouseMoveListener = event => this.onResize(event)\r\n            document.addEventListener('mousemove', this.mouseMoveListener);\r\n        }\r\n\r\n        if (!this.mouseUpListener) {\r\n            this.mouseUpListener = event => {\r\n                this.resizeEnd(event);\r\n                this.unbindMouseListeners();\r\n            }\r\n            document.addEventListener('mouseup', this.mouseUpListener);\r\n        }\r\n    }\r\n\r\n    bindTouchListeners() {\r\n        if (!this.touchMoveListener) {\r\n            this.touchMoveListener = event => this.onResize(event.changedTouches[0])\r\n            document.addEventListener('touchmove', this.touchMoveListener);\r\n        }\r\n\r\n        if (!this.touchEndListener) {\r\n            this.touchEndListener = event => {\r\n                this.resizeEnd(event);\r\n                this.unbindTouchListeners();\r\n            }\r\n            document.addEventListener('touchend', this.touchEndListener);\r\n        }\r\n    }\r\n\r\n    unbindMouseListeners() {\r\n        if (this.mouseMoveListener) {\r\n            document.removeEventListener('mousemove', this.mouseMoveListener);\r\n            this.mouseMoveListener = null;\r\n        }\r\n\r\n        if (this.mouseUpListener) {\r\n            document.removeEventListener('mouseup', this.mouseUpListener);\r\n            this.mouseUpListener = null;\r\n        }\r\n    }\r\n\r\n    unbindTouchListeners() {\r\n        if (this.touchMoveListener) {\r\n            document.removeEventListener('touchmove', this.touchMoveListener);\r\n            this.touchMoveListener = null;\r\n        }\r\n\r\n        if (this.touchEndListener) {\r\n            document.removeEventListener('touchend', this.touchEndListener);\r\n            this.touchEndListener = null;\r\n        }\r\n    }\r\n\r\n    clear() {\r\n        this.dragging = false;\r\n        this.size = null;\r\n        this.startPos = null;\r\n        this.prevPanelElement = null;\r\n        this.nextPanelElement = null;\r\n        this.prevPanelSize = null;\r\n        this.nextPanelSize = null;\r\n        this.gutterElement = null;\r\n        this.prevPanelIndex = null;\r\n    }\r\n\r\n    isNested() {\r\n        if (this.el.nativeElement) {\r\n            let parent = this.el.nativeElement.parentElement;\r\n            while (parent && !DomHandler.hasClass(parent, 'p-splitter')) {\r\n                parent = parent.parentElement;\r\n            }\r\n\r\n            return parent !== null;\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    isStateful() {\r\n        return this.stateKey != null;\r\n    }\r\n\r\n    getStorage() {\r\n        switch(this.stateStorage) {\r\n            case 'local':\r\n                return window.localStorage;\r\n\r\n            case 'session':\r\n                return window.sessionStorage;\r\n\r\n            default:\r\n                throw new Error(this.stateStorage + ' is not a valid value for the state storage, supported values are \"local\" and \"session\".');\r\n        }\r\n    }\r\n\r\n    saveState() {\r\n        this.getStorage().setItem(this.stateKey, JSON.stringify(this._panelSizes));\r\n    }\r\n\r\n    restoreState() {\r\n        const storage = this.getStorage();\r\n        const stateString = storage.getItem(this.stateKey);\r\n\r\n        if (stateString) {\r\n            this._panelSizes = JSON.parse(stateString);\r\n            let children = [...this.containerViewChild.nativeElement.children].filter(child => DomHandler.hasClass(child, 'p-splitter-panel'));\r\n            children.forEach((child, i) => {\r\n                child.style.flexBasis = 'calc(' + this._panelSizes[i] + '% - ' + ((this.panels.length - 1) * this.gutterSize) + 'px)';\r\n            });\r\n\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    containerClass() {\r\n        return {\r\n            'p-splitter p-component': true,\r\n            'p-splitter-horizontal': this.layout === \"horizontal\",\r\n            'p-splitter-vertical': this.layout === \"vertical\"\r\n        };\r\n    }\r\n\r\n    panelContainerClass() {\r\n        return {\r\n            'p-splitter-panel': true,\r\n            'p-splitter-panel-nested': true\r\n        };\r\n    }\r\n\r\n    gutterStyle() {\r\n        if (this.horizontal())\r\n            return {width: this.gutterSize + 'px'};\r\n        else\r\n            return {height: this.gutterSize + 'px'};\r\n    }\r\n\r\n    horizontal() {\r\n        return this.layout === 'horizontal';\r\n    }\r\n}\r\n\r\n/**\r\n * Forked ONLY DECORATOR from https://github.com/primefaces/primeng/blob/master/src/app/components/splitter/splitter.ts\r\n * Update this after release primeng,  Last changes 20.12.2021\r\n */\r\n@Component({\r\n  selector: 'p-splitter',\r\n  template: `\r\n      <div #container [ngClass]=\"containerClass()\" [class]=\"styleClass\" [ngStyle]=\"style\">\r\n          <ng-template ngFor let-panel let-i=\"index\" [ngForOf]=\"panels\">\r\n              <div [ngClass]=\"panelContainerClass()\" [class]=\"panelStyleClass\" [ngStyle]=\"panelStyle\">\r\n                  <ng-container *ngTemplateOutlet=\"panel\"></ng-container>\r\n              </div>\r\n              <div class=\"p-splitter-gutter\" *ngIf=\"i !== (panels.length - 1)\" [ngStyle]=\"gutterStyle()\"\r\n                  (mousedown)=\"onGutterMouseDown($event, i)\" (touchstart)=\"onGutterTouchStart($event, i)\">\r\n                  <div class=\"p-splitter-gutter-handle\"></div>\r\n              </div>\r\n          </ng-template>\r\n      </div>\r\n  `,\r\n  encapsulation: ViewEncapsulation.None,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  styleUrls: ['./splitter.css'],\r\n  host: {\r\n      'class': 'p-element',\r\n      '[class.p-splitter-panel-nested]': 'nested'\r\n  }\r\n})\r\nexport class SplitterExtended extends Splitter {\r\n  public updateTemplates(): void{\r\n    this.panels = [];\r\n    if (this.templates) this.ngAfterContentInit();;\r\n    this.cd.markForCheck();\r\n  }\r\n}\r\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "deprecated": false,
        "deprecationMessage": "",
        "args": [
          {
            "name": "cd",
            "type": "ChangeDetectorRef",
            "deprecated": false,
            "deprecationMessage": ""
          },
          {
            "name": "el",
            "type": "ElementRef",
            "deprecated": false,
            "deprecationMessage": ""
          }
        ],
        "line": 92,
        "jsdoctags": [
          {
            "name": "cd",
            "type": "ChangeDetectorRef",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          },
          {
            "name": "el",
            "type": "ElementRef",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      "accessors": {
        "panelSizes": {
          "name": "panelSizes",
          "setSignature": {
            "name": "panelSizes",
            "type": "void",
            "deprecated": false,
            "deprecationMessage": "",
            "args": [
              {
                "name": "val",
                "type": "number[]",
                "deprecated": false,
                "deprecationMessage": ""
              }
            ],
            "returnType": "void",
            "line": 46,
            "jsdoctags": [
              {
                "name": "val",
                "type": "number[]",
                "deprecated": false,
                "deprecationMessage": "",
                "tagName": {
                  "text": "param"
                }
              }
            ]
          },
          "getSignature": {
            "name": "panelSizes",
            "type": "[]",
            "returnType": "number[]",
            "line": 42
          }
        }
      }
    },
    {
      "name": "SplitterExtended",
      "id": "component-SplitterExtended-d53f72e33f459aa0e13cfc9bfdd742fe",
      "file": "libs/components/src/lib/splitter/p-splitter/splitter.ts",
      "changeDetection": "ChangeDetectionStrategy.OnPush",
      "encapsulation": ["ViewEncapsulation.None"],
      "entryComponents": [],
      "host": {},
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "p-splitter",
      "styleUrls": ["./splitter.css"],
      "styles": [],
      "template": "<div #container [ngClass]=\"containerClass()\" [class]=\"styleClass\" [ngStyle]=\"style\">\n    <ng-template ngFor let-panel let-i=\"index\" [ngForOf]=\"panels\">\n        <div [ngClass]=\"panelContainerClass()\" [class]=\"panelStyleClass\" [ngStyle]=\"panelStyle\">\n            <ng-container *ngTemplateOutlet=\"panel\"></ng-container>\n        </div>\n        <div class=\"p-splitter-gutter\" *ngIf=\"i !== (panels.length - 1)\" [ngStyle]=\"gutterStyle()\"\n            (mousedown)=\"onGutterMouseDown($event, i)\" (touchstart)=\"onGutterTouchStart($event, i)\">\n            <div class=\"p-splitter-gutter-handle\"></div>\n        </div>\n    </ng-template>\n</div>\n",
      "templateUrl": [],
      "viewProviders": [],
      "inputsClass": [
        {
          "name": "gutterSize",
          "defaultValue": "4",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 30,
          "type": "number",
          "inheritance": {
            "file": "Splitter"
          }
        },
        {
          "name": "layout",
          "defaultValue": "\"horizontal\"",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 28,
          "type": "string",
          "inheritance": {
            "file": "Splitter"
          }
        },
        {
          "name": "minSizes",
          "defaultValue": "[]",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 32,
          "type": "number[]",
          "inheritance": {
            "file": "Splitter"
          }
        },
        {
          "name": "panelSizes",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 42,
          "type": "number[]",
          "inheritance": {
            "file": "Splitter"
          }
        },
        {
          "name": "panelStyle",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 22,
          "type": "any",
          "inheritance": {
            "file": "Splitter"
          }
        },
        {
          "name": "panelStyleClass",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 18,
          "type": "string",
          "inheritance": {
            "file": "Splitter"
          }
        },
        {
          "name": "stateKey",
          "defaultValue": "null",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 26,
          "type": "string",
          "inheritance": {
            "file": "Splitter"
          }
        },
        {
          "name": "stateStorage",
          "defaultValue": "\"session\"",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 24,
          "type": "string",
          "inheritance": {
            "file": "Splitter"
          }
        },
        {
          "name": "style",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 20,
          "type": "any",
          "inheritance": {
            "file": "Splitter"
          }
        },
        {
          "name": "styleClass",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 16,
          "type": "string",
          "inheritance": {
            "file": "Splitter"
          }
        }
      ],
      "outputsClass": [
        {
          "name": "onResizeEnd",
          "defaultValue": "new EventEmitter()",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 34,
          "type": "EventEmitter<any>",
          "inheritance": {
            "file": "Splitter"
          }
        },
        {
          "name": "onResizeStart",
          "defaultValue": "new EventEmitter()",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 36,
          "type": "EventEmitter<any>",
          "inheritance": {
            "file": "Splitter"
          }
        }
      ],
      "propertiesClass": [
        {
          "name": "_panelSizes",
          "defaultValue": "[]",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "number[]",
          "optional": false,
          "description": "",
          "line": 90,
          "inheritance": {
            "file": "Splitter"
          }
        },
        {
          "name": "cd",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "ChangeDetectorRef",
          "optional": false,
          "description": "",
          "line": 94,
          "modifierKind": [123],
          "inheritance": {
            "file": "Splitter"
          }
        },
        {
          "name": "containerViewChild",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "ElementRef",
          "optional": false,
          "description": "",
          "line": 40,
          "decorators": [
            {
              "name": "ViewChild",
              "stringifiedArguments": "'container', {static: false}"
            }
          ],
          "inheritance": {
            "file": "Splitter"
          }
        },
        {
          "name": "dragging",
          "defaultValue": "false",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "optional": false,
          "description": "",
          "line": 66,
          "inheritance": {
            "file": "Splitter"
          }
        },
        {
          "name": "gutterElement",
          "defaultValue": "null",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "null",
          "optional": false,
          "description": "",
          "line": 78,
          "inheritance": {
            "file": "Splitter"
          }
        },
        {
          "name": "mouseMoveListener",
          "defaultValue": "null",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "null",
          "optional": false,
          "description": "",
          "line": 68,
          "inheritance": {
            "file": "Splitter"
          }
        },
        {
          "name": "mouseUpListener",
          "defaultValue": "null",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "null",
          "optional": false,
          "description": "",
          "line": 70,
          "inheritance": {
            "file": "Splitter"
          }
        },
        {
          "name": "nested",
          "defaultValue": "false",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "optional": false,
          "description": "",
          "line": 62,
          "inheritance": {
            "file": "Splitter"
          }
        },
        {
          "name": "nextPanelElement",
          "defaultValue": "null",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "null",
          "optional": false,
          "description": "",
          "line": 84,
          "inheritance": {
            "file": "Splitter"
          }
        },
        {
          "name": "nextPanelSize",
          "defaultValue": "null",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "null",
          "optional": false,
          "description": "",
          "line": 86,
          "inheritance": {
            "file": "Splitter"
          }
        },
        {
          "name": "panels",
          "defaultValue": "[]",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "[]",
          "optional": false,
          "description": "",
          "line": 64,
          "inheritance": {
            "file": "Splitter"
          }
        },
        {
          "name": "prevPanelElement",
          "defaultValue": "null",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "null",
          "optional": false,
          "description": "",
          "line": 82,
          "inheritance": {
            "file": "Splitter"
          }
        },
        {
          "name": "prevPanelIndex",
          "defaultValue": "null",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "null",
          "optional": false,
          "description": "",
          "line": 92,
          "inheritance": {
            "file": "Splitter"
          }
        },
        {
          "name": "prevPanelSize",
          "defaultValue": "null",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "null",
          "optional": false,
          "description": "",
          "line": 88,
          "inheritance": {
            "file": "Splitter"
          }
        },
        {
          "name": "size",
          "defaultValue": "null",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "null",
          "optional": false,
          "description": "",
          "line": 76,
          "inheritance": {
            "file": "Splitter"
          }
        },
        {
          "name": "startPos",
          "defaultValue": "null",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "null",
          "optional": false,
          "description": "",
          "line": 80,
          "inheritance": {
            "file": "Splitter"
          }
        },
        {
          "name": "templates",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "QueryList<any>",
          "optional": false,
          "description": "",
          "line": 38,
          "decorators": [
            {
              "name": "ContentChildren",
              "stringifiedArguments": "PrimeTemplate"
            }
          ],
          "inheritance": {
            "file": "Splitter"
          }
        },
        {
          "name": "touchEndListener",
          "defaultValue": "null",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "null",
          "optional": false,
          "description": "",
          "line": 74,
          "inheritance": {
            "file": "Splitter"
          }
        },
        {
          "name": "touchMoveListener",
          "defaultValue": "null",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "null",
          "optional": false,
          "description": "",
          "line": 72,
          "inheritance": {
            "file": "Splitter"
          }
        }
      ],
      "methodsClass": [
        {
          "name": "updateTemplates",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 387,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [123]
        },
        {
          "name": "bindMouseListeners",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 214,
          "deprecated": false,
          "deprecationMessage": "",
          "inheritance": {
            "file": "Splitter"
          }
        },
        {
          "name": "bindTouchListeners",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 229,
          "deprecated": false,
          "deprecationMessage": "",
          "inheritance": {
            "file": "Splitter"
          }
        },
        {
          "name": "clear",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 268,
          "deprecated": false,
          "deprecationMessage": "",
          "inheritance": {
            "file": "Splitter"
          }
        },
        {
          "name": "containerClass",
          "args": [],
          "optional": false,
          "returnType": "{ 'p-splitter p-component': boolean; 'p-splitter-horizontal': boolean; 'p-splitter-vertical': boolean; }",
          "typeParameters": [],
          "line": 332,
          "deprecated": false,
          "deprecationMessage": "",
          "inheritance": {
            "file": "Splitter"
          }
        },
        {
          "name": "getStorage",
          "args": [],
          "optional": false,
          "returnType": "any",
          "typeParameters": [],
          "line": 298,
          "deprecated": false,
          "deprecationMessage": "",
          "inheritance": {
            "file": "Splitter"
          }
        },
        {
          "name": "gutterStyle",
          "args": [],
          "optional": false,
          "returnType": "{ width: string; height?: undefined; } | { height: string; width?: undefined; }",
          "typeParameters": [],
          "line": 347,
          "deprecated": false,
          "deprecationMessage": "",
          "inheritance": {
            "file": "Splitter"
          }
        },
        {
          "name": "horizontal",
          "args": [],
          "optional": false,
          "returnType": "boolean",
          "typeParameters": [],
          "line": 354,
          "deprecated": false,
          "deprecationMessage": "",
          "inheritance": {
            "file": "Splitter"
          }
        },
        {
          "name": "isNested",
          "args": [],
          "optional": false,
          "returnType": "boolean",
          "typeParameters": [],
          "line": 280,
          "deprecated": false,
          "deprecationMessage": "",
          "inheritance": {
            "file": "Splitter"
          }
        },
        {
          "name": "isStateful",
          "args": [],
          "optional": false,
          "returnType": "boolean",
          "typeParameters": [],
          "line": 294,
          "deprecated": false,
          "deprecationMessage": "",
          "inheritance": {
            "file": "Splitter"
          }
        },
        {
          "name": "ngAfterContentInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 100,
          "deprecated": false,
          "deprecationMessage": "",
          "inheritance": {
            "file": "Splitter"
          }
        },
        {
          "name": "ngAfterViewInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 113,
          "deprecated": false,
          "deprecationMessage": "",
          "inheritance": {
            "file": "Splitter"
          }
        },
        {
          "name": "ngOnInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 96,
          "deprecated": false,
          "deprecationMessage": "",
          "inheritance": {
            "file": "Splitter"
          }
        },
        {
          "name": "onGutterMouseDown",
          "args": [
            {
              "name": "event",
              "type": "",
              "deprecated": false,
              "deprecationMessage": ""
            },
            {
              "name": "index",
              "type": "",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 180,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "event",
              "type": "",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "index",
              "type": "",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ],
          "inheritance": {
            "file": "Splitter"
          }
        },
        {
          "name": "onGutterTouchEnd",
          "args": [
            {
              "name": "event",
              "type": "",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 194,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "event",
              "type": "",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ],
          "inheritance": {
            "file": "Splitter"
          }
        },
        {
          "name": "onGutterTouchStart",
          "args": [
            {
              "name": "event",
              "type": "",
              "deprecated": false,
              "deprecationMessage": ""
            },
            {
              "name": "index",
              "type": "",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 185,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "event",
              "type": "",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "index",
              "type": "",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ],
          "inheritance": {
            "file": "Splitter"
          }
        },
        {
          "name": "onResize",
          "args": [
            {
              "name": "event",
              "type": "",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 151,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "event",
              "type": "",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ],
          "inheritance": {
            "file": "Splitter"
          }
        },
        {
          "name": "panelContainerClass",
          "args": [],
          "optional": false,
          "returnType": "{ 'p-splitter-panel': boolean; 'p-splitter-panel-nested': boolean; }",
          "typeParameters": [],
          "line": 340,
          "deprecated": false,
          "deprecationMessage": "",
          "inheritance": {
            "file": "Splitter"
          }
        },
        {
          "name": "resizeEnd",
          "args": [
            {
              "name": "event",
              "type": "",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 169,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "event",
              "type": "",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ],
          "inheritance": {
            "file": "Splitter"
          }
        },
        {
          "name": "resizeStart",
          "args": [
            {
              "name": "event",
              "type": "",
              "deprecated": false,
              "deprecationMessage": ""
            },
            {
              "name": "index",
              "type": "",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 136,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "event",
              "type": "",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "index",
              "type": "",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ],
          "inheritance": {
            "file": "Splitter"
          }
        },
        {
          "name": "restoreState",
          "args": [],
          "optional": false,
          "returnType": "boolean",
          "typeParameters": [],
          "line": 315,
          "deprecated": false,
          "deprecationMessage": "",
          "inheritance": {
            "file": "Splitter"
          }
        },
        {
          "name": "saveState",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 311,
          "deprecated": false,
          "deprecationMessage": "",
          "inheritance": {
            "file": "Splitter"
          }
        },
        {
          "name": "unbindMouseListeners",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 244,
          "deprecated": false,
          "deprecationMessage": "",
          "inheritance": {
            "file": "Splitter"
          }
        },
        {
          "name": "unbindTouchListeners",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 256,
          "deprecated": false,
          "deprecationMessage": "",
          "inheritance": {
            "file": "Splitter"
          }
        },
        {
          "name": "validateResize",
          "args": [
            {
              "name": "newPrevPanelSize",
              "type": "",
              "deprecated": false,
              "deprecationMessage": ""
            },
            {
              "name": "newNextPanelSize",
              "type": "",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "boolean",
          "typeParameters": [],
          "line": 202,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "newPrevPanelSize",
              "type": "",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "newNextPanelSize",
              "type": "",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ],
          "inheritance": {
            "file": "Splitter"
          }
        }
      ],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "description": "<p>Forked ONLY DECORATOR from <a href=\"https://github.com/primefaces/primeng/blob/master/src/app/components/splitter/splitter.ts\">https://github.com/primefaces/primeng/blob/master/src/app/components/splitter/splitter.ts</a>\nUpdate this after release primeng,  Last changes 20.12.2021</p>\n",
      "rawdescription": "\n\nForked ONLY DECORATOR from https://github.com/primefaces/primeng/blob/master/src/app/components/splitter/splitter.ts\nUpdate this after release primeng,  Last changes 20.12.2021\n",
      "type": "component",
      "sourceCode": "import { Component, ChangeDetectionStrategy, ViewEncapsulation, Input, ContentChildren, QueryList, ElementRef, ChangeDetectorRef, ViewChild, Output, EventEmitter } from '@angular/core';\r\nimport { DomHandler } from 'primeng/dom';\r\nimport { PrimeTemplate } from 'primeng/api';\r\nimport { timer } from 'rxjs';\r\n\r\n/**\r\n * Forked from https://github.com/primefaces/primeng/blob/master/src/app/components/splitter/splitter.ts\r\n * Update this after release primeng,  Last changes 20.12.2021\r\n * Convert to abstract for extend\r\n */\r\n@Component({template: ''})\r\nexport abstract class Splitter {\r\n\r\n    @Input() styleClass: string;\r\n\r\n    @Input() panelStyleClass: string;\r\n\r\n    @Input() style: any;\r\n\r\n    @Input() panelStyle: any;\r\n\r\n    @Input() stateStorage: string = \"session\";\r\n\r\n    @Input() stateKey: string = null;\r\n\r\n    @Input() layout: string = \"horizontal\";\r\n\r\n    @Input() gutterSize: number = 4;\r\n\r\n    @Input() minSizes: number[] = [];\r\n\r\n    @Output() onResizeEnd: EventEmitter<any> = new EventEmitter();\r\n\r\n    @Output() onResizeStart: EventEmitter<any> = new EventEmitter();\r\n\r\n    @ContentChildren(PrimeTemplate) templates: QueryList<any>;\r\n\r\n    @ViewChild('container', { static: false }) containerViewChild: ElementRef;\r\n\r\n    @Input() get panelSizes(): number[] {\r\n        return this._panelSizes;\r\n    }\r\n\r\n    set panelSizes(val: number[]) {\r\n        this._panelSizes = val;\r\n\r\n        if (this.el && this.el.nativeElement && this.panels.length > 0) {\r\n            let children = [...this.el.nativeElement.children[0].children].filter(child => DomHandler.hasClass(child, 'p-splitter-panel'));\r\n            let _panelSizes = [];\r\n\r\n            this.panels.map((panel, i) => {\r\n                let panelInitialSize = this.panelSizes.length -1 >= i ? this.panelSizes[i]: null;\r\n                let panelSize = panelInitialSize || (100 / this.panels.length);\r\n                _panelSizes[i] = panelSize;\r\n                children[i].style.flexBasis = 'calc(' + panelSize + '% - ' + ((this.panels.length - 1) * this.gutterSize) + 'px)';\r\n            });\r\n        }\r\n    }\r\n\r\n    nested = false;\r\n\r\n    panels = [];\r\n\r\n    dragging = false;\r\n\r\n    mouseMoveListener = null;\r\n\r\n    mouseUpListener = null;\r\n\r\n    touchMoveListener = null;\r\n\r\n    touchEndListener = null;\r\n\r\n    size = null;\r\n\r\n    gutterElement = null;\r\n\r\n    startPos = null;\r\n\r\n    prevPanelElement = null;\r\n\r\n    nextPanelElement = null;\r\n\r\n    nextPanelSize = null;\r\n\r\n    prevPanelSize = null;\r\n\r\n    _panelSizes: number[] = [];\r\n\r\n    prevPanelIndex = null;\r\n\r\n    constructor(public cd: ChangeDetectorRef, private el: ElementRef) { }\r\n\r\n    ngOnInit() {\r\n        this.nested = this.isNested();\r\n    }\r\n\r\n    ngAfterContentInit() {\r\n        this.templates.forEach((item) => {\r\n            switch(item.getType()) {\r\n                case 'panel':\r\n                    this.panels.push(item.template);\r\n                break;\r\n                default:\r\n                    this.panels.push(item.template);\r\n                break;\r\n            }\r\n        })\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n        if (this.panels && this.panels.length) {\r\n            let initialized = false;\r\n            if (this.isStateful()) {\r\n                initialized = this.restoreState();\r\n            }\r\n\r\n            if (!initialized) {\r\n                let children = [...this.el.nativeElement.children[0].children].filter(child => DomHandler.hasClass(child, 'p-splitter-panel'));\r\n                let _panelSizes = [];\r\n\r\n                this.panels.map((panel, i) => {\r\n                    let panelInitialSize = this.panelSizes.length -1 >= i ? this.panelSizes[i]: null;\r\n                    let panelSize = panelInitialSize || (100 / this.panels.length);\r\n                    _panelSizes[i] = panelSize;\r\n                    children[i].style.flexBasis = 'calc(' + panelSize + '% - ' + ((this.panels.length - 1) * this.gutterSize) + 'px)';\r\n                });\r\n\r\n                this._panelSizes = _panelSizes;\r\n            }\r\n        }\r\n    }\r\n\r\n    resizeStart(event, index) {\r\n        this.gutterElement = event.currentTarget;\r\n        this.size = this.horizontal() ? DomHandler.getWidth(this.containerViewChild.nativeElement) : DomHandler.getHeight(this.containerViewChild.nativeElement);\r\n        this.dragging = true;\r\n        this.startPos = this.horizontal() ? (event.pageX || event.changedTouches[0].pageX) : (event.pageY || event.changedTouches[0].pageY);\r\n        this.prevPanelElement = this.gutterElement.previousElementSibling;\r\n        this.nextPanelElement = this.gutterElement.nextElementSibling;\r\n        this.prevPanelSize = 100 * (this.horizontal() ? DomHandler.getOuterWidth(this.prevPanelElement, true): DomHandler.getOuterHeight(this.prevPanelElement, true)) / this.size;\r\n        this.nextPanelSize = 100 * (this.horizontal() ? DomHandler.getOuterWidth(this.nextPanelElement, true): DomHandler.getOuterHeight(this.nextPanelElement, true)) / this.size;\r\n        this.prevPanelIndex = index;\r\n        DomHandler.addClass(this.gutterElement, 'p-splitter-gutter-resizing');\r\n        DomHandler.addClass(this.containerViewChild.nativeElement, 'p-splitter-resizing');\r\n        this.onResizeStart.emit({originalEvent: event, sizes: this._panelSizes});\r\n    }\r\n\r\n    onResize(event) {\r\n        let newPos;\r\n        if (this.horizontal())\r\n            newPos = (event.pageX * 100 / this.size) - (this.startPos * 100 / this.size);\r\n        else\r\n            newPos = (event.pageY  * 100 / this.size) - (this.startPos * 100 / this.size);\r\n\r\n        let newPrevPanelSize = this.prevPanelSize + newPos;\r\n        let newNextPanelSize = this.nextPanelSize - newPos;\r\n\r\n        if (this.validateResize(newPrevPanelSize, newNextPanelSize)) {\r\n            this.prevPanelElement.style.flexBasis = 'calc(' + newPrevPanelSize + '% - ' + ((this.panels.length - 1) * this.gutterSize) + 'px)';\r\n            this.nextPanelElement.style.flexBasis = 'calc(' + newNextPanelSize + '% - ' + ((this.panels.length - 1) * this.gutterSize) + 'px)';\r\n            this._panelSizes[this.prevPanelIndex] = newPrevPanelSize;\r\n            this._panelSizes[this.prevPanelIndex + 1] = newNextPanelSize;\r\n        }\r\n    }\r\n\r\n    resizeEnd(event) {\r\n        if (this.isStateful()) {\r\n            this.saveState();\r\n        }\r\n\r\n        this.onResizeEnd.emit({originalEvent: event, sizes: this._panelSizes});\r\n        DomHandler.removeClass(this.gutterElement, 'p-splitter-gutter-resizing');\r\n        DomHandler.removeClass(this.containerViewChild.nativeElement, 'p-splitter-resizing');\r\n        this.clear();\r\n    }\r\n\r\n    onGutterMouseDown(event, index) {\r\n        this.resizeStart(event, index);\r\n        this.bindMouseListeners();\r\n    }\r\n\r\n    onGutterTouchStart(event, index) {\r\n        if (event.cancelable){\r\n            this.resizeStart(event, index);\r\n            this.bindTouchListeners();\r\n\r\n            event.preventDefault();\r\n        }\r\n    }\r\n\r\n    onGutterTouchEnd(event) {\r\n        this.resizeEnd(event);\r\n        this.unbindTouchListeners();\r\n\r\n        if (event.cancelable)\r\n            event.preventDefault();\r\n    }\r\n\r\n    validateResize(newPrevPanelSize, newNextPanelSize) {\r\n        if (this.minSizes.length >= 1 && this.minSizes[0] && this.minSizes[0] > newPrevPanelSize) {\r\n            return false;\r\n        }\r\n\r\n        if (this.minSizes.length > 1 && this.minSizes[1] && this.minSizes[1] > newNextPanelSize) {\r\n            return false;\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    bindMouseListeners() {\r\n        if (!this.mouseMoveListener) {\r\n            this.mouseMoveListener = event => this.onResize(event)\r\n            document.addEventListener('mousemove', this.mouseMoveListener);\r\n        }\r\n\r\n        if (!this.mouseUpListener) {\r\n            this.mouseUpListener = event => {\r\n                this.resizeEnd(event);\r\n                this.unbindMouseListeners();\r\n            }\r\n            document.addEventListener('mouseup', this.mouseUpListener);\r\n        }\r\n    }\r\n\r\n    bindTouchListeners() {\r\n        if (!this.touchMoveListener) {\r\n            this.touchMoveListener = event => this.onResize(event.changedTouches[0])\r\n            document.addEventListener('touchmove', this.touchMoveListener);\r\n        }\r\n\r\n        if (!this.touchEndListener) {\r\n            this.touchEndListener = event => {\r\n                this.resizeEnd(event);\r\n                this.unbindTouchListeners();\r\n            }\r\n            document.addEventListener('touchend', this.touchEndListener);\r\n        }\r\n    }\r\n\r\n    unbindMouseListeners() {\r\n        if (this.mouseMoveListener) {\r\n            document.removeEventListener('mousemove', this.mouseMoveListener);\r\n            this.mouseMoveListener = null;\r\n        }\r\n\r\n        if (this.mouseUpListener) {\r\n            document.removeEventListener('mouseup', this.mouseUpListener);\r\n            this.mouseUpListener = null;\r\n        }\r\n    }\r\n\r\n    unbindTouchListeners() {\r\n        if (this.touchMoveListener) {\r\n            document.removeEventListener('touchmove', this.touchMoveListener);\r\n            this.touchMoveListener = null;\r\n        }\r\n\r\n        if (this.touchEndListener) {\r\n            document.removeEventListener('touchend', this.touchEndListener);\r\n            this.touchEndListener = null;\r\n        }\r\n    }\r\n\r\n    clear() {\r\n        this.dragging = false;\r\n        this.size = null;\r\n        this.startPos = null;\r\n        this.prevPanelElement = null;\r\n        this.nextPanelElement = null;\r\n        this.prevPanelSize = null;\r\n        this.nextPanelSize = null;\r\n        this.gutterElement = null;\r\n        this.prevPanelIndex = null;\r\n    }\r\n\r\n    isNested() {\r\n        if (this.el.nativeElement) {\r\n            let parent = this.el.nativeElement.parentElement;\r\n            while (parent && !DomHandler.hasClass(parent, 'p-splitter')) {\r\n                parent = parent.parentElement;\r\n            }\r\n\r\n            return parent !== null;\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    isStateful() {\r\n        return this.stateKey != null;\r\n    }\r\n\r\n    getStorage() {\r\n        switch(this.stateStorage) {\r\n            case 'local':\r\n                return window.localStorage;\r\n\r\n            case 'session':\r\n                return window.sessionStorage;\r\n\r\n            default:\r\n                throw new Error(this.stateStorage + ' is not a valid value for the state storage, supported values are \"local\" and \"session\".');\r\n        }\r\n    }\r\n\r\n    saveState() {\r\n        this.getStorage().setItem(this.stateKey, JSON.stringify(this._panelSizes));\r\n    }\r\n\r\n    restoreState() {\r\n        const storage = this.getStorage();\r\n        const stateString = storage.getItem(this.stateKey);\r\n\r\n        if (stateString) {\r\n            this._panelSizes = JSON.parse(stateString);\r\n            let children = [...this.containerViewChild.nativeElement.children].filter(child => DomHandler.hasClass(child, 'p-splitter-panel'));\r\n            children.forEach((child, i) => {\r\n                child.style.flexBasis = 'calc(' + this._panelSizes[i] + '% - ' + ((this.panels.length - 1) * this.gutterSize) + 'px)';\r\n            });\r\n\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    containerClass() {\r\n        return {\r\n            'p-splitter p-component': true,\r\n            'p-splitter-horizontal': this.layout === \"horizontal\",\r\n            'p-splitter-vertical': this.layout === \"vertical\"\r\n        };\r\n    }\r\n\r\n    panelContainerClass() {\r\n        return {\r\n            'p-splitter-panel': true,\r\n            'p-splitter-panel-nested': true\r\n        };\r\n    }\r\n\r\n    gutterStyle() {\r\n        if (this.horizontal())\r\n            return {width: this.gutterSize + 'px'};\r\n        else\r\n            return {height: this.gutterSize + 'px'};\r\n    }\r\n\r\n    horizontal() {\r\n        return this.layout === 'horizontal';\r\n    }\r\n}\r\n\r\n/**\r\n * Forked ONLY DECORATOR from https://github.com/primefaces/primeng/blob/master/src/app/components/splitter/splitter.ts\r\n * Update this after release primeng,  Last changes 20.12.2021\r\n */\r\n@Component({\r\n  selector: 'p-splitter',\r\n  template: `\r\n      <div #container [ngClass]=\"containerClass()\" [class]=\"styleClass\" [ngStyle]=\"style\">\r\n          <ng-template ngFor let-panel let-i=\"index\" [ngForOf]=\"panels\">\r\n              <div [ngClass]=\"panelContainerClass()\" [class]=\"panelStyleClass\" [ngStyle]=\"panelStyle\">\r\n                  <ng-container *ngTemplateOutlet=\"panel\"></ng-container>\r\n              </div>\r\n              <div class=\"p-splitter-gutter\" *ngIf=\"i !== (panels.length - 1)\" [ngStyle]=\"gutterStyle()\"\r\n                  (mousedown)=\"onGutterMouseDown($event, i)\" (touchstart)=\"onGutterTouchStart($event, i)\">\r\n                  <div class=\"p-splitter-gutter-handle\"></div>\r\n              </div>\r\n          </ng-template>\r\n      </div>\r\n  `,\r\n  encapsulation: ViewEncapsulation.None,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  styleUrls: ['./splitter.css'],\r\n  host: {\r\n      'class': 'p-element',\r\n      '[class.p-splitter-panel-nested]': 'nested'\r\n  }\r\n})\r\nexport class SplitterExtended extends Splitter {\r\n  public updateTemplates(): void{\r\n    this.panels = [];\r\n    if (this.templates) this.ngAfterContentInit();;\r\n    this.cd.markForCheck();\r\n  }\r\n}\r\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data": "/**\r\n * Forked from https://github.com/primefaces/primeng/blob/master/src/app/components/splitter/splitter.css\r\n * Update this after release primeng,  Last changes 20.12.2021\r\n */\r\n.p-splitter {\r\n  display: flex;\r\n  flex-wrap: nowrap;\r\n}\r\n\r\n.p-splitter-vertical {\r\n  flex-direction: column;\r\n}\r\n\r\n.p-splitter-panel {\r\n  flex-grow: 1;\r\n}\r\n\r\n.p-splitter-panel-nested {\r\n  display: flex;\r\n}\r\n\r\n.p-splitter-panel p-splitter {\r\n  flex-grow: 1;\r\n}\r\n\r\n.p-splitter-panel .p-splitter {\r\n  flex-grow: 1;\r\n  border: 0 none;\r\n}\r\n\r\n.p-splitter-gutter {\r\n  flex-grow: 0;\r\n  flex-shrink: 0;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  cursor: col-resize;\r\n}\r\n\r\n.p-splitter-horizontal.p-splitter-resizing {\r\n  cursor: col-resize;\r\n  user-select: none;\r\n}\r\n\r\n.p-splitter-horizontal > .p-splitter-gutter > .p-splitter-gutter-handle {\r\n  height: 24px;\r\n  width: 100%;\r\n}\r\n\r\n.p-splitter-horizontal > .p-splitter-gutter {\r\n  cursor: col-resize;\r\n}\r\n\r\n.p-splitter-vertical.p-splitter-resizing {\r\n  cursor: row-resize;\r\n  user-select: none;\r\n}\r\n\r\n.p-splitter-vertical > .p-splitter-gutter {\r\n  cursor: row-resize;\r\n}\r\n\r\n.p-splitter-vertical > .p-splitter-gutter > .p-splitter-gutter-handle {\r\n  width: 24px;\r\n  height: 100%;\r\n}\r\n",
          "styleUrl": "./splitter.css"
        }
      ],
      "stylesData": "",
      "extends": "Splitter"
    },
    {
      "name": "WrapperComponent",
      "id": "component-WrapperComponent-97c94fdb80f84db764764ab63ac35cbb",
      "file": "libs/components/src/lib/nav-menu/zyfra-nav-menu.component.stories.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "wrapper",
      "styleUrls": [],
      "styles": [],
      "template": "<ng-container *ngTemplateOutlet=\"tmpl\"></ng-container>",
      "templateUrl": [],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "destroyed$",
          "defaultValue": "new Subject<void>()",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "optional": false,
          "description": "",
          "line": 40,
          "modifierKind": [121]
        },
        {
          "name": "template",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "ZyfraTemplateDirective",
          "optional": false,
          "description": "",
          "line": 37,
          "decorators": [
            {
              "name": "ContentChild",
              "stringifiedArguments": "ZyfraTemplateDirective"
            }
          ]
        },
        {
          "name": "tmpl",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "TemplateRef<any>",
          "optional": false,
          "description": "",
          "line": 38
        }
      ],
      "methodsClass": [
        {
          "name": "ngAfterViewInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 44,
          "deprecated": false,
          "deprecationMessage": ""
        },
        {
          "name": "ngOnDestroy",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 54,
          "deprecated": false,
          "deprecationMessage": ""
        }
      ],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "",
      "type": "component",
      "sourceCode": "import { moduleMetadata, Story, Meta } from '@storybook/angular';\r\nimport { ZyfraNavMenuComponent } from './components/zyfra-nav-menu/zyfra-nav-menu.component';\r\nimport { ZyfraNavMenuModule } from './zyfra-nav-menu.module';\r\nimport { action } from '@storybook/addon-actions';\r\nimport { ZyfraSplitterModule } from '../splitter';\r\nimport { APP_BASE_HREF } from '@angular/common';\r\nimport { basic, basicWithIcons, subItems, subItemsRubricator } from './dataForStories';\r\nimport { BadgeModule } from 'primeng/badge';\r\nimport { NavigationEnd, Router, RouterModule, Routes } from '@angular/router';\r\nimport {\r\n  AfterViewInit,\r\n  Component,\r\n  ContentChild,\r\n  OnDestroy,\r\n  TemplateRef,\r\n} from '@angular/core';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { filter, take, takeUntil } from 'rxjs/operators';\r\nimport { Subject } from 'rxjs';\r\nimport { ZyfraTemplateModule, ZyfraTemplateDirective } from '../@core/shared/zyfra-template.module';\r\n\r\n@Component({ template: 'Страница 1' })\r\nclass Page1Component {}\r\n\r\n@Component({ template: 'Страница 2' })\r\nclass Page2Component {}\r\n\r\n@Component({ template: 'Страница 3' })\r\nclass Page3Component {}\r\n\r\n@Component({\r\n  selector: 'wrapper',\r\n  template: '<ng-container *ngTemplateOutlet=\"tmpl\"></ng-container>'\r\n})\r\n\r\nclass WrapperComponent implements AfterViewInit, OnDestroy {\r\n  @ContentChild(ZyfraTemplateDirective) template: ZyfraTemplateDirective;\r\n  tmpl: TemplateRef<any>;\r\n\r\n  private destroyed$ = new Subject<void>();\r\n\r\n  constructor(private router: Router) { }\r\n\r\n  ngAfterViewInit(): void {\r\n    this.router.events\r\n      .pipe(\r\n        filter(event => event instanceof NavigationEnd),\r\n        take(1),\r\n        takeUntil(this.destroyed$)\r\n      )\r\n      .subscribe(() => this.tmpl = this.template.templateRef);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.destroyed$.next();\r\n    this.destroyed$.complete();\r\n  }\r\n}\r\n\r\nconst routes: Routes = [\r\n  { path: 'page1', component: Page1Component },\r\n  { path: 'page2', component: Page2Component },\r\n  { path: 'page3', component: Page3Component }\r\n];\r\n\r\nexport default {\r\n  title: 'Menu/NavMenu',\r\n  component: ZyfraNavMenuComponent,\r\n  decorators: [\r\n    moduleMetadata({\r\n      declarations: [\r\n        Page1Component,\r\n        Page2Component,\r\n        Page3Component,\r\n        WrapperComponent\r\n      ],\r\n      imports: [\r\n        BrowserAnimationsModule,\r\n        ZyfraNavMenuModule,\r\n        ZyfraSplitterModule,\r\n        ZyfraTemplateModule,\r\n        BadgeModule,\r\n        RouterModule.forRoot(routes, { useHash: true })\r\n      ],\r\n      providers: [{ provide: APP_BASE_HREF, useValue: '/' }]\r\n    })\r\n  ],\r\n  parameters: {\r\n    docs: {\r\n      page: require('./zyfra-nav-menu.component.story.doc.mdx').default,\r\n    },\r\n  },\r\n} as Meta<ZyfraNavMenuComponent>;\r\n\r\nconst actions = {\r\n  activeItemChange: action('activeItemChange'),\r\n  homeClick: action('homeClick'),\r\n  selectionChange: action('selectionChange'),\r\n  nodeCollapse: action('nodeCollapse'),\r\n  nodeExpand: action('nodeExpand'),\r\n};\r\n\r\nconst BasicTemplate: Story = (args) => ({\r\n  template:\r\n      `<wrapper>\r\n          <ng-template zyfraTemplate>\r\n              <zyfra-splitter layout=\"horizontal\" [panelSizes]=\"[25,75]\" [style]=\"{ height: '600px' }\">\r\n                  <ng-template zyfraSplitterTemplate>\r\n                      <zyfra-nav-menu [model]=\"model\"\r\n                                      [menuTitle]=\"menuTitle\"\r\n                                      [headerConfig]=\"headerConfig\"\r\n                                      [settingsConfig]=\"settingsConfig\"\r\n                                      [toolbarConfig]=\"toolbarConfig\"\r\n                                      [emptyMessage]=\"emptyMessage\"\r\n                                      (activeItemChange)=\"activeItemChange($event)\"\r\n                                      (selectionChange)=\"selectionChange($event)\"\r\n                                      (homeClick)=\"homeClick($event)\"\r\n                                      (nodeExpand)=\"nodeExpand($event)\"\r\n                                      (nodeCollapse)=\"nodeCollapse($event)\">\r\n                    </zyfra-nav-menu>\r\n                  </ng-template>\r\n                  <ng-template zyfraSplitterTemplate>\r\n                      <router-outlet></router-outlet>\r\n                  </ng-template>\r\n              </zyfra-splitter>\r\n          </ng-template>\r\n      </wrapper>`,\r\n  props: {\r\n    ...args,\r\n    ...actions\r\n  },\r\n});\r\n\r\nexport const Basic = BasicTemplate.bind({});\r\nBasic.args = {\r\n  model: [...basic],\r\n  menuTitle: 'Наименование приложения'\r\n};\r\n\r\nexport const BasicWithIcons = BasicTemplate.bind({});\r\nBasicWithIcons.args = {\r\n  model: [...basicWithIcons],\r\n  menuTitle: 'Наименование приложения',\r\n  headerConfig: {\r\n    home: true\r\n  }\r\n};\r\n\r\nexport const SubItems = BasicTemplate.bind({});\r\nSubItems.args = {\r\n  model: [...subItems],\r\n  menuTitle: 'Наименование приложения',\r\n  headerConfig: {\r\n    home: true\r\n  }\r\n};\r\n\r\nexport const EnlargedSize = BasicTemplate.bind({});\r\nEnlargedSize.args = {\r\n  model: [...subItems],\r\n  menuTitle: 'Наименование приложения',\r\n  headerConfig: {\r\n    home: true\r\n  },\r\n  settingsConfig: {\r\n    selectedSize: 'enlarged'\r\n  },\r\n};\r\n\r\nconst ExtraItemTemplate: Story = (args) => ({\r\n  template:\r\n      `<wrapper>\r\n          <ng-template zyfraTemplate>\r\n              <zyfra-splitter layout=\"horizontal\" [panelSizes]=\"[25,75]\" [style]=\"{ height: '600px' }\">\r\n                  <ng-template zyfraSplitterTemplate>\r\n                      <zyfra-nav-menu [model]=\"model\"\r\n                                      [menuTitle]=\"menuTitle\"\r\n                                      [emptyMessage]=\"emptyMessage\"\r\n                                      [headerConfig]=\"headerConfig\"\r\n                                      [settingsConfig]=\"settingsConfig\"\r\n                                      [toolbarConfig]=\"toolbarConfig\"\r\n                                      (activeItemChange)=\"activeItemChange($event)\"\r\n                                      (selectionChange)=\"selectionChange($event)\"\r\n                                      (homeClick)=\"homeClick($event)\"\r\n                                      (nodeExpand)=\"nodeExpand($event)\"\r\n                                      (nodeCollapse)=\"nodeCollapse($event)\">\r\n\r\n                           <ng-template let-item zyfraTemplate='menuitem'>\r\n                                  <p-badge *ngIf=\"item?.badge\" styleClass=\"p-badge-dot\" [severity]=\"item.badge\"></p-badge>\r\n                          </ng-template>\r\n\r\n                          <ng-template zyfraTemplate='toolbar'>\r\n                              <i class=\"toolbar-button zyfra-icon files-upload\"></i>\r\n                              <i class=\"toolbar-button zyfra-icon files-download\"></i>\r\n                          </ng-template>\r\n\r\n                          <ng-template zyfraTemplate='header'>\r\n                              <i class=\"toolbar-button zyfra-icon charts-pie\"></i>\r\n                          </ng-template>\r\n                    </zyfra-nav-menu>\r\n                  </ng-template>\r\n                  <ng-template zyfraSplitterTemplate>\r\n                      <router-outlet></router-outlet>\r\n                  </ng-template>\r\n              </zyfra-splitter>\r\n          </ng-template>\r\n      </wrapper>`,\r\n  props: {\r\n    ...args,\r\n    ...actions\r\n  },\r\n});\r\n\r\nexport const ExtraTemplates = ExtraItemTemplate.bind({});\r\nExtraTemplates.args = {\r\n  model: [...subItems],\r\n  menuTitle: 'Наименование приложения'\r\n};\r\n\r\nexport const MultipleSelection = BasicTemplate.bind({});\r\nMultipleSelection.args = {\r\n  model: [...subItems],\r\n  menuTitle: 'Наименование приложения',\r\n  headerConfig: {\r\n    home: true\r\n  },\r\n  settingsConfig: {\r\n    selectionMode: 'checkbox'\r\n  }\r\n};\r\n\r\nexport const Search = BasicTemplate.bind({});\r\nSearch.args = {\r\n  model: [...subItems],\r\n  menuTitle: 'Наименование приложения',\r\n  searchPlaceholder: 'Введите текст',\r\n  emptyMessage: '<Нет данных для отображения>',\r\n  headerConfig: {\r\n    home: true\r\n  },\r\n  toolbarConfig: {\r\n    search: true,\r\n    closeAll: true\r\n  }\r\n};\r\n\r\nexport const FolderMode = BasicTemplate.bind({});\r\nFolderMode.args = {\r\n  model: [...subItems],\r\n  menuTitle: 'Наименование приложения',\r\n  searchPlaceholder: 'Введите текст',\r\n  headerConfig: {\r\n    home: true\r\n  },\r\n  toolbarConfig: {\r\n    filesMode: true,\r\n    search: true,\r\n    closeAll: true\r\n  }\r\n};\r\n\r\nexport const RubricatorMode = BasicTemplate.bind({});\r\nRubricatorMode.args = {\r\n  model: [...subItemsRubricator],\r\n  menuTitle: 'Наименование приложения',\r\n  searchPlaceholder: 'Введите текст',\r\n  headerConfig: {\r\n    home: true\r\n  },\r\n  toolbarConfig: {\r\n    filesMode: true,\r\n    rubricatorMode: true,\r\n    search: true\r\n  }\r\n};\r\n\r\nconst GroupPanelTemplate: Story = (args) => ({\r\n  template:\r\n      `<wrapper>\r\n          <ng-template zyfraTemplate>\r\n              <zyfra-splitter layout=\"horizontal\" [panelSizes]=\"[25,75]\" [style]=\"{ height: '600px' }\">\r\n                  <ng-template zyfraSplitterTemplate>\r\n                      <zyfra-nav-menu [menuTitle]=\"menuTitle\"\r\n                                      [emptyMessage]=\"emptyMessage\"\r\n                                      [headerConfig]=\"headerConfig\"\r\n                                      [settingsConfig]=\"settingsConfig\"\r\n                                      [toolbarConfig]=\"toolbarConfig\"\r\n                                      [searchPlaceholder]=\"searchPlaceholder\"\r\n                                      (homeClick)=\"homeClick($event)\"\r\n                                      (activeItemChange)=\"activeItemChange($event)\"\r\n                                      (nodeCollapse)=\"nodeCollapse($event)\"\r\n                                      (nodeExpand)=\"nodeExpand($event)\"\r\n                                      (selectionChange)=\"selectionChange($event)\">\r\n                      <ng-template zyfraNavMenuGroup\r\n                                   [header]=\"header1\"\r\n                                   [items]=\"items1\"></ng-template>\r\n\r\n                      <ng-template zyfraNavMenuGroup\r\n                                   [header]=\"header2\"\r\n                                   [items]=\"items2\"></ng-template>\r\n\r\n                      <ng-template zyfraNavMenuGroup\r\n                                   [header]=\"header3\"\r\n                                   [items]=\"items3\"></ng-template>\r\n                      </zyfra-nav-menu>\r\n                  </ng-template>\r\n                  <ng-template zyfraSplitterTemplate>\r\n                      <router-outlet></router-outlet>\r\n                  </ng-template>\r\n              </zyfra-splitter>\r\n          </ng-template>\r\n      </wrapper>`,\r\n  props: {\r\n    ...args,\r\n    ...actions\r\n  },\r\n});\r\n\r\nexport const GroupPanels = GroupPanelTemplate.bind({});\r\nGroupPanels.args = {\r\n  header1: 'Групповая панель 1',\r\n  header2: 'Групповая панель 2',\r\n  header3: 'Групповая панель 3',\r\n  items1: [ ...subItems],\r\n  items2: [...basicWithIcons],\r\n  items3: [...basic],\r\n  menuTitle: 'Наименование приложения',\r\n  searchPlaceholder: 'Введите текст',\r\n  headerConfig: {\r\n    home: true\r\n  },\r\n  toolbarConfig: {\r\n    filesMode: true,\r\n    search: true\r\n  }\r\n};\r\n\r\nexport const SingleGroupPanel = GroupPanelTemplate.bind({});\r\nSingleGroupPanel.args = {\r\n  header1: 'Групповая панель 1',\r\n  header2: 'Групповая панель 2',\r\n  header3: 'Групповая панель 3',\r\n  items1: [...subItems],\r\n  items2: [...basicWithIcons],\r\n  items3: [...basic],\r\n  menuTitle: 'Наименование приложения',\r\n  searchPlaceholder: 'Введите текст',\r\n  headerConfig: {\r\n    home: true\r\n  },\r\n  settingsConfig: {\r\n    selectionMode: 'checkbox',\r\n    singleGroup: true,\r\n  },\r\n  toolbarConfig: {\r\n    filesMode: true,\r\n    search: true\r\n  }\r\n};\r\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "deprecated": false,
        "deprecationMessage": "",
        "args": [
          {
            "name": "router",
            "type": "Router",
            "deprecated": false,
            "deprecationMessage": ""
          }
        ],
        "line": 40,
        "jsdoctags": [
          {
            "name": "router",
            "type": "Router",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      "implements": ["AfterViewInit", "OnDestroy"]
    },
    {
      "name": "ZyfraAccordionComponent",
      "id": "component-ZyfraAccordionComponent-e16615dedc4e5e24cb7a17d14fe9a38b",
      "file": "libs/components/src/lib/accordion/zyfra-accordion/zyfra-accordion.component.ts",
      "changeDetection": "ChangeDetectionStrategy.OnPush",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [
        {
          "name": "{\n    provide: Accordion, useFactory: (zyfraAccordion: ZyfraAccordionComponent): Accordion => zyfraAccordion.accordion, deps: [ZyfraAccordionComponent],\n}",
          "type": "component",
          "ns": "{\n    provide: Accordion, useFactory: (zyfraAccordion: ZyfraAccordionComponent): Accordion => zyfraAccordion"
        }
      ],
      "selector": "zyfra-accordion",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./zyfra-accordion.component.html"],
      "viewProviders": [],
      "inputsClass": [
        {
          "name": "collapseIcon",
          "defaultValue": "'zyfra-icon chevrons-double-down'",
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "collapse icon class",
          "description": "<p>collapse icon class</p>\n",
          "line": 45,
          "type": "string"
        },
        {
          "name": "expandIcon",
          "defaultValue": "'zyfra-icon chevrons-double-up'",
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "expand icon class",
          "description": "<p>expand icon class</p>\n",
          "line": 43,
          "type": "string"
        },
        {
          "name": "multiple",
          "defaultValue": "false",
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "allow multiple tabs be active at the same time.",
          "description": "<p>allow multiple tabs be active at the same time.</p>\n",
          "line": 37,
          "type": "boolean"
        },
        {
          "name": "style",
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "inline style",
          "description": "<p>inline style</p>\n",
          "line": 39,
          "type": "literal type"
        },
        {
          "name": "styleClass",
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "css class",
          "description": "<p>css class</p>\n",
          "line": 41,
          "type": "string"
        }
      ],
      "outputsClass": [
        {
          "name": "activeIndexChange",
          "defaultValue": "new EventEmitter()",
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "\nEventEmitter",
          "description": "<p>EventEmitter</p>\n",
          "line": 48,
          "type": "EventEmitter<number | []>"
        },
        {
          "name": "onClose",
          "defaultValue": "new EventEmitter()",
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "\nEventEmitter on closing tab",
          "description": "<p>EventEmitter on closing tab</p>\n",
          "line": 50,
          "type": "EventEmitter<ZyfraAccordionOpenClose>"
        },
        {
          "name": "onOpen",
          "defaultValue": "new EventEmitter()",
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "\nEventEmitter on opening tab",
          "description": "<p>EventEmitter on opening tab</p>\n",
          "line": 52,
          "type": "EventEmitter<ZyfraAccordionOpenClose>"
        }
      ],
      "propertiesClass": [
        {
          "name": "accordion",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Accordion",
          "optional": false,
          "description": "<p>primeng Accordion component</p>\n",
          "line": 55,
          "rawdescription": "\nprimeng Accordion component",
          "decorators": [
            {
              "name": "ViewChild",
              "stringifiedArguments": "Accordion, {static: true}"
            }
          ]
        },
        {
          "name": "tabs",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "QueryList<ZyfraAccordionTabComponent>",
          "optional": false,
          "description": "<p>zyfra AccordionTab component</p>\n",
          "line": 57,
          "rawdescription": "\nzyfra AccordionTab component",
          "decorators": [
            {
              "name": "ContentChildren",
              "stringifiedArguments": "ZyfraAccordionTabComponent"
            }
          ]
        },
        {
          "name": "tabs$",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Subscription",
          "optional": false,
          "description": "",
          "line": 59,
          "modifierKind": [121]
        }
      ],
      "methodsClass": [
        {
          "name": "ngAfterViewInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 67,
          "deprecated": false,
          "deprecationMessage": ""
        },
        {
          "name": "ngOnDestroy",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 78,
          "deprecated": false,
          "deprecationMessage": ""
        },
        {
          "name": "ngOnInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 61,
          "deprecated": false,
          "deprecationMessage": ""
        },
        {
          "name": "reInitTab",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 72,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [123]
        }
      ],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import {\r\n  AfterViewInit,\r\n  ChangeDetectionStrategy,\r\n  Component,\r\n  ContentChildren,\r\n  EventEmitter,\r\n  Input,\r\n  OnDestroy,\r\n  OnInit,\r\n  Output,\r\n  QueryList,\r\n  ViewChild,\r\n} from '@angular/core';\r\nimport { Accordion } from 'primeng/accordion';\r\nimport { ZyfraAccordionTabComponent } from '../zyfra-accordion-tab/zyfra-accordion-tab.component';\r\nimport { Subscription } from 'rxjs';\r\n\r\nexport interface ZyfraAccordionOpenClose {\r\n  originalEvent: PointerEvent;\r\n  index: number;\r\n}\r\n\r\n@Component({\r\n  selector: 'zyfra-accordion',\r\n  templateUrl: './zyfra-accordion.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  providers: [\r\n    {\r\n      provide: Accordion,\r\n      useFactory: (zyfraAccordion: ZyfraAccordionComponent): Accordion => zyfraAccordion.accordion,\r\n      deps: [ZyfraAccordionComponent],\r\n    },\r\n  ],\r\n})\r\nexport class ZyfraAccordionComponent implements AfterViewInit, OnDestroy, OnInit {\r\n  /** allow multiple tabs be active at the same time. */\r\n  @Input() multiple = false;\r\n  /** inline style */\r\n  @Input() style: { [key: string]: string | number | null };\r\n  /** css class */\r\n  @Input() styleClass: string;\r\n  /** expand icon class */\r\n  @Input() expandIcon = 'zyfra-icon chevrons-double-up';\r\n  /** collapse icon class */\r\n  @Input() collapseIcon = 'zyfra-icon chevrons-double-down';\r\n\r\n  /** EventEmitter  */\r\n  @Output() activeIndexChange: EventEmitter<number | number[]> = new EventEmitter();\r\n  /** EventEmitter on closing tab */\r\n  @Output() onClose: EventEmitter<ZyfraAccordionOpenClose> = new EventEmitter();\r\n  /** EventEmitter on opening tab */\r\n  @Output() onOpen: EventEmitter<ZyfraAccordionOpenClose> = new EventEmitter();\r\n\r\n  /** primeng Accordion component */\r\n  @ViewChild(Accordion, { static: true }) accordion: Accordion;\r\n  /** zyfra AccordionTab component */\r\n  @ContentChildren(ZyfraAccordionTabComponent) tabs: QueryList<ZyfraAccordionTabComponent>;\r\n\r\n  private tabs$: Subscription;\r\n\r\n  ngOnInit(): void {\r\n    // Иначе в group-panels работает не корректно\r\n    this.accordion.collapseIcon = this.collapseIcon;\r\n    this.accordion.expandIcon = this.expandIcon;\r\n  }\r\n  \r\n  ngAfterViewInit(): void {\r\n    this.tabs$ = this.tabs.changes.subscribe(() => this.reInitTab());\r\n    this.reInitTab();\r\n  }\r\n\r\n  public reInitTab(): void {\r\n    const primengAccordionTabs = this.tabs.toArray().map((t) => t.tab);\r\n    this.accordion.tabList.reset(primengAccordionTabs);\r\n    this.accordion.tabList.notifyOnChanges();\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.tabs$?.unsubscribe();\r\n  }\r\n}\r\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "implements": ["AfterViewInit", "OnDestroy", "OnInit"],
      "templateData": "<p-accordion\r\n  [multiple]=\"multiple\"\r\n  [style]=\"style\"\r\n  [styleClass]=\"styleClass\"\r\n  [expandIcon]=\"expandIcon\"\r\n  [collapseIcon]=\"collapseIcon\"\r\n  (activeIndexChange)=\"activeIndexChange.emit($event)\"\r\n  (onOpen)=\"onOpen.emit($event)\"\r\n  (onClose)=\"onClose.emit($event)\"\r\n>\r\n  <ng-content></ng-content>\r\n</p-accordion>\r\n"
    },
    {
      "name": "ZyfraAccordionTabComponent",
      "id": "component-ZyfraAccordionTabComponent-c8649e82f51df83efd6f1b3171cfdbec",
      "file": "libs/components/src/lib/accordion/zyfra-accordion-tab/zyfra-accordion-tab.component.ts",
      "changeDetection": "ChangeDetectionStrategy.OnPush",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "zyfra-accordion-tab",
      "styleUrls": [],
      "styles": ["\n      :host {\n        display: contents;\n      }\n    "],
      "templateUrl": ["./zyfra-accordion-tab.component.html"],
      "viewProviders": [],
      "inputsClass": [
        {
          "name": "cache",
          "defaultValue": "true",
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "Whether a lazy loaded panel should avoid getting loaded again on reselection",
          "description": "<p>Whether a lazy loaded panel should avoid getting loaded again on reselection</p>\n",
          "line": 36,
          "type": "boolean"
        },
        {
          "name": "disabled",
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "Defines whether the tab can be selected",
          "description": "<p>Defines whether the tab can be selected</p>\n",
          "line": 34,
          "type": "boolean"
        },
        {
          "name": "header",
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "Title of the tab",
          "description": "<p>Title of the tab</p>\n",
          "line": 32,
          "type": "string"
        },
        {
          "name": "selected",
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "Defines if the tab is active",
          "description": "<p>Defines if the tab is active</p>\n",
          "line": 40,
          "type": "boolean"
        },
        {
          "name": "transitionOptions",
          "defaultValue": "'200ms cubic-bezier(0.86, 0, 0.07, 1)'",
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "Transition options of the animation",
          "description": "<p>Transition options of the animation</p>\n",
          "line": 38,
          "type": "string"
        }
      ],
      "outputsClass": [
        {
          "name": "selectedChange",
          "defaultValue": "new EventEmitter()",
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "\ntab activeness",
          "description": "<p>tab activeness</p>\n",
          "line": 42,
          "type": "EventEmitter<>"
        }
      ],
      "propertiesClass": [
        {
          "name": "contentFacet",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "TemplateRef<>",
          "optional": false,
          "description": "",
          "line": 48
        },
        {
          "name": "headerFacet",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "TemplateRef<>",
          "optional": false,
          "description": "",
          "line": 47
        },
        {
          "name": "iconsFacet",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "TemplateRef<>",
          "optional": false,
          "description": "",
          "line": 49
        },
        {
          "name": "tab",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "AccordionTab",
          "optional": false,
          "description": "",
          "line": 45,
          "decorators": [
            {
              "name": "ViewChild",
              "stringifiedArguments": "AccordionTab"
            }
          ]
        },
        {
          "name": "templates",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "QueryList<ZyfraTemplateDirective>",
          "optional": false,
          "description": "",
          "line": 44,
          "decorators": [
            {
              "name": "ContentChildren",
              "stringifiedArguments": "ZyfraTemplateDirective"
            }
          ]
        }
      ],
      "methodsClass": [
        {
          "name": "ngAfterContentInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 53,
          "deprecated": false,
          "deprecationMessage": ""
        },
        {
          "name": "ngAfterViewInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 68,
          "deprecated": false,
          "deprecationMessage": ""
        }
      ],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import {\r\n  AfterContentInit,\r\n  AfterViewInit,\r\n  ChangeDetectionStrategy,\r\n  ChangeDetectorRef,\r\n  Component,\r\n  ContentChildren,\r\n  EventEmitter,\r\n  Input,\r\n  Output,\r\n  QueryList,\r\n  TemplateRef,\r\n  ViewChild,\r\n} from '@angular/core';\r\nimport { ZyfraTemplateDirective } from '../../@core/shared/zyfra-template.module';\r\nimport { AccordionTab } from 'primeng/accordion';\r\n\r\n@Component({\r\n  selector: 'zyfra-accordion-tab',\r\n  templateUrl: './zyfra-accordion-tab.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  styles: [\r\n    `\r\n      :host {\r\n        display: contents;\r\n      }\r\n    `,\r\n  ],\r\n})\r\nexport class ZyfraAccordionTabComponent implements AfterContentInit, AfterViewInit {\r\n  /** Title of the tab */\r\n  @Input() header: string;\r\n  /** Defines whether the tab can be selected */\r\n  @Input() disabled: boolean;\r\n  /** Whether a lazy loaded panel should avoid getting loaded again on reselection */\r\n  @Input() cache = true;\r\n  /** Transition options of the animation */\r\n  @Input() transitionOptions = '200ms cubic-bezier(0.86, 0, 0.07, 1)';\r\n  /** Defines if the tab is active */\r\n  @Input() selected: boolean;\r\n  /** tab activeness */\r\n  @Output() selectedChange: EventEmitter<unknown> = new EventEmitter();\r\n\r\n  @ContentChildren(ZyfraTemplateDirective) templates: QueryList<ZyfraTemplateDirective>;\r\n  @ViewChild(AccordionTab) tab: AccordionTab;\r\n\r\n  headerFacet: TemplateRef<unknown>;\r\n  contentFacet: TemplateRef<unknown>;\r\n  iconsFacet: TemplateRef<unknown>;\r\n\r\n  constructor(private cd: ChangeDetectorRef) {}\r\n\r\n  ngAfterContentInit(): void {\r\n    this.templates.forEach((t) => {\r\n      if (t.zyfraTemplate === 'header') {\r\n        this.headerFacet = t.templateRef;\r\n      } else if (t.zyfraTemplate === 'icons') {\r\n        this.iconsFacet = t.templateRef;\r\n      } else {\r\n        this.contentFacet = t.templateRef;\r\n      }\r\n    });\r\n    if (!!this.iconsFacet && !this.headerFacet) {\r\n      throw new Error('icon template can only be used with header template');\r\n    }\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    this.cd.detectChanges();\r\n  }\r\n}\r\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "\n      :host {\n        display: contents;\n      }\n    \n",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "deprecated": false,
        "deprecationMessage": "",
        "args": [
          {
            "name": "cd",
            "type": "ChangeDetectorRef",
            "deprecated": false,
            "deprecationMessage": ""
          }
        ],
        "line": 49,
        "jsdoctags": [
          {
            "name": "cd",
            "type": "ChangeDetectorRef",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      "implements": ["AfterContentInit", "AfterViewInit"],
      "templateData": "<p-accordionTab\r\n  [disabled]=\"disabled\"\r\n  [header]=\"header\"\r\n  [cache]=\"cache\"\r\n  [selected]=\"selected\"\r\n  [transitionOptions]=\"transitionOptions\"\r\n  (selectedChange)=\"selectedChange.emit($event)\"\r\n>\r\n  <ng-template pTemplate=\"header\" *ngIf=\"!!headerFacet\">\r\n    <div [class.zyfra-accordion-header__left]=\"!!iconsFacet\">\r\n      <ng-container *ngTemplateOutlet=\"headerFacet\"></ng-container>\r\n      <div class=\"zyfra-accordion-header-extra-icons\" *ngIf=\"!!iconsFacet\">\r\n        <ng-container *ngTemplateOutlet=\"iconsFacet\"></ng-container>\r\n      </div>\r\n    </div>\r\n  </ng-template>\r\n  <ng-template pTemplate=\"content\" *ngIf=\"!!contentFacet; else noContentFacet\">\r\n    <ng-container *ngTemplateOutlet=\"contentFacet\"></ng-container>\r\n  </ng-template>\r\n  <ng-template #noContentFacet>\r\n    <ng-content></ng-content>\r\n  </ng-template>\r\n</p-accordionTab>\r\n"
    },
    {
      "name": "ZyfraAutoCompleteComponent",
      "id": "component-ZyfraAutoCompleteComponent-5fc1fc0a71adb1bf2096cb3e19ac9246",
      "file": "libs/components/src/lib/auto-complete/zyfra-auto-complete.component.ts",
      "changeDetection": "ChangeDetectionStrategy.OnPush",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "zyfra-auto-complete",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./zyfra-auto-complete.component.html"],
      "viewProviders": [],
      "inputsClass": [
        {
          "name": "appendTo",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 51,
          "type": "any"
        },
        {
          "name": "ariaLabel",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 67,
          "type": "string"
        },
        {
          "name": "ariaLabelledBy",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 68,
          "type": "string"
        },
        {
          "name": "autocomplete",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 70,
          "type": "string"
        },
        {
          "name": "autofocus",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 60,
          "type": "boolean"
        },
        {
          "name": "autoHighlight",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 54,
          "type": "boolean"
        },
        {
          "name": "autoZIndex",
          "defaultValue": "true",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 64,
          "type": "boolean"
        },
        {
          "name": "baseZIndex",
          "defaultValue": "0",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 63,
          "type": "number"
        },
        {
          "name": "completeOnFocus",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 34,
          "type": "boolean"
        },
        {
          "name": "dataKey",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 53,
          "type": "string"
        },
        {
          "name": "delay",
          "defaultValue": "300",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 33,
          "type": "number"
        },
        {
          "name": "disabled",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 48,
          "type": "boolean"
        },
        {
          "name": "dropdown",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 29,
          "type": "boolean"
        },
        {
          "name": "dropdownIcon",
          "defaultValue": "'zyfra-icon chevrons-down'",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 31,
          "type": "string"
        },
        {
          "name": "dropdownMode",
          "defaultValue": "'blank'",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 62,
          "type": "string"
        },
        {
          "name": "emptyMessage",
          "defaultValue": "'No records found.'",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 57,
          "type": "string"
        },
        {
          "name": "field",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 27,
          "type": "string"
        },
        {
          "name": "forceSelection",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 61,
          "type": "boolean"
        },
        {
          "name": "group",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 44,
          "type": "boolean"
        },
        {
          "name": "hideTransitionOptions",
          "defaultValue": "'.1s linear'",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 66,
          "type": "string"
        },
        {
          "name": "immutable",
          "defaultValue": "true",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 58,
          "type": "boolean"
        },
        {
          "name": "inputId",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 41,
          "type": "string"
        },
        {
          "name": "inputStyle",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 36,
          "type": "string"
        },
        {
          "name": "inputStyleClass",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 39,
          "type": "string"
        },
        {
          "name": "itemSize",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 72,
          "type": "number"
        },
        {
          "name": "label",
          "defaultValue": "''",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 73,
          "type": "string"
        },
        {
          "name": "maxlength",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 49,
          "type": "number"
        },
        {
          "name": "minLength",
          "defaultValue": "1",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 32,
          "type": "number"
        },
        {
          "name": "multiple",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 30,
          "type": "boolean"
        },
        {
          "name": "name",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 42,
          "type": "string"
        },
        {
          "name": "optionGroupChildren",
          "defaultValue": "'items'",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 45,
          "type": "string"
        },
        {
          "name": "optionGroupLabel",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 43,
          "type": "string"
        },
        {
          "name": "panelStyle",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 37,
          "type": "string"
        },
        {
          "name": "panelStyleClass",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 40,
          "type": "string"
        },
        {
          "name": "placeholder",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 46,
          "type": "string"
        },
        {
          "name": "readonly",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 47,
          "type": "boolean"
        },
        {
          "name": "required",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 59,
          "type": "boolean"
        },
        {
          "name": "scrollHeight",
          "defaultValue": "'200px'",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 28,
          "type": "string"
        },
        {
          "name": "showEmptyMessage",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 56,
          "type": "boolean"
        },
        {
          "name": "showTransitionOptions",
          "defaultValue": "'.12s cubic-bezier(0, 0, 0.2, 1)'",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 65,
          "type": "string"
        },
        {
          "name": "size",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 50,
          "type": "number"
        },
        {
          "name": "style",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 35,
          "type": "string"
        },
        {
          "name": "styleClass",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 38,
          "type": "string"
        },
        {
          "name": "suggestions",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 26,
          "type": "T[]"
        },
        {
          "name": "tabindex",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 52,
          "type": "number"
        },
        {
          "name": "type",
          "defaultValue": "'text'",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 55,
          "type": "string"
        },
        {
          "name": "unique",
          "defaultValue": "true",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 69,
          "type": "boolean"
        },
        {
          "name": "virtualScroll",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 71,
          "type": "boolean"
        }
      ],
      "outputsClass": [
        {
          "name": "completeMethod",
          "defaultValue": "new EventEmitter<{ originalEvent: InputEvent | PointerEvent; query: string }>()",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 75,
          "type": "EventEmitter"
        },
        {
          "name": "onBlur",
          "defaultValue": "new EventEmitter<FocusEvent>()",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 77,
          "type": "EventEmitter"
        },
        {
          "name": "onClear",
          "defaultValue": "new EventEmitter<InputEvent>()",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 82,
          "type": "EventEmitter"
        },
        {
          "name": "onDropdownClick",
          "defaultValue": "new EventEmitter<PointerEvent>()",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 81,
          "type": "EventEmitter"
        },
        {
          "name": "onFocus",
          "defaultValue": "new EventEmitter<FocusEvent>()",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 76,
          "type": "EventEmitter"
        },
        {
          "name": "onHide",
          "defaultValue": "new EventEmitter<void>()",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 84,
          "type": "EventEmitter"
        },
        {
          "name": "onKeyUp",
          "defaultValue": "new EventEmitter<KeyboardEvent>()",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 78,
          "type": "EventEmitter"
        },
        {
          "name": "onSelect",
          "defaultValue": "new EventEmitter<T>()",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 79,
          "type": "EventEmitter"
        },
        {
          "name": "onShow",
          "defaultValue": "new EventEmitter<AnimationEvent>()",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 83,
          "type": "EventEmitter"
        },
        {
          "name": "onUnselect",
          "defaultValue": "new EventEmitter<unknown>()",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 80,
          "type": "EventEmitter"
        }
      ],
      "propertiesClass": [
        {
          "name": "itemTemplate",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "TemplateRef<>",
          "optional": false,
          "description": "",
          "line": 86
        },
        {
          "name": "selectedItemTemplate",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "TemplateRef<>",
          "optional": false,
          "description": "",
          "line": 87
        },
        {
          "name": "templates",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "QueryList<ZyfraTemplateDirective>",
          "optional": false,
          "description": "",
          "line": 89,
          "decorators": [
            {
              "name": "ContentChildren",
              "stringifiedArguments": "ZyfraTemplateDirective"
            }
          ]
        },
        {
          "name": "formControl",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "FormControl",
          "optional": false,
          "description": "",
          "line": 7,
          "modifierKind": [123, 143],
          "inheritance": {
            "file": "WrappedFormComponent"
          }
        },
        {
          "name": "injector",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Injector",
          "optional": false,
          "description": "",
          "line": 9,
          "modifierKind": [123, 143],
          "inheritance": {
            "file": "WrappedFormComponent"
          }
        },
        {
          "name": "ngControl",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "NgControl",
          "optional": false,
          "description": "",
          "line": 9,
          "decorators": [
            {
              "name": "Optional",
              "stringifiedArguments": ""
            },
            {
              "name": "Self",
              "stringifiedArguments": ""
            }
          ],
          "modifierKind": [123, 143],
          "inheritance": {
            "file": "WrappedFormComponent"
          }
        }
      ],
      "methodsClass": [
        {
          "name": "ngAfterContentInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 91,
          "deprecated": false,
          "deprecationMessage": ""
        },
        {
          "name": "setDisabledState",
          "args": [
            {
              "name": "isDisabled",
              "type": "boolean",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 101,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [123, 157],
          "jsdoctags": [
            {
              "name": "isDisabled",
              "type": "boolean",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ],
          "inheritance": {
            "file": "WrappedFormComponent"
          }
        }
      ],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import {\r\n  AfterContentInit,\r\n  ChangeDetectionStrategy,\r\n  Component,\r\n  ContentChildren,\r\n  EventEmitter,\r\n  Input,\r\n  Output,\r\n  QueryList,\r\n  TemplateRef\r\n} from '@angular/core';\r\nimport { AnimationEvent } from '@angular/animations';\r\nimport { ControlValueAccessor } from '@angular/forms';\r\nimport { ZyfraTemplateDirective } from '../@core/shared/zyfra-template.module';\r\nimport { WrappedFormComponent } from '../@core/value-accessor/wrapped-form.component';\r\n\r\n@Component({\r\n  selector: 'zyfra-auto-complete',\r\n  templateUrl: './zyfra-auto-complete.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class ZyfraAutoCompleteComponent<T = unknown>\r\n  extends WrappedFormComponent\r\n  implements ControlValueAccessor, AfterContentInit\r\n{\r\n  @Input() suggestions: T[];\r\n  @Input() field: string;\r\n  @Input() scrollHeight = '200px';\r\n  @Input() dropdown: boolean;\r\n  @Input() multiple: boolean;\r\n  @Input() dropdownIcon = 'zyfra-icon chevrons-down';\r\n  @Input() minLength = 1;\r\n  @Input() delay = 300;\r\n  @Input() completeOnFocus: boolean;\r\n  @Input() style: string;\r\n  @Input() inputStyle: string;\r\n  @Input() panelStyle: string;\r\n  @Input() styleClass: string;\r\n  @Input() inputStyleClass: string;\r\n  @Input() panelStyleClass: string;\r\n  @Input() inputId: string;\r\n  @Input() name: string;\r\n  @Input() optionGroupLabel: string;\r\n  @Input() group: boolean;\r\n  @Input() optionGroupChildren = 'items';\r\n  @Input() placeholder: string;\r\n  @Input() readonly: boolean;\r\n  @Input() disabled: boolean;\r\n  @Input() maxlength: number;\r\n  @Input() size: number;\r\n  @Input() appendTo: any;\r\n  @Input() tabindex: number;\r\n  @Input() dataKey: string;\r\n  @Input() autoHighlight: boolean;\r\n  @Input() type = 'text';\r\n  @Input() showEmptyMessage: boolean;\r\n  @Input() emptyMessage = 'No records found.';\r\n  @Input() immutable = true;\r\n  @Input() required: boolean;\r\n  @Input() autofocus: boolean;\r\n  @Input() forceSelection: boolean;\r\n  @Input() dropdownMode = 'blank';\r\n  @Input() baseZIndex = 0;\r\n  @Input() autoZIndex = true;\r\n  @Input() showTransitionOptions = '.12s cubic-bezier(0, 0, 0.2, 1)';\r\n  @Input() hideTransitionOptions = '.1s linear';\r\n  @Input() ariaLabel: string;\r\n  @Input() ariaLabelledBy: string;\r\n  @Input() unique = true;\r\n  @Input() autocomplete: string;\r\n  @Input() virtualScroll: boolean;\r\n  @Input() itemSize: number;\r\n  @Input() label = '';\r\n\r\n  @Output() completeMethod = new EventEmitter<{ originalEvent: InputEvent | PointerEvent; query: string }>();\r\n  @Output() onFocus = new EventEmitter<FocusEvent>();\r\n  @Output() onBlur = new EventEmitter<FocusEvent>();\r\n  @Output() onKeyUp = new EventEmitter<KeyboardEvent>();\r\n  @Output() onSelect = new EventEmitter<T>();\r\n  @Output() onUnselect = new EventEmitter<unknown>();\r\n  @Output() onDropdownClick = new EventEmitter<PointerEvent>();\r\n  @Output() onClear = new EventEmitter<InputEvent>();\r\n  @Output() onShow = new EventEmitter<AnimationEvent>();\r\n  @Output() onHide = new EventEmitter<void>();\r\n\r\n  itemTemplate: TemplateRef<unknown>;\r\n  selectedItemTemplate: TemplateRef<unknown>;\r\n\r\n  @ContentChildren(ZyfraTemplateDirective) templates: QueryList<ZyfraTemplateDirective>;\r\n\r\n  ngAfterContentInit(): void {\r\n    this.templates.forEach((template) => {\r\n      if (template.zyfraTemplate === 'item') {\r\n        this.itemTemplate = template.templateRef;\r\n      } else if (template.zyfraTemplate === 'selectedItem') {\r\n        this.selectedItemTemplate = template.templateRef;\r\n      }\r\n    });\r\n  }\r\n\r\n  public override setDisabledState(isDisabled: boolean): void {\r\n    // do nothing\r\n  }\r\n}\r\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "extends": "WrappedFormComponent",
      "implements": ["ControlValueAccessor", "AfterContentInit"],
      "templateData": "<span class=\"zyfra-input\" [class.zyfra-input_disabled]=\"disabled\" [class.p-float-label]=\"label\">\r\n  <p-autoComplete\r\n    [formControl]=\"$any(ngControl.control)\"\r\n    [suggestions]=\"suggestions\"\r\n    [field]=\"field\"\r\n    [scrollHeight]=\"scrollHeight\"\r\n    [dropdown]=\"dropdown\"\r\n    [multiple]=\"multiple\"\r\n    [dropdownIcon]=\"dropdownIcon\"\r\n    [minLength]=\"minLength\"\r\n    [delay]=\"delay\"\r\n    [completeOnFocus]=\"completeOnFocus\"\r\n    [style]=\"style\"\r\n    [inputStyle]=\"inputStyle\"\r\n    [panelStyle]=\"panelStyle\"\r\n    [styleClass]=\"styleClass\"\r\n    [inputStyleClass]=\"inputStyleClass\"\r\n    [panelStyleClass]=\"panelStyleClass\"\r\n    [inputId]=\"inputId\"\r\n    [name]=\"name\"\r\n    [optionGroupLabel]=\"optionGroupLabel\"\r\n    [group]=\"group\"\r\n    [optionGroupChildren]=\"optionGroupChildren\"\r\n    [placeholder]=\"placeholder\"\r\n    [readonly]=\"readonly\"\r\n    [zyfraDisableControl]=\"disabled\"\r\n    [maxlength]=\"maxlength\"\r\n    [size]=\"size\"\r\n    [appendTo]=\"appendTo\"\r\n    [tabindex]=\"tabindex\"\r\n    [dataKey]=\"dataKey\"\r\n    [autoHighlight]=\"autoHighlight\"\r\n    [type]=\"type\"\r\n    [showEmptyMessage]=\"showEmptyMessage\"\r\n    [emptyMessage]=\"emptyMessage\"\r\n    [required]=\"required\"\r\n    [autofocus]=\"autofocus\"\r\n    [forceSelection]=\"forceSelection\"\r\n    [dropdownMode]=\"dropdownMode\"\r\n    [baseZIndex]=\"baseZIndex\"\r\n    [autoZIndex]=\"autoZIndex\"\r\n    [showTransitionOptions]=\"showTransitionOptions\"\r\n    [hideTransitionOptions]=\"hideTransitionOptions\"\r\n    [ariaLabel]=\"ariaLabel\"\r\n    [ariaLabelledBy]=\"ariaLabelledBy\"\r\n    [unique]=\"unique\"\r\n    [autocomplete]=\"autocomplete\"\r\n    [virtualScroll]=\"virtualScroll\"\r\n    [itemSize]=\"itemSize\"\r\n    (ngModelChange)=\"accessorOnChangeFn($event)\"\r\n    (completeMethod)=\"completeMethod.emit($event)\"\r\n    (onFocus)=\"onFocus.emit($event)\"\r\n    (onBlur)=\"onBlur.emit($event)\"\r\n    (onKeyUp)=\"onKeyUp.emit($event)\"\r\n    (onSelect)=\"onSelect.emit($event)\"\r\n    (onUnselect)=\"onUnselect.emit($event)\"\r\n    (onDropdownClick)=\"onDropdownClick.emit($event)\"\r\n    (onClear)=\"onClear.emit($event)\"\r\n    (onShow)=\"onShow.emit($event)\"\r\n    (onHide)=\"onHide.emit($event)\"\r\n  >\r\n    <ng-template [ngIf]=\"dropdown\">\r\n      <ng-template pTemplate=\"item\" [ngIf]=\"itemTemplate\" [ngIfElse]=\"defaultItem\" let-obj>\r\n        <ng-container *ngTemplateOutlet=\"itemTemplate; context: { $implicit: obj }\"></ng-container>\r\n      </ng-template>\r\n      <ng-template #defaultItem>\r\n        <ng-template let-obj pTemplate=\"item\">\r\n          {{ obj[field] }}\r\n        </ng-template>\r\n      </ng-template>\r\n\r\n      <ng-template pTemplate=\"selectedItem\" [ngIf]=\"selectedItemTemplate\" let-obj>\r\n        <ng-container *ngTemplateOutlet=\"selectedItemTemplate; context: { $implicit: obj }\"></ng-container>\r\n      </ng-template>\r\n    </ng-template>\r\n  </p-autoComplete>\r\n\r\n  <label *ngIf=\"label\" [class.label-required]=\"required\">{{ label }}</label>\r\n</span>\r\n"
    },
    {
      "name": "ZyfraBlockUiComponent",
      "id": "component-ZyfraBlockUiComponent-d2d7d9f2602362519883b18265d99814",
      "file": "libs/components/src/lib/block-ui/zyfra-block-ui.component.ts",
      "changeDetection": "ChangeDetectionStrategy.OnPush",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "zyfra-block-ui",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./zyfra-block-ui.component.html"],
      "viewProviders": [],
      "inputsClass": [
        {
          "name": "autoZIndex",
          "defaultValue": "true",
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "Whether to automatically manage layering.",
          "description": "<p>Whether to automatically manage layering.</p>\n",
          "line": 17,
          "type": "boolean"
        },
        {
          "name": "baseZIndex",
          "defaultValue": "0",
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "Base zIndex value to use in layering.",
          "description": "<p>Base zIndex value to use in layering.</p>\n",
          "line": 21,
          "type": "number"
        },
        {
          "name": "blocked",
          "defaultValue": "false",
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "Controls the blocked state.",
          "description": "<p>Controls the blocked state.</p>\n",
          "line": 29,
          "type": "boolean"
        },
        {
          "name": "styleClass",
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "Style class of the component.",
          "description": "<p>Style class of the component.</p>\n",
          "line": 25,
          "type": "string"
        },
        {
          "name": "target",
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "Name of the local ng-template variable referring to another component.",
          "description": "<p>Name of the local ng-template variable referring to another component.</p>\n",
          "line": 13,
          "type": "BlockableUI"
        }
      ],
      "outputsClass": [],
      "propertiesClass": [],
      "methodsClass": [],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\r\nimport { BlockableUI } from 'primeng/api';\r\n\r\n@Component({\r\n  selector: 'zyfra-block-ui',\r\n  templateUrl: './zyfra-block-ui.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class ZyfraBlockUiComponent {\r\n  /**\r\n   * Name of the local ng-template variable referring to another component.\r\n   */\r\n  @Input() target: BlockableUI;\r\n  /**\r\n   * Whether to automatically manage layering.\r\n   */\r\n  @Input() autoZIndex: boolean = true;\r\n  /**\r\n   * Base zIndex value to use in layering.\r\n   */\r\n  @Input() baseZIndex: number = 0;\r\n  /**\r\n   * Style class of the component.\r\n   */\r\n  @Input() styleClass: string;\r\n  /**\r\n   * Controls the blocked state.\r\n   */\r\n  @Input() blocked: boolean = false;\r\n}\r\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "templateData": "<p-blockUI\r\n  [target]=\"target\"\r\n  [blocked]=\"blocked\"\r\n  [autoZIndex]=\"autoZIndex\"\r\n  [baseZIndex]=\"baseZIndex\"\r\n  [styleClass]=\"styleClass\"\r\n>\r\n  <ng-content></ng-content>\r\n</p-blockUI>\r\n"
    },
    {
      "name": "ZyfraBreadcrumbComponent",
      "id": "component-ZyfraBreadcrumbComponent-4032d7b5659491594593e2698bf32b7d",
      "file": "libs/components/src/lib/breadcrumb/zyfra-breadcrumb.component.ts",
      "changeDetection": "ChangeDetectionStrategy.OnPush",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "zyfra-breadcrumb",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./zyfra-breadcrumb.component.html"],
      "viewProviders": [],
      "inputsClass": [
        {
          "name": "home",
          "defaultValue": "{ icon: 'zyfra-icon social-home-breadcrumbs' }",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 13,
          "type": "MenuItem"
        },
        {
          "name": "items",
          "defaultValue": "[]",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 12,
          "type": "MenuItem[]"
        },
        {
          "name": "style",
          "defaultValue": "null",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 14,
          "type": "string"
        },
        {
          "name": "styleClass",
          "defaultValue": "null",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 15,
          "type": "string"
        }
      ],
      "outputsClass": [
        {
          "name": "onItemClick",
          "defaultValue": "new EventEmitter<ItemClickEvent>()",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 17,
          "type": "EventEmitter"
        }
      ],
      "propertiesClass": [],
      "methodsClass": [
        {
          "name": "onItemClickHandler",
          "args": [
            {
              "name": "event",
              "type": "ItemClickEvent",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 19,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [123],
          "jsdoctags": [
            {
              "name": "event",
              "type": "ItemClickEvent",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        }
      ],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output } from '@angular/core';\r\nimport { MenuItem } from 'primeng/api';\r\n\r\ntype ItemClickEvent = { originalEvent: Event; item: MenuItem };\r\n\r\n@Component({\r\n  selector: 'zyfra-breadcrumb',\r\n  templateUrl: './zyfra-breadcrumb.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class ZyfraBreadcrumbComponent {\r\n  @Input() items: MenuItem[] = [];\r\n  @Input() home: MenuItem = { icon: 'zyfra-icon social-home-breadcrumbs' };\r\n  @Input() style: string = null;\r\n  @Input() styleClass: string = null;\r\n\r\n  @Output() onItemClick = new EventEmitter<ItemClickEvent>();\r\n\r\n  public onItemClickHandler(event: ItemClickEvent): void {\r\n    this.onItemClick.emit(event);\r\n  }\r\n}\r\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "templateData": "<p-breadcrumb\r\n  [model]=\"items\"\r\n  [home]=\"home\"\r\n  [style]=\"style\"\r\n  [styleClass]=\"styleClass\"\r\n  (onItemClick)=\"onItemClickHandler($event)\"\r\n></p-breadcrumb>\r\n"
    },
    {
      "name": "ZyfraButtonComponent",
      "id": "component-ZyfraButtonComponent-dda63a921e3691b74bc2ef2b958677ff",
      "file": "libs/components/src/lib/button/zyfra-button.component.ts",
      "changeDetection": "ChangeDetectionStrategy.OnPush",
      "encapsulation": ["ViewEncapsulation.None"],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "zyfra-button",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./zyfra-button.component.html"],
      "viewProviders": [],
      "inputsClass": [
        {
          "name": "badge",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 24,
          "type": "string"
        },
        {
          "name": "disabled",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 23,
          "type": "boolean"
        },
        {
          "name": "icon",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 21,
          "type": "string"
        },
        {
          "name": "iconPos",
          "defaultValue": "'left'",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 22,
          "type": "TZyfraButtonIconPosision"
        },
        {
          "name": "label",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 19,
          "type": "string"
        },
        {
          "name": "style",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 25,
          "type": "string"
        },
        {
          "name": "styleClass",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 26,
          "type": "string"
        },
        {
          "name": "type",
          "defaultValue": "'button'",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 20,
          "type": "string"
        }
      ],
      "outputsClass": [
        {
          "name": "onBlur",
          "defaultValue": "new EventEmitter<FocusEvent>()",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 30,
          "type": "EventEmitter"
        },
        {
          "name": "onClick",
          "defaultValue": "new EventEmitter<PointerEvent>()",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 28,
          "type": "EventEmitter"
        },
        {
          "name": "onFocus",
          "defaultValue": "new EventEmitter<FocusEvent>()",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 29,
          "type": "EventEmitter"
        }
      ],
      "propertiesClass": [],
      "methodsClass": [
        {
          "name": "blur",
          "args": [
            {
              "name": "event",
              "type": "FocusEvent",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 47,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [123],
          "jsdoctags": [
            {
              "name": "event",
              "type": "FocusEvent",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "click",
          "args": [
            {
              "name": "event",
              "type": "PointerEvent",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 39,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [123],
          "jsdoctags": [
            {
              "name": "event",
              "type": "PointerEvent",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "focus",
          "args": [
            {
              "name": "event",
              "type": "FocusEvent",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 43,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [123],
          "jsdoctags": [
            {
              "name": "event",
              "type": "FocusEvent",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "nativeClick",
          "args": [
            {
              "name": "event",
              "type": "Event",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 33,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [123],
          "jsdoctags": [
            {
              "name": "event",
              "type": "Event",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        }
      ],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import {\r\n  Component,\r\n  Input,\r\n  ChangeDetectionStrategy,\r\n  ViewEncapsulation,\r\n  Output,\r\n  EventEmitter,\r\n} from '@angular/core';\r\n\r\nexport type TZyfraButtonIconPosision = 'left' | 'right' | 'top' | 'bottom';\r\n\r\n@Component({\r\n  selector: 'zyfra-button',\r\n  templateUrl: './zyfra-button.component.html',\r\n  encapsulation: ViewEncapsulation.None,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class ZyfraButtonComponent {\r\n  @Input() label: string;\r\n  @Input() type = 'button';\r\n  @Input() icon: string;\r\n  @Input() iconPos: TZyfraButtonIconPosision = 'left';\r\n  @Input() disabled: boolean;\r\n  @Input() badge: string;\r\n  @Input() style: string;\r\n  @Input() styleClass: string;\r\n\r\n  @Output() onClick = new EventEmitter<PointerEvent>();\r\n  @Output() onFocus = new EventEmitter<FocusEvent>();\r\n  @Output() onBlur = new EventEmitter<FocusEvent>();\r\n\r\n  // останавливаю всплытие клика (именно так. через HostListener не работает)\r\n  public nativeClick(event: Event): void {\r\n    if (this.disabled) {\r\n      event.stopPropagation();\r\n    }\r\n  }\r\n\r\n  public click(event: PointerEvent): void {\r\n    this.onClick.emit(event);\r\n  }\r\n\r\n  public focus(event: FocusEvent): void {\r\n    this.onFocus.emit(event);\r\n  }\r\n\r\n  public blur(event: FocusEvent): void {\r\n    this.onBlur.emit(event);\r\n  }\r\n}\r\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "templateData": "<p-button\r\n  [type]=\"type\"\r\n  [label]=\"label\"\r\n  [icon]=\"icon\"\r\n  [iconPos]=\"iconPos\"\r\n  [disabled]=\"disabled\"\r\n  [badge]=\"badge\"\r\n  [style]=\"style\"\r\n  [styleClass]=\"styleClass\"\r\n  (click)=\"nativeClick($event)\"\r\n  (onClick)=\"click($event)\"\r\n  (onFocus)=\"focus($event)\"\r\n  (onBlur)=\"blur($event)\"\r\n></p-button>\r\n"
    },
    {
      "name": "ZyfraCalendarComponent",
      "id": "component-ZyfraCalendarComponent-4af50dc34b817deb8f2598f0e127b729",
      "file": "libs/components/src/lib/datepicker/calendar/zyfra-calendar.component.ts",
      "changeDetection": "ChangeDetectionStrategy.OnPush",
      "encapsulation": [],
      "entryComponents": [],
      "host": {},
      "inputs": [],
      "outputs": [],
      "providers": [
        {
          "name": "CALENDAR_VALUE_ACCESSOR"
        }
      ],
      "selector": "zyfra-calendar",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./zyfra-calendar.component.html"],
      "viewProviders": [],
      "inputsClass": [
        {
          "name": "appendTo",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 76,
          "type": "any",
          "inheritance": {
            "file": "Calendar"
          }
        },
        {
          "name": "ariaLabelledBy",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 54,
          "type": "string",
          "inheritance": {
            "file": "Calendar"
          }
        },
        {
          "name": "autoZIndex",
          "defaultValue": "true",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 116,
          "type": "boolean",
          "inheritance": {
            "file": "Calendar"
          }
        },
        {
          "name": "baseZIndex",
          "defaultValue": "0",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 118,
          "type": "number",
          "inheritance": {
            "file": "Calendar"
          }
        },
        {
          "name": "clearButtonStyleClass",
          "defaultValue": "'p-button-text'",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 114,
          "type": "string",
          "inheritance": {
            "file": "Calendar"
          }
        },
        {
          "name": "dataType",
          "defaultValue": "'date'",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 104,
          "type": "string",
          "inheritance": {
            "file": "Calendar"
          }
        },
        {
          "name": "dateFormat",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 60,
          "type": "string",
          "inheritance": {
            "file": "Calendar"
          }
        },
        {
          "name": "defaultDate",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 306,
          "type": "Date | null",
          "inheritance": {
            "file": "Calendar"
          }
        },
        {
          "name": "disabled",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 58,
          "type": "any",
          "inheritance": {
            "file": "Calendar"
          }
        },
        {
          "name": "disabledDates",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 348,
          "type": "Date[]",
          "inheritance": {
            "file": "Calendar"
          }
        },
        {
          "name": "disabledDays",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 359,
          "type": "number[]",
          "inheritance": {
            "file": "Calendar"
          }
        },
        {
          "name": "firstDayOfWeek",
          "defaultValue": "0",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 134,
          "type": "number",
          "inheritance": {
            "file": "Calendar"
          }
        },
        {
          "name": "focusTrap",
          "defaultValue": "true",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 132,
          "type": "boolean",
          "inheritance": {
            "file": "Calendar"
          }
        },
        {
          "name": "hideOnDateTimeSelect",
          "defaultValue": "true",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 126,
          "type": "boolean",
          "inheritance": {
            "file": "Calendar"
          }
        },
        {
          "name": "hideTransitionOptions",
          "defaultValue": "'.1s linear'",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 138,
          "type": "string",
          "inheritance": {
            "file": "Calendar"
          }
        },
        {
          "name": "hourFormat",
          "defaultValue": "'24'",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 86,
          "type": "string",
          "inheritance": {
            "file": "Calendar"
          }
        },
        {
          "name": "icon",
          "defaultValue": "'pi pi-calendar'",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 74,
          "type": "string",
          "inheritance": {
            "file": "Calendar"
          }
        },
        {
          "name": "iconAriaLabel",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 56,
          "type": "string",
          "inheritance": {
            "file": "Calendar"
          }
        },
        {
          "name": "inline",
          "defaultValue": "false",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 66,
          "type": "boolean",
          "inheritance": {
            "file": "Calendar"
          }
        },
        {
          "name": "inputId",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 46,
          "type": "string",
          "inheritance": {
            "file": "Calendar"
          }
        },
        {
          "name": "inputStyle",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 42,
          "type": "any",
          "inheritance": {
            "file": "Calendar"
          }
        },
        {
          "name": "inputStyleClass",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 50,
          "type": "string",
          "inheritance": {
            "file": "Calendar"
          }
        },
        {
          "name": "keepInvalid",
          "defaultValue": "false",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 124,
          "type": "boolean",
          "inheritance": {
            "file": "Calendar"
          }
        },
        {
          "name": "label",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 44,
          "type": "string",
          "inheritance": {
            "file": "Calendar"
          }
        },
        {
          "name": "locale",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 427,
          "type": "",
          "inheritance": {
            "file": "Calendar"
          }
        },
        {
          "name": "maxDate",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 336,
          "type": "Date | null",
          "inheritance": {
            "file": "Calendar"
          }
        },
        {
          "name": "maxDateCount",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 108,
          "type": "number",
          "inheritance": {
            "file": "Calendar"
          }
        },
        {
          "name": "minDate",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 324,
          "type": "Date | null",
          "inheritance": {
            "file": "Calendar"
          }
        },
        {
          "name": "monthNavigator",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 82,
          "type": "boolean",
          "inheritance": {
            "file": "Calendar"
          }
        },
        {
          "name": "multipleSeparator",
          "defaultValue": "','",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 62,
          "type": "string",
          "inheritance": {
            "file": "Calendar"
          }
        },
        {
          "name": "name",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 48,
          "type": "string",
          "inheritance": {
            "file": "Calendar"
          }
        },
        {
          "name": "numberOfMonths",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 415,
          "type": "number",
          "inheritance": {
            "file": "Calendar"
          }
        },
        {
          "name": "panelStyle",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 122,
          "type": "any",
          "inheritance": {
            "file": "Calendar"
          }
        },
        {
          "name": "panelStyleClass",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 120,
          "type": "string",
          "inheritance": {
            "file": "Calendar"
          }
        },
        {
          "name": "placeholder",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 52,
          "type": "string",
          "inheritance": {
            "file": "Calendar"
          }
        },
        {
          "name": "rangeSeparator",
          "defaultValue": "'-'",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 64,
          "type": "string",
          "inheritance": {
            "file": "Calendar"
          }
        },
        {
          "name": "readonlyInput",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 78,
          "type": "boolean",
          "inheritance": {
            "file": "Calendar"
          }
        },
        {
          "name": "required",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 98,
          "type": "boolean",
          "inheritance": {
            "file": "Calendar"
          }
        },
        {
          "name": "responsiveOptions",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 404,
          "type": "any[]",
          "inheritance": {
            "file": "Calendar"
          }
        },
        {
          "name": "selectionMode",
          "defaultValue": "'single'",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 106,
          "type": "string",
          "inheritance": {
            "file": "Calendar"
          }
        },
        {
          "name": "selectOtherMonths",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 70,
          "type": "boolean",
          "inheritance": {
            "file": "Calendar"
          }
        },
        {
          "name": "shortYearCutoff",
          "defaultValue": "'+10'",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 80,
          "type": "any",
          "inheritance": {
            "file": "Calendar"
          }
        },
        {
          "name": "showButtonBar",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 110,
          "type": "boolean",
          "inheritance": {
            "file": "Calendar"
          }
        },
        {
          "name": "showIcon",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 72,
          "type": "boolean",
          "inheritance": {
            "file": "Calendar"
          }
        },
        {
          "name": "showOnFocus",
          "defaultValue": "true",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 100,
          "type": "boolean",
          "inheritance": {
            "file": "Calendar"
          }
        },
        {
          "name": "showOtherMonths",
          "defaultValue": "true",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 68,
          "type": "boolean",
          "inheritance": {
            "file": "Calendar"
          }
        },
        {
          "name": "showSeconds",
          "defaultValue": "false",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 96,
          "type": "boolean",
          "inheritance": {
            "file": "Calendar"
          }
        },
        {
          "name": "showTime",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 387,
          "type": "boolean",
          "inheritance": {
            "file": "Calendar"
          }
        },
        {
          "name": "showTransitionOptions",
          "defaultValue": "'.12s cubic-bezier(0, 0, 0.2, 1)'",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 136,
          "type": "string",
          "inheritance": {
            "file": "Calendar"
          }
        },
        {
          "name": "showWeek",
          "defaultValue": "false",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 102,
          "type": "boolean",
          "inheritance": {
            "file": "Calendar"
          }
        },
        {
          "name": "stepHour",
          "defaultValue": "1",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 90,
          "type": "number",
          "inheritance": {
            "file": "Calendar"
          }
        },
        {
          "name": "stepMinute",
          "defaultValue": "1",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 92,
          "type": "number",
          "inheritance": {
            "file": "Calendar"
          }
        },
        {
          "name": "stepSecond",
          "defaultValue": "1",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 94,
          "type": "number",
          "inheritance": {
            "file": "Calendar"
          }
        },
        {
          "name": "style",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 38,
          "type": "any",
          "inheritance": {
            "file": "Calendar"
          }
        },
        {
          "name": "styleClass",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 40,
          "type": "string",
          "inheritance": {
            "file": "Calendar"
          }
        },
        {
          "name": "tabindex",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 164,
          "type": "number",
          "inheritance": {
            "file": "Calendar"
          }
        },
        {
          "name": "timeOnly",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 88,
          "type": "boolean",
          "inheritance": {
            "file": "Calendar"
          }
        },
        {
          "name": "timeSeparator",
          "defaultValue": "':'",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 130,
          "type": "string",
          "inheritance": {
            "file": "Calendar"
          }
        },
        {
          "name": "todayButtonStyleClass",
          "defaultValue": "'p-button-text'",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 112,
          "type": "string",
          "inheritance": {
            "file": "Calendar"
          }
        },
        {
          "name": "touchUI",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 128,
          "type": "boolean",
          "inheritance": {
            "file": "Calendar"
          }
        },
        {
          "name": "view",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 297,
          "type": "string",
          "inheritance": {
            "file": "Calendar"
          }
        },
        {
          "name": "yearNavigator",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 84,
          "type": "boolean",
          "inheritance": {
            "file": "Calendar"
          }
        },
        {
          "name": "yearRange",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 371,
          "type": "string",
          "inheritance": {
            "file": "Calendar"
          }
        }
      ],
      "outputsClass": [
        {
          "name": "onBlur",
          "defaultValue": "new EventEmitter()",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 142,
          "type": "EventEmitter<any>",
          "inheritance": {
            "file": "Calendar"
          }
        },
        {
          "name": "onClearClick",
          "defaultValue": "new EventEmitter()",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 152,
          "type": "EventEmitter<any>",
          "inheritance": {
            "file": "Calendar"
          }
        },
        {
          "name": "onClickOutside",
          "defaultValue": "new EventEmitter()",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 158,
          "type": "EventEmitter<any>",
          "inheritance": {
            "file": "Calendar"
          }
        },
        {
          "name": "onClose",
          "defaultValue": "new EventEmitter()",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 144,
          "type": "EventEmitter<any>",
          "inheritance": {
            "file": "Calendar"
          }
        },
        {
          "name": "onFocus",
          "defaultValue": "new EventEmitter()",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 140,
          "type": "EventEmitter<any>",
          "inheritance": {
            "file": "Calendar"
          }
        },
        {
          "name": "onInput",
          "defaultValue": "new EventEmitter()",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 148,
          "type": "EventEmitter<any>",
          "inheritance": {
            "file": "Calendar"
          }
        },
        {
          "name": "onMonthChange",
          "defaultValue": "new EventEmitter()",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 154,
          "type": "EventEmitter<any>",
          "inheritance": {
            "file": "Calendar"
          }
        },
        {
          "name": "onSelect",
          "defaultValue": "new EventEmitter()",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 146,
          "type": "EventEmitter<any>",
          "inheritance": {
            "file": "Calendar"
          }
        },
        {
          "name": "onShow",
          "defaultValue": "new EventEmitter()",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 160,
          "type": "EventEmitter<any>",
          "inheritance": {
            "file": "Calendar"
          }
        },
        {
          "name": "onTodayClick",
          "defaultValue": "new EventEmitter()",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 150,
          "type": "EventEmitter<any>",
          "inheritance": {
            "file": "Calendar"
          }
        },
        {
          "name": "onYearChange",
          "defaultValue": "new EventEmitter()",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 156,
          "type": "EventEmitter<any>",
          "inheritance": {
            "file": "Calendar"
          }
        }
      ],
      "propertiesClass": [
        {
          "name": "cd",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "ChangeDetectorRef",
          "optional": false,
          "description": "",
          "line": 2959,
          "modifierKind": [123]
        },
        {
          "name": "el",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "ElementRef",
          "optional": false,
          "description": "",
          "line": 2957,
          "modifierKind": [123]
        },
        {
          "name": "overlayService",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "OverlayService",
          "optional": false,
          "description": "",
          "line": 2962,
          "modifierKind": [123]
        },
        {
          "name": "renderer",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Renderer2",
          "optional": false,
          "description": "",
          "line": 2958,
          "modifierKind": [123]
        },
        {
          "name": "_defaultDate",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Date | null",
          "optional": false,
          "description": "",
          "line": 322,
          "inheritance": {
            "file": "Calendar"
          }
        },
        {
          "name": "_disabledDates",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Array<Date>",
          "optional": false,
          "description": "",
          "line": 261,
          "inheritance": {
            "file": "Calendar"
          }
        },
        {
          "name": "_disabledDays",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Array<number>",
          "optional": false,
          "description": "",
          "line": 263,
          "inheritance": {
            "file": "Calendar"
          }
        },
        {
          "name": "_locale",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "LocaleSettings",
          "optional": false,
          "description": "",
          "line": 283,
          "inheritance": {
            "file": "Calendar"
          }
        },
        {
          "name": "_maxDate",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Date | null",
          "optional": false,
          "description": "",
          "line": 243,
          "inheritance": {
            "file": "Calendar"
          }
        },
        {
          "name": "_minDate",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Date | null",
          "optional": false,
          "description": "",
          "line": 241,
          "inheritance": {
            "file": "Calendar"
          }
        },
        {
          "name": "_numberOfMonths",
          "defaultValue": "1",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "number",
          "optional": false,
          "description": "",
          "line": 291,
          "inheritance": {
            "file": "Calendar"
          }
        },
        {
          "name": "_responsiveOptions",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "any[]",
          "optional": false,
          "description": "",
          "line": 285,
          "inheritance": {
            "file": "Calendar"
          }
        },
        {
          "name": "_showTime",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "boolean",
          "optional": false,
          "description": "",
          "line": 245,
          "inheritance": {
            "file": "Calendar"
          }
        },
        {
          "name": "_view",
          "defaultValue": "'date'",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 293,
          "inheritance": {
            "file": "Calendar"
          }
        },
        {
          "name": "_yearRange",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 247,
          "inheritance": {
            "file": "Calendar"
          }
        },
        {
          "name": "animationEndListener",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "any",
          "optional": false,
          "description": "",
          "line": 227,
          "inheritance": {
            "file": "Calendar"
          }
        },
        {
          "name": "attributeSelector",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 289,
          "inheritance": {
            "file": "Calendar"
          }
        },
        {
          "name": "calendarElement",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "any",
          "optional": false,
          "description": "",
          "line": 221,
          "inheritance": {
            "file": "Calendar"
          }
        },
        {
          "name": "containerViewChild",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "ElementRef",
          "optional": false,
          "description": "",
          "line": 166,
          "decorators": [
            {
              "name": "ViewChild",
              "stringifiedArguments": "'container', {static: false}"
            }
          ],
          "inheritance": {
            "file": "Calendar"
          }
        },
        {
          "name": "contentViewChild",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "ElementRef",
          "optional": false,
          "description": "",
          "line": 185,
          "inheritance": {
            "file": "Calendar"
          }
        },
        {
          "name": "convertTo24Hour",
          "defaultValue": "function (hours: number, pm: boolean) {\r\n    if (this.hourFormat == '12') {\r\n      if (hours === 12) {\r\n        return pm ? 12 : 0;\r\n      } else {\r\n        return pm ? hours + 12 : hours;\r\n      }\r\n    }\r\n    return hours;\r\n  }",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "optional": false,
          "description": "",
          "line": 1811,
          "inheritance": {
            "file": "Calendar"
          }
        },
        {
          "name": "currentHour",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "number",
          "optional": false,
          "description": "",
          "line": 199,
          "inheritance": {
            "file": "Calendar"
          }
        },
        {
          "name": "currentMinute",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "number",
          "optional": false,
          "description": "",
          "line": 201,
          "inheritance": {
            "file": "Calendar"
          }
        },
        {
          "name": "currentMonth",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "number",
          "optional": false,
          "description": "",
          "line": 195,
          "inheritance": {
            "file": "Calendar"
          }
        },
        {
          "name": "currentSecond",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "number",
          "optional": false,
          "description": "",
          "line": 203,
          "inheritance": {
            "file": "Calendar"
          }
        },
        {
          "name": "currentView",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 287,
          "inheritance": {
            "file": "Calendar"
          }
        },
        {
          "name": "currentYear",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "number",
          "optional": false,
          "description": "",
          "line": 197,
          "inheritance": {
            "file": "Calendar"
          }
        },
        {
          "name": "dates",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "any[]",
          "optional": false,
          "description": "",
          "line": 189,
          "inheritance": {
            "file": "Calendar"
          }
        },
        {
          "name": "dateTemplate",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "TemplateRef<any>",
          "optional": false,
          "description": "",
          "line": 251,
          "inheritance": {
            "file": "Calendar"
          }
        },
        {
          "name": "decadeTemplate",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "TemplateRef<any>",
          "optional": false,
          "description": "",
          "line": 259,
          "inheritance": {
            "file": "Calendar"
          }
        },
        {
          "name": "disabledDateTemplate",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "TemplateRef<any>",
          "optional": false,
          "description": "",
          "line": 257,
          "inheritance": {
            "file": "Calendar"
          }
        },
        {
          "name": "documentClickListener",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "any",
          "optional": false,
          "description": "",
          "line": 225,
          "inheritance": {
            "file": "Calendar"
          }
        },
        {
          "name": "documentResizeListener",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "any",
          "optional": false,
          "description": "",
          "line": 273,
          "inheritance": {
            "file": "Calendar"
          }
        },
        {
          "name": "filled",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "boolean",
          "optional": false,
          "description": "",
          "line": 237,
          "inheritance": {
            "file": "Calendar"
          }
        },
        {
          "name": "focus",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "boolean",
          "optional": false,
          "description": "",
          "line": 233,
          "inheritance": {
            "file": "Calendar"
          }
        },
        {
          "name": "focusElement",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "any",
          "optional": false,
          "description": "",
          "line": 269,
          "inheritance": {
            "file": "Calendar"
          }
        },
        {
          "name": "footerTemplate",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "TemplateRef<any>",
          "optional": false,
          "description": "",
          "line": 255,
          "inheritance": {
            "file": "Calendar"
          }
        },
        {
          "name": "headerTemplate",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "TemplateRef<any>",
          "optional": false,
          "description": "",
          "line": 253,
          "inheritance": {
            "file": "Calendar"
          }
        },
        {
          "name": "initialized",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "boolean",
          "optional": false,
          "description": "",
          "line": 279,
          "inheritance": {
            "file": "Calendar"
          }
        },
        {
          "name": "inputFieldValue",
          "defaultValue": "null",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 239,
          "inheritance": {
            "file": "Calendar"
          }
        },
        {
          "name": "inputfieldViewChild",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "ElementRef",
          "optional": false,
          "description": "",
          "line": 168,
          "decorators": [
            {
              "name": "ViewChild",
              "stringifiedArguments": "'inputfield', {static: false}"
            }
          ],
          "inheritance": {
            "file": "Calendar"
          }
        },
        {
          "name": "isKeydown",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "boolean",
          "optional": false,
          "description": "",
          "line": 235,
          "inheritance": {
            "file": "Calendar"
          }
        },
        {
          "name": "isMonthNavigate",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "boolean",
          "optional": false,
          "description": "",
          "line": 277,
          "inheritance": {
            "file": "Calendar"
          }
        },
        {
          "name": "mask",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "HTMLDivElement",
          "optional": false,
          "description": "",
          "line": 207,
          "inheritance": {
            "file": "Calendar"
          }
        },
        {
          "name": "maskClickListener",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Function",
          "optional": false,
          "description": "",
          "line": 209,
          "inheritance": {
            "file": "Calendar"
          }
        },
        {
          "name": "months",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "any[]",
          "optional": false,
          "description": "",
          "line": 191,
          "inheritance": {
            "file": "Calendar"
          }
        },
        {
          "name": "navigationState",
          "defaultValue": "null",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "any",
          "optional": false,
          "description": "",
          "line": 275,
          "inheritance": {
            "file": "Calendar"
          }
        },
        {
          "name": "onModelChange",
          "defaultValue": "() => {...}",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Function",
          "optional": false,
          "description": "",
          "line": 217,
          "inheritance": {
            "file": "Calendar"
          }
        },
        {
          "name": "onModelTouched",
          "defaultValue": "() => {...}",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Function",
          "optional": false,
          "description": "",
          "line": 219,
          "inheritance": {
            "file": "Calendar"
          }
        },
        {
          "name": "overlay",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "HTMLDivElement",
          "optional": false,
          "description": "",
          "line": 211,
          "inheritance": {
            "file": "Calendar"
          }
        },
        {
          "name": "overlayVisible",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "boolean",
          "optional": false,
          "description": "",
          "line": 215,
          "inheritance": {
            "file": "Calendar"
          }
        },
        {
          "name": "pm",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "boolean",
          "optional": false,
          "description": "",
          "line": 205,
          "inheritance": {
            "file": "Calendar"
          }
        },
        {
          "name": "preventDocumentListener",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "boolean",
          "optional": false,
          "description": "",
          "line": 249,
          "inheritance": {
            "file": "Calendar"
          }
        },
        {
          "name": "preventFocus",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "boolean",
          "optional": false,
          "description": "",
          "line": 295,
          "inheritance": {
            "file": "Calendar"
          }
        },
        {
          "name": "responsiveStyleElement",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "any",
          "optional": false,
          "description": "",
          "line": 213,
          "inheritance": {
            "file": "Calendar"
          }
        },
        {
          "name": "scrollHandler",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "any",
          "optional": false,
          "description": "",
          "line": 271,
          "inheritance": {
            "file": "Calendar"
          }
        },
        {
          "name": "selectElement",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "any",
          "optional": false,
          "description": "",
          "line": 265,
          "inheritance": {
            "file": "Calendar"
          }
        },
        {
          "name": "templates",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "QueryList<any>",
          "optional": false,
          "description": "",
          "line": 162,
          "decorators": [
            {
              "name": "ContentChildren",
              "stringifiedArguments": "PrimeTemplate"
            }
          ],
          "inheritance": {
            "file": "Calendar"
          }
        },
        {
          "name": "ticksTo1970",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "number",
          "optional": false,
          "description": "",
          "line": 229,
          "inheritance": {
            "file": "Calendar"
          }
        },
        {
          "name": "timePickerTimer",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "any",
          "optional": false,
          "description": "",
          "line": 223,
          "inheritance": {
            "file": "Calendar"
          }
        },
        {
          "name": "todayElement",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "any",
          "optional": false,
          "description": "",
          "line": 267,
          "inheritance": {
            "file": "Calendar"
          }
        },
        {
          "name": "translationSubscription",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Subscription",
          "optional": false,
          "description": "",
          "line": 281,
          "inheritance": {
            "file": "Calendar"
          }
        },
        {
          "name": "value",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "any",
          "optional": false,
          "description": "",
          "line": 187,
          "inheritance": {
            "file": "Calendar"
          }
        },
        {
          "name": "weekDays",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "string[]",
          "optional": false,
          "description": "",
          "line": 193,
          "inheritance": {
            "file": "Calendar"
          }
        },
        {
          "name": "yearOptions",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "number[]",
          "optional": false,
          "description": "",
          "line": 231,
          "inheritance": {
            "file": "Calendar"
          }
        }
      ],
      "methodsClass": [
        {
          "name": "correctEndDateIfRange",
          "args": [
            {
              "name": "value",
              "type": "Date | Date[]",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 2988,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [121],
          "jsdoctags": [
            {
              "name": "value",
              "type": "Date | Date[]",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "isMonthInRange",
          "args": [
            {
              "name": "month",
              "type": "number",
              "deprecated": false,
              "deprecationMessage": ""
            },
            {
              "name": "start",
              "type": "Date",
              "deprecated": false,
              "deprecationMessage": ""
            },
            {
              "name": "end",
              "type": "Date",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "boolean",
          "typeParameters": [],
          "line": 2967,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [121],
          "jsdoctags": [
            {
              "name": "month",
              "type": "number",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "start",
              "type": "Date",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "end",
              "type": "Date",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "isMonthSelected",
          "args": [
            {
              "name": "month",
              "type": "number",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "boolean",
          "typeParameters": [],
          "line": 2971,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [157],
          "jsdoctags": [
            {
              "name": "month",
              "type": "number",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ],
          "inheritance": {
            "file": "Calendar"
          }
        },
        {
          "name": "registerOnChange",
          "args": [
            {
              "name": "fn",
              "type": "Function",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 2981,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [157],
          "jsdoctags": [
            {
              "name": "fn",
              "type": "Function",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ],
          "inheritance": {
            "file": "Calendar"
          }
        },
        {
          "name": "alignOverlay",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 2259,
          "deprecated": false,
          "deprecationMessage": "",
          "inheritance": {
            "file": "Calendar"
          }
        },
        {
          "name": "appendOverlay",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 2246,
          "deprecated": false,
          "deprecationMessage": "",
          "inheritance": {
            "file": "Calendar"
          }
        },
        {
          "name": "bindDocumentClickListener",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 2796,
          "deprecated": false,
          "deprecationMessage": "",
          "inheritance": {
            "file": "Calendar"
          }
        },
        {
          "name": "bindDocumentResizeListener",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 2822,
          "deprecated": false,
          "deprecationMessage": "",
          "inheritance": {
            "file": "Calendar"
          }
        },
        {
          "name": "bindScrollListener",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 2836,
          "deprecated": false,
          "deprecationMessage": "",
          "inheritance": {
            "file": "Calendar"
          }
        },
        {
          "name": "clearTimePickerTimer",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 1937,
          "deprecated": false,
          "deprecationMessage": "",
          "inheritance": {
            "file": "Calendar"
          }
        },
        {
          "name": "createMonth",
          "args": [
            {
              "name": "month",
              "type": "number",
              "deprecated": false,
              "deprecationMessage": ""
            },
            {
              "name": "year",
              "type": "number",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "{ month: number; year: number; dates: {}; weekNumbers: {}; }",
          "typeParameters": [],
          "line": 599,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "month",
              "type": "number",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "year",
              "type": "number",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ],
          "inheritance": {
            "file": "Calendar"
          }
        },
        {
          "name": "createMonths",
          "args": [
            {
              "name": "month",
              "type": "number",
              "deprecated": false,
              "deprecationMessage": ""
            },
            {
              "name": "year",
              "type": "number",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 576,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "month",
              "type": "number",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "year",
              "type": "number",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ],
          "inheritance": {
            "file": "Calendar"
          }
        },
        {
          "name": "createResponsiveStyle",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 2747,
          "deprecated": false,
          "deprecationMessage": "",
          "inheritance": {
            "file": "Calendar"
          }
        },
        {
          "name": "createWeekDays",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 547,
          "deprecated": false,
          "deprecationMessage": "",
          "inheritance": {
            "file": "Calendar"
          }
        },
        {
          "name": "daylightSavingAdjust",
          "args": [
            {
              "name": "date",
              "type": "",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "any",
          "typeParameters": [],
          "line": 2711,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "date",
              "type": "",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ],
          "inheritance": {
            "file": "Calendar"
          }
        },
        {
          "name": "decrementDecade",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 765,
          "deprecated": false,
          "deprecationMessage": "",
          "inheritance": {
            "file": "Calendar"
          }
        },
        {
          "name": "decrementHour",
          "args": [
            {
              "name": "event",
              "type": "",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 1944,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "event",
              "type": "",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ],
          "inheritance": {
            "file": "Calendar"
          }
        },
        {
          "name": "decrementMinute",
          "args": [
            {
              "name": "event",
              "type": "",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 1975,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "event",
              "type": "",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ],
          "inheritance": {
            "file": "Calendar"
          }
        },
        {
          "name": "decrementSecond",
          "args": [
            {
              "name": "event",
              "type": "",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 1995,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "event",
              "type": "",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ],
          "inheritance": {
            "file": "Calendar"
          }
        },
        {
          "name": "decrementYear",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 753,
          "deprecated": false,
          "deprecationMessage": "",
          "inheritance": {
            "file": "Calendar"
          }
        },
        {
          "name": "destroyMask",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 2303,
          "deprecated": false,
          "deprecationMessage": "",
          "inheritance": {
            "file": "Calendar"
          }
        },
        {
          "name": "destroyResponsiveStyleElement",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 2789,
          "deprecated": false,
          "deprecationMessage": "",
          "inheritance": {
            "file": "Calendar"
          }
        },
        {
          "name": "disableModality",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 2295,
          "deprecated": false,
          "deprecationMessage": "",
          "inheritance": {
            "file": "Calendar"
          }
        },
        {
          "name": "enableModality",
          "args": [
            {
              "name": "element",
              "type": "",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 2279,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "element",
              "type": "",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ],
          "inheritance": {
            "file": "Calendar"
          }
        },
        {
          "name": "formatDate",
          "args": [
            {
              "name": "date",
              "type": "",
              "deprecated": false,
              "deprecationMessage": ""
            },
            {
              "name": "format",
              "type": "",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "string",
          "typeParameters": [],
          "line": 2367,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "date",
              "type": "",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "format",
              "type": "",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ],
          "inheritance": {
            "file": "Calendar"
          }
        },
        {
          "name": "formatDateTime",
          "args": [
            {
              "name": "date",
              "type": "",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "any",
          "typeParameters": [],
          "line": 894,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "date",
              "type": "",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ],
          "inheritance": {
            "file": "Calendar"
          }
        },
        {
          "name": "formatTime",
          "args": [
            {
              "name": "date",
              "type": "",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "string",
          "typeParameters": [],
          "line": 2465,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "date",
              "type": "",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ],
          "inheritance": {
            "file": "Calendar"
          }
        },
        {
          "name": "getDateFormat",
          "args": [],
          "optional": false,
          "returnType": "any",
          "typeParameters": [],
          "line": 2362,
          "deprecated": false,
          "deprecationMessage": "",
          "inheritance": {
            "file": "Calendar"
          }
        },
        {
          "name": "getDaysCountInMonth",
          "args": [
            {
              "name": "month",
              "type": "number",
              "deprecated": false,
              "deprecationMessage": ""
            },
            {
              "name": "year",
              "type": "number",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "number",
          "typeParameters": [],
          "line": 1005,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "month",
              "type": "number",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "year",
              "type": "number",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ],
          "inheritance": {
            "file": "Calendar"
          }
        },
        {
          "name": "getDaysCountInPrevMonth",
          "args": [
            {
              "name": "month",
              "type": "number",
              "deprecated": false,
              "deprecationMessage": ""
            },
            {
              "name": "year",
              "type": "number",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "number",
          "typeParameters": [],
          "line": 1009,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "month",
              "type": "number",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "year",
              "type": "number",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ],
          "inheritance": {
            "file": "Calendar"
          }
        },
        {
          "name": "getFirstDayOfMonthIndex",
          "args": [
            {
              "name": "month",
              "type": "number",
              "deprecated": false,
              "deprecationMessage": ""
            },
            {
              "name": "year",
              "type": "number",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "any",
          "typeParameters": [],
          "line": 995,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "month",
              "type": "number",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "year",
              "type": "number",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ],
          "inheritance": {
            "file": "Calendar"
          }
        },
        {
          "name": "getMonthName",
          "args": [
            {
              "name": "index",
              "type": "",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "any",
          "typeParameters": [],
          "line": 1250,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "index",
              "type": "",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ],
          "inheritance": {
            "file": "Calendar"
          }
        },
        {
          "name": "getNextMonthAndYear",
          "args": [
            {
              "name": "month",
              "type": "number",
              "deprecated": false,
              "deprecationMessage": ""
            },
            {
              "name": "year",
              "type": "number",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "{ month: any; year: any; }",
          "typeParameters": [],
          "line": 1028,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "month",
              "type": "number",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "year",
              "type": "number",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ],
          "inheritance": {
            "file": "Calendar"
          }
        },
        {
          "name": "getPreviousMonthAndYear",
          "args": [
            {
              "name": "month",
              "type": "number",
              "deprecated": false,
              "deprecationMessage": ""
            },
            {
              "name": "year",
              "type": "number",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "{ month: any; year: any; }",
          "typeParameters": [],
          "line": 1014,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "month",
              "type": "number",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "year",
              "type": "number",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ],
          "inheritance": {
            "file": "Calendar"
          }
        },
        {
          "name": "getSundayIndex",
          "args": [],
          "optional": false,
          "returnType": "number",
          "typeParameters": [],
          "line": 1042,
          "deprecated": false,
          "deprecationMessage": "",
          "inheritance": {
            "file": "Calendar"
          }
        },
        {
          "name": "getTranslation",
          "args": [
            {
              "name": "option",
              "type": "string",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "any",
          "typeParameters": [],
          "line": 535,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "option",
              "type": "string",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ],
          "inheritance": {
            "file": "Calendar"
          }
        },
        {
          "name": "getWeekNumber",
          "args": [
            {
              "name": "date",
              "type": "Date",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "any",
          "typeParameters": [],
          "line": 590,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "date",
              "type": "Date",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ],
          "inheritance": {
            "file": "Calendar"
          }
        },
        {
          "name": "hideOverlay",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 2174,
          "deprecated": false,
          "deprecationMessage": "",
          "inheritance": {
            "file": "Calendar"
          }
        },
        {
          "name": "incrementDecade",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 769,
          "deprecated": false,
          "deprecationMessage": "",
          "inheritance": {
            "file": "Calendar"
          }
        },
        {
          "name": "incrementHour",
          "args": [
            {
              "name": "event",
              "type": "",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 1866,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "event",
              "type": "",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ],
          "inheritance": {
            "file": "Calendar"
          }
        },
        {
          "name": "incrementMinute",
          "args": [
            {
              "name": "event",
              "type": "",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 1965,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "event",
              "type": "",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ],
          "inheritance": {
            "file": "Calendar"
          }
        },
        {
          "name": "incrementSecond",
          "args": [
            {
              "name": "event",
              "type": "",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 1985,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "event",
              "type": "",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ],
          "inheritance": {
            "file": "Calendar"
          }
        },
        {
          "name": "incrementYear",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 773,
          "deprecated": false,
          "deprecationMessage": "",
          "inheritance": {
            "file": "Calendar"
          }
        },
        {
          "name": "initFocusableCell",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 1695,
          "deprecated": false,
          "deprecationMessage": "",
          "inheritance": {
            "file": "Calendar"
          }
        },
        {
          "name": "initTime",
          "args": [
            {
              "name": "date",
              "type": "Date",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 677,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "date",
              "type": "Date",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ],
          "inheritance": {
            "file": "Calendar"
          }
        },
        {
          "name": "isComparable",
          "args": [],
          "optional": false,
          "returnType": "boolean",
          "typeParameters": [],
          "line": 1075,
          "deprecated": false,
          "deprecationMessage": "",
          "inheritance": {
            "file": "Calendar"
          }
        },
        {
          "name": "isDateBetween",
          "args": [
            {
              "name": "start",
              "type": "",
              "deprecated": false,
              "deprecationMessage": ""
            },
            {
              "name": "end",
              "type": "",
              "deprecated": false,
              "deprecationMessage": ""
            },
            {
              "name": "dateMeta",
              "type": "",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "boolean",
          "typeParameters": [],
          "line": 1111,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "start",
              "type": "",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "end",
              "type": "",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "dateMeta",
              "type": "",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ],
          "inheritance": {
            "file": "Calendar"
          }
        },
        {
          "name": "isDateDisabled",
          "args": [
            {
              "name": "day",
              "type": "number",
              "deprecated": false,
              "deprecationMessage": ""
            },
            {
              "name": "month",
              "type": "number",
              "deprecated": false,
              "deprecationMessage": ""
            },
            {
              "name": "year",
              "type": "number",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "boolean",
          "typeParameters": [],
          "line": 1186,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "day",
              "type": "number",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "month",
              "type": "number",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "year",
              "type": "number",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ],
          "inheritance": {
            "file": "Calendar"
          }
        },
        {
          "name": "isDateEquals",
          "args": [
            {
              "name": "value",
              "type": "",
              "deprecated": false,
              "deprecationMessage": ""
            },
            {
              "name": "dateMeta",
              "type": "",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "boolean",
          "typeParameters": [],
          "line": 1101,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "value",
              "type": "",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "dateMeta",
              "type": "",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ],
          "inheritance": {
            "file": "Calendar"
          }
        },
        {
          "name": "isDayDisabled",
          "args": [
            {
              "name": "day",
              "type": "number",
              "deprecated": false,
              "deprecationMessage": ""
            },
            {
              "name": "month",
              "type": "number",
              "deprecated": false,
              "deprecationMessage": ""
            },
            {
              "name": "year",
              "type": "number",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "boolean",
          "typeParameters": [],
          "line": 1202,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "day",
              "type": "number",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "month",
              "type": "number",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "year",
              "type": "number",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ],
          "inheritance": {
            "file": "Calendar"
          }
        },
        {
          "name": "isMultipleSelection",
          "args": [],
          "optional": false,
          "returnType": "boolean",
          "typeParameters": [],
          "line": 1129,
          "deprecated": false,
          "deprecationMessage": "",
          "inheritance": {
            "file": "Calendar"
          }
        },
        {
          "name": "isNavIconClicked",
          "args": [
            {
              "name": "event",
              "type": "Event",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "any",
          "typeParameters": [],
          "line": 2863,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "event",
              "type": "Event",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ],
          "inheritance": {
            "file": "Calendar"
          }
        },
        {
          "name": "isOutsideClicked",
          "args": [
            {
              "name": "event",
              "type": "Event",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "boolean",
          "typeParameters": [],
          "line": 2854,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "event",
              "type": "Event",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ],
          "inheritance": {
            "file": "Calendar"
          }
        },
        {
          "name": "isRangeSelection",
          "args": [],
          "optional": false,
          "returnType": "boolean",
          "typeParameters": [],
          "line": 1125,
          "deprecated": false,
          "deprecationMessage": "",
          "inheritance": {
            "file": "Calendar"
          }
        },
        {
          "name": "isSelectable",
          "args": [
            {
              "name": "day",
              "type": "",
              "deprecated": false,
              "deprecationMessage": ""
            },
            {
              "name": "month",
              "type": "",
              "deprecated": false,
              "deprecationMessage": ""
            },
            {
              "name": "year",
              "type": "",
              "deprecated": false,
              "deprecationMessage": ""
            },
            {
              "name": "otherMonth",
              "type": "",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "boolean",
          "typeParameters": [],
          "line": 1137,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "day",
              "type": "",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "month",
              "type": "",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "year",
              "type": "",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "otherMonth",
              "type": "",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ],
          "inheritance": {
            "file": "Calendar"
          }
        },
        {
          "name": "isSelected",
          "args": [
            {
              "name": "dateMeta",
              "type": "",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "boolean",
          "typeParameters": [],
          "line": 1047,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "dateMeta",
              "type": "",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ],
          "inheritance": {
            "file": "Calendar"
          }
        },
        {
          "name": "isSingleSelection",
          "args": [],
          "optional": false,
          "returnType": "boolean",
          "typeParameters": [],
          "line": 1121,
          "deprecated": false,
          "deprecationMessage": "",
          "inheritance": {
            "file": "Calendar"
          }
        },
        {
          "name": "isToday",
          "args": [
            {
              "name": "today",
              "type": "",
              "deprecated": false,
              "deprecationMessage": ""
            },
            {
              "name": "day",
              "type": "",
              "deprecated": false,
              "deprecationMessage": ""
            },
            {
              "name": "month",
              "type": "",
              "deprecated": false,
              "deprecationMessage": ""
            },
            {
              "name": "year",
              "type": "",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "boolean",
          "typeParameters": [],
          "line": 1133,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "today",
              "type": "",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "day",
              "type": "",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "month",
              "type": "",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "year",
              "type": "",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ],
          "inheritance": {
            "file": "Calendar"
          }
        },
        {
          "name": "isValidSelection",
          "args": [
            {
              "name": "value",
              "type": "",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "boolean",
          "typeParameters": [],
          "line": 2070,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "value",
              "type": "",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ],
          "inheritance": {
            "file": "Calendar"
          }
        },
        {
          "name": "isYearSelected",
          "args": [
            {
              "name": "year",
              "type": "",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "boolean",
          "typeParameters": [],
          "line": 1091,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "year",
              "type": "",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ],
          "inheritance": {
            "file": "Calendar"
          }
        },
        {
          "name": "monthPickerValues",
          "args": [],
          "optional": false,
          "returnType": "{}",
          "typeParameters": [],
          "line": 557,
          "deprecated": false,
          "deprecationMessage": "",
          "inheritance": {
            "file": "Calendar"
          }
        },
        {
          "name": "navBackward",
          "args": [
            {
              "name": "event",
              "type": "",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 691,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "event",
              "type": "",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ],
          "inheritance": {
            "file": "Calendar"
          }
        },
        {
          "name": "navForward",
          "args": [
            {
              "name": "event",
              "type": "",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 722,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "event",
              "type": "",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ],
          "inheritance": {
            "file": "Calendar"
          }
        },
        {
          "name": "navigateToMonth",
          "args": [
            {
              "name": "prev",
              "type": "",
              "deprecated": false,
              "deprecationMessage": ""
            },
            {
              "name": "groupIndex",
              "type": "",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 1599,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "prev",
              "type": "",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "groupIndex",
              "type": "",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ],
          "inheritance": {
            "file": "Calendar"
          }
        },
        {
          "name": "ngAfterContentInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 491,
          "deprecated": false,
          "deprecationMessage": "",
          "inheritance": {
            "file": "Calendar"
          }
        },
        {
          "name": "ngAfterViewInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 521,
          "deprecated": false,
          "deprecationMessage": "",
          "inheritance": {
            "file": "Calendar"
          }
        },
        {
          "name": "ngOnDestroy",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 2891,
          "deprecated": false,
          "deprecationMessage": "",
          "inheritance": {
            "file": "Calendar"
          }
        },
        {
          "name": "ngOnInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 440,
          "deprecated": false,
          "deprecationMessage": "",
          "inheritance": {
            "file": "Calendar"
          }
        },
        {
          "name": "onButtonClick",
          "args": [
            {
              "name": "event",
              "type": "",
              "deprecated": false,
              "deprecationMessage": ""
            },
            {
              "name": "inputfield",
              "type": "",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 1234,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "event",
              "type": "",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "inputfield",
              "type": "",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ],
          "inheritance": {
            "file": "Calendar"
          }
        },
        {
          "name": "onClearButtonClick",
          "args": [
            {
              "name": "event",
              "type": "",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 2740,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "event",
              "type": "",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ],
          "inheritance": {
            "file": "Calendar"
          }
        },
        {
          "name": "onContainerButtonKeydown",
          "args": [
            {
              "name": "event",
              "type": "",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 1268,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "event",
              "type": "",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ],
          "inheritance": {
            "file": "Calendar"
          }
        },
        {
          "name": "onDateCellKeydown",
          "args": [
            {
              "name": "event",
              "type": "",
              "deprecated": false,
              "deprecationMessage": ""
            },
            {
              "name": "date",
              "type": "",
              "deprecated": false,
              "deprecationMessage": ""
            },
            {
              "name": "groupIndex",
              "type": "",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 1313,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "event",
              "type": "",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "date",
              "type": "",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "groupIndex",
              "type": "",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ],
          "inheritance": {
            "file": "Calendar"
          }
        },
        {
          "name": "onDateSelect",
          "args": [
            {
              "name": "event",
              "type": "",
              "deprecated": false,
              "deprecationMessage": ""
            },
            {
              "name": "dateMeta",
              "type": "",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 795,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "event",
              "type": "",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "dateMeta",
              "type": "",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ],
          "inheritance": {
            "file": "Calendar"
          }
        },
        {
          "name": "onInputBlur",
          "args": [
            {
              "name": "event",
              "type": "Event",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 1225,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "event",
              "type": "Event",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ],
          "inheritance": {
            "file": "Calendar"
          }
        },
        {
          "name": "onInputClick",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 1219,
          "deprecated": false,
          "deprecationMessage": "",
          "inheritance": {
            "file": "Calendar"
          }
        },
        {
          "name": "onInputFocus",
          "args": [
            {
              "name": "event",
              "type": "Event",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 1211,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "event",
              "type": "Event",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ],
          "inheritance": {
            "file": "Calendar"
          }
        },
        {
          "name": "onInputKeydown",
          "args": [
            {
              "name": "event",
              "type": "",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 1289,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "event",
              "type": "",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ],
          "inheritance": {
            "file": "Calendar"
          }
        },
        {
          "name": "onMonthCellKeydown",
          "args": [
            {
              "name": "event",
              "type": "",
              "deprecated": false,
              "deprecationMessage": ""
            },
            {
              "name": "index",
              "type": "",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 1433,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "event",
              "type": "",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "index",
              "type": "",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ],
          "inheritance": {
            "file": "Calendar"
          }
        },
        {
          "name": "onMonthDropdownChange",
          "args": [
            {
              "name": "m",
              "type": "string",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 1799,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "m",
              "type": "string",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ],
          "inheritance": {
            "file": "Calendar"
          }
        },
        {
          "name": "onMonthSelect",
          "args": [
            {
              "name": "event",
              "type": "",
              "deprecated": false,
              "deprecationMessage": ""
            },
            {
              "name": "index",
              "type": "",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 838,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "event",
              "type": "",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "index",
              "type": "",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ],
          "inheritance": {
            "file": "Calendar"
          }
        },
        {
          "name": "onNextButtonClick",
          "args": [
            {
              "name": "event",
              "type": "",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 1263,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "event",
              "type": "",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ],
          "inheritance": {
            "file": "Calendar"
          }
        },
        {
          "name": "onOverlayAnimationDone",
          "args": [
            {
              "name": "event",
              "type": "AnimationEvent",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 2225,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "event",
              "type": "AnimationEvent",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ],
          "inheritance": {
            "file": "Calendar"
          }
        },
        {
          "name": "onOverlayAnimationStart",
          "args": [
            {
              "name": "event",
              "type": "AnimationEvent",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 2196,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "event",
              "type": "AnimationEvent",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ],
          "inheritance": {
            "file": "Calendar"
          }
        },
        {
          "name": "onOverlayClick",
          "args": [
            {
              "name": "event",
              "type": "",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 1243,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "event",
              "type": "",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ],
          "inheritance": {
            "file": "Calendar"
          }
        },
        {
          "name": "onOverlayHide",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 2878,
          "deprecated": false,
          "deprecationMessage": "",
          "inheritance": {
            "file": "Calendar"
          }
        },
        {
          "name": "onPrevButtonClick",
          "args": [
            {
              "name": "event",
              "type": "",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 1258,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "event",
              "type": "",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ],
          "inheritance": {
            "file": "Calendar"
          }
        },
        {
          "name": "onTimePickerElementMouseDown",
          "args": [
            {
              "name": "event",
              "type": "Event",
              "deprecated": false,
              "deprecationMessage": ""
            },
            {
              "name": "type",
              "type": "number",
              "deprecated": false,
              "deprecationMessage": ""
            },
            {
              "name": "direction",
              "type": "number",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 1887,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "event",
              "type": "Event",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "type",
              "type": "number",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "direction",
              "type": "number",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ],
          "inheritance": {
            "file": "Calendar"
          }
        },
        {
          "name": "onTimePickerElementMouseLeave",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 1901,
          "deprecated": false,
          "deprecationMessage": "",
          "inheritance": {
            "file": "Calendar"
          }
        },
        {
          "name": "onTimePickerElementMouseUp",
          "args": [
            {
              "name": "event",
              "type": "Event",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 1894,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "event",
              "type": "Event",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ],
          "inheritance": {
            "file": "Calendar"
          }
        },
        {
          "name": "onTodayButtonClick",
          "args": [
            {
              "name": "event",
              "type": "",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 2725,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "event",
              "type": "",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ],
          "inheritance": {
            "file": "Calendar"
          }
        },
        {
          "name": "onUserInput",
          "args": [
            {
              "name": "event",
              "type": "",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 2047,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "event",
              "type": "",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ],
          "inheritance": {
            "file": "Calendar"
          }
        },
        {
          "name": "onWindowResize",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 2872,
          "deprecated": false,
          "deprecationMessage": "",
          "inheritance": {
            "file": "Calendar"
          }
        },
        {
          "name": "onYearCellKeydown",
          "args": [
            {
              "name": "event",
              "type": "",
              "deprecated": false,
              "deprecationMessage": ""
            },
            {
              "name": "index",
              "type": "",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 1520,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "event",
              "type": "",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "index",
              "type": "",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ],
          "inheritance": {
            "file": "Calendar"
          }
        },
        {
          "name": "onYearDropdownChange",
          "args": [
            {
              "name": "y",
              "type": "string",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 1805,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "y",
              "type": "string",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ],
          "inheritance": {
            "file": "Calendar"
          }
        },
        {
          "name": "onYearSelect",
          "args": [
            {
              "name": "event",
              "type": "",
              "deprecated": false,
              "deprecationMessage": ""
            },
            {
              "name": "year",
              "type": "",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 850,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "event",
              "type": "",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "year",
              "type": "",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ],
          "inheritance": {
            "file": "Calendar"
          }
        },
        {
          "name": "parseDate",
          "args": [
            {
              "name": "value",
              "type": "",
              "deprecated": false,
              "deprecationMessage": ""
            },
            {
              "name": "format",
              "type": "",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "any",
          "typeParameters": [],
          "line": 2534,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "value",
              "type": "",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "format",
              "type": "",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ],
          "inheritance": {
            "file": "Calendar"
          }
        },
        {
          "name": "parseDateTime",
          "args": [
            {
              "name": "text",
              "type": "",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "Date",
          "typeParameters": [],
          "line": 2110,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "text",
              "type": "",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ],
          "inheritance": {
            "file": "Calendar"
          }
        },
        {
          "name": "parseTime",
          "args": [
            {
              "name": "value",
              "type": "",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "{ hour: any; minute: any; second: any; }",
          "typeParameters": [],
          "line": 2499,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "value",
              "type": "",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ],
          "inheritance": {
            "file": "Calendar"
          }
        },
        {
          "name": "parseValueFromString",
          "args": [
            {
              "name": "text",
              "type": "string",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "Date | []",
          "typeParameters": [],
          "line": 2084,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "text",
              "type": "string",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ],
          "inheritance": {
            "file": "Calendar"
          }
        },
        {
          "name": "populateTime",
          "args": [
            {
              "name": "value",
              "type": "",
              "deprecated": false,
              "deprecationMessage": ""
            },
            {
              "name": "timeString",
              "type": "",
              "deprecated": false,
              "deprecationMessage": ""
            },
            {
              "name": "ampm",
              "type": "",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 2133,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "value",
              "type": "",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "timeString",
              "type": "",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "ampm",
              "type": "",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ],
          "inheritance": {
            "file": "Calendar"
          }
        },
        {
          "name": "populateYearOptions",
          "args": [
            {
              "name": "start",
              "type": "",
              "deprecated": false,
              "deprecationMessage": ""
            },
            {
              "name": "end",
              "type": "",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 539,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "start",
              "type": "",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "end",
              "type": "",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ],
          "inheritance": {
            "file": "Calendar"
          }
        },
        {
          "name": "registerOnTouched",
          "args": [
            {
              "name": "fn",
              "type": "Function",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 2353,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "fn",
              "type": "Function",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ],
          "inheritance": {
            "file": "Calendar"
          }
        },
        {
          "name": "repeat",
          "args": [
            {
              "name": "event",
              "type": "Event",
              "deprecated": false,
              "deprecationMessage": ""
            },
            {
              "name": "interval",
              "type": "number",
              "deprecated": false,
              "deprecationMessage": ""
            },
            {
              "name": "type",
              "type": "number",
              "deprecated": false,
              "deprecationMessage": ""
            },
            {
              "name": "direction",
              "type": "number",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 1908,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "event",
              "type": "Event",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "interval",
              "type": "number",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "type",
              "type": "number",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "direction",
              "type": "number",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ],
          "inheritance": {
            "file": "Calendar"
          }
        },
        {
          "name": "restoreOverlayAppend",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 2253,
          "deprecated": false,
          "deprecationMessage": "",
          "inheritance": {
            "file": "Calendar"
          }
        },
        {
          "name": "selectDate",
          "args": [
            {
              "name": "dateMeta",
              "type": "",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 923,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "dateMeta",
              "type": "",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ],
          "inheritance": {
            "file": "Calendar"
          }
        },
        {
          "name": "setCurrentHourPM",
          "args": [
            {
              "name": "hours",
              "type": "number",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 910,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "hours",
              "type": "number",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ],
          "inheritance": {
            "file": "Calendar"
          }
        },
        {
          "name": "setDisabledState",
          "args": [
            {
              "name": "val",
              "type": "boolean",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 2357,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "val",
              "type": "boolean",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ],
          "inheritance": {
            "file": "Calendar"
          }
        },
        {
          "name": "shouldSelectDate",
          "args": [
            {
              "name": "dateMeta",
              "type": "",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "boolean",
          "typeParameters": [],
          "line": 832,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "dateMeta",
              "type": "",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ],
          "inheritance": {
            "file": "Calendar"
          }
        },
        {
          "name": "showOverlay",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 2162,
          "deprecated": false,
          "deprecationMessage": "",
          "inheritance": {
            "file": "Calendar"
          }
        },
        {
          "name": "switchToMonthView",
          "args": [
            {
              "name": "event",
              "type": "",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 785,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "event",
              "type": "",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ],
          "inheritance": {
            "file": "Calendar"
          }
        },
        {
          "name": "switchToYearView",
          "args": [
            {
              "name": "event",
              "type": "",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 790,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "event",
              "type": "",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ],
          "inheritance": {
            "file": "Calendar"
          }
        },
        {
          "name": "switchViewButtonDisabled",
          "args": [],
          "optional": false,
          "returnType": "any",
          "typeParameters": [],
          "line": 1254,
          "deprecated": false,
          "deprecationMessage": "",
          "inheritance": {
            "file": "Calendar"
          }
        },
        {
          "name": "toggle",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 2185,
          "deprecated": false,
          "deprecationMessage": "",
          "inheritance": {
            "file": "Calendar"
          }
        },
        {
          "name": "toggleAMPM",
          "args": [
            {
              "name": "event",
              "type": "",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 2038,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "event",
              "type": "",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ],
          "inheritance": {
            "file": "Calendar"
          }
        },
        {
          "name": "trapFocus",
          "args": [
            {
              "name": "event",
              "type": "",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 1765,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "event",
              "type": "",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ],
          "inheritance": {
            "file": "Calendar"
          }
        },
        {
          "name": "unbindAnimationEndListener",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 2331,
          "deprecated": false,
          "deprecationMessage": "",
          "inheritance": {
            "file": "Calendar"
          }
        },
        {
          "name": "unbindDocumentClickListener",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 2815,
          "deprecated": false,
          "deprecationMessage": "",
          "inheritance": {
            "file": "Calendar"
          }
        },
        {
          "name": "unbindDocumentResizeListener",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 2829,
          "deprecated": false,
          "deprecationMessage": "",
          "inheritance": {
            "file": "Calendar"
          }
        },
        {
          "name": "unbindMaskClickListener",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 2324,
          "deprecated": false,
          "deprecationMessage": "",
          "inheritance": {
            "file": "Calendar"
          }
        },
        {
          "name": "unbindScrollListener",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 2848,
          "deprecated": false,
          "deprecationMessage": "",
          "inheritance": {
            "file": "Calendar"
          }
        },
        {
          "name": "updateFilledState",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 2721,
          "deprecated": false,
          "deprecationMessage": "",
          "inheritance": {
            "file": "Calendar"
          }
        },
        {
          "name": "updateFocus",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 1630,
          "deprecated": false,
          "deprecationMessage": "",
          "inheritance": {
            "file": "Calendar"
          }
        },
        {
          "name": "updateInputfield",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 860,
          "deprecated": false,
          "deprecationMessage": "",
          "inheritance": {
            "file": "Calendar"
          }
        },
        {
          "name": "updateModel",
          "args": [
            {
              "name": "value",
              "type": "",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 977,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "value",
              "type": "",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ],
          "inheritance": {
            "file": "Calendar"
          }
        },
        {
          "name": "updateTime",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 2005,
          "deprecated": false,
          "deprecationMessage": "",
          "inheritance": {
            "file": "Calendar"
          }
        },
        {
          "name": "updateUI",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 2145,
          "deprecated": false,
          "deprecationMessage": "",
          "inheritance": {
            "file": "Calendar"
          }
        },
        {
          "name": "validateTime",
          "args": [
            {
              "name": "hour",
              "type": "number",
              "deprecated": false,
              "deprecationMessage": ""
            },
            {
              "name": "minute",
              "type": "number",
              "deprecated": false,
              "deprecationMessage": ""
            },
            {
              "name": "second",
              "type": "number",
              "deprecated": false,
              "deprecationMessage": ""
            },
            {
              "name": "pm",
              "type": "boolean",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "boolean",
          "typeParameters": [],
          "line": 1822,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "hour",
              "type": "number",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "minute",
              "type": "number",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "second",
              "type": "number",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "pm",
              "type": "boolean",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ],
          "inheritance": {
            "file": "Calendar"
          }
        },
        {
          "name": "writeValue",
          "args": [
            {
              "name": "value",
              "type": "any",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 2338,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "value",
              "type": "any",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ],
          "inheritance": {
            "file": "Calendar"
          }
        },
        {
          "name": "yearPickerValues",
          "args": [],
          "optional": false,
          "returnType": "{}",
          "typeParameters": [],
          "line": 566,
          "deprecated": false,
          "deprecationMessage": "",
          "inheritance": {
            "file": "Calendar"
          }
        }
      ],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import { animate, state, style, transition, trigger } from '@angular/animations';\r\nimport { ChangeDetectorRef, forwardRef, NgZone, Renderer2 } from '@angular/core';\r\nimport {\r\n  Component,\r\n  Input,\r\n  ChangeDetectionStrategy,\r\n  Output,\r\n  EventEmitter,\r\n  OnInit,\r\n  OnDestroy,\r\n  ViewChild,\r\n  ContentChildren,\r\n  QueryList,\r\n  ElementRef,\r\n  TemplateRef,\r\n} from '@angular/core';\r\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\r\nimport { OverlayService, PrimeNGConfig, PrimeTemplate, TranslationKeys } from 'primeng/api';\r\nimport { LocaleSettings } from 'primeng/calendar';\r\nimport { ConnectedOverlayScrollHandler, DomHandler } from 'primeng/dom';\r\nimport { UniqueComponentId, ZIndexUtils } from 'primeng/utils';\r\nimport { Subscription } from 'rxjs';\r\n\r\nexport const CALENDAR_VALUE_ACCESSOR: any = {\r\n  provide: NG_VALUE_ACCESSOR,\r\n  useExisting: forwardRef(() => ZyfraCalendarComponent),\r\n  multi: true,\r\n};\r\n\r\n/**\r\n * Forked from https://github.com/primefaces/primeng/blob/master/src/app/components/calendar/calendar.ts\r\n * Update this after release primeng,  Last changes 20.12.2021\r\n */\r\n@Component({ template: '' })\r\nabstract class Calendar implements OnInit, OnDestroy, ControlValueAccessor {\r\n  @Input() style: any;\r\n\r\n  @Input() styleClass: string;\r\n\r\n  @Input() inputStyle: any;\r\n\r\n  @Input() label: string;\r\n\r\n  @Input() inputId: string;\r\n\r\n  @Input() name: string;\r\n\r\n  @Input() inputStyleClass: string;\r\n\r\n  @Input() placeholder: string;\r\n\r\n  @Input() ariaLabelledBy: string;\r\n\r\n  @Input() iconAriaLabel: string;\r\n\r\n  @Input() disabled: any;\r\n\r\n  @Input() dateFormat: string;\r\n\r\n  @Input() multipleSeparator: string = ',';\r\n\r\n  @Input() rangeSeparator: string = '-';\r\n\r\n  @Input() inline: boolean = false;\r\n\r\n  @Input() showOtherMonths: boolean = true;\r\n\r\n  @Input() selectOtherMonths: boolean;\r\n\r\n  @Input() showIcon: boolean;\r\n\r\n  @Input() icon: string = 'pi pi-calendar';\r\n\r\n  @Input() appendTo: any;\r\n\r\n  @Input() readonlyInput: boolean;\r\n\r\n  @Input() shortYearCutoff: any = '+10';\r\n\r\n  @Input() monthNavigator: boolean;\r\n\r\n  @Input() yearNavigator: boolean;\r\n\r\n  @Input() hourFormat: string = '24';\r\n\r\n  @Input() timeOnly: boolean;\r\n\r\n  @Input() stepHour: number = 1;\r\n\r\n  @Input() stepMinute: number = 1;\r\n\r\n  @Input() stepSecond: number = 1;\r\n\r\n  @Input() showSeconds: boolean = false;\r\n\r\n  @Input() required: boolean;\r\n\r\n  @Input() showOnFocus: boolean = true;\r\n\r\n  @Input() showWeek: boolean = false;\r\n\r\n  @Input() dataType: string = 'date';\r\n\r\n  @Input() selectionMode: string = 'single';\r\n\r\n  @Input() maxDateCount: number;\r\n\r\n  @Input() showButtonBar: boolean;\r\n\r\n  @Input() todayButtonStyleClass: string = 'p-button-text';\r\n\r\n  @Input() clearButtonStyleClass: string = 'p-button-text';\r\n\r\n  @Input() autoZIndex: boolean = true;\r\n\r\n  @Input() baseZIndex: number = 0;\r\n\r\n  @Input() panelStyleClass: string;\r\n\r\n  @Input() panelStyle: any;\r\n\r\n  @Input() keepInvalid: boolean = false;\r\n\r\n  @Input() hideOnDateTimeSelect: boolean = true;\r\n\r\n  @Input() touchUI: boolean;\r\n\r\n  @Input() timeSeparator: string = ':';\r\n\r\n  @Input() focusTrap: boolean = true;\r\n\r\n  @Input() firstDayOfWeek: number = 0;\r\n\r\n  @Input() showTransitionOptions: string = '.12s cubic-bezier(0, 0, 0.2, 1)';\r\n\r\n  @Input() hideTransitionOptions: string = '.1s linear';\r\n\r\n  @Output() onFocus: EventEmitter<any> = new EventEmitter();\r\n\r\n  @Output() onBlur: EventEmitter<any> = new EventEmitter();\r\n\r\n  @Output() onClose: EventEmitter<any> = new EventEmitter();\r\n\r\n  @Output() onSelect: EventEmitter<any> = new EventEmitter();\r\n\r\n  @Output() onInput: EventEmitter<any> = new EventEmitter();\r\n\r\n  @Output() onTodayClick: EventEmitter<any> = new EventEmitter();\r\n\r\n  @Output() onClearClick: EventEmitter<any> = new EventEmitter();\r\n\r\n  @Output() onMonthChange: EventEmitter<any> = new EventEmitter();\r\n\r\n  @Output() onYearChange: EventEmitter<any> = new EventEmitter();\r\n\r\n  @Output() onClickOutside: EventEmitter<any> = new EventEmitter();\r\n\r\n  @Output() onShow: EventEmitter<any> = new EventEmitter();\r\n\r\n  @ContentChildren(PrimeTemplate) templates: QueryList<any>;\r\n\r\n  @Input() tabindex: number;\r\n\r\n  @ViewChild('container', { static: false }) containerViewChild: ElementRef;\r\n\r\n  @ViewChild('inputfield', { static: false }) inputfieldViewChild: ElementRef;\r\n\r\n  @ViewChild('contentWrapper', { static: false }) set content(content: ElementRef) {\r\n    this.contentViewChild = content;\r\n\r\n    if (this.contentViewChild) {\r\n      if (this.isMonthNavigate) {\r\n        Promise.resolve(null).then(() => this.updateFocus());\r\n        this.isMonthNavigate = false;\r\n      } else {\r\n        if (!this.focus) {\r\n          this.initFocusableCell();\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  contentViewChild: ElementRef;\r\n\r\n  value: any;\r\n\r\n  dates: any[];\r\n\r\n  months: any[];\r\n\r\n  weekDays: string[];\r\n\r\n  currentMonth: number;\r\n\r\n  currentYear: number;\r\n\r\n  currentHour: number;\r\n\r\n  currentMinute: number;\r\n\r\n  currentSecond: number;\r\n\r\n  pm: boolean;\r\n\r\n  mask: HTMLDivElement;\r\n\r\n  maskClickListener: Function;\r\n\r\n  overlay: HTMLDivElement;\r\n\r\n  responsiveStyleElement: any;\r\n\r\n  overlayVisible: boolean;\r\n\r\n  onModelChange: Function = () => {};\r\n\r\n  onModelTouched: Function = () => {};\r\n\r\n  calendarElement: any;\r\n\r\n  timePickerTimer: any;\r\n\r\n  documentClickListener: any;\r\n\r\n  animationEndListener: any;\r\n\r\n  ticksTo1970: number;\r\n\r\n  yearOptions: number[];\r\n\r\n  focus: boolean;\r\n\r\n  isKeydown: boolean;\r\n\r\n  filled: boolean;\r\n\r\n  inputFieldValue: string = null;\r\n\r\n  _minDate: Date | null;\r\n\r\n  _maxDate: Date | null;\r\n\r\n  _showTime: boolean;\r\n\r\n  _yearRange: string;\r\n\r\n  preventDocumentListener: boolean;\r\n\r\n  dateTemplate: TemplateRef<any>;\r\n\r\n  headerTemplate: TemplateRef<any>;\r\n\r\n  footerTemplate: TemplateRef<any>;\r\n\r\n  disabledDateTemplate: TemplateRef<any>;\r\n\r\n  decadeTemplate: TemplateRef<any>;\r\n\r\n  _disabledDates: Array<Date>;\r\n\r\n  _disabledDays: Array<number>;\r\n\r\n  selectElement: any;\r\n\r\n  todayElement: any;\r\n\r\n  focusElement: any;\r\n\r\n  scrollHandler: any;\r\n\r\n  documentResizeListener: any;\r\n\r\n  navigationState: any = null;\r\n\r\n  isMonthNavigate: boolean;\r\n\r\n  initialized: boolean;\r\n\r\n  translationSubscription: Subscription;\r\n\r\n  _locale: LocaleSettings;\r\n\r\n  _responsiveOptions: any[];\r\n\r\n  currentView: string;\r\n\r\n  attributeSelector: string;\r\n\r\n  _numberOfMonths: number = 1;\r\n\r\n  _view: string = 'date';\r\n\r\n  preventFocus: boolean;\r\n\r\n  @Input() get view(): string {\r\n    return this._view;\r\n  }\r\n\r\n  set view(view: string) {\r\n    this._view = view;\r\n    this.currentView = this._view;\r\n  }\r\n\r\n  @Input() get defaultDate(): Date | null {\r\n    return this._defaultDate;\r\n  }\r\n\r\n  set defaultDate(defaultDate: Date | null) {\r\n    this._defaultDate = defaultDate;\r\n\r\n    if (this.initialized) {\r\n      const date = defaultDate || new Date();\r\n      this.currentMonth = date.getMonth();\r\n      this.currentYear = date.getFullYear();\r\n      this.initTime(date);\r\n      this.createMonths(this.currentMonth, this.currentYear);\r\n    }\r\n  }\r\n\r\n  _defaultDate: Date | null;\r\n\r\n  @Input() get minDate(): Date | null {\r\n    return this._minDate;\r\n  }\r\n\r\n  set minDate(date: Date | null) {\r\n    this._minDate = date;\r\n\r\n    if (this.currentMonth != undefined && this.currentMonth != null && this.currentYear) {\r\n      this.createMonths(this.currentMonth, this.currentYear);\r\n    }\r\n  }\r\n\r\n  @Input() get maxDate(): Date | null {\r\n    return this._maxDate;\r\n  }\r\n\r\n  set maxDate(date: Date | null) {\r\n    this._maxDate = date;\r\n\r\n    if (this.currentMonth != undefined && this.currentMonth != null && this.currentYear) {\r\n      this.createMonths(this.currentMonth, this.currentYear);\r\n    }\r\n  }\r\n\r\n  @Input() get disabledDates(): Date[] {\r\n    return this._disabledDates;\r\n  }\r\n\r\n  set disabledDates(disabledDates: Date[]) {\r\n    this._disabledDates = disabledDates;\r\n    if (this.currentMonth != undefined && this.currentMonth != null && this.currentYear) {\r\n      this.createMonths(this.currentMonth, this.currentYear);\r\n    }\r\n  }\r\n\r\n  @Input() get disabledDays(): number[] {\r\n    return this._disabledDays;\r\n  }\r\n\r\n  set disabledDays(disabledDays: number[]) {\r\n    this._disabledDays = disabledDays;\r\n\r\n    if (this.currentMonth != undefined && this.currentMonth != null && this.currentYear) {\r\n      this.createMonths(this.currentMonth, this.currentYear);\r\n    }\r\n  }\r\n\r\n  @Input() get yearRange(): string {\r\n    return this._yearRange;\r\n  }\r\n\r\n  set yearRange(yearRange: string) {\r\n    this._yearRange = yearRange;\r\n\r\n    if (yearRange) {\r\n      const years = yearRange.split(':');\r\n      const yearStart = parseInt(years[0]);\r\n      const yearEnd = parseInt(years[1]);\r\n\r\n      this.populateYearOptions(yearStart, yearEnd);\r\n    }\r\n  }\r\n\r\n  @Input() get showTime(): boolean {\r\n    return this._showTime;\r\n  }\r\n\r\n  set showTime(showTime: boolean) {\r\n    this._showTime = showTime;\r\n\r\n    if (this.currentHour === undefined) {\r\n      this.initTime(this.value || new Date());\r\n    }\r\n    this.updateInputfield();\r\n  }\r\n\r\n  get locale() {\r\n    return this._locale;\r\n  }\r\n\r\n  @Input() get responsiveOptions(): any[] {\r\n    return this._responsiveOptions;\r\n  }\r\n\r\n  set responsiveOptions(responsiveOptions: any[]) {\r\n    this._responsiveOptions = responsiveOptions;\r\n\r\n    this.destroyResponsiveStyleElement();\r\n    this.createResponsiveStyle();\r\n  }\r\n\r\n  @Input() get numberOfMonths(): number {\r\n    return this._numberOfMonths;\r\n  }\r\n\r\n  set numberOfMonths(numberOfMonths: number) {\r\n    this._numberOfMonths = numberOfMonths;\r\n\r\n    this.destroyResponsiveStyleElement();\r\n    this.createResponsiveStyle();\r\n  }\r\n\r\n  @Input()\r\n  set locale(newLocale: LocaleSettings) {\r\n    console.warn('Locale property has no effect, use new i18n API instead.');\r\n  }\r\n\r\n  constructor(\r\n    el: ElementRef,\r\n    renderer: Renderer2,\r\n    cd: ChangeDetectorRef,\r\n    zone: NgZone,\r\n    config: PrimeNGConfig,\r\n    overlayService: OverlayService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.attributeSelector = UniqueComponentId();\r\n    const date = this.defaultDate || new Date();\r\n    this.createResponsiveStyle();\r\n    this.currentMonth = date.getMonth();\r\n    this.currentYear = date.getFullYear();\r\n    this.currentView = this.view;\r\n\r\n    if (this.view === 'date') {\r\n      this.createWeekDays();\r\n      this.initTime(date);\r\n      this.createMonths(this.currentMonth, this.currentYear);\r\n      this.ticksTo1970 =\r\n        ((1970 - 1) * 365 + Math.floor(1970 / 4) - Math.floor(1970 / 100) + Math.floor(1970 / 400)) *\r\n        24 *\r\n        60 *\r\n        60 *\r\n        10000000;\r\n    }\r\n\r\n    this.translationSubscription = this.config.translationObserver.subscribe(() => {\r\n      this.createWeekDays();\r\n    });\r\n\r\n    this.initialized = true;\r\n\r\n    this.config.setTranslation({\r\n      dayNames: ['Воскресенье', 'Понедельник', 'Вторник', 'Среда', 'Четверг', 'Пятница', 'Суббота'],\r\n      dayNamesShort: ['Вс', 'Пн', 'Вт', 'Ср', 'Чт', 'Пт', 'Сб'],\r\n      dayNamesMin: ['Вс', 'Пн', 'Вт', 'Ср', 'Чт', 'Пт', 'Сб'],\r\n      monthNames: [\r\n        'Январь',\r\n        'Февраль',\r\n        'Март',\r\n        'Апрель',\r\n        'Май',\r\n        'Июнь',\r\n        'Июль',\r\n        'Август',\r\n        'Сентябрь',\r\n        'Октябрь',\r\n        'Ноябрь',\r\n        'Декабрь',\r\n      ],\r\n      monthNamesShort: ['Янв', 'Фев', 'Мар', 'Апр', 'Май', 'Июн', 'Июл', 'Авг', 'Сен', 'Окт', 'Ноя', 'Дек'],\r\n      today: 'Сегодня',\r\n      clear: 'Очистить',\r\n      weekHeader: 'Нед',\r\n    });\r\n  }\r\n\r\n  ngAfterContentInit() {\r\n    this.templates.forEach(item => {\r\n      switch (item.getType()) {\r\n        case 'date':\r\n          this.dateTemplate = item.template;\r\n          break;\r\n\r\n        case 'decade':\r\n          this.decadeTemplate = item.template;\r\n          break;\r\n\r\n        case 'disabledDate':\r\n          this.disabledDateTemplate = item.template;\r\n          break;\r\n\r\n        case 'header':\r\n          this.headerTemplate = item.template;\r\n          break;\r\n\r\n        case 'footer':\r\n          this.footerTemplate = item.template;\r\n          break;\r\n\r\n        default:\r\n          this.dateTemplate = item.template;\r\n          break;\r\n      }\r\n    });\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    if (this.inline) {\r\n      this.contentViewChild && this.contentViewChild.nativeElement.setAttribute(this.attributeSelector, '');\r\n\r\n      if (!this.disabled) {\r\n        this.initFocusableCell();\r\n        if (this.numberOfMonths === 1) {\r\n          this.contentViewChild.nativeElement.style.width =\r\n            DomHandler.getOuterWidth(this.containerViewChild.nativeElement) + 'px';\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  getTranslation(option: string) {\r\n    return this.config.getTranslation(option);\r\n  }\r\n\r\n  populateYearOptions(start, end) {\r\n    this.yearOptions = [];\r\n\r\n    for (let i = start; i <= end; i++) {\r\n      this.yearOptions.push(i);\r\n    }\r\n  }\r\n\r\n  createWeekDays() {\r\n    this.weekDays = [];\r\n    let dayIndex = this.firstDayOfWeek;\r\n    let dayLabels = this.getTranslation(TranslationKeys.DAY_NAMES_MIN);\r\n    for (let i = 0; i < 7; i++) {\r\n      this.weekDays.push(dayLabels[dayIndex]);\r\n      dayIndex = dayIndex == 6 ? 0 : ++dayIndex;\r\n    }\r\n  }\r\n\r\n  monthPickerValues() {\r\n    let monthPickerValues = [];\r\n    for (let i = 0; i <= 11; i++) {\r\n      monthPickerValues.push(this.config.getTranslation('monthNamesShort')[i]);\r\n    }\r\n\r\n    return monthPickerValues;\r\n  }\r\n\r\n  yearPickerValues() {\r\n    let yearPickerValues = [];\r\n    let base = this.currentYear - (this.currentYear % 10);\r\n    for (let i = 0; i < 10; i++) {\r\n      yearPickerValues.push(base + i);\r\n    }\r\n\r\n    return yearPickerValues;\r\n  }\r\n\r\n  createMonths(month: number, year: number) {\r\n    this.months = this.months = [];\r\n    for (let i = 0; i < this.numberOfMonths; i++) {\r\n      let m = month + i;\r\n      let y = year;\r\n      if (m > 11) {\r\n        m = (m % 11) - 1;\r\n        y = year + 1;\r\n      }\r\n\r\n      this.months.push(this.createMonth(m, y));\r\n    }\r\n  }\r\n\r\n  getWeekNumber(date: Date) {\r\n    let checkDate = new Date(date.getTime());\r\n    checkDate.setDate(checkDate.getDate() + 4 - (checkDate.getDay() || 7));\r\n    let time = checkDate.getTime();\r\n    checkDate.setMonth(0);\r\n    checkDate.setDate(1);\r\n    return Math.floor(Math.round((time - checkDate.getTime()) / 86400000) / 7) + 1;\r\n  }\r\n\r\n  createMonth(month: number, year: number) {\r\n    let dates = [];\r\n    let firstDay = this.getFirstDayOfMonthIndex(month, year);\r\n    let daysLength = this.getDaysCountInMonth(month, year);\r\n    let prevMonthDaysLength = this.getDaysCountInPrevMonth(month, year);\r\n    let dayNo = 1;\r\n    let today = new Date();\r\n    let weekNumbers = [];\r\n    let monthRows = Math.ceil((daysLength + firstDay) / 7);\r\n\r\n    for (let i = 0; i < monthRows; i++) {\r\n      let week = [];\r\n\r\n      if (i == 0) {\r\n        for (let j = prevMonthDaysLength - firstDay + 1; j <= prevMonthDaysLength; j++) {\r\n          let prev = this.getPreviousMonthAndYear(month, year);\r\n          week.push({\r\n            day: j,\r\n            month: prev.month,\r\n            year: prev.year,\r\n            otherMonth: true,\r\n            today: this.isToday(today, j, prev.month, prev.year),\r\n            selectable: this.isSelectable(j, prev.month, prev.year, true),\r\n          });\r\n        }\r\n\r\n        let remainingDaysLength = 7 - week.length;\r\n        for (let j = 0; j < remainingDaysLength; j++) {\r\n          week.push({\r\n            day: dayNo,\r\n            month: month,\r\n            year: year,\r\n            today: this.isToday(today, dayNo, month, year),\r\n            selectable: this.isSelectable(dayNo, month, year, false),\r\n          });\r\n          dayNo++;\r\n        }\r\n      } else {\r\n        for (let j = 0; j < 7; j++) {\r\n          if (dayNo > daysLength) {\r\n            let next = this.getNextMonthAndYear(month, year);\r\n            week.push({\r\n              day: dayNo - daysLength,\r\n              month: next.month,\r\n              year: next.year,\r\n              otherMonth: true,\r\n              today: this.isToday(today, dayNo - daysLength, next.month, next.year),\r\n              selectable: this.isSelectable(dayNo - daysLength, next.month, next.year, true),\r\n            });\r\n          } else {\r\n            week.push({\r\n              day: dayNo,\r\n              month: month,\r\n              year: year,\r\n              today: this.isToday(today, dayNo, month, year),\r\n              selectable: this.isSelectable(dayNo, month, year, false),\r\n            });\r\n          }\r\n\r\n          dayNo++;\r\n        }\r\n      }\r\n\r\n      if (this.showWeek) {\r\n        weekNumbers.push(this.getWeekNumber(new Date(week[0].year, week[0].month, week[0].day)));\r\n      }\r\n\r\n      dates.push(week);\r\n    }\r\n\r\n    return {\r\n      month: month,\r\n      year: year,\r\n      dates: dates,\r\n      weekNumbers: weekNumbers,\r\n    };\r\n  }\r\n\r\n  initTime(date: Date) {\r\n    this.pm = date.getHours() > 11;\r\n\r\n    if (this.showTime) {\r\n      this.currentMinute = date.getMinutes();\r\n      this.currentSecond = date.getSeconds();\r\n      this.setCurrentHourPM(date.getHours());\r\n    } else if (this.timeOnly) {\r\n      this.currentMinute = 0;\r\n      this.currentHour = 0;\r\n      this.currentSecond = 0;\r\n    }\r\n  }\r\n\r\n  navBackward(event) {\r\n    if (this.disabled) {\r\n      event.preventDefault();\r\n      return;\r\n    }\r\n\r\n    this.isMonthNavigate = true;\r\n\r\n    if (this.currentView === 'month') {\r\n      this.decrementYear();\r\n      setTimeout(() => {\r\n        this.updateFocus();\r\n      }, 1);\r\n    } else if (this.currentView === 'year') {\r\n      this.decrementDecade();\r\n      setTimeout(() => {\r\n        this.updateFocus();\r\n      }, 1);\r\n    } else {\r\n      if (this.currentMonth === 0) {\r\n        this.currentMonth = 11;\r\n        this.decrementYear();\r\n      } else {\r\n        this.currentMonth--;\r\n      }\r\n\r\n      this.onMonthChange.emit({ month: this.currentMonth + 1, year: this.currentYear });\r\n      this.createMonths(this.currentMonth, this.currentYear);\r\n    }\r\n  }\r\n\r\n  navForward(event) {\r\n    if (this.disabled) {\r\n      event.preventDefault();\r\n      return;\r\n    }\r\n\r\n    this.isMonthNavigate = true;\r\n\r\n    if (this.currentView === 'month') {\r\n      this.incrementYear();\r\n      setTimeout(() => {\r\n        this.updateFocus();\r\n      }, 1);\r\n    } else if (this.currentView === 'year') {\r\n      this.incrementDecade();\r\n      setTimeout(() => {\r\n        this.updateFocus();\r\n      }, 1);\r\n    } else {\r\n      if (this.currentMonth === 11) {\r\n        this.currentMonth = 0;\r\n        this.incrementYear();\r\n      } else {\r\n        this.currentMonth++;\r\n      }\r\n\r\n      this.onMonthChange.emit({ month: this.currentMonth + 1, year: this.currentYear });\r\n      this.createMonths(this.currentMonth, this.currentYear);\r\n    }\r\n  }\r\n\r\n  decrementYear() {\r\n    this.currentYear--;\r\n\r\n    if (this.yearNavigator && this.currentYear < this.yearOptions[0]) {\r\n      let difference = this.yearOptions[this.yearOptions.length - 1] - this.yearOptions[0];\r\n      this.populateYearOptions(\r\n        this.yearOptions[0] - difference,\r\n        this.yearOptions[this.yearOptions.length - 1] - difference\r\n      );\r\n    }\r\n  }\r\n\r\n  decrementDecade() {\r\n    this.currentYear = this.currentYear - 10;\r\n  }\r\n\r\n  incrementDecade() {\r\n    this.currentYear = this.currentYear + 10;\r\n  }\r\n\r\n  incrementYear() {\r\n    this.currentYear++;\r\n\r\n    if (this.yearNavigator && this.currentYear > this.yearOptions[this.yearOptions.length - 1]) {\r\n      let difference = this.yearOptions[this.yearOptions.length - 1] - this.yearOptions[0];\r\n      this.populateYearOptions(\r\n        this.yearOptions[0] + difference,\r\n        this.yearOptions[this.yearOptions.length - 1] + difference\r\n      );\r\n    }\r\n  }\r\n\r\n  switchToMonthView(event) {\r\n    this.currentView = 'month';\r\n    event.preventDefault();\r\n  }\r\n\r\n  switchToYearView(event) {\r\n    this.currentView = 'year';\r\n    event.preventDefault();\r\n  }\r\n\r\n  onDateSelect(event, dateMeta) {\r\n    if (this.disabled || !dateMeta.selectable) {\r\n      event.preventDefault();\r\n      return;\r\n    }\r\n\r\n    if (this.isMultipleSelection() && this.isSelected(dateMeta)) {\r\n      this.value = this.value.filter((date, i) => {\r\n        return !this.isDateEquals(date, dateMeta);\r\n      });\r\n      if (this.value.length === 0) {\r\n        this.value = null;\r\n      }\r\n      this.updateModel(this.value);\r\n    } else {\r\n      if (this.shouldSelectDate(dateMeta)) {\r\n        this.selectDate(dateMeta);\r\n      }\r\n    }\r\n\r\n    if (this.isSingleSelection() && this.hideOnDateTimeSelect) {\r\n      setTimeout(() => {\r\n        event.preventDefault();\r\n        this.hideOverlay();\r\n\r\n        if (this.mask) {\r\n          this.disableModality();\r\n        }\r\n\r\n        this.cd.markForCheck();\r\n      }, 150);\r\n    }\r\n\r\n    this.updateInputfield();\r\n    event.preventDefault();\r\n  }\r\n\r\n  shouldSelectDate(dateMeta) {\r\n    if (this.isMultipleSelection())\r\n      return this.maxDateCount != null ? this.maxDateCount > (this.value ? this.value.length : 0) : true;\r\n    else return true;\r\n  }\r\n\r\n  onMonthSelect(event, index) {\r\n    if (this.view === 'month') {\r\n      this.onDateSelect(event, { year: this.currentYear, month: index, day: 1, selectable: true });\r\n    } else {\r\n      this.currentMonth = index;\r\n      this.currentView = 'date';\r\n      this.createMonths(this.currentMonth, this.currentYear);\r\n      this.cd.markForCheck();\r\n      this.onMonthChange.emit({ month: this.currentMonth + 1, year: this.currentYear });\r\n    }\r\n  }\r\n\r\n  onYearSelect(event, year) {\r\n    if (this.view === 'year') {\r\n      this.onDateSelect(event, { year: year, month: 0, day: 1, selectable: true });\r\n    } else {\r\n      this.currentYear = year;\r\n      this.currentView = 'month';\r\n      this.onYearChange.emit({ month: this.currentMonth + 1, year: this.currentYear });\r\n    }\r\n  }\r\n\r\n  updateInputfield() {\r\n    let formattedValue = '';\r\n\r\n    if (this.value) {\r\n      if (this.isSingleSelection()) {\r\n        formattedValue = this.formatDateTime(this.value);\r\n      } else if (this.isMultipleSelection()) {\r\n        for (let i = 0; i < this.value.length; i++) {\r\n          let dateAsString = this.formatDateTime(this.value[i]);\r\n          formattedValue += dateAsString;\r\n          if (i !== this.value.length - 1) {\r\n            formattedValue += this.multipleSeparator + ' ';\r\n          }\r\n        }\r\n      } else if (this.isRangeSelection()) {\r\n        if (this.value && this.value.length) {\r\n          let startDate = this.value[0];\r\n          let endDate = this.value[1];\r\n\r\n          formattedValue = this.formatDateTime(startDate);\r\n          if (endDate) {\r\n            formattedValue += ' ' + this.rangeSeparator + ' ' + this.formatDateTime(endDate);\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    this.inputFieldValue = formattedValue;\r\n    this.updateFilledState();\r\n    if (this.inputfieldViewChild && this.inputfieldViewChild.nativeElement) {\r\n      this.inputfieldViewChild.nativeElement.value = this.inputFieldValue;\r\n    }\r\n  }\r\n\r\n  formatDateTime(date) {\r\n    let formattedValue = null;\r\n    if (date) {\r\n      if (this.timeOnly) {\r\n        formattedValue = this.formatTime(date);\r\n      } else {\r\n        formattedValue = this.formatDate(date, this.getDateFormat());\r\n        if (this.showTime) {\r\n          formattedValue += ' ' + this.formatTime(date);\r\n        }\r\n      }\r\n    }\r\n\r\n    return formattedValue;\r\n  }\r\n\r\n  setCurrentHourPM(hours: number) {\r\n    if (this.hourFormat == '12') {\r\n      this.pm = hours > 11;\r\n      if (hours >= 12) {\r\n        this.currentHour = hours == 12 ? 12 : hours - 12;\r\n      } else {\r\n        this.currentHour = hours == 0 ? 12 : hours;\r\n      }\r\n    } else {\r\n      this.currentHour = hours;\r\n    }\r\n  }\r\n\r\n  selectDate(dateMeta) {\r\n    let date = new Date(dateMeta.year, dateMeta.month, dateMeta.day);\r\n\r\n    if (this.showTime) {\r\n      if (this.hourFormat == '12') {\r\n        if (this.currentHour === 12) date.setHours(this.pm ? 12 : 0);\r\n        else date.setHours(this.pm ? this.currentHour + 12 : this.currentHour);\r\n      } else {\r\n        date.setHours(this.currentHour);\r\n      }\r\n\r\n      date.setMinutes(this.currentMinute);\r\n      date.setSeconds(this.currentSecond);\r\n    }\r\n\r\n    if (this.minDate && this.minDate > date) {\r\n      date = this.minDate;\r\n      this.setCurrentHourPM(date.getHours());\r\n      this.currentMinute = date.getMinutes();\r\n      this.currentSecond = date.getSeconds();\r\n    }\r\n\r\n    if (this.maxDate && this.maxDate < date) {\r\n      date = this.maxDate;\r\n      this.setCurrentHourPM(date.getHours());\r\n      this.currentMinute = date.getMinutes();\r\n      this.currentSecond = date.getSeconds();\r\n    }\r\n\r\n    if (this.isSingleSelection()) {\r\n      this.updateModel(date);\r\n    } else if (this.isMultipleSelection()) {\r\n      this.updateModel(this.value ? [...this.value, date] : [date]);\r\n    } else if (this.isRangeSelection()) {\r\n      if (this.value && this.value.length) {\r\n        let startDate = this.value[0];\r\n        let endDate = this.value[1];\r\n\r\n        if (!endDate && date.getTime() >= startDate.getTime()) {\r\n          endDate = date;\r\n        } else {\r\n          startDate = date;\r\n          endDate = null;\r\n        }\r\n\r\n        this.updateModel([startDate, endDate]);\r\n      } else {\r\n        this.updateModel([date, null]);\r\n      }\r\n    }\r\n\r\n    this.onSelect.emit(date);\r\n  }\r\n\r\n  updateModel(value) {\r\n    this.value = value;\r\n\r\n    if (this.dataType == 'date') {\r\n      this.onModelChange(this.value);\r\n    } else if (this.dataType == 'string') {\r\n      if (this.isSingleSelection()) {\r\n        this.onModelChange(this.formatDateTime(this.value));\r\n      } else {\r\n        let stringArrValue = null;\r\n        if (this.value) {\r\n          stringArrValue = this.value.map(date => this.formatDateTime(date));\r\n        }\r\n        this.onModelChange(stringArrValue);\r\n      }\r\n    }\r\n  }\r\n\r\n  getFirstDayOfMonthIndex(month: number, year: number) {\r\n    let day = new Date();\r\n    day.setDate(1);\r\n    day.setMonth(month);\r\n    day.setFullYear(year);\r\n\r\n    let dayIndex = day.getDay() + this.getSundayIndex();\r\n    return dayIndex >= 7 ? dayIndex - 7 : dayIndex;\r\n  }\r\n\r\n  getDaysCountInMonth(month: number, year: number) {\r\n    return 32 - this.daylightSavingAdjust(new Date(year, month, 32)).getDate();\r\n  }\r\n\r\n  getDaysCountInPrevMonth(month: number, year: number) {\r\n    let prev = this.getPreviousMonthAndYear(month, year);\r\n    return this.getDaysCountInMonth(prev.month, prev.year);\r\n  }\r\n\r\n  getPreviousMonthAndYear(month: number, year: number) {\r\n    let m, y;\r\n\r\n    if (month === 0) {\r\n      m = 11;\r\n      y = year - 1;\r\n    } else {\r\n      m = month - 1;\r\n      y = year;\r\n    }\r\n\r\n    return { month: m, year: y };\r\n  }\r\n\r\n  getNextMonthAndYear(month: number, year: number) {\r\n    let m, y;\r\n\r\n    if (month === 11) {\r\n      m = 0;\r\n      y = year + 1;\r\n    } else {\r\n      m = month + 1;\r\n      y = year;\r\n    }\r\n\r\n    return { month: m, year: y };\r\n  }\r\n\r\n  getSundayIndex() {\r\n    return this.firstDayOfWeek > 0 ? 7 - this.firstDayOfWeek : 0;\r\n  }\r\n\r\n  // @ts-ignore\r\n  isSelected(dateMeta): boolean {\r\n    if (this.value) {\r\n      if (this.isSingleSelection()) {\r\n        return this.isDateEquals(this.value, dateMeta);\r\n      } else if (this.isMultipleSelection()) {\r\n        let selected = false;\r\n        for (let date of this.value) {\r\n          selected = this.isDateEquals(date, dateMeta);\r\n          if (selected) {\r\n            break;\r\n          }\r\n        }\r\n\r\n        return selected;\r\n      } else if (this.isRangeSelection()) {\r\n        if (this.value[1])\r\n          return (\r\n            this.isDateEquals(this.value[0], dateMeta) ||\r\n            this.isDateEquals(this.value[1], dateMeta) ||\r\n            this.isDateBetween(this.value[0], this.value[1], dateMeta)\r\n          );\r\n        else return this.isDateEquals(this.value[0], dateMeta);\r\n      }\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  isComparable() {\r\n    return this.value != null && typeof this.value !== 'string';\r\n  }\r\n\r\n  isMonthSelected(month) {\r\n    if (this.isComparable()) {\r\n      let value = this.isRangeSelection() ? this.value[0] : this.value;\r\n\r\n      return !this.isMultipleSelection()\r\n        ? value.getMonth() === month && value.getFullYear() === this.currentYear\r\n        : false;\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  isYearSelected(year) {\r\n    if (this.isComparable()) {\r\n      let value = this.isRangeSelection() ? this.value[0] : this.value;\r\n\r\n      return !this.isMultipleSelection() ? value.getFullYear() === year : false;\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  isDateEquals(value, dateMeta) {\r\n    if (value)\r\n      return (\r\n        value.getDate() === dateMeta.day &&\r\n        value.getMonth() === dateMeta.month &&\r\n        value.getFullYear() === dateMeta.year\r\n      );\r\n    else return false;\r\n  }\r\n\r\n  isDateBetween(start, end, dateMeta) {\r\n    let between: boolean = false;\r\n    if (start && end) {\r\n      let date: Date = new Date(dateMeta.year, dateMeta.month, dateMeta.day);\r\n      return start.getTime() <= date.getTime() && end.getTime() >= date.getTime();\r\n    }\r\n\r\n    return between;\r\n  }\r\n\r\n  isSingleSelection(): boolean {\r\n    return this.selectionMode === 'single';\r\n  }\r\n\r\n  isRangeSelection(): boolean {\r\n    return this.selectionMode === 'range';\r\n  }\r\n\r\n  isMultipleSelection(): boolean {\r\n    return this.selectionMode === 'multiple';\r\n  }\r\n\r\n  isToday(today, day, month, year): boolean {\r\n    return today.getDate() === day && today.getMonth() === month && today.getFullYear() === year;\r\n  }\r\n\r\n  isSelectable(day, month, year, otherMonth): boolean {\r\n    let validMin = true;\r\n    let validMax = true;\r\n    let validDate = true;\r\n    let validDay = true;\r\n\r\n    if (otherMonth && !this.selectOtherMonths) {\r\n      return false;\r\n    }\r\n\r\n    if (this.minDate) {\r\n      if (this.minDate.getFullYear() > year) {\r\n        validMin = false;\r\n      } else if (this.minDate.getFullYear() === year) {\r\n        if (this.minDate.getMonth() > month) {\r\n          validMin = false;\r\n        } else if (this.minDate.getMonth() === month) {\r\n          if (this.minDate.getDate() > day) {\r\n            validMin = false;\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    if (this.maxDate) {\r\n      if (this.maxDate.getFullYear() < year) {\r\n        validMax = false;\r\n      } else if (this.maxDate.getFullYear() === year) {\r\n        if (this.maxDate.getMonth() < month) {\r\n          validMax = false;\r\n        } else if (this.maxDate.getMonth() === month) {\r\n          if (this.maxDate.getDate() < day) {\r\n            validMax = false;\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    if (this.disabledDates) {\r\n      validDate = !this.isDateDisabled(day, month, year);\r\n    }\r\n\r\n    if (this.disabledDays) {\r\n      validDay = !this.isDayDisabled(day, month, year);\r\n    }\r\n\r\n    return validMin && validMax && validDate && validDay;\r\n  }\r\n\r\n  isDateDisabled(day: number, month: number, year: number): boolean {\r\n    if (this.disabledDates) {\r\n      for (let disabledDate of this.disabledDates) {\r\n        if (\r\n          disabledDate.getFullYear() === year &&\r\n          disabledDate.getMonth() === month &&\r\n          disabledDate.getDate() === day\r\n        ) {\r\n          return true;\r\n        }\r\n      }\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  isDayDisabled(day: number, month: number, year: number): boolean {\r\n    if (this.disabledDays) {\r\n      let weekday = new Date(year, month, day);\r\n      let weekdayNumber = weekday.getDay();\r\n      return this.disabledDays.indexOf(weekdayNumber) !== -1;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  onInputFocus(event: Event) {\r\n    this.focus = true;\r\n    if (this.showOnFocus) {\r\n      this.showOverlay();\r\n    }\r\n    this.onFocus.emit(event);\r\n  }\r\n\r\n  onInputClick() {\r\n    if (this.showOnFocus && !this.overlayVisible) {\r\n      this.showOverlay();\r\n    }\r\n  }\r\n\r\n  onInputBlur(event: Event) {\r\n    this.focus = false;\r\n    this.onBlur.emit(event);\r\n    if (!this.keepInvalid) {\r\n      this.updateInputfield();\r\n    }\r\n    this.onModelTouched();\r\n  }\r\n\r\n  onButtonClick(event, inputfield) {\r\n    if (!this.overlayVisible) {\r\n      inputfield.focus();\r\n      this.showOverlay();\r\n    } else {\r\n      this.hideOverlay();\r\n    }\r\n  }\r\n\r\n  onOverlayClick(event) {\r\n    this.overlayService.add({\r\n      originalEvent: event,\r\n      target: this.el.nativeElement,\r\n    });\r\n  }\r\n\r\n  getMonthName(index) {\r\n    return this.config.getTranslation('monthNames')[index];\r\n  }\r\n\r\n  switchViewButtonDisabled() {\r\n    return this.numberOfMonths > 1 || this.disabled;\r\n  }\r\n\r\n  onPrevButtonClick(event) {\r\n    this.navigationState = { backward: true, button: true };\r\n    this.navBackward(event);\r\n  }\r\n\r\n  onNextButtonClick(event) {\r\n    this.navigationState = { backward: false, button: true };\r\n    this.navForward(event);\r\n  }\r\n\r\n  onContainerButtonKeydown(event) {\r\n    switch (event.which) {\r\n      //tab\r\n      case 9:\r\n        if (!this.inline) {\r\n          this.trapFocus(event);\r\n        }\r\n        break;\r\n\r\n      //escape\r\n      case 27:\r\n        this.overlayVisible = false;\r\n        event.preventDefault();\r\n        break;\r\n\r\n      default:\r\n        //Noop\r\n        break;\r\n    }\r\n  }\r\n\r\n  onInputKeydown(event) {\r\n    this.isKeydown = true;\r\n    if (event.keyCode === 40 && this.contentViewChild) {\r\n      this.trapFocus(event);\r\n    } else if (event.keyCode === 27) {\r\n      if (this.overlayVisible) {\r\n        this.overlayVisible = false;\r\n        event.preventDefault();\r\n      }\r\n    } else if (event.keyCode === 13) {\r\n      if (this.overlayVisible) {\r\n        this.overlayVisible = false;\r\n        event.preventDefault();\r\n      }\r\n    } else if (event.keyCode === 9 && this.contentViewChild) {\r\n      DomHandler.getFocusableElements(this.contentViewChild.nativeElement).forEach(\r\n        el => (el.tabIndex = '-1')\r\n      );\r\n      if (this.overlayVisible) {\r\n        this.overlayVisible = false;\r\n      }\r\n    }\r\n  }\r\n\r\n  onDateCellKeydown(event, date, groupIndex) {\r\n    const cellContent = event.currentTarget;\r\n    const cell = cellContent.parentElement;\r\n\r\n    switch (event.which) {\r\n      //down arrow\r\n      case 40: {\r\n        cellContent.tabIndex = '-1';\r\n        let cellIndex = DomHandler.index(cell);\r\n        let nextRow = cell.parentElement.nextElementSibling;\r\n        if (nextRow) {\r\n          let focusCell = nextRow.children[cellIndex].children[0];\r\n          if (DomHandler.hasClass(focusCell, 'p-disabled')) {\r\n            this.navigationState = { backward: false };\r\n            this.navForward(event);\r\n          } else {\r\n            nextRow.children[cellIndex].children[0].tabIndex = '0';\r\n            nextRow.children[cellIndex].children[0].focus();\r\n          }\r\n        } else {\r\n          this.navigationState = { backward: false };\r\n          this.navForward(event);\r\n        }\r\n        event.preventDefault();\r\n        break;\r\n      }\r\n\r\n      //up arrow\r\n      case 38: {\r\n        cellContent.tabIndex = '-1';\r\n        let cellIndex = DomHandler.index(cell);\r\n        let prevRow = cell.parentElement.previousElementSibling;\r\n        if (prevRow) {\r\n          let focusCell = prevRow.children[cellIndex].children[0];\r\n          if (DomHandler.hasClass(focusCell, 'p-disabled')) {\r\n            this.navigationState = { backward: true };\r\n            this.navBackward(event);\r\n          } else {\r\n            focusCell.tabIndex = '0';\r\n            focusCell.focus();\r\n          }\r\n        } else {\r\n          this.navigationState = { backward: true };\r\n          this.navBackward(event);\r\n        }\r\n        event.preventDefault();\r\n        break;\r\n      }\r\n\r\n      //left arrow\r\n      case 37: {\r\n        cellContent.tabIndex = '-1';\r\n        let prevCell = cell.previousElementSibling;\r\n        if (prevCell) {\r\n          let focusCell = prevCell.children[0];\r\n          if (\r\n            DomHandler.hasClass(focusCell, 'p-disabled') ||\r\n            DomHandler.hasClass(focusCell.parentElement, 'p-datepicker-weeknumber')\r\n          ) {\r\n            this.navigateToMonth(true, groupIndex);\r\n          } else {\r\n            focusCell.tabIndex = '0';\r\n            focusCell.focus();\r\n          }\r\n        } else {\r\n          this.navigateToMonth(true, groupIndex);\r\n        }\r\n        event.preventDefault();\r\n        break;\r\n      }\r\n\r\n      //right arrow\r\n      case 39: {\r\n        cellContent.tabIndex = '-1';\r\n        let nextCell = cell.nextElementSibling;\r\n        if (nextCell) {\r\n          let focusCell = nextCell.children[0];\r\n          if (DomHandler.hasClass(focusCell, 'p-disabled')) {\r\n            this.navigateToMonth(false, groupIndex);\r\n          } else {\r\n            focusCell.tabIndex = '0';\r\n            focusCell.focus();\r\n          }\r\n        } else {\r\n          this.navigateToMonth(false, groupIndex);\r\n        }\r\n        event.preventDefault();\r\n        break;\r\n      }\r\n\r\n      //enter\r\n      //space\r\n      case 13:\r\n      case 32: {\r\n        this.onDateSelect(event, date);\r\n        event.preventDefault();\r\n        break;\r\n      }\r\n\r\n      //escape\r\n      case 27: {\r\n        this.overlayVisible = false;\r\n        event.preventDefault();\r\n        break;\r\n      }\r\n\r\n      //tab\r\n      case 9: {\r\n        if (!this.inline) {\r\n          this.trapFocus(event);\r\n        }\r\n        break;\r\n      }\r\n\r\n      default:\r\n        //no op\r\n        break;\r\n    }\r\n  }\r\n\r\n  onMonthCellKeydown(event, index) {\r\n    const cell = event.currentTarget;\r\n    switch (event.which) {\r\n      //arrows\r\n      case 38:\r\n      case 40: {\r\n        cell.tabIndex = '-1';\r\n        var cells = cell.parentElement.children;\r\n        var cellIndex = DomHandler.index(cell);\r\n        let nextCell = cells[event.which === 40 ? cellIndex + 3 : cellIndex - 3];\r\n        if (nextCell) {\r\n          nextCell.tabIndex = '0';\r\n          nextCell.focus();\r\n        }\r\n        event.preventDefault();\r\n        break;\r\n      }\r\n\r\n      //left arrow\r\n      case 37: {\r\n        cell.tabIndex = '-1';\r\n        let prevCell = cell.previousElementSibling;\r\n        if (prevCell) {\r\n          prevCell.tabIndex = '0';\r\n          prevCell.focus();\r\n        } else {\r\n          this.navigationState = { backward: true };\r\n          this.navBackward(event);\r\n        }\r\n\r\n        event.preventDefault();\r\n        break;\r\n      }\r\n\r\n      //right arrow\r\n      case 39: {\r\n        cell.tabIndex = '-1';\r\n        let nextCell = cell.nextElementSibling;\r\n        if (nextCell) {\r\n          nextCell.tabIndex = '0';\r\n          nextCell.focus();\r\n        } else {\r\n          this.navigationState = { backward: false };\r\n          this.navForward(event);\r\n        }\r\n\r\n        event.preventDefault();\r\n        break;\r\n      }\r\n\r\n      //enter\r\n      case 13: {\r\n        this.onMonthSelect(event, index);\r\n        event.preventDefault();\r\n        break;\r\n      }\r\n\r\n      //enter\r\n      //space\r\n      case 13:\r\n      case 32: {\r\n        this.overlayVisible = false;\r\n        event.preventDefault();\r\n        break;\r\n      }\r\n\r\n      //escape\r\n      case 27: {\r\n        this.overlayVisible = false;\r\n        event.preventDefault();\r\n        break;\r\n      }\r\n\r\n      //tab\r\n      case 9: {\r\n        if (!this.inline) {\r\n          this.trapFocus(event);\r\n        }\r\n        break;\r\n      }\r\n\r\n      default:\r\n        //no op\r\n        break;\r\n    }\r\n  }\r\n\r\n  onYearCellKeydown(event, index) {\r\n    const cell = event.currentTarget;\r\n\r\n    switch (event.which) {\r\n      //arrows\r\n      case 38:\r\n      case 40: {\r\n        cell.tabIndex = '-1';\r\n        var cells = cell.parentElement.children;\r\n        var cellIndex = DomHandler.index(cell);\r\n        let nextCell = cells[event.which === 40 ? cellIndex + 2 : cellIndex - 2];\r\n        if (nextCell) {\r\n          nextCell.tabIndex = '0';\r\n          nextCell.focus();\r\n        }\r\n        event.preventDefault();\r\n        break;\r\n      }\r\n\r\n      //left arrow\r\n      case 37: {\r\n        cell.tabIndex = '-1';\r\n        let prevCell = cell.previousElementSibling;\r\n        if (prevCell) {\r\n          prevCell.tabIndex = '0';\r\n          prevCell.focus();\r\n        } else {\r\n          this.navigationState = { backward: true };\r\n          this.navBackward(event);\r\n        }\r\n\r\n        event.preventDefault();\r\n        break;\r\n      }\r\n\r\n      //right arrow\r\n      case 39: {\r\n        cell.tabIndex = '-1';\r\n        let nextCell = cell.nextElementSibling;\r\n        if (nextCell) {\r\n          nextCell.tabIndex = '0';\r\n          nextCell.focus();\r\n        } else {\r\n          this.navigationState = { backward: false };\r\n          this.navForward(event);\r\n        }\r\n\r\n        event.preventDefault();\r\n        break;\r\n      }\r\n\r\n      //enter\r\n      //space\r\n      case 13:\r\n      case 32: {\r\n        this.onYearSelect(event, index);\r\n        event.preventDefault();\r\n        break;\r\n      }\r\n\r\n      //escape\r\n      case 27: {\r\n        this.overlayVisible = false;\r\n        event.preventDefault();\r\n        break;\r\n      }\r\n\r\n      //tab\r\n      case 9: {\r\n        this.trapFocus(event);\r\n        break;\r\n      }\r\n\r\n      default:\r\n        //no op\r\n        break;\r\n    }\r\n  }\r\n\r\n  navigateToMonth(prev, groupIndex) {\r\n    if (prev) {\r\n      if (this.numberOfMonths === 1 || groupIndex === 0) {\r\n        this.navigationState = { backward: true };\r\n        this.navBackward(event);\r\n      } else {\r\n        let prevMonthContainer = this.contentViewChild.nativeElement.children[groupIndex - 1];\r\n        let cells = DomHandler.find(\r\n          prevMonthContainer,\r\n          '.p-datepicker-calendar td span:not(.p-disabled):not(.p-ink)'\r\n        );\r\n        let focusCell = cells[cells.length - 1];\r\n        focusCell.tabIndex = '0';\r\n        focusCell.focus();\r\n      }\r\n    } else {\r\n      if (this.numberOfMonths === 1 || groupIndex === this.numberOfMonths - 1) {\r\n        this.navigationState = { backward: false };\r\n        this.navForward(event);\r\n      } else {\r\n        let nextMonthContainer = this.contentViewChild.nativeElement.children[groupIndex + 1];\r\n        let focusCell = DomHandler.findSingle(\r\n          nextMonthContainer,\r\n          '.p-datepicker-calendar td span:not(.p-disabled):not(.p-ink)'\r\n        );\r\n        focusCell.tabIndex = '0';\r\n        focusCell.focus();\r\n      }\r\n    }\r\n  }\r\n\r\n  updateFocus() {\r\n    let cell;\r\n\r\n    if (this.navigationState) {\r\n      if (this.navigationState.button) {\r\n        this.initFocusableCell();\r\n\r\n        if (this.navigationState.backward)\r\n          DomHandler.findSingle(this.contentViewChild.nativeElement, '.p-datepicker-prev').focus();\r\n        else DomHandler.findSingle(this.contentViewChild.nativeElement, '.p-datepicker-next').focus();\r\n      } else {\r\n        if (this.navigationState.backward) {\r\n          let cells;\r\n\r\n          if (this.currentView === 'month') {\r\n            cells = DomHandler.find(\r\n              this.contentViewChild.nativeElement,\r\n              '.p-monthpicker .p-monthpicker-month:not(.p-disabled)'\r\n            );\r\n          } else if (this.currentView === 'year') {\r\n            cells = DomHandler.find(\r\n              this.contentViewChild.nativeElement,\r\n              '.p-yearpicker .p-yearpicker-year:not(.p-disabled)'\r\n            );\r\n          } else {\r\n            cells = DomHandler.find(\r\n              this.contentViewChild.nativeElement,\r\n              '.p-datepicker-calendar td span:not(.p-disabled):not(.p-ink)'\r\n            );\r\n          }\r\n\r\n          if (cells && cells.length > 0) {\r\n            cell = cells[cells.length - 1];\r\n          }\r\n        } else {\r\n          if (this.currentView === 'month') {\r\n            cell = DomHandler.findSingle(\r\n              this.contentViewChild.nativeElement,\r\n              '.p-monthpicker .p-monthpicker-month:not(.p-disabled)'\r\n            );\r\n          } else if (this.currentView === 'year') {\r\n            cell = DomHandler.findSingle(\r\n              this.contentViewChild.nativeElement,\r\n              '.p-yearpicker .p-yearpicker-year:not(.p-disabled)'\r\n            );\r\n          } else {\r\n            cell = DomHandler.findSingle(\r\n              this.contentViewChild.nativeElement,\r\n              '.p-datepicker-calendar td span:not(.p-disabled):not(.p-ink)'\r\n            );\r\n          }\r\n        }\r\n\r\n        if (cell) {\r\n          cell.tabIndex = '0';\r\n          cell.focus();\r\n        }\r\n      }\r\n\r\n      this.navigationState = null;\r\n    } else {\r\n      this.initFocusableCell();\r\n    }\r\n  }\r\n\r\n  initFocusableCell() {\r\n    let cell;\r\n\r\n    if (this.currentView === 'month') {\r\n      let cells = DomHandler.find(\r\n        this.contentViewChild.nativeElement,\r\n        '.p-monthpicker .p-monthpicker-month:not(.p-disabled)'\r\n      );\r\n      let selectedCell = DomHandler.findSingle(\r\n        this.contentViewChild.nativeElement,\r\n        '.p-monthpicker .p-monthpicker-month.p-highlight'\r\n      );\r\n      cells.forEach(cell => (cell.tabIndex = -1));\r\n      cell = selectedCell || cells[0];\r\n\r\n      if (cells.length === 0) {\r\n        let disabledCells = DomHandler.find(\r\n          this.contentViewChild.nativeElement,\r\n          '.p-monthpicker .p-monthpicker-month.p-disabled[tabindex = \"0\"]'\r\n        );\r\n        disabledCells.forEach(cell => (cell.tabIndex = -1));\r\n      }\r\n    } else if (this.currentView === 'year') {\r\n      let cells = DomHandler.find(\r\n        this.contentViewChild.nativeElement,\r\n        '.p-yearpicker .p-yearpicker-year:not(.p-disabled)'\r\n      );\r\n      let selectedCell = DomHandler.findSingle(\r\n        this.contentViewChild.nativeElement,\r\n        '.p-yearpicker .p-yearpicker-year.p-highlight'\r\n      );\r\n      cells.forEach(cell => (cell.tabIndex = -1));\r\n      cell = selectedCell || cells[0];\r\n\r\n      if (cells.length === 0) {\r\n        let disabledCells = DomHandler.find(\r\n          this.contentViewChild.nativeElement,\r\n          '.p-yearpicker .p-yearpicker-year.p-disabled[tabindex = \"0\"]'\r\n        );\r\n        disabledCells.forEach(cell => (cell.tabIndex = -1));\r\n      }\r\n    } else {\r\n      cell = DomHandler.findSingle(this.contentViewChild.nativeElement, 'span.p-highlight');\r\n      if (!cell) {\r\n        let todayCell = DomHandler.findSingle(\r\n          this.contentViewChild.nativeElement,\r\n          'td.p-datepicker-today span:not(.p-disabled):not(.p-ink)'\r\n        );\r\n        if (todayCell) cell = todayCell;\r\n        else\r\n          cell = DomHandler.findSingle(\r\n            this.contentViewChild.nativeElement,\r\n            '.p-datepicker-calendar td span:not(.p-disabled):not(.p-ink)'\r\n          );\r\n      }\r\n    }\r\n\r\n    if (cell) {\r\n      cell.tabIndex = '0';\r\n\r\n      if (!this.preventFocus && (!this.navigationState || !this.navigationState.button)) {\r\n        setTimeout(() => {\r\n          cell.focus();\r\n        }, 1);\r\n      }\r\n\r\n      this.preventFocus = false;\r\n    }\r\n  }\r\n\r\n  trapFocus(event) {\r\n    let focusableElements = DomHandler.getFocusableElements(this.contentViewChild.nativeElement);\r\n\r\n    if (focusableElements && focusableElements.length > 0) {\r\n      if (!focusableElements[0].ownerDocument.activeElement) {\r\n        focusableElements[0].focus();\r\n      } else {\r\n        let focusedIndex = focusableElements.indexOf(focusableElements[0].ownerDocument.activeElement);\r\n\r\n        if (event.shiftKey) {\r\n          if (focusedIndex == -1 || focusedIndex === 0) {\r\n            if (this.focusTrap) {\r\n              focusableElements[focusableElements.length - 1].focus();\r\n            } else {\r\n              if (focusedIndex === -1) return this.hideOverlay();\r\n              else if (focusedIndex === 0) return;\r\n            }\r\n          } else {\r\n            focusableElements[focusedIndex - 1].focus();\r\n          }\r\n        } else {\r\n          if (focusedIndex == -1 || focusedIndex === focusableElements.length - 1) {\r\n            if (!this.focusTrap && focusedIndex != -1) return this.hideOverlay();\r\n            else focusableElements[0].focus();\r\n          } else {\r\n            focusableElements[focusedIndex + 1].focus();\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    event.preventDefault();\r\n  }\r\n\r\n  onMonthDropdownChange(m: string) {\r\n    this.currentMonth = parseInt(m);\r\n    this.onMonthChange.emit({ month: this.currentMonth + 1, year: this.currentYear });\r\n    this.createMonths(this.currentMonth, this.currentYear);\r\n  }\r\n\r\n  onYearDropdownChange(y: string) {\r\n    this.currentYear = parseInt(y);\r\n    this.onYearChange.emit({ month: this.currentMonth + 1, year: this.currentYear });\r\n    this.createMonths(this.currentMonth, this.currentYear);\r\n  }\r\n\r\n  convertTo24Hour = function (hours: number, pm: boolean) {\r\n    if (this.hourFormat == '12') {\r\n      if (hours === 12) {\r\n        return pm ? 12 : 0;\r\n      } else {\r\n        return pm ? hours + 12 : hours;\r\n      }\r\n    }\r\n    return hours;\r\n  };\r\n\r\n  validateTime(hour: number, minute: number, second: number, pm: boolean) {\r\n    let value = this.value;\r\n    const convertedHour = this.convertTo24Hour(hour, pm);\r\n    if (this.isRangeSelection()) {\r\n      value = this.value[1] || this.value[0];\r\n    }\r\n    if (this.isMultipleSelection()) {\r\n      value = this.value[this.value.length - 1];\r\n    }\r\n    const valueDateString = value ? value.toDateString() : null;\r\n    if (this.minDate && valueDateString && this.minDate.toDateString() === valueDateString) {\r\n      if (this.minDate.getHours() > convertedHour) {\r\n        return false;\r\n      }\r\n      if (this.minDate.getHours() === convertedHour) {\r\n        if (this.minDate.getMinutes() > minute) {\r\n          return false;\r\n        }\r\n        if (this.minDate.getMinutes() === minute) {\r\n          if (this.minDate.getSeconds() > second) {\r\n            return false;\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    if (this.maxDate && valueDateString && this.maxDate.toDateString() === valueDateString) {\r\n      if (this.maxDate.getHours() < convertedHour) {\r\n        return false;\r\n      }\r\n      if (this.maxDate.getHours() === convertedHour) {\r\n        if (this.maxDate.getMinutes() < minute) {\r\n          return false;\r\n        }\r\n        if (this.maxDate.getMinutes() === minute) {\r\n          if (this.maxDate.getSeconds() < second) {\r\n            return false;\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n\r\n  incrementHour(event) {\r\n    const prevHour = this.currentHour;\r\n    let newHour = this.currentHour + this.stepHour;\r\n    let newPM = this.pm;\r\n\r\n    if (this.hourFormat == '24') newHour = newHour >= 24 ? newHour - 24 : newHour;\r\n    else if (this.hourFormat == '12') {\r\n      // Before the AM/PM break, now after\r\n      if (prevHour < 12 && newHour > 11) {\r\n        newPM = !this.pm;\r\n      }\r\n      newHour = newHour >= 13 ? newHour - 12 : newHour;\r\n    }\r\n\r\n    if (this.validateTime(newHour, this.currentMinute, this.currentSecond, newPM)) {\r\n      this.currentHour = newHour;\r\n      this.pm = newPM;\r\n    }\r\n    event.preventDefault();\r\n  }\r\n\r\n  onTimePickerElementMouseDown(event: Event, type: number, direction: number) {\r\n    if (!this.disabled) {\r\n      this.repeat(event, null, type, direction);\r\n      event.preventDefault();\r\n    }\r\n  }\r\n\r\n  onTimePickerElementMouseUp(event: Event) {\r\n    if (!this.disabled) {\r\n      this.clearTimePickerTimer();\r\n      this.updateTime();\r\n    }\r\n  }\r\n\r\n  onTimePickerElementMouseLeave() {\r\n    if (!this.disabled && this.timePickerTimer) {\r\n      this.clearTimePickerTimer();\r\n      this.updateTime();\r\n    }\r\n  }\r\n\r\n  repeat(event: Event, interval: number, type: number, direction: number) {\r\n    let i = interval || 500;\r\n\r\n    this.clearTimePickerTimer();\r\n    this.timePickerTimer = setTimeout(() => {\r\n      this.repeat(event, 100, type, direction);\r\n      this.cd.markForCheck();\r\n    }, i);\r\n\r\n    switch (type) {\r\n      case 0:\r\n        if (direction === 1) this.incrementHour(event);\r\n        else this.decrementHour(event);\r\n        break;\r\n\r\n      case 1:\r\n        if (direction === 1) this.incrementMinute(event);\r\n        else this.decrementMinute(event);\r\n        break;\r\n\r\n      case 2:\r\n        if (direction === 1) this.incrementSecond(event);\r\n        else this.decrementSecond(event);\r\n        break;\r\n    }\r\n\r\n    this.updateInputfield();\r\n  }\r\n\r\n  clearTimePickerTimer() {\r\n    if (this.timePickerTimer) {\r\n      clearTimeout(this.timePickerTimer);\r\n      this.timePickerTimer = null;\r\n    }\r\n  }\r\n\r\n  decrementHour(event) {\r\n    let newHour = this.currentHour - this.stepHour;\r\n    let newPM = this.pm;\r\n\r\n    if (this.hourFormat == '24') newHour = newHour < 0 ? 24 + newHour : newHour;\r\n    else if (this.hourFormat == '12') {\r\n      // If we were at noon/midnight, then switch\r\n      if (this.currentHour === 12) {\r\n        newPM = !this.pm;\r\n      }\r\n      newHour = newHour <= 0 ? 12 + newHour : newHour;\r\n    }\r\n\r\n    if (this.validateTime(newHour, this.currentMinute, this.currentSecond, newPM)) {\r\n      this.currentHour = newHour;\r\n      this.pm = newPM;\r\n    }\r\n\r\n    event.preventDefault();\r\n  }\r\n\r\n  incrementMinute(event) {\r\n    let newMinute = this.currentMinute + this.stepMinute;\r\n    newMinute = newMinute > 59 ? newMinute - 60 : newMinute;\r\n    if (this.validateTime(this.currentHour, newMinute, this.currentSecond, this.pm)) {\r\n      this.currentMinute = newMinute;\r\n    }\r\n\r\n    event.preventDefault();\r\n  }\r\n\r\n  decrementMinute(event) {\r\n    let newMinute = this.currentMinute - this.stepMinute;\r\n    newMinute = newMinute < 0 ? 60 + newMinute : newMinute;\r\n    if (this.validateTime(this.currentHour, newMinute, this.currentSecond, this.pm)) {\r\n      this.currentMinute = newMinute;\r\n    }\r\n\r\n    event.preventDefault();\r\n  }\r\n\r\n  incrementSecond(event) {\r\n    let newSecond = this.currentSecond + this.stepSecond;\r\n    newSecond = newSecond > 59 ? newSecond - 60 : newSecond;\r\n    if (this.validateTime(this.currentHour, this.currentMinute, newSecond, this.pm)) {\r\n      this.currentSecond = newSecond;\r\n    }\r\n\r\n    event.preventDefault();\r\n  }\r\n\r\n  decrementSecond(event) {\r\n    let newSecond = this.currentSecond - this.stepSecond;\r\n    newSecond = newSecond < 0 ? 60 + newSecond : newSecond;\r\n    if (this.validateTime(this.currentHour, this.currentMinute, newSecond, this.pm)) {\r\n      this.currentSecond = newSecond;\r\n    }\r\n\r\n    event.preventDefault();\r\n  }\r\n\r\n  updateTime() {\r\n    let value = this.value;\r\n    if (this.isRangeSelection()) {\r\n      value = this.value[1] || this.value[0];\r\n    }\r\n    if (this.isMultipleSelection()) {\r\n      value = this.value[this.value.length - 1];\r\n    }\r\n    value = value ? new Date(value.getTime()) : new Date();\r\n\r\n    if (this.hourFormat == '12') {\r\n      if (this.currentHour === 12) value.setHours(this.pm ? 12 : 0);\r\n      else value.setHours(this.pm ? this.currentHour + 12 : this.currentHour);\r\n    } else {\r\n      value.setHours(this.currentHour);\r\n    }\r\n\r\n    value.setMinutes(this.currentMinute);\r\n    value.setSeconds(this.currentSecond);\r\n    if (this.isRangeSelection()) {\r\n      if (this.value[1]) value = [this.value[0], value];\r\n      else value = [value, null];\r\n    }\r\n\r\n    if (this.isMultipleSelection()) {\r\n      value = [...this.value.slice(0, -1), value];\r\n    }\r\n\r\n    this.updateModel(value);\r\n    this.onSelect.emit(value);\r\n    this.updateInputfield();\r\n  }\r\n\r\n  toggleAMPM(event) {\r\n    const newPM = !this.pm;\r\n    if (this.validateTime(this.currentHour, this.currentMinute, this.currentSecond, newPM)) {\r\n      this.pm = newPM;\r\n      this.updateTime();\r\n    }\r\n    event.preventDefault();\r\n  }\r\n\r\n  onUserInput(event) {\r\n    // IE 11 Workaround for input placeholder : https://github.com/primefaces/primeng/issues/2026\r\n    if (!this.isKeydown) {\r\n      return;\r\n    }\r\n    this.isKeydown = false;\r\n\r\n    let val = event.target.value;\r\n    try {\r\n      let value = this.parseValueFromString(val);\r\n      if (this.isValidSelection(value)) {\r\n        this.updateModel(value);\r\n        this.updateUI();\r\n      }\r\n    } catch (err) {\r\n      //invalid date\r\n      this.updateModel(null);\r\n    }\r\n\r\n    this.filled = val != null && val.length;\r\n    this.onInput.emit(event);\r\n  }\r\n\r\n  isValidSelection(value): boolean {\r\n    let isValid = true;\r\n    if (this.isSingleSelection()) {\r\n      if (!this.isSelectable(value.getDate(), value.getMonth(), value.getFullYear(), false)) {\r\n        isValid = false;\r\n      }\r\n    } else if (value.every(v => this.isSelectable(v.getDate(), v.getMonth(), v.getFullYear(), false))) {\r\n      if (this.isRangeSelection()) {\r\n        isValid = value.length > 1 && value[1] > value[0] ? true : false;\r\n      }\r\n    }\r\n    return isValid;\r\n  }\r\n\r\n  parseValueFromString(text: string): Date | Date[] {\r\n    if (!text || text.trim().length === 0) {\r\n      return null;\r\n    }\r\n\r\n    let value: any;\r\n\r\n    if (this.isSingleSelection()) {\r\n      value = this.parseDateTime(text);\r\n    } else if (this.isMultipleSelection()) {\r\n      let tokens = text.split(this.multipleSeparator);\r\n      value = [];\r\n      for (let token of tokens) {\r\n        value.push(this.parseDateTime(token.trim()));\r\n      }\r\n    } else if (this.isRangeSelection()) {\r\n      let tokens = text.split(' ' + this.rangeSeparator + ' ');\r\n      value = [];\r\n      for (let i = 0; i < tokens.length; i++) {\r\n        value[i] = this.parseDateTime(tokens[i].trim());\r\n      }\r\n    }\r\n\r\n    return value;\r\n  }\r\n\r\n  parseDateTime(text): Date {\r\n    let date: Date;\r\n    let parts: string[] = text.split(' ');\r\n\r\n    if (this.timeOnly) {\r\n      date = new Date();\r\n      this.populateTime(date, parts[0], parts[1]);\r\n    } else {\r\n      const dateFormat = this.getDateFormat();\r\n      if (this.showTime) {\r\n        let ampm = this.hourFormat == '12' ? parts.pop() : null;\r\n        let timeString = parts.pop();\r\n\r\n        date = this.parseDate(parts.join(' '), dateFormat);\r\n        this.populateTime(date, timeString, ampm);\r\n      } else {\r\n        date = this.parseDate(text, dateFormat);\r\n      }\r\n    }\r\n\r\n    return date;\r\n  }\r\n\r\n  populateTime(value, timeString, ampm) {\r\n    if (this.hourFormat == '12' && !ampm) {\r\n      throw 'Invalid Time';\r\n    }\r\n\r\n    this.pm = ampm === 'PM' || ampm === 'pm';\r\n    let time = this.parseTime(timeString);\r\n    value.setHours(time.hour);\r\n    value.setMinutes(time.minute);\r\n    value.setSeconds(time.second);\r\n  }\r\n\r\n  updateUI() {\r\n    let val = this.value || this.defaultDate || new Date();\r\n    if (Array.isArray(val)) {\r\n      val = val[0];\r\n    }\r\n\r\n    this.currentMonth = val.getMonth();\r\n    this.currentYear = val.getFullYear();\r\n    this.createMonths(this.currentMonth, this.currentYear);\r\n\r\n    if (this.showTime || this.timeOnly) {\r\n      this.setCurrentHourPM(val.getHours());\r\n      this.currentMinute = val.getMinutes();\r\n      this.currentSecond = val.getSeconds();\r\n    }\r\n  }\r\n\r\n  showOverlay() {\r\n    if (!this.overlayVisible) {\r\n      this.updateUI();\r\n\r\n      if (!this.touchUI) {\r\n        this.preventFocus = true;\r\n      }\r\n\r\n      this.overlayVisible = true;\r\n    }\r\n  }\r\n\r\n  hideOverlay() {\r\n    this.overlayVisible = false;\r\n    this.clearTimePickerTimer();\r\n\r\n    if (this.touchUI) {\r\n      this.disableModality();\r\n    }\r\n\r\n    this.cd.markForCheck();\r\n  }\r\n\r\n  toggle() {\r\n    if (!this.inline) {\r\n      if (!this.overlayVisible) {\r\n        this.showOverlay();\r\n        this.inputfieldViewChild.nativeElement.focus();\r\n      } else {\r\n        this.hideOverlay();\r\n      }\r\n    }\r\n  }\r\n\r\n  onOverlayAnimationStart(event: AnimationEvent) {\r\n    // @ts-ignore\r\n    switch (event.toState) {\r\n      case 'visible':\r\n      case 'visibleTouchUI':\r\n        if (!this.inline) {\r\n          // @ts-ignore\r\n          this.overlay = event.element;\r\n          this.overlay.setAttribute(this.attributeSelector, '');\r\n          this.appendOverlay();\r\n          this.updateFocus();\r\n          if (this.autoZIndex) {\r\n            if (this.touchUI)\r\n              ZIndexUtils.set('modal', this.overlay, this.baseZIndex || this.config.zIndex.modal);\r\n            else ZIndexUtils.set('overlay', this.overlay, this.baseZIndex || this.config.zIndex.overlay);\r\n          }\r\n\r\n          this.alignOverlay();\r\n          this.onShow.emit(event);\r\n        }\r\n        break;\r\n\r\n      case 'void':\r\n        this.onOverlayHide();\r\n        this.onClose.emit(event);\r\n        break;\r\n    }\r\n  }\r\n\r\n  onOverlayAnimationDone(event: AnimationEvent) {\r\n    // @ts-ignore\r\n    switch (event.toState) {\r\n      case 'visible':\r\n      case 'visibleTouchUI':\r\n        if (!this.inline) {\r\n          this.bindDocumentClickListener();\r\n          this.bindDocumentResizeListener();\r\n          this.bindScrollListener();\r\n        }\r\n        break;\r\n\r\n      case 'void':\r\n        if (this.autoZIndex) {\r\n          // @ts-ignore\r\n          ZIndexUtils.clear(event.element);\r\n        }\r\n        break;\r\n    }\r\n  }\r\n\r\n  appendOverlay() {\r\n    if (this.appendTo) {\r\n      if (this.appendTo === 'body') document.body.appendChild(this.overlay);\r\n      else DomHandler.appendChild(this.overlay, this.appendTo);\r\n    }\r\n  }\r\n\r\n  restoreOverlayAppend() {\r\n    if (this.overlay && this.appendTo) {\r\n      this.el.nativeElement.appendChild(this.overlay);\r\n    }\r\n  }\r\n\r\n  alignOverlay() {\r\n    if (this.touchUI) {\r\n      this.enableModality(this.overlay);\r\n    } else if (this.overlay) {\r\n      if (this.appendTo) {\r\n        if (this.view === 'date') {\r\n          this.overlay.style.width = DomHandler.getOuterWidth(this.overlay) + 'px';\r\n          this.overlay.style.minWidth =\r\n            DomHandler.getOuterWidth(this.inputfieldViewChild.nativeElement) + 'px';\r\n        } else {\r\n          this.overlay.style.width = DomHandler.getOuterWidth(this.inputfieldViewChild.nativeElement) + 'px';\r\n        }\r\n\r\n        DomHandler.absolutePosition(this.overlay, this.inputfieldViewChild.nativeElement);\r\n      } else {\r\n        DomHandler.relativePosition(this.overlay, this.inputfieldViewChild.nativeElement);\r\n      }\r\n    }\r\n  }\r\n\r\n  enableModality(element) {\r\n    if (!this.mask) {\r\n      this.mask = document.createElement('div');\r\n      this.mask.style.zIndex = String(parseInt(element.style.zIndex) - 1);\r\n      let maskStyleClass =\r\n        'p-component-overlay p-datepicker-mask p-datepicker-mask-scrollblocker p-component-overlay p-component-overlay-enter';\r\n      DomHandler.addMultipleClasses(this.mask, maskStyleClass);\r\n\r\n      this.maskClickListener = this.renderer.listen(this.mask, 'click', (event: any) => {\r\n        this.disableModality();\r\n      });\r\n      document.body.appendChild(this.mask);\r\n      DomHandler.addClass(document.body, 'p-overflow-hidden');\r\n    }\r\n  }\r\n\r\n  disableModality() {\r\n    if (this.mask) {\r\n      DomHandler.addClass(this.mask, 'p-component-overlay-leave');\r\n      this.animationEndListener = this.destroyMask.bind(this);\r\n      this.mask.addEventListener('animationend', this.animationEndListener);\r\n    }\r\n  }\r\n\r\n  destroyMask() {\r\n    document.body.removeChild(this.mask);\r\n    let bodyChildren = document.body.children;\r\n    let hasBlockerMasks: boolean;\r\n    for (let i = 0; i < bodyChildren.length; i++) {\r\n      let bodyChild = bodyChildren[i];\r\n      if (DomHandler.hasClass(bodyChild, 'p-datepicker-mask-scrollblocker')) {\r\n        hasBlockerMasks = true;\r\n        break;\r\n      }\r\n    }\r\n\r\n    if (!hasBlockerMasks) {\r\n      DomHandler.removeClass(document.body, 'p-overflow-hidden');\r\n    }\r\n\r\n    this.unbindAnimationEndListener();\r\n    this.unbindMaskClickListener();\r\n    this.mask = null;\r\n  }\r\n\r\n  unbindMaskClickListener() {\r\n    if (this.maskClickListener) {\r\n      this.maskClickListener();\r\n      this.maskClickListener = null;\r\n    }\r\n  }\r\n\r\n  unbindAnimationEndListener() {\r\n    if (this.animationEndListener && this.mask) {\r\n      this.mask.removeEventListener('animationend', this.animationEndListener);\r\n      this.animationEndListener = null;\r\n    }\r\n  }\r\n\r\n  writeValue(value: any): void {\r\n    this.value = value;\r\n    if (this.value && typeof this.value === 'string') {\r\n      this.value = this.parseValueFromString(this.value);\r\n    }\r\n\r\n    this.updateInputfield();\r\n    this.updateUI();\r\n    this.cd.markForCheck();\r\n  }\r\n\r\n  registerOnChange(fn: Function): void {\r\n    this.onModelChange = fn;\r\n  }\r\n\r\n  registerOnTouched(fn: Function): void {\r\n    this.onModelTouched = fn;\r\n  }\r\n\r\n  setDisabledState(val: boolean): void {\r\n    this.disabled = val;\r\n    this.cd.markForCheck();\r\n  }\r\n\r\n  getDateFormat() {\r\n    return this.dateFormat || this.getTranslation('dateFormat');\r\n  }\r\n\r\n  // Ported from jquery-ui datepicker formatDate\r\n  formatDate(date, format) {\r\n    if (!date) {\r\n      return '';\r\n    }\r\n\r\n    let iFormat;\r\n    const lookAhead = match => {\r\n        const matches = iFormat + 1 < format.length && format.charAt(iFormat + 1) === match;\r\n        if (matches) {\r\n          iFormat++;\r\n        }\r\n        return matches;\r\n      },\r\n      formatNumber = (match, value, len) => {\r\n        let num = '' + value;\r\n        if (lookAhead(match)) {\r\n          while (num.length < len) {\r\n            num = '0' + num;\r\n          }\r\n        }\r\n        return num;\r\n      },\r\n      formatName = (match, value, shortNames, longNames) => {\r\n        return lookAhead(match) ? longNames[value] : shortNames[value];\r\n      };\r\n    let output = '';\r\n    let literal = false;\r\n\r\n    if (date) {\r\n      for (iFormat = 0; iFormat < format.length; iFormat++) {\r\n        if (literal) {\r\n          if (format.charAt(iFormat) === \"'\" && !lookAhead(\"'\")) {\r\n            literal = false;\r\n          } else {\r\n            output += format.charAt(iFormat);\r\n          }\r\n        } else {\r\n          switch (format.charAt(iFormat)) {\r\n            case 'd':\r\n              output += formatNumber('d', date.getDate(), 2);\r\n              break;\r\n            case 'D':\r\n              output += formatName(\r\n                'D',\r\n                date.getDay(),\r\n                this.getTranslation(TranslationKeys.DAY_NAMES_SHORT),\r\n                this.getTranslation(TranslationKeys.DAY_NAMES)\r\n              );\r\n              break;\r\n            case 'o':\r\n              output += formatNumber(\r\n                'o',\r\n                Math.round(\r\n                  (new Date(date.getFullYear(), date.getMonth(), date.getDate()).getTime() -\r\n                    new Date(date.getFullYear(), 0, 0).getTime()) /\r\n                    86400000\r\n                ),\r\n                3\r\n              );\r\n              break;\r\n            case 'm':\r\n              output += formatNumber('m', date.getMonth() + 1, 2);\r\n              break;\r\n            case 'M':\r\n              output += formatName(\r\n                'M',\r\n                date.getMonth(),\r\n                this.getTranslation(TranslationKeys.MONTH_NAMES_SHORT),\r\n                this.getTranslation(TranslationKeys.MONTH_NAMES)\r\n              );\r\n              break;\r\n            case 'y':\r\n              output += lookAhead('y')\r\n                ? date.getFullYear()\r\n                : (date.getFullYear() % 100 < 10 ? '0' : '') + (date.getFullYear() % 100);\r\n              break;\r\n            case '@':\r\n              output += date.getTime();\r\n              break;\r\n            case '!':\r\n              output += date.getTime() * 10000 + this.ticksTo1970;\r\n              break;\r\n            case \"'\":\r\n              if (lookAhead(\"'\")) {\r\n                output += \"'\";\r\n              } else {\r\n                literal = true;\r\n              }\r\n              break;\r\n            default:\r\n              output += format.charAt(iFormat);\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return output;\r\n  }\r\n\r\n  formatTime(date) {\r\n    if (!date) {\r\n      return '';\r\n    }\r\n\r\n    let output = '';\r\n    let hours = date.getHours();\r\n    let minutes = date.getMinutes();\r\n    let seconds = date.getSeconds();\r\n\r\n    if (this.hourFormat == '12' && hours > 11 && hours != 12) {\r\n      hours -= 12;\r\n    }\r\n\r\n    if (this.hourFormat == '12') {\r\n      output += hours === 0 ? 12 : hours < 10 ? '0' + hours : hours;\r\n    } else {\r\n      output += hours < 10 ? '0' + hours : hours;\r\n    }\r\n    output += ':';\r\n    output += minutes < 10 ? '0' + minutes : minutes;\r\n\r\n    if (this.showSeconds) {\r\n      output += ':';\r\n      output += seconds < 10 ? '0' + seconds : seconds;\r\n    }\r\n\r\n    if (this.hourFormat == '12') {\r\n      output += date.getHours() > 11 ? ' PM' : ' AM';\r\n    }\r\n\r\n    return output;\r\n  }\r\n\r\n  parseTime(value) {\r\n    let tokens: string[] = value.split(':');\r\n    let validTokenLength = this.showSeconds ? 3 : 2;\r\n\r\n    if (tokens.length !== validTokenLength) {\r\n      throw 'Invalid time';\r\n    }\r\n\r\n    let h = parseInt(tokens[0]);\r\n    let m = parseInt(tokens[1]);\r\n    let s = this.showSeconds ? parseInt(tokens[2]) : null;\r\n\r\n    if (\r\n      isNaN(h) ||\r\n      isNaN(m) ||\r\n      h > 23 ||\r\n      m > 59 ||\r\n      (this.hourFormat == '12' && h > 12) ||\r\n      (this.showSeconds && (isNaN(s) || s > 59))\r\n    ) {\r\n      throw 'Invalid time';\r\n    } else {\r\n      if (this.hourFormat == '12') {\r\n        if (h !== 12 && this.pm) {\r\n          h += 12;\r\n        } else if (!this.pm && h === 12) {\r\n          h -= 12;\r\n        }\r\n      }\r\n\r\n      return { hour: h, minute: m, second: s };\r\n    }\r\n  }\r\n\r\n  // Ported from jquery-ui datepicker parseDate\r\n  parseDate(value, format) {\r\n    if (format == null || value == null) {\r\n      throw 'Invalid arguments';\r\n    }\r\n\r\n    value = typeof value === 'object' ? value.toString() : value + '';\r\n    if (value === '') {\r\n      return null;\r\n    }\r\n\r\n    let iFormat,\r\n      dim,\r\n      extra,\r\n      iValue = 0,\r\n      shortYearCutoff =\r\n        typeof this.shortYearCutoff !== 'string'\r\n          ? this.shortYearCutoff\r\n          : (new Date().getFullYear() % 100) + parseInt(this.shortYearCutoff, 10),\r\n      year = -1,\r\n      month = -1,\r\n      day = -1,\r\n      doy = -1,\r\n      literal = false,\r\n      date,\r\n      lookAhead = match => {\r\n        let matches = iFormat + 1 < format.length && format.charAt(iFormat + 1) === match;\r\n        if (matches) {\r\n          iFormat++;\r\n        }\r\n        return matches;\r\n      },\r\n      getNumber = match => {\r\n        let isDoubled = lookAhead(match),\r\n          size =\r\n            match === '@' ? 14 : match === '!' ? 20 : match === 'y' && isDoubled ? 4 : match === 'o' ? 3 : 2,\r\n          minSize = match === 'y' ? size : 1,\r\n          digits = new RegExp('^\\\\d{' + minSize + ',' + size + '}'),\r\n          num = value.substring(iValue).match(digits);\r\n        if (!num) {\r\n          throw 'Missing number at position ' + iValue;\r\n        }\r\n        iValue += num[0].length;\r\n        return parseInt(num[0], 10);\r\n      },\r\n      getName = (match, shortNames, longNames) => {\r\n        let index = -1;\r\n        let arr = lookAhead(match) ? longNames : shortNames;\r\n        let names = [];\r\n\r\n        for (let i = 0; i < arr.length; i++) {\r\n          names.push([i, arr[i]]);\r\n        }\r\n        names.sort((a, b) => {\r\n          return -(a[1].length - b[1].length);\r\n        });\r\n\r\n        for (let i = 0; i < names.length; i++) {\r\n          let name = names[i][1];\r\n          if (value.substr(iValue, name.length).toLowerCase() === name.toLowerCase()) {\r\n            index = names[i][0];\r\n            iValue += name.length;\r\n            break;\r\n          }\r\n        }\r\n\r\n        if (index !== -1) {\r\n          return index + 1;\r\n        } else {\r\n          throw 'Unknown name at position ' + iValue;\r\n        }\r\n      },\r\n      checkLiteral = () => {\r\n        if (value.charAt(iValue) !== format.charAt(iFormat)) {\r\n          throw 'Unexpected literal at position ' + iValue;\r\n        }\r\n        iValue++;\r\n      };\r\n\r\n    if (this.view === 'month') {\r\n      day = 1;\r\n    }\r\n\r\n    for (iFormat = 0; iFormat < format.length; iFormat++) {\r\n      if (literal) {\r\n        if (format.charAt(iFormat) === \"'\" && !lookAhead(\"'\")) {\r\n          literal = false;\r\n        } else {\r\n          checkLiteral();\r\n        }\r\n      } else {\r\n        switch (format.charAt(iFormat)) {\r\n          case 'd':\r\n            day = getNumber('d');\r\n            break;\r\n          case 'D':\r\n            getName(\r\n              'D',\r\n              this.getTranslation(TranslationKeys.DAY_NAMES_SHORT),\r\n              this.getTranslation(TranslationKeys.DAY_NAMES)\r\n            );\r\n            break;\r\n          case 'o':\r\n            doy = getNumber('o');\r\n            break;\r\n          case 'm':\r\n            month = getNumber('m');\r\n            break;\r\n          case 'M':\r\n            month = getName(\r\n              'M',\r\n              this.getTranslation(TranslationKeys.MONTH_NAMES_SHORT),\r\n              this.getTranslation(TranslationKeys.MONTH_NAMES)\r\n            );\r\n            break;\r\n          case 'y':\r\n            year = getNumber('y');\r\n            break;\r\n          case '@':\r\n            date = new Date(getNumber('@'));\r\n            year = date.getFullYear();\r\n            month = date.getMonth() + 1;\r\n            day = date.getDate();\r\n            break;\r\n          case '!':\r\n            date = new Date((getNumber('!') - this.ticksTo1970) / 10000);\r\n            year = date.getFullYear();\r\n            month = date.getMonth() + 1;\r\n            day = date.getDate();\r\n            break;\r\n          case \"'\":\r\n            if (lookAhead(\"'\")) {\r\n              checkLiteral();\r\n            } else {\r\n              literal = true;\r\n            }\r\n            break;\r\n          default:\r\n            checkLiteral();\r\n        }\r\n      }\r\n    }\r\n\r\n    if (iValue < value.length) {\r\n      extra = value.substr(iValue);\r\n      if (!/^\\s+/.test(extra)) {\r\n        throw 'Extra/unparsed characters found in date: ' + extra;\r\n      }\r\n    }\r\n\r\n    if (year === -1) {\r\n      year = new Date().getFullYear();\r\n    } else if (year < 100) {\r\n      year +=\r\n        new Date().getFullYear() - (new Date().getFullYear() % 100) + (year <= shortYearCutoff ? 0 : -100);\r\n    }\r\n\r\n    if (doy > -1) {\r\n      month = 1;\r\n      day = doy;\r\n      do {\r\n        dim = this.getDaysCountInMonth(year, month - 1);\r\n        if (day <= dim) {\r\n          break;\r\n        }\r\n        month++;\r\n        day -= dim;\r\n      } while (true);\r\n    }\r\n\r\n    date = this.daylightSavingAdjust(new Date(year, month - 1, day));\r\n    if (date.getFullYear() !== year || date.getMonth() + 1 !== month || date.getDate() !== day) {\r\n      throw 'Invalid date'; // E.g. 31/02/00\r\n    }\r\n\r\n    return date;\r\n  }\r\n\r\n  daylightSavingAdjust(date) {\r\n    if (!date) {\r\n      return null;\r\n    }\r\n\r\n    date.setHours(date.getHours() > 12 ? date.getHours() + 2 : 0);\r\n\r\n    return date;\r\n  }\r\n\r\n  updateFilledState() {\r\n    this.filled = this.inputFieldValue && this.inputFieldValue != '';\r\n  }\r\n\r\n  onTodayButtonClick(event) {\r\n    let date: Date = new Date();\r\n    let dateMeta = {\r\n      day: date.getDate(),\r\n      month: date.getMonth(),\r\n      year: date.getFullYear(),\r\n      otherMonth: date.getMonth() !== this.currentMonth || date.getFullYear() !== this.currentYear,\r\n      today: true,\r\n      selectable: true,\r\n    };\r\n\r\n    this.onDateSelect(event, dateMeta);\r\n    this.onTodayClick.emit(event);\r\n  }\r\n\r\n  onClearButtonClick(event) {\r\n    this.updateModel(null);\r\n    this.updateInputfield();\r\n    this.hideOverlay();\r\n    this.onClearClick.emit(event);\r\n  }\r\n\r\n  createResponsiveStyle() {\r\n    if (this.numberOfMonths > 1 && this.responsiveOptions) {\r\n      if (!this.responsiveStyleElement) {\r\n        this.responsiveStyleElement = document.createElement('style');\r\n        this.responsiveStyleElement.type = 'text/css';\r\n        document.body.appendChild(this.responsiveStyleElement);\r\n      }\r\n\r\n      let innerHTML = '';\r\n      if (this.responsiveOptions) {\r\n        let responsiveOptions = [...this.responsiveOptions]\r\n          .filter(o => !!(o.breakpoint && o.numMonths))\r\n          .sort((o1, o2) => -1 * o1.breakpoint.localeCompare(o2.breakpoint, undefined, { numeric: true }));\r\n\r\n        for (let i = 0; i < responsiveOptions.length; i++) {\r\n          let { breakpoint, numMonths } = responsiveOptions[i];\r\n          let styles = `\r\n                        .p-datepicker[${this.attributeSelector}] .p-datepicker-group:nth-child(${numMonths}) .p-datepicker-next {\r\n                            display: inline-flex !important;\r\n                        }\r\n                    `;\r\n\r\n          for (let j = numMonths; j < this.numberOfMonths; j++) {\r\n            styles += `\r\n                            .p-datepicker[${this.attributeSelector}] .p-datepicker-group:nth-child(${j + 1}) {\r\n                                display: none !important;\r\n                            }\r\n                        `;\r\n          }\r\n\r\n          innerHTML += `\r\n                        @media screen and (max-width: ${breakpoint}) {\r\n                            ${styles}\r\n                        }\r\n                    `;\r\n        }\r\n      }\r\n\r\n      this.responsiveStyleElement.innerHTML = innerHTML;\r\n    }\r\n  }\r\n\r\n  destroyResponsiveStyleElement() {\r\n    if (this.responsiveStyleElement) {\r\n      this.responsiveStyleElement.remove();\r\n      this.responsiveStyleElement = null;\r\n    }\r\n  }\r\n\r\n  bindDocumentClickListener() {\r\n    if (!this.documentClickListener) {\r\n      this.zone.runOutsideAngular(() => {\r\n        const documentTarget: any = this.el ? this.el.nativeElement.ownerDocument : 'document';\r\n\r\n        this.documentClickListener = this.renderer.listen(documentTarget, 'mousedown', event => {\r\n          if (this.isOutsideClicked(event) && this.overlayVisible) {\r\n            this.zone.run(() => {\r\n              this.hideOverlay();\r\n              this.onClickOutside.emit(event);\r\n\r\n              this.cd.markForCheck();\r\n            });\r\n          }\r\n        });\r\n      });\r\n    }\r\n  }\r\n\r\n  unbindDocumentClickListener() {\r\n    if (this.documentClickListener) {\r\n      this.documentClickListener();\r\n      this.documentClickListener = null;\r\n    }\r\n  }\r\n\r\n  bindDocumentResizeListener() {\r\n    if (!this.documentResizeListener && !this.touchUI) {\r\n      this.documentResizeListener = this.onWindowResize.bind(this);\r\n      window.addEventListener('resize', this.documentResizeListener);\r\n    }\r\n  }\r\n\r\n  unbindDocumentResizeListener() {\r\n    if (this.documentResizeListener) {\r\n      window.removeEventListener('resize', this.documentResizeListener);\r\n      this.documentResizeListener = null;\r\n    }\r\n  }\r\n\r\n  bindScrollListener() {\r\n    if (!this.scrollHandler) {\r\n      this.scrollHandler = new ConnectedOverlayScrollHandler(this.containerViewChild.nativeElement, () => {\r\n        if (this.overlayVisible) {\r\n          this.hideOverlay();\r\n        }\r\n      });\r\n    }\r\n\r\n    this.scrollHandler.bindScrollListener();\r\n  }\r\n\r\n  unbindScrollListener() {\r\n    if (this.scrollHandler) {\r\n      this.scrollHandler.unbindScrollListener();\r\n    }\r\n  }\r\n\r\n  isOutsideClicked(event: Event) {\r\n    return !(\r\n      this.el.nativeElement.isSameNode(event.target) ||\r\n      this.isNavIconClicked(event) ||\r\n      this.el.nativeElement.contains(event.target) ||\r\n      (this.overlay && this.overlay.contains(<Node>event.target))\r\n    );\r\n  }\r\n\r\n  isNavIconClicked(event: Event) {\r\n    return (\r\n      DomHandler.hasClass(event.target, 'p-datepicker-prev') ||\r\n      DomHandler.hasClass(event.target, 'p-datepicker-prev-icon') ||\r\n      DomHandler.hasClass(event.target, 'p-datepicker-next') ||\r\n      DomHandler.hasClass(event.target, 'p-datepicker-next-icon')\r\n    );\r\n  }\r\n\r\n  onWindowResize() {\r\n    if (this.overlayVisible && !DomHandler.isAndroid()) {\r\n      this.hideOverlay();\r\n    }\r\n  }\r\n\r\n  onOverlayHide() {\r\n    this.currentView = this.view;\r\n\r\n    if (this.mask) {\r\n      this.destroyMask();\r\n    }\r\n\r\n    this.unbindDocumentClickListener();\r\n    this.unbindDocumentResizeListener();\r\n    this.unbindScrollListener();\r\n    this.overlay = null;\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    if (this.scrollHandler) {\r\n      this.scrollHandler.destroy();\r\n      this.scrollHandler = null;\r\n    }\r\n\r\n    if (this.translationSubscription) {\r\n      this.translationSubscription.unsubscribe();\r\n    }\r\n\r\n    if (this.overlay && this.autoZIndex) {\r\n      ZIndexUtils.clear(this.overlay);\r\n    }\r\n\r\n    this.destroyResponsiveStyleElement();\r\n    this.clearTimePickerTimer();\r\n    this.restoreOverlayAppend();\r\n    this.onOverlayHide();\r\n  }\r\n}\r\n\r\nexport type CALENDAR_SELECTION_MODE = 'single' | 'range' | 'multiple';\r\n\r\n// eslint-disable-next-line @angular-eslint/prefer-on-push-component-change-detection\r\n@Component({\r\n  selector: 'zyfra-calendar',\r\n  templateUrl: './zyfra-calendar.component.html',\r\n  animations: [\r\n    trigger('overlayAnimation', [\r\n      state(\r\n        'visibleTouchUI',\r\n        style({\r\n          transform: 'translate(-50%,-50%)',\r\n          opacity: 1,\r\n        })\r\n      ),\r\n      transition('void => visible', [\r\n        style({ opacity: 0, transform: 'scaleY(0.8)' }),\r\n        animate('{{showTransitionParams}}', style({ opacity: 1, transform: '*' })),\r\n      ]),\r\n      transition('visible => void', [animate('{{hideTransitionParams}}', style({ opacity: 0 }))]),\r\n      transition('void => visibleTouchUI', [\r\n        style({ opacity: 0, transform: 'translate3d(-50%, -40%, 0) scale(0.9)' }),\r\n        animate('{{showTransitionParams}}'),\r\n      ]),\r\n      transition('visibleTouchUI => void', [\r\n        animate(\r\n          '{{hideTransitionParams}}',\r\n          style({\r\n            opacity: 0,\r\n            transform: 'translate3d(-50%, -40%, 0) scale(0.9)',\r\n          })\r\n        ),\r\n      ]),\r\n    ]),\r\n  ],\r\n  host: {\r\n    class: 'p-element p-inputwrapper',\r\n    '[class.p-inputwrapper-filled]': 'filled',\r\n    '[class.p-inputwrapper-focus]': 'focus',\r\n  },\r\n  providers: [CALENDAR_VALUE_ACCESSOR],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class ZyfraCalendarComponent extends Calendar {\r\n  constructor(\r\n    public el: ElementRef,\r\n    public renderer: Renderer2,\r\n    public cd: ChangeDetectorRef,\r\n    private zone: NgZone,\r\n    private config: PrimeNGConfig,\r\n    public overlayService: OverlayService\r\n  ) {\r\n    super(el, renderer, cd, zone, config, overlayService);\r\n  }\r\n\r\n  private isMonthInRange(month: number, start: Date, end: Date) {\r\n    return start.getFullYear() === this.currentYear && month >= start.getMonth() && month <= end.getMonth();\r\n  }\r\n\r\n  override isMonthSelected(month: number) {\r\n    if (this.isComparable()) {\r\n      return !this.isMultipleSelection()\r\n        ? this.value[0] && this.value[1] && this.isMonthInRange(month, this.value[0], this.value[1])\r\n        : false;\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  override registerOnChange(fn: Function): void {\r\n    super.registerOnChange((...args) => {\r\n      this.correctEndDateIfRange(args[0]);\r\n      return fn(...args);\r\n    });\r\n  }\r\n\r\n  private correctEndDateIfRange(value: Date | Date[]): void {\r\n    if (!this.isRangeSelection() || !(value[1] instanceof Date)) return;\r\n    if (this.view === 'month') {\r\n      // set end day if was selected month picker\r\n      value[1].setMonth(this.value[1].getMonth() + 1, 0);\r\n    } else if (this.view === 'year') {\r\n      // set end month and day if was selected year picker\r\n      value[1].setMonth(12, 0);\r\n    }\r\n    // set end time for day\r\n    value[1].setHours(23, 59, 59, 999);\r\n  }\r\n}\r\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "deprecated": false,
        "deprecationMessage": "",
        "args": [
          {
            "name": "el",
            "type": "ElementRef",
            "deprecated": false,
            "deprecationMessage": ""
          },
          {
            "name": "renderer",
            "type": "Renderer2",
            "deprecated": false,
            "deprecationMessage": ""
          },
          {
            "name": "cd",
            "type": "ChangeDetectorRef",
            "deprecated": false,
            "deprecationMessage": ""
          },
          {
            "name": "zone",
            "type": "NgZone",
            "deprecated": false,
            "deprecationMessage": ""
          },
          {
            "name": "config",
            "type": "PrimeNGConfig",
            "deprecated": false,
            "deprecationMessage": ""
          },
          {
            "name": "overlayService",
            "type": "OverlayService",
            "deprecated": false,
            "deprecationMessage": ""
          }
        ],
        "line": 2955,
        "jsdoctags": [
          {
            "name": "el",
            "type": "ElementRef",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          },
          {
            "name": "renderer",
            "type": "Renderer2",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          },
          {
            "name": "cd",
            "type": "ChangeDetectorRef",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          },
          {
            "name": "zone",
            "type": "NgZone",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          },
          {
            "name": "config",
            "type": "PrimeNGConfig",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          },
          {
            "name": "overlayService",
            "type": "OverlayService",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      "extends": "Calendar",
      "templateData": "<span\r\n  #container\r\n  [ngClass]=\"{\r\n    'p-calendar-w-btn': showIcon,\r\n    'p-calendar-timeonly': timeOnly,\r\n    'p-calendar-disabled': disabled,\r\n    'p-focus': focus\r\n  }\"\r\n  [ngStyle]=\"style\"\r\n  class=\"{{ styleClass }} p-calendar zyfra-input\"\r\n>\r\n  <ng-template [ngIf]=\"!inline\">\r\n    <div class=\"p-inputgroup\" [class.zyfra-input-group_disabled]=\"disabled\">\r\n      <span class=\"zyfra-input\" [class.zyfra-input_disabled]=\"disabled\" [class.p-float-label]=\"label\">\r\n        <input\r\n          #inputfield\r\n          type=\"text\"\r\n          [attr.id]=\"inputId\"\r\n          [attr.name]=\"name\"\r\n          [attr.required]=\"required\"\r\n          [attr.aria-required]=\"required\"\r\n          [value]=\"inputFieldValue\"\r\n          (focus)=\"onInputFocus($event)\"\r\n          (keydown)=\"onInputKeydown($event)\"\r\n          (click)=\"onInputClick()\"\r\n          (blur)=\"onInputBlur($event)\"\r\n          [readonly]=\"readonlyInput\"\r\n          (input)=\"onUserInput($event)\"\r\n          [ngStyle]=\"inputStyle\"\r\n          [class]=\"inputStyleClass\"\r\n          [placeholder]=\"placeholder || ''\"\r\n          [disabled]=\"disabled\"\r\n          [attr.tabindex]=\"tabindex\"\r\n          [attr.inputmode]=\"touchUI ? 'off' : null\"\r\n          [ngClass]=\"'p-inputtext p-component'\"\r\n          autocomplete=\"off\"\r\n          [attr.aria-labelledby]=\"ariaLabelledBy\"\r\n        />\r\n        <label *ngIf=\"label\" [class.label-required]=\"required\">{{ label }}</label>\r\n        <button\r\n          type=\"button\"\r\n          [attr.aria-label]=\"iconAriaLabel\"\r\n          [icon]=\"icon\"\r\n          pButton\r\n          pRipple\r\n          *ngIf=\"showIcon\"\r\n          (click)=\"onButtonClick($event, inputfield)\"\r\n          class=\"p-datepicker-trigger\"\r\n          [disabled]=\"disabled\"\r\n          tabindex=\"0\"\r\n        ></button>\r\n        <ng-content select=\"[buttons-right]\"></ng-content>\r\n      </span>\r\n    </div>\r\n  </ng-template>\r\n  <div\r\n    #contentWrapper\r\n    [class]=\"panelStyleClass\"\r\n    [ngStyle]=\"panelStyle\"\r\n    [ngClass]=\"{\r\n      'p-datepicker p-component': true,\r\n      'p-datepicker-inline': inline,\r\n      'p-disabled': disabled,\r\n      'p-datepicker-timeonly': timeOnly,\r\n      'p-datepicker-multiple-month': this.numberOfMonths > 1,\r\n      'p-datepicker-monthpicker': view === 'month',\r\n      'p-datepicker-touch-ui': touchUI\r\n    }\"\r\n    [@overlayAnimation]=\"\r\n      touchUI\r\n        ? {\r\n            value: 'visibleTouchUI',\r\n            params: {\r\n              showTransitionParams: showTransitionOptions,\r\n              hideTransitionParams: hideTransitionOptions\r\n            }\r\n          }\r\n        : {\r\n            value: 'visible',\r\n            params: {\r\n              showTransitionParams: showTransitionOptions,\r\n              hideTransitionParams: hideTransitionOptions\r\n            }\r\n          }\r\n    \"\r\n    [@.disabled]=\"inline === true\"\r\n    (@overlayAnimation.start)=\"onOverlayAnimationStart($any($event))\"\r\n    (@overlayAnimation.done)=\"onOverlayAnimationDone($any($event))\"\r\n    (click)=\"onOverlayClick($event)\"\r\n    *ngIf=\"inline || overlayVisible\"\r\n  >\r\n    <ng-content select=\"p-header\"></ng-content>\r\n    <ng-container *ngTemplateOutlet=\"headerTemplate\"></ng-container>\r\n    <ng-container *ngIf=\"!timeOnly\">\r\n      <div class=\"p-datepicker-group-container\">\r\n        <div class=\"p-datepicker-group\" *ngFor=\"let month of months; let i = index\">\r\n          <div class=\"p-datepicker-header\">\r\n            <button\r\n              (keydown)=\"onContainerButtonKeydown($event)\"\r\n              class=\"p-datepicker-prev p-link\"\r\n              (click)=\"onPrevButtonClick($event)\"\r\n              *ngIf=\"i === 0\"\r\n              type=\"button\"\r\n              pRipple\r\n            >\r\n              <span class=\"p-datepicker-prev-icon pi pi-chevron-left\"></span>\r\n            </button>\r\n            <div class=\"p-datepicker-title\">\r\n              <button\r\n                type=\"button\"\r\n                (click)=\"switchToMonthView($event)\"\r\n                (keydown)=\"onContainerButtonKeydown($event)\"\r\n                *ngIf=\"currentView === 'date'\"\r\n                class=\"p-datepicker-month p-link\"\r\n                [disabled]=\"switchViewButtonDisabled()\"\r\n              >\r\n                {{ getMonthName(month.month) }}\r\n              </button>\r\n              <button\r\n                type=\"button\"\r\n                (click)=\"switchToYearView($event)\"\r\n                (keydown)=\"onContainerButtonKeydown($event)\"\r\n                *ngIf=\"currentView !== 'year'\"\r\n                class=\"p-datepicker-year p-link\"\r\n                [disabled]=\"switchViewButtonDisabled()\"\r\n              >\r\n                {{ currentYear }}\r\n              </button>\r\n              <span class=\"p-datepicker-decade\" *ngIf=\"currentView === 'year'\">\r\n                <ng-container *ngIf=\"!decadeTemplate\"\r\n                  >{{ yearPickerValues()[0] }} -\r\n                  {{ yearPickerValues()[yearPickerValues().length - 1] }}</ng-container\r\n                >\r\n                <ng-container\r\n                  *ngTemplateOutlet=\"decadeTemplate; context: { $implicit: yearPickerValues }\"\r\n                ></ng-container>\r\n              </span>\r\n            </div>\r\n            <button\r\n              (keydown)=\"onContainerButtonKeydown($event)\"\r\n              class=\"p-datepicker-next p-link\"\r\n              (click)=\"onNextButtonClick($event)\"\r\n              type=\"button\"\r\n              pRipple\r\n            >\r\n              <span class=\"p-datepicker-next-icon pi pi-chevron-right\"></span>\r\n            </button>\r\n          </div>\r\n          <div class=\"p-datepicker-calendar-container\" *ngIf=\"currentView === 'date'\">\r\n            <table class=\"p-datepicker-calendar\">\r\n              <thead>\r\n                <tr>\r\n                  <th *ngIf=\"showWeek\" class=\"p-datepicker-weekheader p-disabled\">\r\n                    <span>{{ getTranslation('weekHeader') }}</span>\r\n                  </th>\r\n                  <th scope=\"col\" *ngFor=\"let weekDay of weekDays; let begin = first; let end = last\">\r\n                    <span>{{ weekDay }}</span>\r\n                  </th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                <tr *ngFor=\"let week of month.dates; let j = index\">\r\n                  <td *ngIf=\"showWeek\" class=\"p-datepicker-weeknumber\">\r\n                    <span class=\"p-disabled\">\r\n                      {{ month.weekNumbers[j] }}\r\n                    </span>\r\n                  </td>\r\n                  <td\r\n                    *ngFor=\"let date of week\"\r\n                    [ngClass]=\"{\r\n                      'p-datepicker-other-month': date.otherMonth,\r\n                      'p-datepicker-today': date.today\r\n                    }\"\r\n                  >\r\n                    <ng-container *ngIf=\"date.otherMonth ? showOtherMonths : true\">\r\n                      <span\r\n                        [ngClass]=\"{ 'p-highlight': isSelected(date), 'p-disabled': !date.selectable }\"\r\n                        (click)=\"onDateSelect($event, date)\"\r\n                        draggable=\"false\"\r\n                        (keydown)=\"onDateCellKeydown($event, date, i)\"\r\n                        pRipple\r\n                      >\r\n                        <ng-container *ngIf=\"!dateTemplate\">{{ date.day }}</ng-container>\r\n                        <ng-container\r\n                          *ngTemplateOutlet=\"dateTemplate; context: { $implicit: date }\"\r\n                        ></ng-container>\r\n                      </span>\r\n                    </ng-container>\r\n                  </td>\r\n                </tr>\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"p-monthpicker\" *ngIf=\"currentView === 'month'\">\r\n        <span\r\n          *ngFor=\"let m of monthPickerValues(); let i = index\"\r\n          (click)=\"onMonthSelect($event, i)\"\r\n          (keydown)=\"onMonthCellKeydown($event, i)\"\r\n          class=\"p-monthpicker-month\"\r\n          [ngClass]=\"{\r\n            'p-highlight': isMonthSelected(i),\r\n            'p-disabled': !isSelectable(1, i, this.currentYear, false)\r\n          }\"\r\n          pRipple\r\n        >\r\n          {{ m }}\r\n        </span>\r\n      </div>\r\n      <div class=\"p-yearpicker\" *ngIf=\"currentView === 'year'\">\r\n        <span\r\n          *ngFor=\"let y of yearPickerValues()\"\r\n          (click)=\"onYearSelect($event, y)\"\r\n          (keydown)=\"onYearCellKeydown($event, y)\"\r\n          class=\"p-yearpicker-year\"\r\n          [ngClass]=\"{ 'p-highlight': isYearSelected(y) }\"\r\n          pRipple\r\n        >\r\n          {{ y }}\r\n        </span>\r\n      </div>\r\n    </ng-container>\r\n    <div class=\"p-timepicker\" *ngIf=\"showTime || timeOnly\">\r\n      <div class=\"p-hour-picker\">\r\n        <button\r\n          class=\"p-link\"\r\n          type=\"button\"\r\n          (keydown)=\"onContainerButtonKeydown($event)\"\r\n          (keydown.enter)=\"incrementHour($event)\"\r\n          (keydown.space)=\"incrementHour($event)\"\r\n          (mousedown)=\"onTimePickerElementMouseDown($event, 0, 1)\"\r\n          (mouseup)=\"onTimePickerElementMouseUp($event)\"\r\n          (keyup.enter)=\"onTimePickerElementMouseUp($event)\"\r\n          (keyup.space)=\"onTimePickerElementMouseUp($event)\"\r\n          (mouseleave)=\"onTimePickerElementMouseLeave()\"\r\n          pRipple\r\n        >\r\n          <span class=\"pi pi-chevron-up\"></span>\r\n        </button>\r\n        <span><ng-container *ngIf=\"currentHour < 10\">0</ng-container>{{ currentHour }}</span>\r\n        <button\r\n          class=\"p-link\"\r\n          type=\"button\"\r\n          (keydown)=\"onContainerButtonKeydown($event)\"\r\n          (keydown.enter)=\"decrementHour($event)\"\r\n          (keydown.space)=\"decrementHour($event)\"\r\n          (mousedown)=\"onTimePickerElementMouseDown($event, 0, -1)\"\r\n          (mouseup)=\"onTimePickerElementMouseUp($event)\"\r\n          (keyup.enter)=\"onTimePickerElementMouseUp($event)\"\r\n          (keyup.space)=\"onTimePickerElementMouseUp($event)\"\r\n          (mouseleave)=\"onTimePickerElementMouseLeave()\"\r\n          pRipple\r\n        >\r\n          <span class=\"pi pi-chevron-down\"></span>\r\n        </button>\r\n      </div>\r\n      <div class=\"p-separator\">\r\n        <span>{{ timeSeparator }}</span>\r\n      </div>\r\n      <div class=\"p-minute-picker\">\r\n        <button\r\n          class=\"p-link\"\r\n          type=\"button\"\r\n          (keydown)=\"onContainerButtonKeydown($event)\"\r\n          (keydown.enter)=\"incrementMinute($event)\"\r\n          (keydown.space)=\"incrementMinute($event)\"\r\n          (mousedown)=\"onTimePickerElementMouseDown($event, 1, 1)\"\r\n          (mouseup)=\"onTimePickerElementMouseUp($event)\"\r\n          (keyup.enter)=\"onTimePickerElementMouseUp($event)\"\r\n          (keyup.space)=\"onTimePickerElementMouseUp($event)\"\r\n          (mouseleave)=\"onTimePickerElementMouseLeave()\"\r\n          pRipple\r\n        >\r\n          <span class=\"pi pi-chevron-up\"></span>\r\n        </button>\r\n        <span><ng-container *ngIf=\"currentMinute < 10\">0</ng-container>{{ currentMinute }}</span>\r\n        <button\r\n          class=\"p-link\"\r\n          type=\"button\"\r\n          (keydown)=\"onContainerButtonKeydown($event)\"\r\n          (keydown.enter)=\"decrementMinute($event)\"\r\n          (keydown.space)=\"decrementMinute($event)\"\r\n          (mousedown)=\"onTimePickerElementMouseDown($event, 1, -1)\"\r\n          (mouseup)=\"onTimePickerElementMouseUp($event)\"\r\n          (keyup.enter)=\"onTimePickerElementMouseUp($event)\"\r\n          (keyup.space)=\"onTimePickerElementMouseUp($event)\"\r\n          (mouseleave)=\"onTimePickerElementMouseLeave()\"\r\n          pRipple\r\n        >\r\n          <span class=\"pi pi-chevron-down\"></span>\r\n        </button>\r\n      </div>\r\n      <div class=\"p-separator\" *ngIf=\"showSeconds\">\r\n        <span>{{ timeSeparator }}</span>\r\n      </div>\r\n      <div class=\"p-second-picker\" *ngIf=\"showSeconds\">\r\n        <button\r\n          class=\"p-link\"\r\n          type=\"button\"\r\n          (keydown)=\"onContainerButtonKeydown($event)\"\r\n          (keydown.enter)=\"incrementSecond($event)\"\r\n          (keydown.space)=\"incrementSecond($event)\"\r\n          (mousedown)=\"onTimePickerElementMouseDown($event, 2, 1)\"\r\n          (mouseup)=\"onTimePickerElementMouseUp($event)\"\r\n          (keyup.enter)=\"onTimePickerElementMouseUp($event)\"\r\n          (keyup.space)=\"onTimePickerElementMouseUp($event)\"\r\n          (mouseleave)=\"onTimePickerElementMouseLeave()\"\r\n          pRipple\r\n        >\r\n          <span class=\"pi pi-chevron-up\"></span>\r\n        </button>\r\n        <span><ng-container *ngIf=\"currentSecond < 10\">0</ng-container>{{ currentSecond }}</span>\r\n        <button\r\n          class=\"p-link\"\r\n          type=\"button\"\r\n          (keydown)=\"onContainerButtonKeydown($event)\"\r\n          (keydown.enter)=\"decrementSecond($event)\"\r\n          (keydown.space)=\"decrementSecond($event)\"\r\n          (mousedown)=\"onTimePickerElementMouseDown($event, 2, -1)\"\r\n          (mouseup)=\"onTimePickerElementMouseUp($event)\"\r\n          (keyup.enter)=\"onTimePickerElementMouseUp($event)\"\r\n          (keyup.space)=\"onTimePickerElementMouseUp($event)\"\r\n          (mouseleave)=\"onTimePickerElementMouseLeave()\"\r\n          pRipple\r\n        >\r\n          <span class=\"pi pi-chevron-down\"></span>\r\n        </button>\r\n      </div>\r\n      <div class=\"p-ampm-picker\" *ngIf=\"hourFormat === '12'\">\r\n        <button\r\n          class=\"p-link\"\r\n          type=\"button\"\r\n          (keydown)=\"onContainerButtonKeydown($event)\"\r\n          (click)=\"toggleAMPM($event)\"\r\n          (keydown.enter)=\"toggleAMPM($event)\"\r\n          pRipple\r\n        >\r\n          <span class=\"pi pi-chevron-up\"></span>\r\n        </button>\r\n        <span>{{ pm ? 'PM' : 'AM' }}</span>\r\n        <button\r\n          class=\"p-link\"\r\n          type=\"button\"\r\n          (keydown)=\"onContainerButtonKeydown($event)\"\r\n          (click)=\"toggleAMPM($event)\"\r\n          (keydown.enter)=\"toggleAMPM($event)\"\r\n          pRipple\r\n        >\r\n          <span class=\"pi pi-chevron-down\"></span>\r\n        </button>\r\n      </div>\r\n    </div>\r\n    <div class=\"p-datepicker-buttonbar\" *ngIf=\"showButtonBar\">\r\n      <button\r\n        type=\"button\"\r\n        [label]=\"getTranslation('today')\"\r\n        (keydown)=\"onContainerButtonKeydown($event)\"\r\n        (click)=\"onTodayButtonClick($event)\"\r\n        pButton\r\n        pRipple\r\n        [ngClass]=\"[todayButtonStyleClass]\"\r\n      ></button>\r\n      <button\r\n        type=\"button\"\r\n        [label]=\"getTranslation('clear')\"\r\n        (keydown)=\"onContainerButtonKeydown($event)\"\r\n        (click)=\"onClearButtonClick($event)\"\r\n        pButton\r\n        pRipple\r\n        [ngClass]=\"[clearButtonStyleClass]\"\r\n      ></button>\r\n    </div>\r\n    <ng-content select=\"p-footer\"></ng-content>\r\n    <ng-container *ngTemplateOutlet=\"footerTemplate\"></ng-container>\r\n  </div>\r\n</span>\r\n"
    },
    {
      "name": "ZyfraCellEditorComponent",
      "id": "component-ZyfraCellEditorComponent-0f310a2c3717d72ae824faa66e978bd5",
      "file": "libs/components/src/lib/table/cell-editor/cell-editor.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "zyfra-cell-editor",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./cell-editor.component.html"],
      "viewProviders": [],
      "inputsClass": [
        {
          "name": "value",
          "defaultValue": "''",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 22,
          "type": "string"
        }
      ],
      "outputsClass": [
        {
          "name": "valueChange",
          "defaultValue": "new EventEmitter<string>()",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 23,
          "type": "EventEmitter"
        }
      ],
      "propertiesClass": [
        {
          "name": "inputTemplate",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "TemplateRef<>",
          "optional": false,
          "description": "",
          "line": 25
        },
        {
          "name": "templates",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "QueryList<BaseTableTemplateDirective>",
          "optional": false,
          "description": "",
          "line": 20,
          "decorators": [
            {
              "name": "ContentChildren",
              "stringifiedArguments": "BaseTableTemplateDirective"
            }
          ]
        }
      ],
      "methodsClass": [
        {
          "name": "ngAfterContentInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 31,
          "deprecated": false,
          "deprecationMessage": ""
        },
        {
          "name": "stopPropagation",
          "args": [
            {
              "name": "event",
              "type": "MouseEvent",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 27,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [123],
          "jsdoctags": [
            {
              "name": "event",
              "type": "MouseEvent",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        }
      ],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import {\r\n  AfterContentInit,\r\n  Component,\r\n  ContentChildren,\r\n  EventEmitter,\r\n  Input,\r\n  Output,\r\n  QueryList,\r\n  TemplateRef,\r\n} from '@angular/core';\r\nimport { BaseTableTemplateDirective } from '../../@core/base-table/directives/base-table-template.directive';\r\n\r\n// eslint-disable-next-line @angular-eslint/prefer-on-push-component-change-detection\r\n@Component({\r\n  selector: 'zyfra-cell-editor',\r\n  templateUrl: './cell-editor.component.html',\r\n  // changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class ZyfraCellEditorComponent implements AfterContentInit {\r\n  @ContentChildren(BaseTableTemplateDirective) templates: QueryList<BaseTableTemplateDirective>;\r\n\r\n  @Input() value = '';\r\n  @Output() valueChange = new EventEmitter<string>();\r\n\r\n  inputTemplate: TemplateRef<unknown>;\r\n\r\n  public stopPropagation(event: MouseEvent): void {\r\n    event.stopPropagation();\r\n  }\r\n\r\n  ngAfterContentInit(): void {\r\n    this.templates.forEach(item => {\r\n      switch (item.getType()) {\r\n        case 'input':\r\n          this.inputTemplate = item.template;\r\n          break;\r\n      }\r\n    });\r\n  }\r\n}\r\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "implements": ["AfterContentInit"],
      "templateData": "<p-cellEditor>\r\n  <ng-template pTemplate=\"input\">\r\n    <ng-container *ngIf=\"inputTemplate; else defaultInputTemplate\">\r\n      <ng-container *ngTemplateOutlet=\"inputTemplate\"></ng-container>\r\n    </ng-container>\r\n\r\n    <ng-template #defaultInputTemplate>\r\n      <input\r\n        type=\"text\"\r\n        [value]=\"value\"\r\n        (input)=\"valueChange.emit($any($event.target).value)\"\r\n        (click)=\"stopPropagation($event)\"\r\n      >\r\n    </ng-template>\r\n  </ng-template>\r\n\r\n  <ng-template pTemplate=\"output\">\r\n    <ng-content></ng-content>\r\n  </ng-template>\r\n</p-cellEditor>\r\n"
    },
    {
      "name": "ZyfraCheckboxComponent",
      "id": "component-ZyfraCheckboxComponent-3683aa2468e0c992f76a19d984508d99",
      "file": "libs/components/src/lib/checkbox/zyfra-checkbox.component.ts",
      "changeDetection": "ChangeDetectionStrategy.OnPush",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "zyfra-checkbox",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./zyfra-checkbox.component.html"],
      "viewProviders": [],
      "inputsClass": [
        {
          "name": "ariaLabel",
          "defaultValue": "null",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 25,
          "type": "string"
        },
        {
          "name": "ariaLabelledBy",
          "defaultValue": "null",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 24,
          "type": "string"
        },
        {
          "name": "binary",
          "defaultValue": "true",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 21,
          "type": "boolean"
        },
        {
          "name": "checkboxIcon",
          "defaultValue": "'zyfra-icon selection-check-simple'",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 29,
          "type": "string"
        },
        {
          "name": "disabled",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 20,
          "type": "boolean"
        },
        {
          "name": "disabledControl",
          "deprecated": true,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "pos": 601,
              "end": 617,
              "flags": 4227072,
              "modifierFlagsCache": 0,
              "transformFlags": 0,
              "kind": 326,
              "tagName": {
                "pos": 602,
                "end": 612,
                "flags": 4227072,
                "modifierFlagsCache": 0,
                "transformFlags": 0,
                "kind": 79,
                "escapedText": "deprecated"
              },
              "comment": ""
            }
          ],
          "line": 18,
          "type": "boolean"
        },
        {
          "name": "falseValue",
          "defaultValue": "false",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 33,
          "type": "any"
        },
        {
          "name": "inputId",
          "defaultValue": "null",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 23,
          "type": "string"
        },
        {
          "name": "label",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 13,
          "type": "string"
        },
        {
          "name": "labelStyleClass",
          "defaultValue": "null",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 28,
          "type": "string"
        },
        {
          "name": "name",
          "defaultValue": "null",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 11,
          "type": "string"
        },
        {
          "name": "readonly",
          "defaultValue": "false",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 30,
          "type": "boolean"
        },
        {
          "name": "required",
          "defaultValue": "false",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 31,
          "type": "boolean"
        },
        {
          "name": "style",
          "defaultValue": "null",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 26,
          "type": "object"
        },
        {
          "name": "styleClass",
          "defaultValue": "null",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 27,
          "type": "string"
        },
        {
          "name": "tabindex",
          "defaultValue": "null",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 22,
          "type": "number"
        },
        {
          "name": "trueValue",
          "defaultValue": "true",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 32,
          "type": "any"
        },
        {
          "name": "value",
          "defaultValue": "null",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 12,
          "type": "any"
        }
      ],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "formControl",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "FormControl",
          "optional": false,
          "description": "",
          "line": 7,
          "modifierKind": [123, 143],
          "inheritance": {
            "file": "WrappedFormComponent"
          }
        },
        {
          "name": "injector",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Injector",
          "optional": false,
          "description": "",
          "line": 9,
          "modifierKind": [123, 143],
          "inheritance": {
            "file": "WrappedFormComponent"
          }
        },
        {
          "name": "ngControl",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "NgControl",
          "optional": false,
          "description": "",
          "line": 9,
          "decorators": [
            {
              "name": "Optional",
              "stringifiedArguments": ""
            },
            {
              "name": "Self",
              "stringifiedArguments": ""
            }
          ],
          "modifierKind": [123, 143],
          "inheritance": {
            "file": "WrappedFormComponent"
          }
        }
      ],
      "methodsClass": [
        {
          "name": "setDisabledState",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 35,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [123, 157],
          "inheritance": {
            "file": "WrappedFormComponent"
          }
        }
      ],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import { Component, Input, ChangeDetectionStrategy, Output, EventEmitter } from '@angular/core';\r\nimport { ControlValueAccessor } from '@angular/forms';\r\nimport { WrappedFormComponent } from '../@core/value-accessor/wrapped-form.component';\r\n\r\n@Component({\r\n  selector: 'zyfra-checkbox',\r\n  templateUrl: './zyfra-checkbox.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class ZyfraCheckboxComponent extends WrappedFormComponent implements ControlValueAccessor {\r\n  @Input() name: string = null;\r\n  @Input() value: any = null;\r\n  @Input() label: string;\r\n\r\n  /**\r\n   * @deprecated\r\n   */\r\n  @Input() disabledControl: boolean;\r\n\r\n  @Input() disabled: boolean;\r\n  @Input() binary: boolean = true;\r\n  @Input() tabindex: number = null;\r\n  @Input() inputId: string = null;\r\n  @Input() ariaLabelledBy: string = null;\r\n  @Input() ariaLabel: string = null;\r\n  @Input() style: object = null;\r\n  @Input() styleClass: string = null;\r\n  @Input() labelStyleClass: string = null;\r\n  @Input() checkboxIcon = 'zyfra-icon selection-check-simple';\r\n  @Input() readonly: boolean = false;\r\n  @Input() required: boolean = false;\r\n  @Input() trueValue: any = true;\r\n  @Input() falseValue: any = false;\r\n\r\n  public override setDisabledState(): void {\r\n    // do nothing\r\n  }\r\n}\r\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "extends": "WrappedFormComponent",
      "implements": ["ControlValueAccessor"],
      "templateData": "<p-checkbox\r\n  [formControl]=\"$any(ngControl.control)\"\r\n  [name]=\"name\"\r\n  [value]=\"value\"\r\n  [label]=\"label\"\r\n  [zyfraDisableControl]=\"disabled || disabledControl\"\r\n  [binary]=\"binary\"\r\n  [tabindex]=\"tabindex\"\r\n  [inputId]=\"inputId\"\r\n  [ariaLabelledBy]=\"ariaLabelledBy\"\r\n  [ariaLabel]=\"ariaLabel\"\r\n  [style]=\"style\"\r\n  [styleClass]=\"styleClass\"\r\n  [labelStyleClass]=\"labelStyleClass\"\r\n  [checkboxIcon]=\"checkboxIcon\"\r\n  [readonly]=\"readonly\"\r\n  [required]=\"required\"\r\n  [trueValue]=\"trueValue\"\r\n  [falseValue]=\"falseValue\"\r\n  (ngModelChange)=\"accessorOnChangeFn($event)\"\r\n></p-checkbox>\r\n"
    },
    {
      "name": "ZyfraCheckboxMultipleComponent",
      "id": "component-ZyfraCheckboxMultipleComponent-e0b8e4edc33108944f4697e91deeb5f4",
      "file": "libs/components/src/lib/checkbox/story/miltiple-checkbox.component.ts",
      "changeDetection": "ChangeDetectionStrategy.OnPush",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "zyfra-checkbox-multiple",
      "styleUrls": ["./miltiple-checkbox.component.less"],
      "styles": [],
      "template": "<form [formGroup]=\"form\">   <div *ngFor=\"let data of data\">\n     <zyfra-checkbox\n       *ngFor=\"let check of data.options\"\n       [label]=\"check.label\"\n       [value]=\"check.value\"\n       [formControlName]=\"data.text\"\n     >\n     </zyfra-checkbox>\n   </div>\n </form>",
      "templateUrl": [],
      "viewProviders": [],
      "inputsClass": [
        {
          "name": "binary",
          "defaultValue": "true",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 23,
          "type": "boolean"
        },
        {
          "name": "checkboxIcon",
          "defaultValue": "'zyfra-icon selection-check-simple'",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 26,
          "type": "string"
        },
        {
          "name": "label",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 22,
          "type": "string"
        },
        {
          "name": "style",
          "defaultValue": "null",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 24,
          "type": "object"
        },
        {
          "name": "styleClass",
          "defaultValue": "null",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 25,
          "type": "string"
        }
      ],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "data",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "DataFormControl[]",
          "optional": false,
          "description": "",
          "line": 29
        },
        {
          "name": "form",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "FormGroup",
          "optional": false,
          "description": "",
          "line": 28
        }
      ],
      "methodsClass": [
        {
          "name": "getFormGroup",
          "args": [],
          "optional": false,
          "returnType": "any",
          "typeParameters": [],
          "line": 36,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [123]
        }
      ],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\r\nimport { FormBuilder, FormGroup } from '@angular/forms';\r\nimport { data, DataFormControl } from './data';\r\n\r\n@Component({\r\n  selector: 'zyfra-checkbox-multiple',\r\n  template: ` <form [formGroup]=\"form\">\r\n    <div *ngFor=\"let data of data\">\r\n      <zyfra-checkbox\r\n        *ngFor=\"let check of data.options\"\r\n        [label]=\"check.label\"\r\n        [value]=\"check.value\"\r\n        [formControlName]=\"data.text\"\r\n      >\r\n      </zyfra-checkbox>\r\n    </div>\r\n  </form>`,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  styleUrls: ['./miltiple-checkbox.component.less'],\r\n})\r\nexport class ZyfraCheckboxMultipleComponent {\r\n  @Input() label: string;\r\n  @Input() binary: boolean = true;\r\n  @Input() style: object = null;\r\n  @Input() styleClass: string = null;\r\n  @Input() checkboxIcon = 'zyfra-icon selection-check-simple';\r\n\r\n  form: FormGroup;\r\n  data: DataFormControl[];\r\n\r\n  constructor(private formBuilder: FormBuilder) {\r\n    this.data = data;\r\n    this.form = this.getFormGroup();\r\n  }\r\n\r\n  public getFormGroup(): any {\r\n    const formControls = this.data.reduce((controls, dataForm: DataFormControl): any => {\r\n      controls[dataForm.text] = this.formBuilder.control(null);\r\n      return controls;\r\n    }, {});\r\n    return this.formBuilder.group(formControls);\r\n  }\r\n}\r\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data": "zyfra-checkbox-multiple {\r\n  p-checkbox {\r\n    margin-bottom: 16px;\r\n  }\r\n}\r\n",
          "styleUrl": "./miltiple-checkbox.component.less"
        }
      ],
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "deprecated": false,
        "deprecationMessage": "",
        "args": [
          {
            "name": "formBuilder",
            "type": "FormBuilder",
            "deprecated": false,
            "deprecationMessage": ""
          }
        ],
        "line": 29,
        "jsdoctags": [
          {
            "name": "formBuilder",
            "type": "FormBuilder",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          }
        ]
      }
    },
    {
      "name": "ZyfraChipComponent",
      "id": "component-ZyfraChipComponent-ea7d954b604ee3ddf8a13325dcd1fbf2",
      "file": "libs/components/src/lib/chip/zyfra-chip.component.ts",
      "changeDetection": "ChangeDetectionStrategy.OnPush",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "zyfra-chip",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./zyfra-chip.component.html"],
      "viewProviders": [],
      "inputsClass": [
        {
          "name": "icon",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 10,
          "type": "string"
        },
        {
          "name": "image",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 11,
          "type": "string"
        },
        {
          "name": "label",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 9,
          "type": "string"
        },
        {
          "name": "removable",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 12,
          "type": "boolean"
        },
        {
          "name": "removeIcon",
          "defaultValue": "'zyfra-icon cancel-close'",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 15,
          "type": "string"
        },
        {
          "name": "style",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 13,
          "type": "string"
        },
        {
          "name": "styleClass",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 14,
          "type": "string"
        }
      ],
      "outputsClass": [
        {
          "name": "onRemove",
          "defaultValue": "new EventEmitter()",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 18,
          "type": "EventEmitter<>"
        }
      ],
      "propertiesClass": [],
      "methodsClass": [
        {
          "name": "onRemoveHandler",
          "args": [
            {
              "name": "event",
              "type": "",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 20,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [123],
          "jsdoctags": [
            {
              "name": "event",
              "type": "",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        }
      ],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import { Component, Input, Output, EventEmitter, ChangeDetectionStrategy } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'zyfra-chip',\r\n  templateUrl: './zyfra-chip.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class ZyfraChipComponent {\r\n  @Input() label: string;\r\n  @Input() icon: string;\r\n  @Input() image: string;\r\n  @Input() removable: boolean;\r\n  @Input() style: string;\r\n  @Input() styleClass: string;\r\n  @Input() removeIcon: string = 'zyfra-icon cancel-close';\r\n\r\n  /* onRemove */\r\n  @Output() onRemove: EventEmitter<unknown> = new EventEmitter();\r\n\r\n  public onRemoveHandler(event: unknown): void {\r\n    this.onRemove.emit(event);\r\n  }\r\n}\r\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "templateData": "<p-chip\r\n  [label]=\"label\"\r\n  [icon]=\"icon\"\r\n  [image]=\"image\"\r\n  [removable]=\"removable\"\r\n  [style]=\"style\"\r\n  [styleClass]=\"styleClass\"\r\n  [removeIcon]=\"removeIcon\"\r\n  (onRemove)=\"onRemoveHandler($event)\"\r\n></p-chip>\r\n"
    },
    {
      "name": "ZyfraConfirmDialogComponent",
      "id": "component-ZyfraConfirmDialogComponent-d2f0b3d3f719d10c5bff26701ea77f18",
      "file": "libs/components/src/lib/confirm-dialog/zyfra-confirm-dialog.component.ts",
      "changeDetection": "ChangeDetectionStrategy.OnPush",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [
        {
          "name": "ConfirmationService"
        }
      ],
      "selector": "zyfra-confirm-dialog",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./zyfra-confirm-dialog.component.html"],
      "viewProviders": [],
      "inputsClass": [
        {
          "name": "accept",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 15,
          "type": "Function"
        },
        {
          "name": "acceptButtonStyleClass",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 27,
          "type": "string"
        },
        {
          "name": "acceptIcon",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 25,
          "type": "string"
        },
        {
          "name": "acceptLabel",
          "defaultValue": "'yes'",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 23,
          "type": "string"
        },
        {
          "name": "acceptMessages",
          "defaultValue": "[\r\n    { severity: '', summary: '', detail: '' },\r\n  ]",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 17,
          "type": "literal type[]"
        },
        {
          "name": "acceptVisible",
          "defaultValue": "true",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 29,
          "type": "boolean"
        },
        {
          "name": "appendTo",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 38,
          "type": "any"
        },
        {
          "name": "autoZIndex",
          "defaultValue": "true",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 41,
          "type": "boolean"
        },
        {
          "name": "baseZIndex",
          "defaultValue": "0",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 40,
          "type": "number"
        },
        {
          "name": "blockScroll",
          "defaultValue": "true",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 34,
          "type": "boolean"
        },
        {
          "name": "breakpoints",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 42,
          "type": "object"
        },
        {
          "name": "closable",
          "defaultValue": "false",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 36,
          "type": "boolean"
        },
        {
          "name": "closeOnEscape",
          "defaultValue": "true",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 35,
          "type": "boolean"
        },
        {
          "name": "defaultFocus",
          "defaultValue": "'accept'",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 44,
          "type": "string"
        },
        {
          "name": "dismissableMask",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 39,
          "type": "boolean"
        },
        {
          "name": "focusTrap",
          "defaultValue": "true",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 37,
          "type": "boolean"
        },
        {
          "name": "header",
          "defaultValue": "''",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 14,
          "type": "string"
        },
        {
          "name": "icon",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 13,
          "type": "string"
        },
        {
          "name": "key",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 12,
          "type": "string"
        },
        {
          "name": "maskStyleClass",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 33,
          "type": "string"
        },
        {
          "name": "message",
          "defaultValue": "''",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 11,
          "type": "string"
        },
        {
          "name": "position",
          "defaultValue": "'center'",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 45,
          "type": "string"
        },
        {
          "name": "reject",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 16,
          "type": "Function"
        },
        {
          "name": "rejectButtonStyleClass",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 28,
          "type": "string"
        },
        {
          "name": "rejectIcon",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 26,
          "type": "string"
        },
        {
          "name": "rejectLabel",
          "defaultValue": "'no'",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 24,
          "type": "string"
        },
        {
          "name": "rejectMessages",
          "defaultValue": "[\r\n    { severity: '', summary: '', detail: '' },\r\n  ]",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 20,
          "type": "literal type[]"
        },
        {
          "name": "rejectVisible",
          "defaultValue": "true",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 30,
          "type": "boolean"
        },
        {
          "name": "style",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 31,
          "type": "string"
        },
        {
          "name": "styleClass",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 32,
          "type": "string"
        },
        {
          "name": "transitionOptions",
          "defaultValue": "'400ms cubic-bezier(0.25, 0.8, 0.25, 1)'",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 43,
          "type": "string"
        }
      ],
      "outputsClass": [
        {
          "name": "onHide",
          "defaultValue": "new EventEmitter()",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 47,
          "type": "EventEmitter<ConfirmEventType>"
        }
      ],
      "propertiesClass": [
        {
          "name": "msgs",
          "defaultValue": "[]",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Message[]",
          "optional": false,
          "description": "",
          "line": 49
        }
      ],
      "methodsClass": [
        {
          "name": "onClick",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 53,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [123]
        },
        {
          "name": "onHideHandler",
          "args": [
            {
              "name": "event",
              "type": "ConfirmEventType",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 69,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [123],
          "jsdoctags": [
            {
              "name": "event",
              "type": "ConfirmEventType",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        }
      ],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output } from '@angular/core';\r\nimport { ConfirmationService, ConfirmEventType, Message } from 'primeng/api';\r\n\r\n@Component({\r\n  selector: 'zyfra-confirm-dialog',\r\n  templateUrl: './zyfra-confirm-dialog.component.html',\r\n  providers: [ConfirmationService],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class ZyfraConfirmDialogComponent {\r\n  @Input() message = '';\r\n  @Input() key: string;\r\n  @Input() icon: string;\r\n  @Input() header: string = '';\r\n  @Input() accept: Function;\r\n  @Input() reject: Function;\r\n  @Input() acceptMessages: { severity: string; summary: string; detail: string }[] = [\r\n    { severity: '', summary: '', detail: '' },\r\n  ];\r\n  @Input() rejectMessages: { severity: string; summary: string; detail: string }[] = [\r\n    { severity: '', summary: '', detail: '' },\r\n  ];\r\n  @Input() acceptLabel: string = 'yes';\r\n  @Input() rejectLabel: string = 'no';\r\n  @Input() acceptIcon: string;\r\n  @Input() rejectIcon: string;\r\n  @Input() acceptButtonStyleClass: string;\r\n  @Input() rejectButtonStyleClass: string;\r\n  @Input() acceptVisible: boolean = true;\r\n  @Input() rejectVisible: boolean = true;\r\n  @Input() style: string;\r\n  @Input() styleClass: string;\r\n  @Input() maskStyleClass: string;\r\n  @Input() blockScroll: boolean = true;\r\n  @Input() closeOnEscape: boolean = true;\r\n  @Input() closable: boolean = false;\r\n  @Input() focusTrap: boolean = true;\r\n  @Input() appendTo: any;\r\n  @Input() dismissableMask: boolean;\r\n  @Input() baseZIndex: number = 0;\r\n  @Input() autoZIndex: boolean = true;\r\n  @Input() breakpoints: object;\r\n  @Input() transitionOptions: string = '400ms cubic-bezier(0.25, 0.8, 0.25, 1)';\r\n  @Input() defaultFocus: string = 'accept';\r\n  @Input() position: string = 'center';\r\n\r\n  @Output() onHide: EventEmitter<ConfirmEventType> = new EventEmitter();\r\n\r\n  msgs: Message[] = [];\r\n\r\n  constructor(private confirmationService: ConfirmationService) {}\r\n\r\n  public onClick(): void {\r\n    this.confirmationService.confirm({\r\n      message: this.message,\r\n      header: this.header,\r\n      icon: this.icon,\r\n      accept: () => {\r\n        this.msgs = this.acceptMessages;\r\n        this.accept?.();\r\n      },\r\n      reject: () => {\r\n        this.msgs = this.rejectMessages;\r\n        this.reject?.();\r\n      },\r\n    });\r\n  }\r\n\r\n  public onHideHandler(event: ConfirmEventType): void {\r\n    this.onHide.emit(event);\r\n  }\r\n}\r\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "deprecated": false,
        "deprecationMessage": "",
        "args": [
          {
            "name": "confirmationService",
            "type": "ConfirmationService",
            "deprecated": false,
            "deprecationMessage": ""
          }
        ],
        "line": 49,
        "jsdoctags": [
          {
            "name": "confirmationService",
            "type": "ConfirmationService",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      "templateData": "<p-confirmDialog\r\n  [message]=\"message\"\r\n  [key]=\"key\"\r\n  [icon]=\"icon\"\r\n  [header]=\"header\"\r\n  [acceptLabel]=\"acceptLabel\"\r\n  [rejectLabel]=\"rejectLabel\"\r\n  [acceptIcon]=\"acceptIcon\"\r\n  [rejectIcon]=\"rejectIcon\"\r\n  [acceptButtonStyleClass]=\"acceptButtonStyleClass\"\r\n  [rejectButtonStyleClass]=\"rejectButtonStyleClass\"\r\n  [acceptVisible]=\"acceptVisible\"\r\n  [rejectVisible]=\"rejectVisible\"\r\n  [style]=\"style\"\r\n  [styleClass]=\"styleClass\"\r\n  [maskStyleClass]=\"maskStyleClass\"\r\n  [blockScroll]=\"blockScroll\"\r\n  [closeOnEscape]=\"closeOnEscape\"\r\n  [dismissableMask]=\"dismissableMask\"\r\n  [closable]=\"closable\"\r\n  [focusTrap]=\"focusTrap\"\r\n  [appendTo]=\"appendTo\"\r\n  [defaultFocus]=\"defaultFocus\"\r\n  [baseZIndex]=\"baseZIndex\"\r\n  [autoZIndex]=\"autoZIndex\"\r\n  [breakpoints]=\"breakpoints\"\r\n  [transitionOptions]=\"transitionOptions\"\r\n  [position]=\"position\"\r\n  (onHide)=\"onHideHandler($event)\"\r\n></p-confirmDialog>\r\n"
    },
    {
      "name": "ZyfraDatepickerComponent",
      "id": "component-ZyfraDatepickerComponent-52fe9e68c23af96908aead43957e739a",
      "file": "libs/components/src/lib/datepicker/zyfra-datepicker.component.ts",
      "changeDetection": "ChangeDetectionStrategy.OnPush",
      "encapsulation": ["ViewEncapsulation.None"],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "zyfra-datepicker",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./zyfra-datepicker.component.html"],
      "viewProviders": [],
      "inputsClass": [
        {
          "name": "calendarBtnLabel",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 61,
          "type": "string"
        },
        {
          "name": "dateFormat",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 71,
          "type": "string"
        },
        {
          "name": "disabled",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 49,
          "type": "boolean"
        },
        {
          "name": "disabledDates",
          "defaultValue": "null",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 65,
          "type": "Date[]"
        },
        {
          "name": "disabledDays",
          "defaultValue": "null",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 66,
          "type": "number[]"
        },
        {
          "name": "firstDayOfWeek",
          "defaultValue": "1",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 67,
          "type": "number"
        },
        {
          "name": "hideOnDateTimeSelect",
          "defaultValue": "true",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 62,
          "type": "boolean"
        },
        {
          "name": "inputClass",
          "defaultValue": "''",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 56,
          "type": "string"
        },
        {
          "name": "label",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 51,
          "type": "string"
        },
        {
          "name": "locale",
          "defaultValue": "ZyfraLocale.ru",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 70,
          "type": "ZyfraLocale"
        },
        {
          "name": "model",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 47,
          "type": "string | number | Date"
        },
        {
          "name": "monthNavigator",
          "defaultValue": "false",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 57,
          "type": "boolean"
        },
        {
          "name": "numberOfMonths",
          "defaultValue": "1",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 63,
          "type": "number"
        },
        {
          "name": "placeholder",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 48,
          "type": "string"
        },
        {
          "name": "required",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 50,
          "type": "boolean"
        },
        {
          "name": "returnFormatValue",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 79,
          "type": "ZyfraDatePickerValueType"
        },
        {
          "name": "selectionMode",
          "defaultValue": "'single'",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 64,
          "type": "string"
        },
        {
          "name": "showCalendarBtn",
          "defaultValue": "true",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 60,
          "type": "boolean"
        },
        {
          "name": "showClear",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 53,
          "type": "boolean"
        },
        {
          "name": "showDate",
          "defaultValue": "true",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 54,
          "type": "boolean"
        },
        {
          "name": "showOnFocus",
          "defaultValue": "false",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 68,
          "type": "boolean"
        },
        {
          "name": "showTime",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 55,
          "type": "boolean"
        },
        {
          "name": "showWeek",
          "defaultValue": "false",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 69,
          "type": "boolean"
        },
        {
          "name": "spanClass",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 52,
          "type": "string"
        },
        {
          "name": "timeFormat",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 74,
          "type": "string"
        },
        {
          "name": "yearNavigator",
          "defaultValue": "false",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 58,
          "type": "boolean"
        },
        {
          "name": "yearRange",
          "defaultValue": "null",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 59,
          "type": "string"
        }
      ],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "_defaultDateValue",
          "defaultValue": "null",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Date",
          "optional": false,
          "description": "",
          "line": 89,
          "modifierKind": [121]
        },
        {
          "name": "_defaultTimeValue",
          "defaultValue": "null",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Date",
          "optional": false,
          "description": "",
          "line": 90,
          "modifierKind": [121]
        },
        {
          "name": "calendar",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Calendar",
          "optional": false,
          "description": "",
          "line": 81,
          "decorators": [
            {
              "name": "ViewChild",
              "stringifiedArguments": "'calendar', {static: false}"
            }
          ],
          "modifierKind": [121]
        },
        {
          "name": "controlRequired",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "boolean",
          "optional": false,
          "description": "",
          "line": 83,
          "modifierKind": [123]
        },
        {
          "name": "currentValueType",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 88,
          "modifierKind": [121]
        },
        {
          "name": "datepickerValue",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Date",
          "optional": false,
          "description": "",
          "line": 84,
          "modifierKind": [123]
        },
        {
          "name": "datepickerValueShowBtn",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Date",
          "optional": false,
          "description": "",
          "line": 85,
          "modifierKind": [123]
        },
        {
          "name": "dateValue",
          "defaultValue": "''",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 94,
          "modifierKind": [121]
        },
        {
          "name": "defaultDateFormat",
          "defaultValue": "'dd.MM.yyyy'",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 92,
          "modifierKind": [121]
        },
        {
          "name": "defaultTimeFormat",
          "defaultValue": "'HH:mm:ss'",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 93,
          "modifierKind": [121]
        },
        {
          "name": "destroyed$",
          "defaultValue": "new Subject<void>()",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Subject<void>",
          "optional": false,
          "description": "",
          "line": 91,
          "modifierKind": [121]
        },
        {
          "name": "formatDate",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 96,
          "modifierKind": [121]
        },
        {
          "name": "formattedValue",
          "defaultValue": "''",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 87,
          "modifierKind": [123]
        },
        {
          "name": "formatTime",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 97,
          "modifierKind": [121]
        },
        {
          "name": "invalidDateMessage",
          "defaultValue": "'Invalid date'",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 95,
          "modifierKind": [121]
        },
        {
          "name": "localeFns",
          "defaultValue": "{\r\n    locale: ruFns,\r\n   }",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "ZyfraDatePickerLocaleInterface",
          "optional": false,
          "description": "",
          "line": 100,
          "modifierKind": [121]
        },
        {
          "name": "ngControl",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "NgControl",
          "optional": false,
          "description": "",
          "line": 105,
          "decorators": [
            {
              "name": "Self",
              "stringifiedArguments": ""
            },
            {
              "name": "Optional",
              "stringifiedArguments": ""
            }
          ],
          "modifierKind": [123]
        },
        {
          "name": "onChange",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "OnChangeCallback",
          "optional": false,
          "description": "",
          "line": 113,
          "modifierKind": [123]
        },
        {
          "name": "onTouched",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "VoidFunction",
          "optional": false,
          "description": "",
          "line": 114,
          "modifierKind": [123]
        },
        {
          "name": "timeArray",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "ZyfraTime[]",
          "optional": false,
          "description": "",
          "line": 86,
          "modifierKind": [123]
        },
        {
          "name": "timestampFormat",
          "defaultValue": "'x'",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 99,
          "modifierKind": [121]
        },
        {
          "name": "timeValue",
          "defaultValue": "''",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 98,
          "modifierKind": [121]
        }
      ],
      "methodsClass": [
        {
          "name": "changeControlState",
          "args": [
            {
              "name": "value",
              "type": "Date | string | number | null",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 445,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [121],
          "jsdoctags": [
            {
              "name": "value",
              "type": "Date | string | number | null",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "checkAbsoluteTime",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 300,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [121]
        },
        {
          "name": "clearValue",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 276,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [123]
        },
        {
          "name": "generateFormattedValueFromCalendarValue",
          "args": [
            {
              "name": "datepickerValue",
              "type": "Date",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 340,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [121],
          "jsdoctags": [
            {
              "name": "datepickerValue",
              "type": "Date",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "generateFormattedValueFromInput",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 386,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [121]
        },
        {
          "name": "getCurrentValueType",
          "args": [
            {
              "name": "value",
              "type": "string | number | Date | null",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "string",
          "typeParameters": [],
          "line": 557,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [121],
          "jsdoctags": [
            {
              "name": "value",
              "type": "string | number | Date | null",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "getValidatorRequiredControl",
          "args": [
            {
              "name": "ngControl",
              "type": "NgControl",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 289,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [121],
          "jsdoctags": [
            {
              "name": "ngControl",
              "type": "NgControl",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "getValueOutput",
          "args": [
            {
              "name": "date",
              "type": "Date",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "string | number | Date",
          "typeParameters": [],
          "line": 518,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [121],
          "jsdoctags": [
            {
              "name": "date",
              "type": "Date",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "ngAfterViewInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 147,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [123]
        },
        {
          "name": "ngOnChanges",
          "args": [
            {
              "name": "changes",
              "type": "SimpleChanges",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 155,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [123],
          "jsdoctags": [
            {
              "name": "changes",
              "type": "SimpleChanges",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "ngOnDestroy",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 165,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [123]
        },
        {
          "name": "ngOnInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 141,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [123]
        },
        {
          "name": "onCalendarClose",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 193,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [123]
        },
        {
          "name": "onCalendarDateChange",
          "args": [
            {
              "name": "datepickerValue",
              "type": "Date",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 183,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [123],
          "jsdoctags": [
            {
              "name": "datepickerValue",
              "type": "Date",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "onChangeValue",
          "args": [
            {
              "name": "value",
              "type": "string | Date | number | null",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 512,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [121],
          "jsdoctags": [
            {
              "name": "value",
              "type": "string | Date | number | null",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "onDatepickerNgModelChange",
          "args": [
            {
              "name": "event",
              "type": "string",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 178,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [123],
          "jsdoctags": [
            {
              "name": "event",
              "type": "string",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "onInputBlur",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 206,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [123]
        },
        {
          "name": "openCalendar",
          "args": [
            {
              "name": "event",
              "type": "Event",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 170,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [123],
          "jsdoctags": [
            {
              "name": "event",
              "type": "Event",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "registerOnChange",
          "args": [
            {
              "name": "fn",
              "type": "OnChangeCallback",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 119,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [123],
          "jsdoctags": [
            {
              "name": "fn",
              "type": "OnChangeCallback",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "registerOnTouched",
          "args": [
            {
              "name": "fn",
              "type": "VoidFunction",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 123,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [123],
          "jsdoctags": [
            {
              "name": "fn",
              "type": "VoidFunction",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "registerOnValidatorChange",
          "args": [
            {
              "name": "fn",
              "type": "function",
              "deprecated": false,
              "deprecationMessage": "",
              "function": []
            }
          ],
          "optional": true,
          "returnType": "void",
          "typeParameters": [],
          "line": 116,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [123],
          "jsdoctags": [
            {
              "name": "fn",
              "type": "function",
              "deprecated": false,
              "deprecationMessage": "",
              "function": [],
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "replaceSymbols",
          "args": [
            {
              "name": "str",
              "type": "string",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "string",
          "typeParameters": [],
          "line": 577,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [121],
          "jsdoctags": [
            {
              "name": "str",
              "type": "string",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "saveCalendarDate",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 199,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [123]
        },
        {
          "name": "setDisabledState",
          "args": [
            {
              "name": "isDisabled",
              "type": "boolean",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 136,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [123],
          "jsdoctags": [
            {
              "name": "isDisabled",
              "type": "boolean",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "setFormattedValue",
          "args": [
            {
              "name": "defaultDateValue",
              "type": "Date | null",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 450,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [121],
          "jsdoctags": [
            {
              "name": "defaultDateValue",
              "type": "Date | null",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "setInputTime",
          "args": [
            {
              "name": "time",
              "type": "ZyfraTime",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 245,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [123],
          "jsdoctags": [
            {
              "name": "time",
              "type": "ZyfraTime",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "setLocalizationCalendar",
          "args": [
            {
              "name": "locale",
              "type": "string",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 495,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [121],
          "jsdoctags": [
            {
              "name": "locale",
              "type": "string",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "writeValue",
          "args": [
            {
              "name": "outsideValue",
              "type": "string | number | Date | null",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 127,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [123],
          "jsdoctags": [
            {
              "name": "outsideValue",
              "type": "string | number | Date | null",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        }
      ],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import {\r\n  Component,\r\n  Input,\r\n  ChangeDetectionStrategy,\r\n  ViewChild,\r\n  OnChanges,\r\n  ChangeDetectorRef,\r\n  ViewEncapsulation,\r\n  SimpleChanges,\r\n  OnDestroy,\r\n  Optional,\r\n  Self,\r\n  AfterViewInit,\r\n  OnInit,\r\n} from '@angular/core';\r\nimport {\r\n  AbstractControl,\r\n  ControlValueAccessor,\r\n  NgControl,\r\n} from '@angular/forms';\r\nimport { takeUntil } from 'rxjs/operators';\r\nimport { Subject } from 'rxjs';\r\nimport { Calendar } from 'primeng/calendar';\r\nimport { PrimeNGConfig } from 'primeng/api';\r\nimport { en } from './i18n/en_US';\r\nimport { ru } from './i18n/ru_RU';\r\nimport { isIsoDate } from './utils/is-iso-date';\r\nimport { generateTimeArray } from './utils/generate-time-array';\r\nimport { ZyfraLocale } from './model/zyfra-date-picker-locale.enum';\r\nimport { ZyfraDatePickerValueType } from './model/zyfra-date-picker-value-type.enum';\r\nimport { ZyfraTime } from './model/zyfra-time.model';\r\nimport { format, isValid, parse, parseISO } from 'date-fns';\r\nimport { ru as ruFns, enUS as enFns } from 'date-fns/esm/locale';\r\nimport { ZyfraDatePickerLocaleInterface } from './model/zyfra-date-picker.model';\r\n\r\ntype OnChangeCallback = (value: string | number | Date) => void;\r\n\r\n@Component({\r\n  selector: 'zyfra-datepicker',\r\n  templateUrl: './zyfra-datepicker.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  encapsulation: ViewEncapsulation.None,\r\n})\r\nexport class ZyfraDatepickerComponent\r\n  implements ControlValueAccessor, OnInit, OnChanges, AfterViewInit, OnDestroy {\r\n\r\n  @Input() model: string | number | Date;\r\n  @Input() placeholder: string;\r\n  @Input() disabled: boolean;\r\n  @Input() required: boolean;\r\n  @Input() label: string;\r\n  @Input() spanClass: string;\r\n  @Input() showClear: boolean;\r\n  @Input() showDate: boolean = true;\r\n  @Input() showTime: boolean;\r\n  @Input() inputClass: string = '';\r\n  @Input() monthNavigator: boolean = false;\r\n  @Input() yearNavigator: boolean = false;\r\n  @Input() yearRange: string = null;\r\n  @Input() showCalendarBtn: boolean = true;\r\n  @Input() calendarBtnLabel: string;\r\n  @Input() hideOnDateTimeSelect: boolean = true;\r\n  @Input() numberOfMonths: number = 1;\r\n  @Input() selectionMode: string = 'single';\r\n  @Input() disabledDates: Date[] = null;\r\n  @Input() disabledDays: number[] = null;\r\n  @Input() firstDayOfWeek: number = 1;\r\n  @Input() showOnFocus: boolean = false;\r\n  @Input() showWeek: boolean = false;\r\n  @Input() locale: ZyfraLocale = ZyfraLocale.ru;\r\n  @Input() set dateFormat(formatDate: string) {\r\n    this.formatDate = this.replaceSymbols(formatDate) || this.defaultDateFormat;\r\n  }\r\n  @Input() set timeFormat(formatTime: string) {\r\n    this.formatTime = this.replaceSymbols(formatTime) || this.defaultTimeFormat;\r\n  }\r\n\r\n  @Input()\r\n  returnFormatValue: ZyfraDatePickerValueType;\r\n\r\n  @ViewChild('calendar', { static: false }) private calendar: Calendar;\r\n\r\n  public controlRequired: boolean;\r\n  public datepickerValue: Date;\r\n  public datepickerValueShowBtn: Date;\r\n  public timeArray: ZyfraTime[];\r\n  public formattedValue: string = '';\r\n  private currentValueType: string;\r\n  private _defaultDateValue: Date = null;\r\n  private _defaultTimeValue: Date = null;\r\n  private destroyed$: Subject<void> = new Subject<void>();\r\n  private defaultDateFormat = 'dd.MM.yyyy';\r\n  private defaultTimeFormat = 'HH:mm:ss';\r\n  private dateValue: string = '';\r\n  private invalidDateMessage: string = 'Invalid date';\r\n  private formatDate: string;\r\n  private formatTime: string;\r\n  private timeValue: string = '';\r\n  private timestampFormat: string = 'x';\r\n  private localeFns: ZyfraDatePickerLocaleInterface = {\r\n    locale: ruFns,\r\n   };\r\n\r\n  constructor(\r\n    @Self() @Optional() public ngControl: NgControl,\r\n    private primeNGConfig: PrimeNGConfig,\r\n    private cdr: ChangeDetectorRef\r\n  ) {\r\n    if (ngControl) {\r\n      ngControl.valueAccessor = this;\r\n    }\r\n  }\r\n  public onChange: OnChangeCallback;\r\n  public onTouched: VoidFunction;\r\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\r\n  public registerOnValidatorChange?(fn: () => void): void {}\r\n\r\n\r\n  public registerOnChange(fn: OnChangeCallback): void {\r\n    this.onChange = fn;\r\n  }\r\n\r\n  public registerOnTouched(fn: VoidFunction): void {\r\n    this.onTouched = fn;\r\n  }\r\n\r\n  public writeValue(outsideValue: string | number | Date | null): void {\r\n    this.model = outsideValue;\r\n    if (this.model) {\r\n      this.currentValueType = this.getCurrentValueType(this.model);\r\n    }\r\n    this.changeControlState(this.model);\r\n    this.cdr.markForCheck();\r\n  }\r\n\r\n  public setDisabledState(isDisabled: boolean): void {\r\n    this.disabled = isDisabled;\r\n    this.cdr.markForCheck();\r\n  }\r\n\r\n  public ngOnInit(): void {\r\n    if (this.ngControl) {\r\n      this.getValidatorRequiredControl(this.ngControl);\r\n    }\r\n  }\r\n\r\n  public ngAfterViewInit(): void {\r\n    if (this.ngControl) {\r\n      this.ngControl.statusChanges\r\n        .pipe(takeUntil(this.destroyed$))\r\n        .subscribe(() => this.getValidatorRequiredControl(this.ngControl));\r\n    }\r\n  }\r\n\r\n  public ngOnChanges(changes: SimpleChanges): void {\r\n    if (changes.showTime && changes.showTime.currentValue && this.formatTime) {\r\n      this.timeArray = generateTimeArray(this.formatTime);\r\n    }\r\n\r\n    if (changes.locale && changes.locale.currentValue) {\r\n      this.setLocalizationCalendar(changes.locale.currentValue);\r\n    }\r\n  }\r\n\r\n  public ngOnDestroy(): void {\r\n    this.destroyed$.next();\r\n    this.destroyed$.complete();\r\n  }\r\n\r\n  public openCalendar(event: Event): void {\r\n    this.calendar.onButtonClick(\r\n      event,\r\n      this.calendar.inputfieldViewChild.nativeElement\r\n    );\r\n    event.stopPropagation();\r\n  }\r\n\r\n  public onDatepickerNgModelChange(event: string): void {\r\n    this.formattedValue = event;\r\n    this.checkAbsoluteTime();\r\n  }\r\n\r\n  public onCalendarDateChange(datepickerValue: Date): void {\r\n    if (!this.showCalendarBtn || this.hideOnDateTimeSelect) {\r\n      this.datepickerValue = datepickerValue;\r\n      this.generateFormattedValueFromCalendarValue(datepickerValue);\r\n    } else {\r\n      this.datepickerValueShowBtn = datepickerValue;\r\n    }\r\n    this.cdr.detectChanges();\r\n  }\r\n\r\n  public onCalendarClose(): void {\r\n    if (this.showCalendarBtn && !this.hideOnDateTimeSelect) {\r\n      this.calendar.value = this.datepickerValue;\r\n    }\r\n  }\r\n\r\n  public saveCalendarDate(): void {\r\n    this.datepickerValue = this.datepickerValueShowBtn;\r\n    this.generateFormattedValueFromCalendarValue(this.datepickerValue);\r\n    this.cdr.detectChanges();\r\n    this.calendar.hideOverlay();\r\n  }\r\n\r\n  public onInputBlur(): void {\r\n    if (this.formattedValue) {\r\n      if (\r\n        this.dateValue === this.invalidDateMessage ||\r\n        this.timeValue === this.invalidDateMessage\r\n      ) {\r\n        this.formattedValue = '';\r\n        return;\r\n      }\r\n\r\n      if (this.showDate && this.showTime) {\r\n        this.formattedValue = `${this.dateValue} ${this.timeValue}`;\r\n      } else if (this.showDate) {\r\n        this.formattedValue = this.dateValue;\r\n      } else if (this.showTime) {\r\n        this.formattedValue = this.timeValue;\r\n      }\r\n\r\n      if (isValid(parseISO(this.dateValue))) {\r\n        this.datepickerValue = parse(\r\n          this.dateValue,\r\n          this.formatDate,\r\n          new Date(),\r\n          this.localeFns\r\n        );\r\n      }\r\n\r\n      this.datepickerValue = parse(this.dateValue, this.formatDate, new Date());\r\n\r\n      const dateValue = `${this.dateValue} ${this.timeValue}`;\r\n      const formatValue = `${this.formatDate} ${this.formatTime}`;\r\n      this.onChangeValue(\r\n        this.getValueOutput(\r\n          parse(dateValue, formatValue, new Date(), this.localeFns)\r\n        )\r\n      );\r\n    }\r\n  }\r\n\r\n  public setInputTime(time: ZyfraTime): void {\r\n    this._defaultTimeValue = time.date;\r\n    this.timeValue = format(\r\n      this._defaultTimeValue,\r\n      this.formatTime,\r\n      this.localeFns\r\n    );\r\n    this.formattedValue = this.timeValue;\r\n    let fullFormatString = this.formatTime;\r\n\r\n    if (this.showDate) {\r\n      if (!this._defaultDateValue || !isValid(this._defaultDateValue)) {\r\n        this._defaultDateValue = new Date();\r\n        this.dateValue = format(\r\n          this._defaultDateValue,\r\n          this.formatDate,\r\n          this.localeFns\r\n        );\r\n      }\r\n\r\n      this.formattedValue = `${this.dateValue} ${this.timeValue}`;\r\n      fullFormatString = `${this.formatDate} ${this.formatTime}`;\r\n    }\r\n\r\n    this.onChangeValue(\r\n      this.getValueOutput(\r\n        parse(this.formattedValue, fullFormatString, new Date(), this.localeFns)\r\n      )\r\n    );\r\n  }\r\n\r\n  public clearValue(): void {\r\n    this.formattedValue = '';\r\n\r\n    if (this.ngControl && this.ngControl.control) {\r\n      this.ngControl.control.markAsDirty();\r\n    }\r\n\r\n    this.cdr.detectChanges();\r\n    this.datepickerValue = null;\r\n    this.datepickerValueShowBtn = null;\r\n    this.onChangeValue(null);\r\n  }\r\n\r\n  private getValidatorRequiredControl(ngControl: NgControl): void {\r\n    if (ngControl.control && ngControl.control.validator && this.label) {\r\n      const validators = ngControl.control.validator({} as AbstractControl);\r\n      this.controlRequired = validators && validators.required;\r\n    } else {\r\n      this.controlRequired = false;\r\n    }\r\n\r\n    this.cdr.markForCheck();\r\n  }\r\n\r\n  private checkAbsoluteTime(): void {\r\n    if (!this.formattedValue) {\r\n      this._defaultDateValue = null;\r\n      this._defaultTimeValue = null;\r\n      this.dateValue = '';\r\n      this.timeValue = '';\r\n      this.onChangeValue(null);\r\n      return;\r\n    }\r\n\r\n    let validationString: string = '';\r\n\r\n    if (this.showDate) {\r\n      validationString += this.formatDate;\r\n    }\r\n\r\n    if (this.showTime) {\r\n      validationString += this.showDate\r\n        ? ` ${this.formatTime}`\r\n        : this.formatTime;\r\n    }\r\n\r\n    const newDate = parse(\r\n      this.formattedValue,\r\n      validationString,\r\n      new Date(),\r\n      this.localeFns\r\n    );\r\n\r\n    if (isValid(newDate)) {\r\n      if (this.showDate) {\r\n        this._defaultDateValue = newDate;\r\n        this.dateValue = format(newDate, this.formatDate, this.localeFns);\r\n      }\r\n      if (this.showTime) {\r\n        this.timeValue = format(newDate, this.formatTime, this.localeFns);\r\n      }\r\n    }\r\n  }\r\n\r\n  private generateFormattedValueFromCalendarValue(datepickerValue: Date): void {\r\n    if (this.selectionMode === 'range') {\r\n      this.formattedValue = '';\r\n      this._defaultDateValue = this.calendar.value;\r\n      const dateRange: string[] = [];\r\n      for (let i=0; i<2; i++) {\r\n        this.dateValue = format(\r\n        this._defaultDateValue[i],\r\n        this.formatDate,\r\n        this.localeFns\r\n      );\r\n      dateRange.push(this.dateValue);\r\n    }\r\n      this.formattedValue = dateRange.join(' - ');\r\n    } else {\r\n      this._defaultDateValue = datepickerValue;\r\n      this.dateValue = format(\r\n        this._defaultDateValue,\r\n        this.formatDate,\r\n        this.localeFns\r\n      );\r\n      this.formattedValue = this.dateValue;\r\n      if (!this._defaultTimeValue || !isValid(this._defaultTimeValue)) {\r\n        this._defaultTimeValue = this._defaultDateValue;\r\n      }\r\n\r\n      this.timeValue = format(\r\n        this._defaultTimeValue,\r\n        this.formatTime,\r\n        this.localeFns\r\n      );\r\n\r\n      if (this.showTime) {\r\n        this.formattedValue += ` ${this.timeValue}`;\r\n      }\r\n\r\n      const dateValue = `${this.dateValue} ${this.timeValue}`;\r\n      const formatValue = `${this.formatDate} ${this.formatTime}`;\r\n      this.onChangeValue(\r\n        this.getValueOutput(\r\n          parse(dateValue, formatValue, new Date(), this.localeFns)\r\n        )\r\n      );\r\n    }\r\n  }\r\n\r\n  private generateFormattedValueFromInput(): void {\r\n    let dateParam: Date;\r\n\r\n    switch (this.currentValueType) {\r\n      case ZyfraDatePickerValueType.null:\r\n        this._defaultDateValue = null;\r\n        break;\r\n\r\n      case ZyfraDatePickerValueType.timestamp:\r\n        dateParam = parse(\r\n          this.model as string,\r\n          this.timestampFormat,\r\n          new Date(),\r\n          this.localeFns\r\n        );\r\n        if (isValid(dateParam)) {\r\n          this.datepickerValue = dateParam;\r\n        }\r\n        this._defaultDateValue = dateParam;\r\n        break;\r\n\r\n      case ZyfraDatePickerValueType.date:\r\n        dateParam = this.model as Date;\r\n        if (isValid(dateParam)) {\r\n          this.datepickerValue = this.model as Date;\r\n        }\r\n        this._defaultDateValue = dateParam;\r\n        break;\r\n\r\n      case ZyfraDatePickerValueType.string:\r\n        dateParam = parse(\r\n          this.model as string,\r\n          this.formatDate,\r\n          new Date(),\r\n          this.localeFns\r\n        );\r\n        if (isValid(dateParam)) {\r\n          this.datepickerValue = dateParam;\r\n        }\r\n\r\n        this._defaultDateValue = parse(\r\n          this.model as string,\r\n          `${this.formatDate} ${this.formatTime}`,\r\n          new Date(),\r\n          this.localeFns\r\n        );\r\n        break;\r\n\r\n      case ZyfraDatePickerValueType.isoString:\r\n        dateParam = parseISO(this.model as string);\r\n        if (isValid(dateParam)) {\r\n          this.datepickerValue = new Date(this.model);\r\n        }\r\n        this._defaultDateValue = dateParam;\r\n        break;\r\n    }\r\n    this.setFormattedValue(this._defaultDateValue);\r\n  }\r\n\r\n  private changeControlState(value: Date | string | number | null): void {\r\n    this.currentValueType = this.getCurrentValueType(value);\r\n    this.generateFormattedValueFromInput();\r\n  }\r\n\r\n  private setFormattedValue(defaultDateValue: Date | null): void {\r\n    this._defaultTimeValue = defaultDateValue ? defaultDateValue : new Date();\r\n    this.dateValue = format(\r\n      this._defaultTimeValue,\r\n      this.formatDate,\r\n      this.localeFns\r\n    );\r\n    this.timeValue = format(\r\n      this._defaultTimeValue,\r\n      this.formatTime,\r\n      this.localeFns\r\n    );\r\n\r\n    if (this.showDate && this.showTime) {\r\n      if (\r\n        this.dateValue === this.invalidDateMessage ||\r\n        this.timeValue === this.invalidDateMessage\r\n      ) {\r\n        this.formattedValue = '';\r\n        this.cdr.detectChanges();\r\n        return;\r\n      }\r\n      this.formattedValue = `${this.dateValue} ${this.timeValue}`;\r\n    } else if (this.showDate) {\r\n      this.dateValue = format(\r\n        this._defaultDateValue,\r\n        this.formatDate,\r\n        this.localeFns\r\n      );\r\n      this.formattedValue =\r\n        this.dateValue === this.invalidDateMessage ? '' : this.dateValue;\r\n    } else if (this.showTime) {\r\n      this._defaultTimeValue = this._defaultDateValue;\r\n      this.timeValue = format(\r\n        this._defaultTimeValue,\r\n        this.formatTime,\r\n        this.localeFns\r\n      );\r\n      this.formattedValue =\r\n        this.timeValue === this.invalidDateMessage ? '' : this.timeValue;\r\n    }\r\n\r\n    this.cdr.detectChanges();\r\n  }\r\n\r\n  private setLocalizationCalendar(locale: string): void {\r\n    let currentLocale: unknown;\r\n\r\n    switch (locale) {\r\n      case ZyfraLocale.en:\r\n        currentLocale = en;\r\n        this.localeFns.locale = enFns;\r\n        break;\r\n      case ZyfraLocale.ru:\r\n      default:\r\n        currentLocale = ru;\r\n        this.localeFns.locale = ruFns ;\r\n        break;\r\n    }\r\n    this.primeNGConfig.setTranslation(currentLocale);\r\n  }\r\n\r\n  private onChangeValue(value: string | Date | number | null): void {\r\n    // this.modelChange.emit(value);\r\n    this.onChange(value);\r\n    this.onTouched();\r\n  }\r\n\r\n  private getValueOutput(date: Date): string | number | Date {\r\n    const returnValueType = this.returnFormatValue || this.currentValueType;\r\n    let resultDate: string | number | Date;\r\n    let formatValue: string;\r\n\r\n    switch (returnValueType) {\r\n      case ZyfraDatePickerValueType.timestamp:\r\n        resultDate = date.valueOf();\r\n        break;\r\n\r\n      case ZyfraDatePickerValueType.string:\r\n\r\n        if (this.formatDate && this.showDate) {\r\n          formatValue = this.formatDate;\r\n        }\r\n\r\n        if (this.formatTime && this.showTime) {\r\n          formatValue =\r\n            this.formatDate && this.showDate\r\n              ? `${this.formatDate} ${this.formatTime}`\r\n              : this.formatTime;\r\n        }\r\n\r\n        resultDate = format(date, formatValue, this.localeFns);\r\n        break;\r\n\r\n      case ZyfraDatePickerValueType.isoString:\r\n        resultDate = date.toISOString();\r\n        break;\r\n\r\n      case ZyfraDatePickerValueType.date:\r\n      default:\r\n        resultDate = date;\r\n        break;\r\n    }\r\n\r\n    return resultDate;\r\n  }\r\n\r\n  private getCurrentValueType(value: string | number | Date | null): string {\r\n    if (value === null) {\r\n      return ZyfraDatePickerValueType.null;\r\n    }\r\n\r\n    if (typeof value === 'number') {\r\n      return ZyfraDatePickerValueType.timestamp;\r\n    }\r\n\r\n    if ((value as unknown) instanceof Date) {\r\n      return ZyfraDatePickerValueType.date;\r\n    }\r\n\r\n    if (isIsoDate(value as string)) {\r\n      return ZyfraDatePickerValueType.isoString;\r\n    }\r\n\r\n    return ZyfraDatePickerValueType.string;\r\n  }\r\n\r\n  private replaceSymbols(str: string): string {\r\n    if (!str) {\r\n      return str;\r\n    }\r\n    const year = /Y/g;\r\n    const day = /D/g;\r\n    const hour = /h/g;\r\n    const sec = /S/g;\r\n    return str\r\n      .replace(year, 'y')\r\n      .replace(day, 'd')\r\n      .replace(hour, 'H')\r\n      .replace(sec, 'H');\r\n  }\r\n}\r\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "deprecated": false,
        "deprecationMessage": "",
        "args": [
          {
            "name": "ngControl",
            "type": "NgControl",
            "deprecated": false,
            "deprecationMessage": ""
          },
          {
            "name": "primeNGConfig",
            "type": "PrimeNGConfig",
            "deprecated": false,
            "deprecationMessage": ""
          },
          {
            "name": "cdr",
            "type": "ChangeDetectorRef",
            "deprecated": false,
            "deprecationMessage": ""
          }
        ],
        "line": 102,
        "jsdoctags": [
          {
            "name": "ngControl",
            "type": "NgControl",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          },
          {
            "name": "primeNGConfig",
            "type": "PrimeNGConfig",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          },
          {
            "name": "cdr",
            "type": "ChangeDetectorRef",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      "implements": ["ControlValueAccessor", "OnInit", "OnChanges", "AfterViewInit", "OnDestroy"],
      "accessors": {
        "dateFormat": {
          "name": "dateFormat",
          "setSignature": {
            "name": "dateFormat",
            "type": "void",
            "deprecated": false,
            "deprecationMessage": "",
            "args": [
              {
                "name": "formatDate",
                "type": "string",
                "deprecated": false,
                "deprecationMessage": ""
              }
            ],
            "returnType": "void",
            "line": 71,
            "jsdoctags": [
              {
                "name": "formatDate",
                "type": "string",
                "deprecated": false,
                "deprecationMessage": "",
                "tagName": {
                  "text": "param"
                }
              }
            ]
          }
        },
        "timeFormat": {
          "name": "timeFormat",
          "setSignature": {
            "name": "timeFormat",
            "type": "void",
            "deprecated": false,
            "deprecationMessage": "",
            "args": [
              {
                "name": "formatTime",
                "type": "string",
                "deprecated": false,
                "deprecationMessage": ""
              }
            ],
            "returnType": "void",
            "line": 74,
            "jsdoctags": [
              {
                "name": "formatTime",
                "type": "string",
                "deprecated": false,
                "deprecationMessage": "",
                "tagName": {
                  "text": "param"
                }
              }
            ]
          }
        }
      },
      "templateData": "<div class=\"zyfra-datepicker\">\r\n  <zyfra-input\r\n    [(ngModel)]=\"formattedValue\"\r\n    type=\"text\"\r\n    (ngModelChange)=\"onDatepickerNgModelChange($event)\"\r\n    (onBlur)=\"onInputBlur()\"\r\n    [placeholder]=\"placeholder\"\r\n    [label]=\"label\"\r\n    [inputClass]=\"{\r\n      'ng-invalid': !!ngControl?.invalid,\r\n      'ng-valid': !!ngControl?.valid,\r\n      'ng-dirty': !!ngControl?.dirty,\r\n      'ng-touched': !!ngControl?.touched\r\n    }\"\r\n    [required]=\"required || controlRequired\"\r\n    [disabled]=\"disabled\"\r\n  >\r\n    <div right class=\"zyfra-datepicker-controls\">\r\n      <button\r\n        type=\"button\"\r\n        *ngIf=\"showClear\"\r\n        (click)=\"clearValue()\"\r\n        [disabled]=\"disabled\"\r\n        class=\"zyfra-datepicker-control zyfra-datepicker-button\"\r\n      >\r\n        <i class=\"zyfra-icon tools-broom\"></i>\r\n      </button>\r\n      <div class=\"zyfra-datepicker-control\" *ngIf=\"showDate\">\r\n        <button [disabled]=\"disabled\" class=\"zyfra-datepicker-button\" (click)=\"openCalendar($event)\" type=\"button\">\r\n          <i class=\"zyfra-icon date-calendar-blank\"></i>\r\n        </button>\r\n        <p-calendar\r\n          #calendar\r\n          [ngModel]=\"datepickerValue\"\r\n          [panelStyleClass]=\"'zyfra-datepicker-calendar'\"\r\n          [locale]=\"$any(locale)\"\r\n          [selectionMode]=\"selectionMode\"\r\n          [showOnFocus]=\"showOnFocus\"\r\n          [showWeek]=\"showWeek\"\r\n          [monthNavigator]=\"monthNavigator\"\r\n          [yearNavigator]=\"yearNavigator\"\r\n          [yearRange]=\"yearRange\"\r\n          [hideOnDateTimeSelect]=\"hideOnDateTimeSelect\"\r\n          [numberOfMonths]=\"numberOfMonths\"\r\n          [disabledDates]=\"disabledDates\"\r\n          [disabledDays]=\"disabledDays\"\r\n          [firstDayOfWeek]=\"firstDayOfWeek\"\r\n          [tabindex]=\"-1\"\r\n          (onSelect)=\"onCalendarDateChange($event)\"\r\n          (onClickOutside)=\"onCalendarClose()\"\r\n        >\r\n          <ng-template pTemplate=\"footer\" *ngIf=\"showCalendarBtn\">\r\n            <div class=\"zyfra-datepicker-calendar-footer\">\r\n              <zyfra-button\r\n                [label]=\"calendarBtnLabel\"\r\n                [styleClass]=\"'p-button-mini button-success-style'\"\r\n                (onClick)=\"saveCalendarDate()\"\r\n              >\r\n              </zyfra-button>\r\n            </div>\r\n          </ng-template>\r\n        </p-calendar>\r\n      </div>\r\n\r\n      <!--  // TODO need button with dropdown -->\r\n      <button *ngIf=\"showTime\" class=\"zyfra-datepicker-control zyfra-datepicker-button\" type=\"button\">\r\n        <zyfra-dropdown\r\n          [options]=\"timeArray\"\r\n          [ngModel]=\"null\"\r\n          [disabled]=\"disabled\"\r\n          (ngModelChange)=\"setInputTime($event)\"\r\n          [panelStyleClass]=\"'zyfra-datepicker-dropdown-overlay'\"\r\n          [styleClass]=\"'zyfra-datepicker-dropdown'\"\r\n          [dropdownIcon]=\"'zyfra-icon date-update'\"\r\n          [optionLabel]=\"'value'\"\r\n          [tabindex]=\"-1\"\r\n        >\r\n        </zyfra-dropdown>\r\n      </button>\r\n\r\n      <ng-content select=\"[buttons]\"></ng-content>\r\n    </div>\r\n  </zyfra-input>\r\n</div>\r\n"
    },
    {
      "name": "ZyfraDatepickerModeSelectComponent",
      "id": "component-ZyfraDatepickerModeSelectComponent-6031fd41d8676a8628821180fd8e157a",
      "file": "libs/components/src/lib/datepicker/zyfra-datepicker-mode-select/zyfra-datepicker-mode-select.component.ts",
      "changeDetection": "ChangeDetectionStrategy.OnPush",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "zyfra-datepicker-mode-select",
      "styleUrls": ["./zyfra-datepicker-mode-select.component.less"],
      "styles": [],
      "templateUrl": ["./zyfra-datepicker-mode-select.component.html"],
      "viewProviders": [],
      "inputsClass": [
        {
          "name": "disabled",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 12,
          "type": "boolean"
        },
        {
          "name": "mode",
          "defaultValue": "ZyfraDatePickerMode.absolute",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 13,
          "type": "any"
        }
      ],
      "outputsClass": [
        {
          "name": "selectChanged",
          "defaultValue": "new EventEmitter()",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 16,
          "type": "EventEmitter"
        }
      ],
      "propertiesClass": [
        {
          "name": "dropdown",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "ZyfraDropdownComponent",
          "optional": false,
          "description": "",
          "line": 14,
          "decorators": [
            {
              "name": "ViewChild",
              "stringifiedArguments": "'dropdown'"
            }
          ]
        },
        {
          "name": "modes",
          "defaultValue": "[\r\n    {\r\n      name: 'Абсолютное время',\r\n      value: ZyfraDatePickerMode.absolute,\r\n      icon: 'date-update',\r\n    },\r\n    {\r\n      name: 'Относительное время',\r\n      value: ZyfraDatePickerMode.relative,\r\n      icon: 'date-clock',\r\n    },\r\n  ]",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "[]",
          "optional": false,
          "description": "",
          "line": 18,
          "modifierKind": [123, 143]
        }
      ],
      "methodsClass": [],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import { Component, ChangeDetectionStrategy, Input, Output, EventEmitter, ViewChild } from '@angular/core';\r\nimport { ZyfraDropdownComponent } from '../../dropdown';\r\nimport { ZyfraDatePickerMode } from '../model/zyfra-date-picker-mode.enum';\r\n\r\n@Component({\r\n  selector: 'zyfra-datepicker-mode-select',\r\n  templateUrl: './zyfra-datepicker-mode-select.component.html',\r\n  styleUrls: ['./zyfra-datepicker-mode-select.component.less'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class ZyfraDatepickerModeSelectComponent {\r\n  @Input() disabled: boolean;\r\n  @Input() mode = ZyfraDatePickerMode.absolute;\r\n  @ViewChild('dropdown') dropdown: ZyfraDropdownComponent;\r\n\r\n  @Output() selectChanged = new EventEmitter();\r\n\r\n  public readonly modes = [\r\n    {\r\n      name: 'Абсолютное время',\r\n      value: ZyfraDatePickerMode.absolute,\r\n      icon: 'date-update',\r\n    },\r\n    {\r\n      name: 'Относительное время',\r\n      value: ZyfraDatePickerMode.relative,\r\n      icon: 'date-clock',\r\n    },\r\n  ];\r\n}\r\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data": "",
          "styleUrl": "./zyfra-datepicker-mode-select.component.less"
        }
      ],
      "stylesData": "",
      "templateData": "<zyfra-dropdown\r\n  #dropdown\r\n  [ngModel]=\"mode\"\r\n  [options]=\"$any(modes)\"\r\n  (ngModelChange)=\"selectChanged.emit($event)\"\r\n  [disabled]=\"disabled\"\r\n  [panelStyleClass]=\"'zyfra-datepicker-dropdown-overlay'\"\r\n  [styleClass]=\"'zyfra-datepicker-dropdown'\"\r\n  [dropdownIcon]=\"'zyfra-icon chevrons-dropdown'\"\r\n  [optionLabel]=\"'name'\"\r\n  [optionValue]=\"'value'\"\r\n  class=\"zyfra-datepicker-control zyfra-datepicker-dropdown\"\r\n>\r\n  <ng-template let-modeItem zyfraDropdownTemplate=\"item\">\r\n    <div class=\"mode-item\">\r\n      <i class=\"zyfra-icon {{ modeItem.icon }}\"></i>\r\n      <div>{{ modeItem.name }}</div>\r\n    </div>\r\n  </ng-template>\r\n</zyfra-dropdown>\r\n"
    },
    {
      "name": "ZyfraDatepickerMultiComponent",
      "id": "component-ZyfraDatepickerMultiComponent-12888c4f0fe427dec9c828b9af3a1edb",
      "file": "libs/components/src/lib/datepicker/zyfra-datepicker-multi/zyfra-datepicker-multi.component.ts",
      "changeDetection": "ChangeDetectionStrategy.OnPush",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "zyfra-datepicker-multi",
      "styleUrls": ["./zyfra-datepicker-multi.component.less"],
      "styles": [],
      "templateUrl": ["./zyfra-datepicker-multi.component.html"],
      "viewProviders": [],
      "inputsClass": [
        {
          "name": "absoluteValue",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 33,
          "type": "string | number | Date"
        },
        {
          "name": "appendTo",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 66,
          "type": "any"
        },
        {
          "name": "ariaLabelledBy",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 57,
          "type": "string"
        },
        {
          "name": "autoZIndex",
          "defaultValue": "true",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 80,
          "type": "boolean"
        },
        {
          "name": "baseZIndex",
          "defaultValue": "0",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 81,
          "type": "number"
        },
        {
          "name": "clearButtonStyleClass",
          "defaultValue": "'p-button-text'",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 79,
          "type": "string"
        },
        {
          "name": "dataType",
          "defaultValue": "'date'",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 75,
          "type": "string"
        },
        {
          "name": "dateFormat",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 44,
          "type": "string"
        },
        {
          "name": "defaultDate",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 46,
          "type": "Date"
        },
        {
          "name": "disabled",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 23,
          "type": "boolean"
        },
        {
          "name": "disabledDates",
          "defaultValue": "null",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 39,
          "type": "Date[]"
        },
        {
          "name": "disabledDays",
          "defaultValue": "null",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 40,
          "type": "number[]"
        },
        {
          "name": "firstDayOfWeek",
          "defaultValue": "1",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 41,
          "type": "number"
        },
        {
          "name": "focusTrap",
          "defaultValue": "true",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 87,
          "type": "boolean"
        },
        {
          "name": "hideOnDateTimeSelect",
          "defaultValue": "true",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 36,
          "type": "boolean"
        },
        {
          "name": "hideTransitionOptions",
          "defaultValue": "'.1s linear'",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 89,
          "type": "string"
        },
        {
          "name": "hourFormat",
          "defaultValue": "'24'",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 69,
          "type": "string"
        },
        {
          "name": "icon",
          "defaultValue": "'pi pi-calendar'",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 65,
          "type": "string"
        },
        {
          "name": "iconAriaLabel",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 58,
          "type": "string"
        },
        {
          "name": "inline",
          "defaultValue": "false",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 61,
          "type": "boolean"
        },
        {
          "name": "inputId",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 54,
          "type": "string"
        },
        {
          "name": "inputStyle",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 53,
          "type": "any"
        },
        {
          "name": "inputStyleClass",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 56,
          "type": "string"
        },
        {
          "name": "keepInvalid",
          "defaultValue": "false",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 84,
          "type": "boolean"
        },
        {
          "name": "label",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 21,
          "type": "string"
        },
        {
          "name": "maxDate",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 48,
          "type": "Date"
        },
        {
          "name": "maxDateCount",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 76,
          "type": "number"
        },
        {
          "name": "minDate",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 47,
          "type": "Date"
        },
        {
          "name": "mode",
          "defaultValue": "ZyfraDatePickerMode.absolute",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 27,
          "type": "any"
        },
        {
          "name": "multipleSeparator",
          "defaultValue": "','",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 59,
          "type": "string"
        },
        {
          "name": "name",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 55,
          "type": "string"
        },
        {
          "name": "numberOfMonths",
          "defaultValue": "1",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 37,
          "type": "number"
        },
        {
          "name": "panelStyle",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 83,
          "type": "any"
        },
        {
          "name": "panelStyleClass",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 82,
          "type": "string"
        },
        {
          "name": "placeholder",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 22,
          "type": "string"
        },
        {
          "name": "rangeSeparator",
          "defaultValue": "'-'",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 60,
          "type": "string"
        },
        {
          "name": "readonlyInput",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 67,
          "type": "boolean"
        },
        {
          "name": "relativeValue",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 30,
          "type": "string"
        },
        {
          "name": "required",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 34,
          "type": "boolean"
        },
        {
          "name": "selectionMode",
          "defaultValue": "'single'",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 38,
          "type": "CALENDAR_SELECTION_MODE"
        },
        {
          "name": "selectOtherMonths",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 63,
          "type": "boolean"
        },
        {
          "name": "shortYearCutoff",
          "defaultValue": "'+10'",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 68,
          "type": "any"
        },
        {
          "name": "showButtonBar",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 77,
          "type": "boolean"
        },
        {
          "name": "showClear",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 24,
          "type": "boolean"
        },
        {
          "name": "showIcon",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 64,
          "type": "boolean"
        },
        {
          "name": "showOnFocus",
          "defaultValue": "false",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 42,
          "type": "boolean"
        },
        {
          "name": "showOtherMonths",
          "defaultValue": "true",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 62,
          "type": "boolean"
        },
        {
          "name": "showSeconds",
          "defaultValue": "false",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 74,
          "type": "boolean"
        },
        {
          "name": "showTime",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 35,
          "type": "boolean"
        },
        {
          "name": "showTransitionOptions",
          "defaultValue": "'.12s cubic-bezier(0, 0, 0.2, 1)'",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 88,
          "type": "string"
        },
        {
          "name": "showWeek",
          "defaultValue": "false",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 43,
          "type": "boolean"
        },
        {
          "name": "stepHour",
          "defaultValue": "1",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 71,
          "type": "number"
        },
        {
          "name": "stepMinute",
          "defaultValue": "1",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 72,
          "type": "number"
        },
        {
          "name": "stepSecond",
          "defaultValue": "1",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 73,
          "type": "number"
        },
        {
          "name": "style",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 51,
          "type": "any"
        },
        {
          "name": "styleClass",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 52,
          "type": "string"
        },
        {
          "name": "tabindex",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 90,
          "type": "number"
        },
        {
          "name": "timeOnly",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 70,
          "type": "boolean"
        },
        {
          "name": "timeSeparator",
          "defaultValue": "':'",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 86,
          "type": "string"
        },
        {
          "name": "todayButtonStyleClass",
          "defaultValue": "'p-button-text'",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 78,
          "type": "string"
        },
        {
          "name": "touchUI",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 85,
          "type": "boolean"
        },
        {
          "name": "view",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 49,
          "type": "string"
        }
      ],
      "outputsClass": [
        {
          "name": "modeChange",
          "defaultValue": "new EventEmitter<ZyfraDatePickerMode>()",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 104,
          "type": "EventEmitter"
        },
        {
          "name": "onBlur",
          "defaultValue": "new EventEmitter()",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 93,
          "type": "EventEmitter<any>"
        },
        {
          "name": "onClearClick",
          "defaultValue": "new EventEmitter()",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 98,
          "type": "EventEmitter<any>"
        },
        {
          "name": "onClickOutside",
          "defaultValue": "new EventEmitter()",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 101,
          "type": "EventEmitter<any>"
        },
        {
          "name": "onClose",
          "defaultValue": "new EventEmitter()",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 94,
          "type": "EventEmitter<any>"
        },
        {
          "name": "onFocus",
          "defaultValue": "new EventEmitter()",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 92,
          "type": "EventEmitter<any>"
        },
        {
          "name": "onInput",
          "defaultValue": "new EventEmitter()",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 96,
          "type": "EventEmitter<any>"
        },
        {
          "name": "onMonthChange",
          "defaultValue": "new EventEmitter()",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 99,
          "type": "EventEmitter<any>"
        },
        {
          "name": "onSelect",
          "defaultValue": "new EventEmitter()",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 95,
          "type": "EventEmitter<any>"
        },
        {
          "name": "onShow",
          "defaultValue": "new EventEmitter()",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 102,
          "type": "EventEmitter<any>"
        },
        {
          "name": "onTodayClick",
          "defaultValue": "new EventEmitter()",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 97,
          "type": "EventEmitter<any>"
        },
        {
          "name": "onYearChange",
          "defaultValue": "new EventEmitter()",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 100,
          "type": "EventEmitter<any>"
        },
        {
          "name": "valueChange",
          "defaultValue": "new EventEmitter<any>()",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 103,
          "type": "EventEmitter"
        }
      ],
      "propertiesClass": [],
      "methodsClass": [
        {
          "name": "onClickButtonSelect",
          "args": [
            {
              "name": "event",
              "type": "MouseEvent",
              "deprecated": false,
              "deprecationMessage": ""
            },
            {
              "name": "select",
              "type": "ZyfraDatepickerModeSelectComponent",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 109,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [123],
          "jsdoctags": [
            {
              "name": "event",
              "type": "MouseEvent",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "select",
              "type": "ZyfraDatepickerModeSelectComponent",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "onSelectChanged",
          "args": [
            {
              "name": "mode",
              "type": "ZyfraDatePickerMode",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 116,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [123],
          "jsdoctags": [
            {
              "name": "mode",
              "type": "ZyfraDatePickerMode",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        }
      ],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import {\r\n  Component,\r\n  ChangeDetectionStrategy,\r\n  Input,\r\n  Output,\r\n  EventEmitter,\r\n  ChangeDetectorRef,\r\n} from '@angular/core';\r\nimport { CALENDAR_SELECTION_MODE } from '../calendar/zyfra-calendar.component';\r\nimport { ZyfraDatePickerMode } from '../model/zyfra-date-picker-mode.enum';\r\nimport { ZyfraDatepickerModeSelectComponent } from '../zyfra-datepicker-mode-select/zyfra-datepicker-mode-select.component';\r\n\r\n@Component({\r\n  selector: 'zyfra-datepicker-multi',\r\n  templateUrl: './zyfra-datepicker-multi.component.html',\r\n  styleUrls: ['./zyfra-datepicker-multi.component.less'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class ZyfraDatepickerMultiComponent {\r\n  // Base from relative & absolute components\r\n  @Input() public label: string;\r\n  @Input() public placeholder: string;\r\n  @Input() public disabled: boolean;\r\n  @Input() public showClear: boolean;\r\n\r\n  // Current component 'multi'\r\n  @Input() mode = ZyfraDatePickerMode.absolute;\r\n\r\n  // wrapper for relative component\r\n  @Input() public relativeValue: string;\r\n\r\n  // wrapper for absolute component\r\n  @Input() absoluteValue: string | number | Date;\r\n  @Input() required: boolean;\r\n  @Input() showTime: boolean;\r\n  @Input() hideOnDateTimeSelect: boolean = true;\r\n  @Input() numberOfMonths: number = 1;\r\n  @Input() selectionMode: CALENDAR_SELECTION_MODE = 'single';\r\n  @Input() disabledDates: Date[] = null;\r\n  @Input() disabledDays: number[] = null;\r\n  @Input() firstDayOfWeek: number = 1;\r\n  @Input() showOnFocus: boolean = false;\r\n  @Input() showWeek: boolean = false;\r\n  @Input() dateFormat: string;\r\n\r\n  @Input() defaultDate: Date;\r\n  @Input() minDate: Date;\r\n  @Input() maxDate: Date;\r\n  @Input() view: string;\r\n\r\n  @Input() style: any;\r\n  @Input() styleClass: string;\r\n  @Input() inputStyle: any;\r\n  @Input() inputId: string;\r\n  @Input() name: string;\r\n  @Input() inputStyleClass: string;\r\n  @Input() ariaLabelledBy: string;\r\n  @Input() iconAriaLabel: string;\r\n  @Input() multipleSeparator: string = ',';\r\n  @Input() rangeSeparator: string = '-';\r\n  @Input() inline: boolean = false;\r\n  @Input() showOtherMonths: boolean = true;\r\n  @Input() selectOtherMonths: boolean;\r\n  @Input() showIcon: boolean;\r\n  @Input() icon: string = 'pi pi-calendar';\r\n  @Input() appendTo: any;\r\n  @Input() readonlyInput: boolean;\r\n  @Input() shortYearCutoff: any = '+10';\r\n  @Input() hourFormat: string = '24';\r\n  @Input() timeOnly: boolean;\r\n  @Input() stepHour: number = 1;\r\n  @Input() stepMinute: number = 1;\r\n  @Input() stepSecond: number = 1;\r\n  @Input() showSeconds: boolean = false;\r\n  @Input() dataType: string = 'date';\r\n  @Input() maxDateCount: number;\r\n  @Input() showButtonBar: boolean;\r\n  @Input() todayButtonStyleClass: string = 'p-button-text';\r\n  @Input() clearButtonStyleClass: string = 'p-button-text';\r\n  @Input() autoZIndex: boolean = true;\r\n  @Input() baseZIndex: number = 0;\r\n  @Input() panelStyleClass: string;\r\n  @Input() panelStyle: any;\r\n  @Input() keepInvalid: boolean = false;\r\n  @Input() touchUI: boolean;\r\n  @Input() timeSeparator: string = ':';\r\n  @Input() focusTrap: boolean = true;\r\n  @Input() showTransitionOptions: string = '.12s cubic-bezier(0, 0, 0.2, 1)';\r\n  @Input() hideTransitionOptions: string = '.1s linear';\r\n  @Input() tabindex: number;\r\n\r\n  @Output() onFocus: EventEmitter<any> = new EventEmitter();\r\n  @Output() onBlur: EventEmitter<any> = new EventEmitter();\r\n  @Output() onClose: EventEmitter<any> = new EventEmitter();\r\n  @Output() onSelect: EventEmitter<any> = new EventEmitter();\r\n  @Output() onInput: EventEmitter<any> = new EventEmitter();\r\n  @Output() onTodayClick: EventEmitter<any> = new EventEmitter();\r\n  @Output() onClearClick: EventEmitter<any> = new EventEmitter();\r\n  @Output() onMonthChange: EventEmitter<any> = new EventEmitter();\r\n  @Output() onYearChange: EventEmitter<any> = new EventEmitter();\r\n  @Output() onClickOutside: EventEmitter<any> = new EventEmitter();\r\n  @Output() onShow: EventEmitter<any> = new EventEmitter();\r\n  @Output() public valueChange = new EventEmitter<any>();\r\n  @Output() public modeChange = new EventEmitter<ZyfraDatePickerMode>();\r\n\r\n  constructor(private readonly cdr: ChangeDetectorRef) {}\r\n\r\n  // TODO need button with dropdown\r\n  public onClickButtonSelect(event: MouseEvent, select: ZyfraDatepickerModeSelectComponent): void {\r\n    if (!select.dropdown.dropdown.overlayVisible) {\r\n      select.dropdown.dropdown.onMouseclick(event);\r\n      event.stopPropagation();\r\n    }\r\n  }\r\n\r\n  public onSelectChanged(mode: ZyfraDatePickerMode): void {\r\n    this.modeChange.emit(mode);\r\n    this.mode = mode;\r\n    this.cdr.detectChanges();\r\n  }\r\n}\r\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data": "",
          "styleUrl": "./zyfra-datepicker-multi.component.less"
        }
      ],
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "deprecated": false,
        "deprecationMessage": "",
        "args": [
          {
            "name": "cdr",
            "type": "ChangeDetectorRef",
            "deprecated": false,
            "deprecationMessage": ""
          }
        ],
        "line": 104,
        "jsdoctags": [
          {
            "name": "cdr",
            "type": "ChangeDetectorRef",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      "templateData": "<ng-container *ngIf=\"mode === 'relative'; else absoluteTemplate\">\r\n  <zyfra-relative-datepicker\r\n    [label]=\"label\"\r\n    [placeholder]=\"placeholder\"\r\n    [disabled]=\"disabled\"\r\n    [showClear]=\"showClear\"\r\n    [ngModel]=\"relativeValue\"\r\n    (ngModelChange)=\"valueChange.emit($event)\"\r\n  >\r\n    <ng-container buttons>\r\n      <ng-container *ngTemplateOutlet=\"selectButtonTemplate\"></ng-container>\r\n    </ng-container>\r\n  </zyfra-relative-datepicker>\r\n</ng-container>\r\n\r\n<ng-template #absoluteTemplate>\r\n  <zyfra-calendar\r\n    [label]=\"label\"\r\n    [ngModel]=\"absoluteValue\"\r\n    [defaultDate]=\"defaultDate\"\r\n    [selectionMode]=\"selectionMode\"\r\n    [style]=\"style\"\r\n    [styleClass]=\"styleClass\"\r\n    [inputStyle]=\"inputStyle\"\r\n    [inputStyleClass]=\"inputStyleClass\"\r\n    [inputId]=\"inputId\"\r\n    [name]=\"name\"\r\n    [placeholder]=\"placeholder\"\r\n    [disabled]=\"disabled\"\r\n    [dateFormat]=\"dateFormat\"\r\n    [inline]=\"inline\"\r\n    [showOtherMonths]=\"showOtherMonths\"\r\n    [selectOtherMonths]=\"selectOtherMonths\"\r\n    [showIcon]=\"showIcon\"\r\n    [showOnFocus]=\"showOnFocus\"\r\n    [showWeek]=\"showWeek\"\r\n    [icon]=\"icon\"\r\n    [appendTo]=\"appendTo\"\r\n    [readonlyInput]=\"readonlyInput\"\r\n    [shortYearCutoff]=\"shortYearCutoff\"\r\n    [minDate]=\"minDate\"\r\n    [maxDate]=\"maxDate\"\r\n    [disabledDates]=\"disabledDates\"\r\n    [disabledDays]=\"disabledDays\"\r\n    [showTime]=\"showTime\"\r\n    [hourFormat]=\"hourFormat\"\r\n    [timeOnly]=\"timeOnly\"\r\n    [timeSeparator]=\"timeSeparator\"\r\n    [dataType]=\"dataType\"\r\n    [required]=\"required\"\r\n    [tabindex]=\"tabindex\"\r\n    [ariaLabelledBy]=\"ariaLabelledBy\"\r\n    [iconAriaLabel]=\"iconAriaLabel\"\r\n    [showSeconds]=\"showSeconds\"\r\n    [stepHour]=\"stepHour\"\r\n    [stepMinute]=\"stepMinute\"\r\n    [stepSecond]=\"stepSecond\"\r\n    [maxDateCount]=\"maxDateCount\"\r\n    [showButtonBar]=\"showButtonBar\"\r\n    [todayButtonStyleClass]=\"todayButtonStyleClass\"\r\n    [clearButtonStyleClass]=\"clearButtonStyleClass\"\r\n    [baseZIndex]=\"baseZIndex\"\r\n    [autoZIndex]=\"autoZIndex\"\r\n    [panelStyleClass]=\"panelStyleClass\"\r\n    [panelStyle]=\"panelStyle\"\r\n    [keepInvalid]=\"keepInvalid\"\r\n    [hideOnDateTimeSelect]=\"hideOnDateTimeSelect\"\r\n    [numberOfMonths]=\"numberOfMonths\"\r\n    [view]=\"view\"\r\n    [multipleSeparator]=\"multipleSeparator\"\r\n    [rangeSeparator]=\"rangeSeparator\"\r\n    [touchUI]=\"touchUI\"\r\n    [focusTrap]=\"focusTrap\"\r\n    [showTransitionOptions]=\"showTransitionOptions\"\r\n    [hideTransitionOptions]=\"hideTransitionOptions\"\r\n    [firstDayOfWeek]=\"firstDayOfWeek\"\r\n  >\r\n    <ng-container buttons-right>\r\n      <ng-container *ngTemplateOutlet=\"selectButtonTemplate\"></ng-container>\r\n    </ng-container>\r\n  </zyfra-calendar>\r\n</ng-template>\r\n\r\n<ng-template #selectButtonTemplate>\r\n  <button\r\n    type=\"button\"\r\n    class=\"zyfra-datepicker-control zyfra-datepicker-button\"\r\n    (click)=\"onClickButtonSelect($event, select)\"\r\n  >\r\n    <zyfra-datepicker-mode-select\r\n      #select\r\n      [mode]=\"mode\"\r\n      (selectChanged)=\"onSelectChanged($event)\"\r\n    ></zyfra-datepicker-mode-select>\r\n  </button>\r\n</ng-template>\r\n"
    },
    {
      "name": "ZyfraDialogComponent",
      "id": "component-ZyfraDialogComponent-9cf26809c21ba1443ee7e49b6d94123e",
      "file": "libs/components/src/lib/dialog/zyfra-dialog.component.ts",
      "changeDetection": "ChangeDetectionStrategy.OnPush",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "zyfra-dialog",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./zyfra-dialog.component.html"],
      "viewProviders": [],
      "inputsClass": [
        {
          "name": "acceptVisible",
          "defaultValue": "true",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 11,
          "type": "boolean"
        },
        {
          "name": "appendTo",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 23,
          "type": "any"
        },
        {
          "name": "autoZIndex",
          "defaultValue": "true",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 30,
          "type": "boolean"
        },
        {
          "name": "baseZIndex",
          "defaultValue": "0",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 29,
          "type": "number"
        },
        {
          "name": "blockScroll",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 18,
          "type": "boolean"
        },
        {
          "name": "breakpoints",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 36,
          "type": "object"
        },
        {
          "name": "closable",
          "defaultValue": "true",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 22,
          "type": "boolean"
        },
        {
          "name": "closeIcon",
          "defaultValue": "'zyfra-icon cancel-close'",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 38,
          "type": "string"
        },
        {
          "name": "closeOnEscape",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 19,
          "type": "boolean"
        },
        {
          "name": "contentStyle",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 14,
          "type": "object"
        },
        {
          "name": "contentStyleClass",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 27,
          "type": "string"
        },
        {
          "name": "dismissableMask",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 20,
          "type": "boolean"
        },
        {
          "name": "draggable",
          "defaultValue": "true",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 10,
          "type": "boolean"
        },
        {
          "name": "focusOnShow",
          "defaultValue": "true",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 33,
          "type": "boolean"
        },
        {
          "name": "focusTrap",
          "defaultValue": "true",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 34,
          "type": "boolean"
        },
        {
          "name": "header",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 9,
          "type": "string"
        },
        {
          "name": "keepInViewport",
          "defaultValue": "true",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 12,
          "type": "boolean"
        },
        {
          "name": "maskStyleClass",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 26,
          "type": "string"
        },
        {
          "name": "maximizable",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 35,
          "type": "boolean"
        },
        {
          "name": "maximizeIcon",
          "defaultValue": "'zyfra-icon arrows-expand'",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 40,
          "type": "string"
        },
        {
          "name": "minimizeIcon",
          "defaultValue": "'zyfra-icon arrows-collapse'",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 39,
          "type": "string"
        },
        {
          "name": "minX",
          "defaultValue": "0",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 31,
          "type": "number"
        },
        {
          "name": "minY",
          "defaultValue": "0",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 32,
          "type": "number"
        },
        {
          "name": "modal",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 16,
          "type": "boolean"
        },
        {
          "name": "position",
          "defaultValue": "'center'",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 17,
          "type": "string"
        },
        {
          "name": "resizable",
          "defaultValue": "true",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 13,
          "type": "boolean"
        },
        {
          "name": "rtl",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 21,
          "type": "boolean"
        },
        {
          "name": "showHeader",
          "defaultValue": "true",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 28,
          "type": "boolean"
        },
        {
          "name": "style",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 24,
          "type": "string"
        },
        {
          "name": "styleClass",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 25,
          "type": "string"
        },
        {
          "name": "transitionOptions",
          "defaultValue": "'150ms cubic-bezier(0, 0, 0.2, 1)'",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 37,
          "type": "string"
        },
        {
          "name": "visible",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 15,
          "type": "boolean"
        }
      ],
      "outputsClass": [
        {
          "name": "onDragEnd",
          "defaultValue": "new EventEmitter()",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 47,
          "type": "EventEmitter<any>"
        },
        {
          "name": "onHide",
          "defaultValue": "new EventEmitter()",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 43,
          "type": "EventEmitter<any>"
        },
        {
          "name": "onMaximize",
          "defaultValue": "new EventEmitter()",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 48,
          "type": "EventEmitter<any>"
        },
        {
          "name": "onResizeEnd",
          "defaultValue": "new EventEmitter()",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 46,
          "type": "EventEmitter<any>"
        },
        {
          "name": "onResizeInit",
          "defaultValue": "new EventEmitter()",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 45,
          "type": "EventEmitter<any>"
        },
        {
          "name": "onShow",
          "defaultValue": "new EventEmitter()",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 44,
          "type": "EventEmitter<any>"
        },
        {
          "name": "visibleChange",
          "defaultValue": "new EventEmitter()",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 42,
          "type": "EventEmitter<boolean>"
        }
      ],
      "propertiesClass": [],
      "methodsClass": [
        {
          "name": "onDragEndHandler",
          "args": [
            {
              "name": "event",
              "type": "",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 68,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [123],
          "jsdoctags": [
            {
              "name": "event",
              "type": "",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "onHideHandler",
          "args": [
            {
              "name": "event",
              "type": "",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 50,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [123],
          "jsdoctags": [
            {
              "name": "event",
              "type": "",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "onMaximizeHandler",
          "args": [
            {
              "name": "event",
              "type": "",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 72,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [123],
          "jsdoctags": [
            {
              "name": "event",
              "type": "",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "onResizeEndHandler",
          "args": [
            {
              "name": "event",
              "type": "",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 64,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [123],
          "jsdoctags": [
            {
              "name": "event",
              "type": "",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "onResizeInitHandler",
          "args": [
            {
              "name": "event",
              "type": "",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 60,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [123],
          "jsdoctags": [
            {
              "name": "event",
              "type": "",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "onShowHandler",
          "args": [
            {
              "name": "event",
              "type": "",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 55,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [123],
          "jsdoctags": [
            {
              "name": "event",
              "type": "",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        }
      ],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'zyfra-dialog',\r\n  templateUrl: './zyfra-dialog.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class ZyfraDialogComponent {\r\n  @Input() header: string;\r\n  @Input() draggable: boolean = true;\r\n  @Input() acceptVisible: boolean = true;\r\n  @Input() keepInViewport: boolean = true;\r\n  @Input() resizable: boolean = true;\r\n  @Input() contentStyle: object;\r\n  @Input() visible: boolean;\r\n  @Input() modal: boolean;\r\n  @Input() position: string = 'center';\r\n  @Input() blockScroll: boolean;\r\n  @Input() closeOnEscape: boolean;\r\n  @Input() dismissableMask: boolean;\r\n  @Input() rtl: boolean;\r\n  @Input() closable: boolean = true;\r\n  @Input() appendTo: any;\r\n  @Input() style: string;\r\n  @Input() styleClass: string;\r\n  @Input() maskStyleClass: string;\r\n  @Input() contentStyleClass: string;\r\n  @Input() showHeader: boolean = true;\r\n  @Input() baseZIndex: number = 0;\r\n  @Input() autoZIndex: boolean = true;\r\n  @Input() minX: number = 0;\r\n  @Input() minY: number = 0;\r\n  @Input() focusOnShow: boolean = true;\r\n  @Input() focusTrap: boolean = true;\r\n  @Input() maximizable: boolean;\r\n  @Input() breakpoints: object;\r\n  @Input() transitionOptions: string = '150ms cubic-bezier(0, 0, 0.2, 1)';\r\n  @Input() closeIcon: string = 'zyfra-icon cancel-close';\r\n  @Input() minimizeIcon: string = 'zyfra-icon arrows-collapse';\r\n  @Input() maximizeIcon: string = 'zyfra-icon arrows-expand';\r\n\r\n  @Output() visibleChange: EventEmitter<boolean> = new EventEmitter();\r\n  @Output() onHide: EventEmitter<any> = new EventEmitter();\r\n  @Output() onShow: EventEmitter<any> = new EventEmitter();\r\n  @Output() onResizeInit: EventEmitter<any> = new EventEmitter();\r\n  @Output() onResizeEnd: EventEmitter<any> = new EventEmitter();\r\n  @Output() onDragEnd: EventEmitter<any> = new EventEmitter();\r\n  @Output() onMaximize: EventEmitter<any> = new EventEmitter();\r\n\r\n  public onHideHandler(event: unknown): void {\r\n    this.visible = false;\r\n    this.onHide.emit(this.visible);\r\n  }\r\n\r\n  public onShowHandler(event: unknown): void {\r\n    this.visible = true;\r\n    this.onShow.emit(this.visible);\r\n  }\r\n\r\n  public onResizeInitHandler(event: unknown): void {\r\n    this.onResizeInit.emit(event);\r\n  }\r\n\r\n  public onResizeEndHandler(event: unknown): void {\r\n    this.onResizeEnd.emit(event);\r\n  }\r\n\r\n  public onDragEndHandler(event: unknown): void {\r\n    this.onDragEnd.emit(event);\r\n  }\r\n\r\n  public onMaximizeHandler(event: unknown): void {\r\n    this.onMaximize.emit(event);\r\n  }\r\n}\r\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "templateData": "<p-dialog\r\n  [header]=\"header\"\r\n  [draggable]=\"draggable\"\r\n  [keepInViewport]=\"keepInViewport\"\r\n  [resizable]=\"resizable\"\r\n  [contentStyle]=\"contentStyle\"\r\n  [visible]=\"visible\"\r\n  [modal]=\"modal\"\r\n  [position]=\"position\"\r\n  [blockScroll]=\"blockScroll\"\r\n  [closeOnEscape]=\"closeOnEscape\"\r\n  [dismissableMask]=\"dismissableMask\"\r\n  [rtl]=\"rtl\"\r\n  [closable]=\"closable\"\r\n  [appendTo]=\"appendTo\"\r\n  [style]=\"style\"\r\n  [styleClass]=\"styleClass\"\r\n  [maskStyleClass]=\"maskStyleClass\"\r\n  [contentStyleClass]=\"contentStyleClass\"\r\n  [showHeader]=\"showHeader\"\r\n  [baseZIndex]=\"baseZIndex\"\r\n  [autoZIndex]=\"autoZIndex\"\r\n  [minX]=\"minX\"\r\n  [minY]=\"minY\"\r\n  [focusOnShow]=\"focusOnShow\"\r\n  [focusTrap]=\"focusTrap\"\r\n  [maximizable]=\"maximizable\"\r\n  [breakpoints]=\"breakpoints\"\r\n  [transitionOptions]=\"transitionOptions\"\r\n  [closeIcon]=\"closeIcon\"\r\n  [minimizeIcon]=\"minimizeIcon\"\r\n  [maximizeIcon]=\"maximizeIcon\"\r\n  (visibleChange)=\"visibleChange.emit($event)\"\r\n  (onShow)=\"onShowHandler($event)\"\r\n  (onHide)=\"onHideHandler($event)\"\r\n  (onResizeInit)=\"onResizeInitHandler($event)\"\r\n  (onResizeEnd)=\"onResizeEndHandler($event)\"\r\n  (onDragEnd)=\"onDragEndHandler($event)\"\r\n  (onMaximize)=\"onMaximizeHandler($event)\"\r\n>\r\n  <ng-content></ng-content>\r\n</p-dialog>\r\n"
    },
    {
      "name": "ZyfraDropdownComponent",
      "id": "component-ZyfraDropdownComponent-9e76211b4c21017a7276455e406645ac",
      "file": "libs/components/src/lib/dropdown/zyfra-dropdown.component.ts",
      "changeDetection": "ChangeDetectionStrategy.OnPush",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "zyfra-dropdown",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./zyfra-dropdown.component.html"],
      "viewProviders": [],
      "inputsClass": [
        {
          "name": "appendTo",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 69,
          "type": "any"
        },
        {
          "name": "ariaFilterLabel",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 86,
          "type": "string"
        },
        {
          "name": "ariaLabelledBy",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 66,
          "type": "string"
        },
        {
          "name": "autoDisplayFirst",
          "defaultValue": "true",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 78,
          "type": "boolean"
        },
        {
          "name": "autofocus",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 74,
          "type": "boolean"
        },
        {
          "name": "autofocusFilter",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 75,
          "type": "boolean"
        },
        {
          "name": "autoZIndex",
          "defaultValue": "true",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 83,
          "type": "boolean"
        },
        {
          "name": "baseZIndex",
          "defaultValue": "0",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 82,
          "type": "number"
        },
        {
          "name": "dataKey",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 73,
          "type": "string"
        },
        {
          "name": "disabled",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 62,
          "type": "boolean"
        },
        {
          "name": "dropdownIcon",
          "defaultValue": "'zyfra-icon chevrons-down'",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 77,
          "type": "string"
        },
        {
          "name": "editable",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 67,
          "type": "boolean"
        },
        {
          "name": "emptyFilterMessage",
          "defaultValue": "'No results found'",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 65,
          "type": "string"
        },
        {
          "name": "emptyMessage",
          "defaultValue": "'No records found'",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 64,
          "type": "string"
        },
        {
          "name": "filter",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 45,
          "type": "boolean"
        },
        {
          "name": "filterBy",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 47,
          "type": "string"
        },
        {
          "name": "filterLocale",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 60,
          "type": "string"
        },
        {
          "name": "filterMatchMode",
          "defaultValue": "'contains'",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 48,
          "type": "\"contains\" | \"startsWith\" | \"endsWith\" | \"equals\" | \"notEquals\" | \"in\" | \"lt\" | \"lte\" | \"gt\" | \"gte\""
        },
        {
          "name": "filterPlaceholder",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 59,
          "type": "string"
        },
        {
          "name": "filterValue",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 46,
          "type": "string"
        },
        {
          "name": "group",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 79,
          "type": "boolean"
        },
        {
          "name": "groupTemplateClass",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 80,
          "type": "string"
        },
        {
          "name": "hideTransitionOptions",
          "defaultValue": "'.1s linear'",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 85,
          "type": "string"
        },
        {
          "name": "inputId",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 72,
          "type": "string"
        },
        {
          "name": "itemSize",
          "defaultValue": "30",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 91,
          "type": "number"
        },
        {
          "name": "label",
          "defaultValue": "''",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 92,
          "type": "string"
        },
        {
          "name": "maxlength",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 68,
          "type": "number"
        },
        {
          "name": "mini",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 94,
          "type": "boolean"
        },
        {
          "name": "name",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 39,
          "type": "string"
        },
        {
          "name": "optionDisabled",
          "defaultValue": "'disabled'",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 36,
          "type": "string"
        },
        {
          "name": "optionGroupChildren",
          "defaultValue": "'items'",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 38,
          "type": "string"
        },
        {
          "name": "optionGroupLabel",
          "defaultValue": "'label'",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 37,
          "type": "string"
        },
        {
          "name": "optionLabel",
          "defaultValue": "'label'",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 35,
          "type": "string"
        },
        {
          "name": "options",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 33,
          "type": "T[]"
        },
        {
          "name": "optionValue",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 34,
          "type": "string"
        },
        {
          "name": "panelStyle",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 42,
          "type": "string"
        },
        {
          "name": "panelStyleClass",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 44,
          "type": "string"
        },
        {
          "name": "placeholder",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 71,
          "type": "string"
        },
        {
          "name": "readonly",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 63,
          "type": "boolean"
        },
        {
          "name": "required",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 61,
          "type": "boolean"
        },
        {
          "name": "resetFilterOnHide",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 76,
          "type": "boolean"
        },
        {
          "name": "scrollHeight",
          "defaultValue": "'200px'",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 40,
          "type": "string"
        },
        {
          "name": "showClear",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 81,
          "type": "boolean"
        },
        {
          "name": "showTransitionOptions",
          "defaultValue": "'.12s cubic-bezier(0, 0, 0.2, 1)'",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 84,
          "type": "string"
        },
        {
          "name": "style",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 41,
          "type": "string"
        },
        {
          "name": "styleClass",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 43,
          "type": "string"
        },
        {
          "name": "tabindex",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 70,
          "type": "number"
        },
        {
          "name": "tooltip",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 87,
          "type": "any"
        },
        {
          "name": "tooltipPosition",
          "defaultValue": "'top'",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 89,
          "type": "string"
        },
        {
          "name": "tooltipPositionStyle",
          "defaultValue": "'absolute'",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 90,
          "type": "string"
        },
        {
          "name": "tooltipStyleClass",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 88,
          "type": "string"
        },
        {
          "name": "virtualScroll",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 93,
          "type": "boolean"
        }
      ],
      "outputsClass": [
        {
          "name": "onBlur",
          "defaultValue": "new EventEmitter<FocusEvent>()",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 99,
          "type": "EventEmitter"
        },
        {
          "name": "onChange",
          "defaultValue": "new EventEmitter<DropdownChangeEvent<unknown>>()",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 96,
          "type": "EventEmitter"
        },
        {
          "name": "onClick",
          "defaultValue": "new EventEmitter<PointerEvent>()",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 97,
          "type": "EventEmitter"
        },
        {
          "name": "onFocus",
          "defaultValue": "new EventEmitter<FocusEvent>()",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 98,
          "type": "EventEmitter"
        },
        {
          "name": "onHide",
          "defaultValue": "new EventEmitter<AnimationEvent>()",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 101,
          "type": "EventEmitter"
        },
        {
          "name": "onShow",
          "defaultValue": "new EventEmitter<AnimationEvent>()",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 100,
          "type": "EventEmitter"
        }
      ],
      "propertiesClass": [
        {
          "name": "dropdown",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Dropdown",
          "optional": false,
          "description": "",
          "line": 103,
          "decorators": [
            {
              "name": "ViewChild",
              "stringifiedArguments": "'dropdown'"
            }
          ]
        },
        {
          "name": "emptyfilterTemplate",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "TemplateRef<>",
          "optional": false,
          "description": "",
          "line": 111
        },
        {
          "name": "emptyTemplate",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "TemplateRef<>",
          "optional": false,
          "description": "",
          "line": 110
        },
        {
          "name": "footerTemplate",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "TemplateRef<>",
          "optional": false,
          "description": "",
          "line": 112
        },
        {
          "name": "groupTemplate",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "TemplateRef<>",
          "optional": false,
          "description": "",
          "line": 107
        },
        {
          "name": "headerTemplate",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "TemplateRef<>",
          "optional": false,
          "description": "",
          "line": 109
        },
        {
          "name": "itemTemplate",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "TemplateRef<>",
          "optional": false,
          "description": "",
          "line": 106
        },
        {
          "name": "selectedItemTemplate",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "TemplateRef<>",
          "optional": false,
          "description": "",
          "line": 108
        },
        {
          "name": "templates",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "QueryList<ZyfraDropdownTemplateDirective>",
          "optional": false,
          "description": "",
          "line": 104,
          "decorators": [
            {
              "name": "ContentChildren",
              "stringifiedArguments": "ZyfraDropdownTemplateDirective"
            }
          ]
        },
        {
          "name": "formControl",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "FormControl",
          "optional": false,
          "description": "",
          "line": 7,
          "modifierKind": [123, 143],
          "inheritance": {
            "file": "WrappedFormComponent"
          }
        },
        {
          "name": "injector",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Injector",
          "optional": false,
          "description": "",
          "line": 9,
          "modifierKind": [123, 143],
          "inheritance": {
            "file": "WrappedFormComponent"
          }
        },
        {
          "name": "ngControl",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "NgControl",
          "optional": false,
          "description": "",
          "line": 9,
          "decorators": [
            {
              "name": "Optional",
              "stringifiedArguments": ""
            },
            {
              "name": "Self",
              "stringifiedArguments": ""
            }
          ],
          "modifierKind": [123, 143],
          "inheritance": {
            "file": "WrappedFormComponent"
          }
        }
      ],
      "methodsClass": [
        {
          "name": "ngAfterContentInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 114,
          "deprecated": false,
          "deprecationMessage": ""
        },
        {
          "name": "setDisabledState",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 142,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [123, 157],
          "inheritance": {
            "file": "WrappedFormComponent"
          }
        }
      ],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import {\r\n  AfterContentInit,\r\n  ChangeDetectionStrategy,\r\n  Component,\r\n  ContentChildren,\r\n  EventEmitter,\r\n  Input,\r\n  Output,\r\n  QueryList,\r\n  TemplateRef,\r\n  ViewChild,\r\n} from '@angular/core';\r\nimport { AnimationEvent } from '@angular/animations';\r\nimport { ControlValueAccessor } from '@angular/forms';\r\nimport { Dropdown } from 'primeng/dropdown';\r\nimport { WrappedFormComponent } from '../@core/value-accessor/wrapped-form.component';\r\nimport { ZyfraDropdownTemplateDirective } from './zyfra-dropdown-template.directive';\r\n\r\nexport interface DropdownChangeEvent<T> {\r\n  originalEvent: PointerEvent;\r\n  value: T;\r\n}\r\n\r\n@Component({\r\n  selector: 'zyfra-dropdown',\r\n  templateUrl: './zyfra-dropdown.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class ZyfraDropdownComponent<T = unknown>\r\n  extends WrappedFormComponent\r\n  implements ControlValueAccessor, AfterContentInit\r\n{\r\n  @Input() options: T[];\r\n  @Input() optionValue: string;\r\n  @Input() optionLabel = 'label';\r\n  @Input() optionDisabled = 'disabled';\r\n  @Input() optionGroupLabel = 'label';\r\n  @Input() optionGroupChildren = 'items';\r\n  @Input() name: string;\r\n  @Input() scrollHeight = '200px';\r\n  @Input() style: string;\r\n  @Input() panelStyle: string;\r\n  @Input() styleClass: string;\r\n  @Input() panelStyleClass: string;\r\n  @Input() filter: boolean;\r\n  @Input() filterValue: string;\r\n  @Input() filterBy: string;\r\n  @Input() filterMatchMode:\r\n    | 'contains'\r\n    | 'startsWith'\r\n    | 'endsWith'\r\n    | 'equals'\r\n    | 'notEquals'\r\n    | 'in'\r\n    | 'lt'\r\n    | 'lte'\r\n    | 'gt'\r\n    | 'gte' = 'contains';\r\n  @Input() filterPlaceholder: string;\r\n  @Input() filterLocale: string;\r\n  @Input() required: boolean;\r\n  @Input() disabled: boolean; // TODO(rustam) remove this prop use control disable\r\n  @Input() readonly: boolean;\r\n  @Input() emptyMessage = 'No records found';\r\n  @Input() emptyFilterMessage = 'No results found';\r\n  @Input() ariaLabelledBy: string;\r\n  @Input() editable: boolean;\r\n  @Input() maxlength: number;\r\n  @Input() appendTo: any;\r\n  @Input() tabindex: number;\r\n  @Input() placeholder: string;\r\n  @Input() inputId: string;\r\n  @Input() dataKey: string;\r\n  @Input() autofocus: boolean;\r\n  @Input() autofocusFilter: boolean;\r\n  @Input() resetFilterOnHide: boolean;\r\n  @Input() dropdownIcon = 'zyfra-icon chevrons-down';\r\n  @Input() autoDisplayFirst = true;\r\n  @Input() group: boolean;\r\n  @Input() groupTemplateClass: string;\r\n  @Input() showClear: boolean;\r\n  @Input() baseZIndex = 0;\r\n  @Input() autoZIndex = true;\r\n  @Input() showTransitionOptions = '.12s cubic-bezier(0, 0, 0.2, 1)';\r\n  @Input() hideTransitionOptions = '.1s linear';\r\n  @Input() ariaFilterLabel: string;\r\n  @Input() tooltip: any;\r\n  @Input() tooltipStyleClass: string;\r\n  @Input() tooltipPosition = 'top';\r\n  @Input() tooltipPositionStyle = 'absolute';\r\n  @Input() itemSize = 30;\r\n  @Input() label = '';\r\n  @Input() virtualScroll: boolean;\r\n  @Input() mini: boolean;\r\n\r\n  @Output() onChange = new EventEmitter<DropdownChangeEvent<unknown>>();\r\n  @Output() onClick = new EventEmitter<PointerEvent>();\r\n  @Output() onFocus = new EventEmitter<FocusEvent>();\r\n  @Output() onBlur = new EventEmitter<FocusEvent>();\r\n  @Output() onShow = new EventEmitter<AnimationEvent>();\r\n  @Output() onHide = new EventEmitter<AnimationEvent>();\r\n\r\n  @ViewChild('dropdown') dropdown: Dropdown;\r\n  @ContentChildren(ZyfraDropdownTemplateDirective) templates: QueryList<ZyfraDropdownTemplateDirective>;\r\n\r\n  itemTemplate: TemplateRef<unknown>;\r\n  groupTemplate: TemplateRef<unknown>;\r\n  selectedItemTemplate: TemplateRef<unknown>;\r\n  headerTemplate: TemplateRef<unknown>;\r\n  emptyTemplate: TemplateRef<unknown>;\r\n  emptyfilterTemplate: TemplateRef<unknown>;\r\n  footerTemplate: TemplateRef<unknown>;\r\n\r\n  ngAfterContentInit(): void {\r\n    this.templates.forEach(item => {\r\n      switch (item.getType()) {\r\n        case 'item':\r\n          this.itemTemplate = item.template;\r\n          break;\r\n        case 'group':\r\n          this.groupTemplate = item.template;\r\n          break;\r\n        case 'selectedItem':\r\n          this.selectedItemTemplate = item.template;\r\n          break;\r\n        case 'header':\r\n          this.headerTemplate = item.template;\r\n          break;\r\n        case 'empty':\r\n          this.emptyTemplate = item.template;\r\n          break;\r\n        case 'emptyfilter':\r\n          this.emptyfilterTemplate = item.template;\r\n          break;\r\n        case 'footer':\r\n          this.footerTemplate = item.template;\r\n          break;\r\n      }\r\n    });\r\n  }\r\n\r\n  public override setDisabledState(): void {\r\n    // do nothing, because have `disabled` input\r\n  }\r\n}\r\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "extends": "WrappedFormComponent",
      "implements": ["ControlValueAccessor", "AfterContentInit"],
      "templateData": "<span\r\n  class=\"zyfra-input\"\r\n  [class.zyfra-input_disabled]=\"disabled\"\r\n  [class.zyfra-dropdown_mini]=\"mini\"\r\n  [class.p-float-label]=\"label\"\r\n>\r\n  <p-dropdown\r\n    #dropdown\r\n    [formControl]=\"$any(ngControl.control)\"\r\n    [options]=\"options\"\r\n    [optionLabel]=\"optionLabel\"\r\n    [optionValue]=\"optionValue\"\r\n    [optionDisabled]=\"optionDisabled\"\r\n    [optionGroupLabel]=\"optionGroupLabel\"\r\n    [optionGroupChildren]=\"optionGroupChildren\"\r\n    [name]=\"name\"\r\n    [scrollHeight]=\"scrollHeight\"\r\n    [virtualScroll]=\"virtualScroll\"\r\n    [itemSize]=\"itemSize\"\r\n    [style]=\"style\"\r\n    [panelStyle]=\"panelStyle\"\r\n    [styleClass]=\"styleClass\"\r\n    [panelStyleClass]=\"panelStyleClass\"\r\n    [filter]=\"filter\"\r\n    [filterValue]=\"filterValue\"\r\n    [filterBy]=\"filterBy\"\r\n    [filterMatchMode]=\"filterMatchMode\"\r\n    [filterPlaceholder]=\"filterPlaceholder\"\r\n    [filterLocale]=\"filterLocale\"\r\n    [required]=\"required\"\r\n    [attr.disabled]=\"disabled\"\r\n    [zyfraDisableControl]=\"disabled\"\r\n    [readonly]=\"readonly\"\r\n    [emptyMessage]=\"emptyMessage\"\r\n    [emptyFilterMessage]=\"emptyFilterMessage\"\r\n    [ariaLabelledBy]=\"ariaLabelledBy\"\r\n    [editable]=\"editable\"\r\n    [maxlength]=\"maxlength\"\r\n    [appendTo]=\"appendTo\"\r\n    [tabindex]=\"tabindex\"\r\n    [placeholder]=\"placeholder\"\r\n    [inputId]=\"inputId\"\r\n    [dataKey]=\"dataKey\"\r\n    [autofocus]=\"autofocus\"\r\n    [autofocusFilter]=\"autofocusFilter\"\r\n    [resetFilterOnHide]=\"resetFilterOnHide\"\r\n    [dropdownIcon]=\"dropdownIcon\"\r\n    [autoDisplayFirst]=\"autoDisplayFirst\"\r\n    [group]=\"group\"\r\n    [showClear]=\"showClear\"\r\n    [baseZIndex]=\"baseZIndex\"\r\n    [autoZIndex]=\"autoZIndex\"\r\n    [showTransitionOptions]=\"showTransitionOptions\"\r\n    [hideTransitionOptions]=\"hideTransitionOptions\"\r\n    [ariaFilterLabel]=\"ariaFilterLabel\"\r\n    [tooltip]=\"tooltip\"\r\n    [tooltipStyleClass]=\"tooltipStyleClass\"\r\n    [tooltipPosition]=\"tooltipPosition\"\r\n    [tooltipPositionStyle]=\"tooltipPositionStyle\"\r\n    (ngModelChange)=\"accessorOnChangeFn($event)\"\r\n    (onChange)=\"onChange.emit($event)\"\r\n    (onClick)=\"onClick.emit($event)\"\r\n    (onFocus)=\"onFocus.emit($event)\"\r\n    (onBlur)=\"onBlur.emit($event)\"\r\n    (onShow)=\"onShow.emit($event)\"\r\n    (onHide)=\"onHide.emit($event)\"\r\n  >\r\n    <ng-template *ngIf=\"itemTemplate\" let-item pTemplate=\"item\">\r\n      <ng-container *ngTemplateOutlet=\"itemTemplate; context: { $implicit: item }\"></ng-container>\r\n    </ng-template>\r\n    <ng-template *ngIf=\"groupTemplate\" let-group pTemplate=\"group\">\r\n      <ng-container *ngTemplateOutlet=\"groupTemplate; context: { $implicit: group }\"></ng-container>\r\n    </ng-template>\r\n    <ng-template *ngIf=\"selectedItemTemplate\" let-selectedItem pTemplate=\"selectedItem\">\r\n      <ng-container\r\n        *ngTemplateOutlet=\"selectedItemTemplate; context: { $implicit: selectedItem }\"\r\n      ></ng-container>\r\n    </ng-template>\r\n    <ng-template *ngIf=\"headerTemplate\" let-selectedItem pTemplate=\"header\">\r\n      <ng-container *ngTemplateOutlet=\"headerTemplate\"></ng-container>\r\n    </ng-template>\r\n    <ng-template *ngIf=\"emptyTemplate\" pTemplate=\"empty\">\r\n      <ng-container *ngTemplateOutlet=\"emptyTemplate\"></ng-container>\r\n    </ng-template>\r\n    <ng-template *ngIf=\"emptyfilterTemplate\" pTemplate=\"emptyfilter\">\r\n      <ng-container *ngTemplateOutlet=\"emptyfilterTemplate\"></ng-container>\r\n    </ng-template>\r\n    <ng-template *ngIf=\"footerTemplate\" pTemplate=\"footer\">\r\n      <ng-container *ngTemplateOutlet=\"footerTemplate\"></ng-container>\r\n    </ng-template>\r\n  </p-dropdown>\r\n\r\n  <label *ngIf=\"label\" [class.label-required]=\"required\">{{ label }}</label>\r\n</span>\r\n"
    },
    {
      "name": "ZyfraDropdownWithContentComponent",
      "id": "component-ZyfraDropdownWithContentComponent-4d81b3f381c00ddc41a5db65abec96c2",
      "file": "libs/components/src/lib/dropdown-with-content/zyfra-dropdown-with-content.component.ts",
      "changeDetection": "ChangeDetectionStrategy.OnPush",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [
        {
          "name": "ZyfraDropdownWithContentService"
        }
      ],
      "selector": "zyfra-dropdown-with-content",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./zyfra-dropdown-with-content.component.html"],
      "viewProviders": [],
      "inputsClass": [
        {
          "name": "appendTo",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 72,
          "type": "any"
        },
        {
          "name": "ariaFilterLabel",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 89,
          "type": "string"
        },
        {
          "name": "ariaLabelledBy",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 69,
          "type": "string"
        },
        {
          "name": "autoDisplayFirst",
          "defaultValue": "true",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 81,
          "type": "boolean"
        },
        {
          "name": "autofocus",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 77,
          "type": "boolean"
        },
        {
          "name": "autofocusFilter",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 78,
          "type": "boolean"
        },
        {
          "name": "autoZIndex",
          "defaultValue": "true",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 86,
          "type": "boolean"
        },
        {
          "name": "baseZIndex",
          "defaultValue": "0",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 85,
          "type": "number"
        },
        {
          "name": "dataKey",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 76,
          "type": "string"
        },
        {
          "name": "disabled",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 65,
          "type": "boolean"
        },
        {
          "name": "dropdownIcon",
          "defaultValue": "'zyfra-icon chevrons-down'",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 80,
          "type": "string"
        },
        {
          "name": "editable",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 70,
          "type": "boolean"
        },
        {
          "name": "emptyFilterMessage",
          "defaultValue": "'No results found'",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 68,
          "type": "string"
        },
        {
          "name": "emptyMessage",
          "defaultValue": "'No records found'",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 67,
          "type": "string"
        },
        {
          "name": "filter",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 48,
          "type": "boolean"
        },
        {
          "name": "filterBy",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 50,
          "type": "string"
        },
        {
          "name": "filterLocale",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 63,
          "type": "string"
        },
        {
          "name": "filterMatchMode",
          "defaultValue": "'contains'",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 51,
          "type": "\"contains\" | \"startsWith\" | \"endsWith\" | \"equals\" | \"notEquals\" | \"in\" | \"lt\" | \"lte\" | \"gt\" | \"gte\""
        },
        {
          "name": "filterPlaceholder",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 62,
          "type": "string"
        },
        {
          "name": "filterValue",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 49,
          "type": "string"
        },
        {
          "name": "group",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 82,
          "type": "boolean"
        },
        {
          "name": "groupTemplateClass",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 83,
          "type": "string"
        },
        {
          "name": "hideTransitionOptions",
          "defaultValue": "'.1s linear'",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 88,
          "type": "string"
        },
        {
          "name": "inputId",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 75,
          "type": "string"
        },
        {
          "name": "itemSize",
          "defaultValue": "30",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 94,
          "type": "number"
        },
        {
          "name": "label",
          "defaultValue": "''",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 95,
          "type": "string"
        },
        {
          "name": "maxlength",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 71,
          "type": "number"
        },
        {
          "name": "mini",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 97,
          "type": "boolean"
        },
        {
          "name": "name",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 42,
          "type": "string"
        },
        {
          "name": "optionDisabled",
          "defaultValue": "'disabled'",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 39,
          "type": "string"
        },
        {
          "name": "optionGroupChildren",
          "defaultValue": "'items'",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 41,
          "type": "string"
        },
        {
          "name": "optionGroupLabel",
          "defaultValue": "'label'",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 40,
          "type": "string"
        },
        {
          "name": "optionLabel",
          "defaultValue": "'label'",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 38,
          "type": "string"
        },
        {
          "name": "options",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 36,
          "type": "T[]"
        },
        {
          "name": "optionValue",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 37,
          "type": "string"
        },
        {
          "name": "panelStyle",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 45,
          "type": "string"
        },
        {
          "name": "panelStyleClass",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 47,
          "type": "string"
        },
        {
          "name": "placeholder",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 74,
          "type": "string"
        },
        {
          "name": "readonly",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 66,
          "type": "boolean"
        },
        {
          "name": "required",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 64,
          "type": "boolean"
        },
        {
          "name": "resetFilterOnHide",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 79,
          "type": "boolean"
        },
        {
          "name": "scrollHeight",
          "defaultValue": "'200px'",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 43,
          "type": "string"
        },
        {
          "name": "showClear",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 84,
          "type": "boolean"
        },
        {
          "name": "showTransitionOptions",
          "defaultValue": "'.12s cubic-bezier(0, 0, 0.2, 1)'",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 87,
          "type": "string"
        },
        {
          "name": "style",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 44,
          "type": "string"
        },
        {
          "name": "styleClass",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 46,
          "type": "string"
        },
        {
          "name": "tabindex",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 73,
          "type": "number"
        },
        {
          "name": "tooltip",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 90,
          "type": "any"
        },
        {
          "name": "tooltipPosition",
          "defaultValue": "'top'",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 92,
          "type": "string"
        },
        {
          "name": "tooltipPositionStyle",
          "defaultValue": "'absolute'",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 93,
          "type": "string"
        },
        {
          "name": "tooltipStyleClass",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 91,
          "type": "string"
        },
        {
          "name": "virtualScroll",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 96,
          "type": "boolean"
        }
      ],
      "outputsClass": [
        {
          "name": "onBlur",
          "defaultValue": "new EventEmitter<FocusEvent>()",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 102,
          "type": "EventEmitter"
        },
        {
          "name": "onChange",
          "defaultValue": "new EventEmitter<DropdownChangeEvent<unknown>>()",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 99,
          "type": "EventEmitter"
        },
        {
          "name": "onClick",
          "defaultValue": "new EventEmitter<PointerEvent>()",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 100,
          "type": "EventEmitter"
        },
        {
          "name": "onFocus",
          "defaultValue": "new EventEmitter<FocusEvent>()",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 101,
          "type": "EventEmitter"
        },
        {
          "name": "onHide",
          "defaultValue": "new EventEmitter<AnimationEvent>()",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 104,
          "type": "EventEmitter"
        },
        {
          "name": "onShow",
          "defaultValue": "new EventEmitter<AnimationEvent>()",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 103,
          "type": "EventEmitter"
        }
      ],
      "propertiesClass": [
        {
          "name": "destroy$",
          "defaultValue": "new Subject()",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "optional": false,
          "description": "",
          "line": 119,
          "modifierKind": [121]
        },
        {
          "name": "dropdown",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Dropdown",
          "optional": false,
          "description": "",
          "line": 106,
          "decorators": [
            {
              "name": "ViewChild",
              "stringifiedArguments": "'dropdown'"
            }
          ]
        },
        {
          "name": "emptyfilterTemplate",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "TemplateRef<>",
          "optional": false,
          "description": "",
          "line": 114
        },
        {
          "name": "emptyTemplate",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "TemplateRef<>",
          "optional": false,
          "description": "",
          "line": 113
        },
        {
          "name": "footerTemplate",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "TemplateRef<>",
          "optional": false,
          "description": "",
          "line": 115
        },
        {
          "name": "groupTemplate",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "TemplateRef<>",
          "optional": false,
          "description": "",
          "line": 110
        },
        {
          "name": "headerTemplate",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "TemplateRef<>",
          "optional": false,
          "description": "",
          "line": 112
        },
        {
          "name": "isOpen",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "boolean",
          "optional": false,
          "description": "",
          "line": 117
        },
        {
          "name": "itemTemplate",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "TemplateRef<>",
          "optional": false,
          "description": "",
          "line": 109
        },
        {
          "name": "selectedItemTemplate",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "TemplateRef<>",
          "optional": false,
          "description": "",
          "line": 111
        },
        {
          "name": "templates",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "QueryList<ZyfraDropdownTemplateDirective>",
          "optional": false,
          "description": "",
          "line": 107,
          "decorators": [
            {
              "name": "ContentChildren",
              "stringifiedArguments": "ZyfraDropdownTemplateDirective"
            }
          ]
        },
        {
          "name": "formControl",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "FormControl",
          "optional": false,
          "description": "",
          "line": 7,
          "modifierKind": [123, 143],
          "inheritance": {
            "file": "WrappedFormComponent"
          }
        },
        {
          "name": "injector",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Injector",
          "optional": false,
          "description": "",
          "line": 9,
          "modifierKind": [123, 143],
          "inheritance": {
            "file": "WrappedFormComponent"
          }
        },
        {
          "name": "ngControl",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "NgControl",
          "optional": false,
          "description": "",
          "line": 9,
          "decorators": [
            {
              "name": "Optional",
              "stringifiedArguments": ""
            },
            {
              "name": "Self",
              "stringifiedArguments": ""
            }
          ],
          "modifierKind": [123, 143],
          "inheritance": {
            "file": "WrappedFormComponent"
          }
        }
      ],
      "methodsClass": [
        {
          "name": "handleOnHide",
          "args": [
            {
              "name": "e",
              "type": "AnimationEvent",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 175,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [123],
          "jsdoctags": [
            {
              "name": "e",
              "type": "AnimationEvent",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "handleOnShow",
          "args": [
            {
              "name": "e",
              "type": "AnimationEvent",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 169,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [123],
          "jsdoctags": [
            {
              "name": "e",
              "type": "AnimationEvent",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "ngAfterContentInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 136,
          "deprecated": false,
          "deprecationMessage": ""
        },
        {
          "name": "ngOnDestroy",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 164,
          "deprecated": false,
          "deprecationMessage": ""
        },
        {
          "name": "setDisabledState",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 180,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [123, 157],
          "inheritance": {
            "file": "WrappedFormComponent"
          }
        }
      ],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import {\r\n  AfterContentInit,\r\n  ChangeDetectionStrategy,\r\n  ChangeDetectorRef,\r\n  Component,\r\n  ContentChildren,\r\n  EventEmitter,\r\n  Injector,\r\n  Input,\r\n  OnDestroy,\r\n  Output,\r\n  QueryList,\r\n  TemplateRef,\r\n  ViewChild,\r\n} from '@angular/core';\r\nimport { AnimationEvent } from '@angular/animations';\r\nimport { ControlValueAccessor, NgControl } from '@angular/forms';\r\nimport { Dropdown } from 'primeng/dropdown';\r\nimport { WrappedFormComponent } from '../@core/value-accessor/wrapped-form.component';\r\nimport { ZyfraDropdownWithContentService } from './zyfra-dropdown-with-content.service';\r\nimport { ZyfraDropdownTemplateDirective } from '../dropdown/zyfra-dropdown-template.directive';\r\nimport { DropdownChangeEvent } from '../dropdown/zyfra-dropdown.component';\r\nimport { takeUntil } from 'rxjs/operators';\r\nimport { Subject } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'zyfra-dropdown-with-content',\r\n  templateUrl: './zyfra-dropdown-with-content.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  providers: [ZyfraDropdownWithContentService],\r\n})\r\nexport class ZyfraDropdownWithContentComponent<T = unknown>\r\n  extends WrappedFormComponent\r\n  implements ControlValueAccessor, AfterContentInit, OnDestroy\r\n{\r\n  @Input() options: T[];\r\n  @Input() optionValue: string;\r\n  @Input() optionLabel = 'label';\r\n  @Input() optionDisabled = 'disabled';\r\n  @Input() optionGroupLabel = 'label';\r\n  @Input() optionGroupChildren = 'items';\r\n  @Input() name: string;\r\n  @Input() scrollHeight = '200px';\r\n  @Input() style: string;\r\n  @Input() panelStyle: string;\r\n  @Input() styleClass: string;\r\n  @Input() panelStyleClass: string;\r\n  @Input() filter: boolean;\r\n  @Input() filterValue: string;\r\n  @Input() filterBy: string;\r\n  @Input() filterMatchMode:\r\n    | 'contains'\r\n    | 'startsWith'\r\n    | 'endsWith'\r\n    | 'equals'\r\n    | 'notEquals'\r\n    | 'in'\r\n    | 'lt'\r\n    | 'lte'\r\n    | 'gt'\r\n    | 'gte' = 'contains';\r\n  @Input() filterPlaceholder: string;\r\n  @Input() filterLocale: string;\r\n  @Input() required: boolean;\r\n  @Input() disabled: boolean; // TODO(rustam) remove this prop use control disable\r\n  @Input() readonly: boolean;\r\n  @Input() emptyMessage = 'No records found';\r\n  @Input() emptyFilterMessage = 'No results found';\r\n  @Input() ariaLabelledBy: string;\r\n  @Input() editable: boolean;\r\n  @Input() maxlength: number;\r\n  @Input() appendTo: any;\r\n  @Input() tabindex: number;\r\n  @Input() placeholder: string;\r\n  @Input() inputId: string;\r\n  @Input() dataKey: string;\r\n  @Input() autofocus: boolean;\r\n  @Input() autofocusFilter: boolean;\r\n  @Input() resetFilterOnHide: boolean;\r\n  @Input() dropdownIcon = 'zyfra-icon chevrons-down';\r\n  @Input() autoDisplayFirst = true;\r\n  @Input() group: boolean;\r\n  @Input() groupTemplateClass: string;\r\n  @Input() showClear: boolean;\r\n  @Input() baseZIndex = 0;\r\n  @Input() autoZIndex = true;\r\n  @Input() showTransitionOptions = '.12s cubic-bezier(0, 0, 0.2, 1)';\r\n  @Input() hideTransitionOptions = '.1s linear';\r\n  @Input() ariaFilterLabel: string;\r\n  @Input() tooltip: any;\r\n  @Input() tooltipStyleClass: string;\r\n  @Input() tooltipPosition = 'top';\r\n  @Input() tooltipPositionStyle = 'absolute';\r\n  @Input() itemSize = 30;\r\n  @Input() label = '';\r\n  @Input() virtualScroll: boolean;\r\n  @Input() mini: boolean;\r\n\r\n  @Output() onChange = new EventEmitter<DropdownChangeEvent<unknown>>();\r\n  @Output() onClick = new EventEmitter<PointerEvent>();\r\n  @Output() onFocus = new EventEmitter<FocusEvent>();\r\n  @Output() onBlur = new EventEmitter<FocusEvent>();\r\n  @Output() onShow = new EventEmitter<AnimationEvent>();\r\n  @Output() onHide = new EventEmitter<AnimationEvent>();\r\n\r\n  @ViewChild('dropdown') dropdown: Dropdown;\r\n  @ContentChildren(ZyfraDropdownTemplateDirective) templates: QueryList<ZyfraDropdownTemplateDirective>;\r\n\r\n  itemTemplate: TemplateRef<unknown>;\r\n  groupTemplate: TemplateRef<unknown>;\r\n  selectedItemTemplate: TemplateRef<unknown>;\r\n  headerTemplate: TemplateRef<unknown>;\r\n  emptyTemplate: TemplateRef<unknown>;\r\n  emptyfilterTemplate: TemplateRef<unknown>;\r\n  footerTemplate: TemplateRef<unknown>;\r\n\r\n  isOpen: boolean;\r\n\r\n  private destroy$ = new Subject();\r\n\r\n  constructor(\r\n    injector: Injector,\r\n    ngControl: NgControl,\r\n    cdr: ChangeDetectorRef,\r\n    private dropdownService: ZyfraDropdownWithContentService\r\n  ) {\r\n    super(injector, ngControl);\r\n\r\n    ngControl.statusChanges.pipe(takeUntil(this.destroy$)).subscribe(change => {\r\n      if (['VALID', 'INVALID'].includes(change)) {\r\n        cdr.detectChanges();\r\n      }\r\n    });\r\n  }\r\n\r\n  ngAfterContentInit(): void {\r\n    this.templates.forEach(item => {\r\n      switch (item.getType()) {\r\n        case 'item':\r\n          this.itemTemplate = item.template;\r\n          break;\r\n        case 'group':\r\n          this.groupTemplate = item.template;\r\n          break;\r\n        case 'selectedItem':\r\n          this.selectedItemTemplate = item.template;\r\n          break;\r\n        case 'header':\r\n          this.headerTemplate = item.template;\r\n          break;\r\n        case 'empty':\r\n          this.emptyTemplate = item.template;\r\n          break;\r\n        case 'emptyfilter':\r\n          this.emptyfilterTemplate = item.template;\r\n          break;\r\n        case 'footer':\r\n          this.footerTemplate = item.template;\r\n          break;\r\n      }\r\n    });\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.destroy$.next();\r\n    this.destroy$.complete();\r\n  }\r\n\r\n  public handleOnShow(e: AnimationEvent): void {\r\n    this.isOpen = true;\r\n    this.dropdownService.setDropdownPanelPosition();\r\n    this.onShow.emit(e);\r\n  }\r\n\r\n  public handleOnHide(e: AnimationEvent): void {\r\n    this.isOpen = false;\r\n    this.onHide.emit(e);\r\n  }\r\n\r\n  public override setDisabledState(): void {\r\n    // do nothing, because have `disabled` input\r\n  }\r\n}\r\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "deprecated": false,
        "deprecationMessage": "",
        "args": [
          {
            "name": "injector",
            "type": "Injector",
            "deprecated": false,
            "deprecationMessage": ""
          },
          {
            "name": "ngControl",
            "type": "NgControl",
            "deprecated": false,
            "deprecationMessage": ""
          },
          {
            "name": "cdr",
            "type": "ChangeDetectorRef",
            "deprecated": false,
            "deprecationMessage": ""
          },
          {
            "name": "dropdownService",
            "type": "ZyfraDropdownWithContentService",
            "deprecated": false,
            "deprecationMessage": ""
          }
        ],
        "line": 119,
        "jsdoctags": [
          {
            "name": "injector",
            "type": "Injector",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          },
          {
            "name": "ngControl",
            "type": "NgControl",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          },
          {
            "name": "cdr",
            "type": "ChangeDetectorRef",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          },
          {
            "name": "dropdownService",
            "type": "ZyfraDropdownWithContentService",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      "extends": "WrappedFormComponent",
      "implements": ["ControlValueAccessor", "AfterContentInit", "OnDestroy"],
      "templateData": "<span\r\n  class=\"zyfra-dropdown-with-content\"\r\n  [class.zyfra-dropdown-with-content_mini]=\"mini\"\r\n  [class.zyfra-dropdown-with-content_disabled]=\"disabled\"\r\n  [class.zyfra-dropdown-with-content_empty]=\"!dropdown.filled\"\r\n  [class.zyfra-dropdown-with-content_placeholder]=\"placeholder\"\r\n  [class.p-float-label]=\"label\"\r\n  [style]=\"style\"\r\n>\r\n  <div class=\"zyfra-dropdown-with-content__left\">\r\n    <label\r\n      *ngIf=\"label\"\r\n      [class.label-required]=\"required\"\r\n      [class.label-top]=\"isOpen || dropdown.focused || dropdown.filled\"\r\n      >{{ label }}</label\r\n    >\r\n    <ng-content select=\"[left]\"></ng-content>\r\n  </div>\r\n\r\n  <p-dropdown\r\n    #dropdown\r\n    [formControl]=\"$any(ngControl.control)\"\r\n    [options]=\"options\"\r\n    [optionLabel]=\"optionLabel\"\r\n    [optionValue]=\"optionValue\"\r\n    [optionDisabled]=\"optionDisabled\"\r\n    [optionGroupLabel]=\"optionGroupLabel\"\r\n    [optionGroupChildren]=\"optionGroupChildren\"\r\n    [name]=\"name\"\r\n    [scrollHeight]=\"scrollHeight\"\r\n    [virtualScroll]=\"virtualScroll\"\r\n    [panelStyle]=\"panelStyle\"\r\n    [styleClass]=\"styleClass\"\r\n    [panelStyleClass]=\"panelStyleClass\"\r\n    [filter]=\"filter\"\r\n    [filterValue]=\"filterValue\"\r\n    [filterBy]=\"filterBy\"\r\n    [filterMatchMode]=\"filterMatchMode\"\r\n    [filterPlaceholder]=\"filterPlaceholder\"\r\n    [filterLocale]=\"filterLocale\"\r\n    [required]=\"required\"\r\n    [attr.disabled]=\"disabled\"\r\n    [readonly]=\"readonly\"\r\n    [emptyMessage]=\"emptyMessage\"\r\n    [emptyFilterMessage]=\"emptyFilterMessage\"\r\n    [ariaLabelledBy]=\"ariaLabelledBy\"\r\n    [editable]=\"editable\"\r\n    [maxlength]=\"maxlength\"\r\n    [appendTo]=\"appendTo\"\r\n    [tabindex]=\"tabindex\"\r\n    [placeholder]=\"placeholder\"\r\n    [inputId]=\"inputId\"\r\n    [dataKey]=\"dataKey\"\r\n    [autofocus]=\"autofocus\"\r\n    [autofocusFilter]=\"autofocusFilter\"\r\n    [resetFilterOnHide]=\"resetFilterOnHide\"\r\n    [dropdownIcon]=\"dropdownIcon\"\r\n    [autoDisplayFirst]=\"autoDisplayFirst\"\r\n    [group]=\"group\"\r\n    [showClear]=\"showClear\"\r\n    [baseZIndex]=\"baseZIndex\"\r\n    [autoZIndex]=\"autoZIndex\"\r\n    [showTransitionOptions]=\"showTransitionOptions\"\r\n    [hideTransitionOptions]=\"hideTransitionOptions\"\r\n    [ariaFilterLabel]=\"ariaFilterLabel\"\r\n    [tooltip]=\"tooltip\"\r\n    [tooltipStyleClass]=\"tooltipStyleClass\"\r\n    [tooltipPosition]=\"tooltipPosition\"\r\n    [tooltipPositionStyle]=\"tooltipPositionStyle\"\r\n    (ngModelChange)=\"accessorOnChangeFn($event)\"\r\n    (onChange)=\"onChange.emit($event)\"\r\n    (onClick)=\"onClick.emit($event)\"\r\n    (onFocus)=\"onFocus.emit($event)\"\r\n    (onBlur)=\"onBlur.emit($event)\"\r\n    (onShow)=\"handleOnShow($event)\"\r\n    (onHide)=\"handleOnHide($event)\"\r\n  >\r\n    <ng-template *ngIf=\"itemTemplate\" let-item pTemplate=\"item\">\r\n      <ng-container *ngTemplateOutlet=\"itemTemplate; context: { $implicit: item }\"></ng-container>\r\n    </ng-template>\r\n    <ng-template *ngIf=\"groupTemplate\" let-group pTemplate=\"group\">\r\n      <ng-container *ngTemplateOutlet=\"groupTemplate; context: { $implicit: group }\"></ng-container>\r\n    </ng-template>\r\n    <ng-template *ngIf=\"selectedItemTemplate\" let-selectedItem pTemplate=\"selectedItem\">\r\n      <ng-container\r\n        *ngTemplateOutlet=\"selectedItemTemplate; context: { $implicit: selectedItem }\"\r\n      ></ng-container>\r\n    </ng-template>\r\n    <ng-template *ngIf=\"headerTemplate\" let-selectedItem pTemplate=\"header\">\r\n      <ng-container *ngTemplateOutlet=\"headerTemplate\"></ng-container>\r\n    </ng-template>\r\n    <ng-template *ngIf=\"emptyTemplate\" pTemplate=\"empty\">\r\n      <ng-container *ngTemplateOutlet=\"emptyTemplate\"></ng-container>\r\n    </ng-template>\r\n    <ng-template *ngIf=\"emptyfilterTemplate\" pTemplate=\"emptyfilter\">\r\n      <ng-container *ngTemplateOutlet=\"emptyfilterTemplate\"></ng-container>\r\n    </ng-template>\r\n    <ng-template *ngIf=\"footerTemplate\" pTemplate=\"footer\">\r\n      <ng-container *ngTemplateOutlet=\"footerTemplate\"></ng-container>\r\n    </ng-template>\r\n  </p-dropdown>\r\n\r\n  <div class=\"zyfra-dropdown-with-content__right\">\r\n    <ng-content select=\"[right]\"></ng-content>\r\n  </div>\r\n</span>\r\n"
    },
    {
      "name": "ZyfraDynamicDialogComponent",
      "id": "component-ZyfraDynamicDialogComponent-9479d5936c0efdb0bc9494304e5a66b6",
      "file": "libs/components/src/lib/dynamic-dialog/zyfra-dynamic-dialog.component.stories.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [
        {
          "name": "ZyfraDynamicDialogService"
        }
      ],
      "selector": "storybook-dynamic-dialog",
      "styleUrls": [],
      "styles": [],
      "template": "<zyfra-button (click)=\"open()\"\n              label=\"open dialog\"\n              icon=\"pi pi-check\"></zyfra-button>\n",
      "templateUrl": [],
      "viewProviders": [],
      "inputsClass": [
        {
          "name": "autoZIndex",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 41,
          "type": "boolean"
        },
        {
          "name": "baseZIndex",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 38,
          "type": "number"
        },
        {
          "name": "closable",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 62,
          "type": "boolean"
        },
        {
          "name": "closeOnEscape",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 35,
          "type": "boolean"
        },
        {
          "name": "contentStyle",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 53,
          "type": "string"
        },
        {
          "name": "data",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 20,
          "type": ""
        },
        {
          "name": "dismissableMask",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 44,
          "type": "boolean"
        },
        {
          "name": "footer",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 26,
          "type": "string"
        },
        {
          "name": "header",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 23,
          "type": "string"
        },
        {
          "name": "height",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 32,
          "type": "string"
        },
        {
          "name": "rtl",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 47,
          "type": "boolean"
        },
        {
          "name": "showHeader",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 65,
          "type": "boolean"
        },
        {
          "name": "style",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 50,
          "type": "string"
        },
        {
          "name": "styleClass",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 56,
          "type": "string"
        },
        {
          "name": "transitionOptions",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 59,
          "type": "string"
        },
        {
          "name": "width",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 29,
          "type": "string"
        }
      ],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "options",
          "defaultValue": "{}",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "ZyfraDynamicDialogConfig",
          "optional": false,
          "description": "",
          "line": 69,
          "modifierKind": [123]
        },
        {
          "name": "ref",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "ZyfraDynamicDialogRef",
          "optional": false,
          "description": "",
          "line": 71,
          "modifierKind": [121]
        }
      ],
      "methodsClass": [
        {
          "name": "ngOnDestroy",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 81,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [123]
        },
        {
          "name": "open",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 75,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [123]
        }
      ],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import { Component, Input, OnDestroy } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { moduleMetadata, Story, Meta } from '@storybook/angular';\r\nimport { ZyfraDynamicDialogModule, ZyfraDynamicDialogService, ZyfraDynamicDialogRef, ZyfraDynamicDialogConfig } from '.';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { ZyfraButtonModule } from '../button/zyfra-button.module';\r\n\r\n@Component({\r\n  selector: 'storybook-dynamic-dialog',\r\n  template: `\r\n  <zyfra-button (click)=\"open()\"\r\n                label=\"open dialog\"\r\n                icon=\"pi pi-check\"></zyfra-button>\r\n  `,\r\n  providers: [ZyfraDynamicDialogService]\r\n})\r\nclass ZyfraDynamicDialogComponent implements OnDestroy {\r\n\r\n  @Input() set data(data: unknown) {\r\n    this.options.data = data;\r\n  }\r\n  @Input() set header(header: string) {\r\n    this.options.header = header;\r\n  }\r\n  @Input() set footer(footer: string) {\r\n    this.options.footer = footer;\r\n  }\r\n  @Input() set width(width: string) {\r\n    this.options.width = width;\r\n  }\r\n  @Input() set height(height: string) {\r\n    this.options.height = height;\r\n  }\r\n  @Input() set closeOnEscape(closeOnEscape: boolean) {\r\n    this.options.closeOnEscape = closeOnEscape;\r\n  }\r\n  @Input() set baseZIndex(baseZIndex: number) {\r\n    this.options.baseZIndex = baseZIndex;\r\n  }\r\n  @Input() set autoZIndex(autoZIndex: boolean) {\r\n    this.options.autoZIndex = autoZIndex;\r\n  }\r\n  @Input() set dismissableMask(dismissableMask: boolean) {\r\n    this.options.dismissableMask = dismissableMask;\r\n  }\r\n  @Input() set rtl(rtl: boolean) {\r\n    this.options.rtl = rtl;\r\n  }\r\n  @Input() set style(style: string) {\r\n    this.options.style = style;\r\n  }\r\n  @Input() set contentStyle(contentStyle: string) {\r\n    this.options.contentStyle = contentStyle;\r\n  }\r\n  @Input() set styleClass(styleClass: string) {\r\n    this.options.styleClass = styleClass;\r\n  }\r\n  @Input() set transitionOptions(transitionOptions: string) {\r\n    this.options.transitionOptions = transitionOptions;\r\n  }\r\n  @Input() set closable(closable: boolean) {\r\n    this.options.closable = closable;\r\n  }\r\n  @Input() set showHeader(showHeader: boolean) {\r\n    this.options.showHeader = showHeader;\r\n  }\r\n\r\n  public options: ZyfraDynamicDialogConfig = {};\r\n\r\n  private ref: ZyfraDynamicDialogRef;\r\n\r\n  constructor(private dynamicDialogService: ZyfraDynamicDialogService) { }\r\n\r\n  public open(): void {\r\n    this.ref = this.dynamicDialogService.open(\r\n      ExampleDynamicDialogComponent, this.options\r\n    );\r\n  }\r\n\r\n  public ngOnDestroy(): void {\r\n    if (this.ref) {\r\n      this.ref.close();\r\n    }\r\n  }\r\n}\r\n\r\n@Component({\r\n  template: `\r\n  <div>\r\n    user component\r\n  </div>`\r\n})\r\nclass ExampleDynamicDialogComponent { }\r\n\r\nexport default {\r\n  title: 'Dialogs/DynamicDialog',\r\n  component: ZyfraDynamicDialogComponent,\r\n  decorators: [\r\n    moduleMetadata({\r\n      declarations: [\r\n        ZyfraDynamicDialogComponent,\r\n        ExampleDynamicDialogComponent\r\n      ],\r\n      imports: [\r\n        BrowserModule,\r\n        BrowserAnimationsModule,\r\n        CommonModule,\r\n        ZyfraButtonModule,\r\n        ZyfraDynamicDialogModule\r\n      ],\r\n    })\r\n  ],\r\n  parameters: {\r\n    docs: {\r\n      page: require('./zyfra-dynamic-dialog.story.doc.mdx').default,\r\n    },\r\n  },\r\n} as Meta;\r\n\r\nconst Template: Story<ZyfraDynamicDialogComponent> = (args: ZyfraDynamicDialogComponent) => ({\r\n  component: ZyfraDynamicDialogComponent,\r\n  props: args,\r\n});\r\n\r\n\r\nexport const Simple = Template.bind({});\r\nSimple.args = {\r\n  data: 'Some data',\r\n  header: \"Header\",\r\n  footer: \"Footer\",\r\n  width: \"500px\",\r\n  height: \"200px\",\r\n  closeOnEscape: false,\r\n  baseZIndex: 0,\r\n  autoZIndex: false,\r\n  dismissableMask: false,\r\n  rtl: false,\r\n  style: '',\r\n  contentStyle: '',\r\n  styleClass: '',\r\n  transitionOptions: '400ms cubic-bezier(0.25, 0.8, 0.25, 1)',\r\n  closable: true,\r\n  showHeader: true\r\n};\r\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "deprecated": false,
        "deprecationMessage": "",
        "args": [
          {
            "name": "dynamicDialogService",
            "type": "ZyfraDynamicDialogService",
            "deprecated": false,
            "deprecationMessage": ""
          }
        ],
        "line": 71,
        "jsdoctags": [
          {
            "name": "dynamicDialogService",
            "type": "ZyfraDynamicDialogService",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      "implements": ["OnDestroy"],
      "accessors": {
        "data": {
          "name": "data",
          "setSignature": {
            "name": "data",
            "type": "void",
            "deprecated": false,
            "deprecationMessage": "",
            "args": [
              {
                "name": "data",
                "type": "",
                "deprecated": false,
                "deprecationMessage": ""
              }
            ],
            "returnType": "void",
            "line": 20,
            "jsdoctags": [
              {
                "name": "data",
                "type": "",
                "deprecated": false,
                "deprecationMessage": "",
                "tagName": {
                  "text": "param"
                }
              }
            ]
          }
        },
        "header": {
          "name": "header",
          "setSignature": {
            "name": "header",
            "type": "void",
            "deprecated": false,
            "deprecationMessage": "",
            "args": [
              {
                "name": "header",
                "type": "string",
                "deprecated": false,
                "deprecationMessage": ""
              }
            ],
            "returnType": "void",
            "line": 23,
            "jsdoctags": [
              {
                "name": "header",
                "type": "string",
                "deprecated": false,
                "deprecationMessage": "",
                "tagName": {
                  "text": "param"
                }
              }
            ]
          }
        },
        "footer": {
          "name": "footer",
          "setSignature": {
            "name": "footer",
            "type": "void",
            "deprecated": false,
            "deprecationMessage": "",
            "args": [
              {
                "name": "footer",
                "type": "string",
                "deprecated": false,
                "deprecationMessage": ""
              }
            ],
            "returnType": "void",
            "line": 26,
            "jsdoctags": [
              {
                "name": "footer",
                "type": "string",
                "deprecated": false,
                "deprecationMessage": "",
                "tagName": {
                  "text": "param"
                }
              }
            ]
          }
        },
        "width": {
          "name": "width",
          "setSignature": {
            "name": "width",
            "type": "void",
            "deprecated": false,
            "deprecationMessage": "",
            "args": [
              {
                "name": "width",
                "type": "string",
                "deprecated": false,
                "deprecationMessage": ""
              }
            ],
            "returnType": "void",
            "line": 29,
            "jsdoctags": [
              {
                "name": "width",
                "type": "string",
                "deprecated": false,
                "deprecationMessage": "",
                "tagName": {
                  "text": "param"
                }
              }
            ]
          }
        },
        "height": {
          "name": "height",
          "setSignature": {
            "name": "height",
            "type": "void",
            "deprecated": false,
            "deprecationMessage": "",
            "args": [
              {
                "name": "height",
                "type": "string",
                "deprecated": false,
                "deprecationMessage": ""
              }
            ],
            "returnType": "void",
            "line": 32,
            "jsdoctags": [
              {
                "name": "height",
                "type": "string",
                "deprecated": false,
                "deprecationMessage": "",
                "tagName": {
                  "text": "param"
                }
              }
            ]
          }
        },
        "closeOnEscape": {
          "name": "closeOnEscape",
          "setSignature": {
            "name": "closeOnEscape",
            "type": "void",
            "deprecated": false,
            "deprecationMessage": "",
            "args": [
              {
                "name": "closeOnEscape",
                "type": "boolean",
                "deprecated": false,
                "deprecationMessage": ""
              }
            ],
            "returnType": "void",
            "line": 35,
            "jsdoctags": [
              {
                "name": "closeOnEscape",
                "type": "boolean",
                "deprecated": false,
                "deprecationMessage": "",
                "tagName": {
                  "text": "param"
                }
              }
            ]
          }
        },
        "baseZIndex": {
          "name": "baseZIndex",
          "setSignature": {
            "name": "baseZIndex",
            "type": "void",
            "deprecated": false,
            "deprecationMessage": "",
            "args": [
              {
                "name": "baseZIndex",
                "type": "number",
                "deprecated": false,
                "deprecationMessage": ""
              }
            ],
            "returnType": "void",
            "line": 38,
            "jsdoctags": [
              {
                "name": "baseZIndex",
                "type": "number",
                "deprecated": false,
                "deprecationMessage": "",
                "tagName": {
                  "text": "param"
                }
              }
            ]
          }
        },
        "autoZIndex": {
          "name": "autoZIndex",
          "setSignature": {
            "name": "autoZIndex",
            "type": "void",
            "deprecated": false,
            "deprecationMessage": "",
            "args": [
              {
                "name": "autoZIndex",
                "type": "boolean",
                "deprecated": false,
                "deprecationMessage": ""
              }
            ],
            "returnType": "void",
            "line": 41,
            "jsdoctags": [
              {
                "name": "autoZIndex",
                "type": "boolean",
                "deprecated": false,
                "deprecationMessage": "",
                "tagName": {
                  "text": "param"
                }
              }
            ]
          }
        },
        "dismissableMask": {
          "name": "dismissableMask",
          "setSignature": {
            "name": "dismissableMask",
            "type": "void",
            "deprecated": false,
            "deprecationMessage": "",
            "args": [
              {
                "name": "dismissableMask",
                "type": "boolean",
                "deprecated": false,
                "deprecationMessage": ""
              }
            ],
            "returnType": "void",
            "line": 44,
            "jsdoctags": [
              {
                "name": "dismissableMask",
                "type": "boolean",
                "deprecated": false,
                "deprecationMessage": "",
                "tagName": {
                  "text": "param"
                }
              }
            ]
          }
        },
        "rtl": {
          "name": "rtl",
          "setSignature": {
            "name": "rtl",
            "type": "void",
            "deprecated": false,
            "deprecationMessage": "",
            "args": [
              {
                "name": "rtl",
                "type": "boolean",
                "deprecated": false,
                "deprecationMessage": ""
              }
            ],
            "returnType": "void",
            "line": 47,
            "jsdoctags": [
              {
                "name": "rtl",
                "type": "boolean",
                "deprecated": false,
                "deprecationMessage": "",
                "tagName": {
                  "text": "param"
                }
              }
            ]
          }
        },
        "style": {
          "name": "style",
          "setSignature": {
            "name": "style",
            "type": "void",
            "deprecated": false,
            "deprecationMessage": "",
            "args": [
              {
                "name": "style",
                "type": "string",
                "deprecated": false,
                "deprecationMessage": ""
              }
            ],
            "returnType": "void",
            "line": 50,
            "jsdoctags": [
              {
                "name": "style",
                "type": "string",
                "deprecated": false,
                "deprecationMessage": "",
                "tagName": {
                  "text": "param"
                }
              }
            ]
          }
        },
        "contentStyle": {
          "name": "contentStyle",
          "setSignature": {
            "name": "contentStyle",
            "type": "void",
            "deprecated": false,
            "deprecationMessage": "",
            "args": [
              {
                "name": "contentStyle",
                "type": "string",
                "deprecated": false,
                "deprecationMessage": ""
              }
            ],
            "returnType": "void",
            "line": 53,
            "jsdoctags": [
              {
                "name": "contentStyle",
                "type": "string",
                "deprecated": false,
                "deprecationMessage": "",
                "tagName": {
                  "text": "param"
                }
              }
            ]
          }
        },
        "styleClass": {
          "name": "styleClass",
          "setSignature": {
            "name": "styleClass",
            "type": "void",
            "deprecated": false,
            "deprecationMessage": "",
            "args": [
              {
                "name": "styleClass",
                "type": "string",
                "deprecated": false,
                "deprecationMessage": ""
              }
            ],
            "returnType": "void",
            "line": 56,
            "jsdoctags": [
              {
                "name": "styleClass",
                "type": "string",
                "deprecated": false,
                "deprecationMessage": "",
                "tagName": {
                  "text": "param"
                }
              }
            ]
          }
        },
        "transitionOptions": {
          "name": "transitionOptions",
          "setSignature": {
            "name": "transitionOptions",
            "type": "void",
            "deprecated": false,
            "deprecationMessage": "",
            "args": [
              {
                "name": "transitionOptions",
                "type": "string",
                "deprecated": false,
                "deprecationMessage": ""
              }
            ],
            "returnType": "void",
            "line": 59,
            "jsdoctags": [
              {
                "name": "transitionOptions",
                "type": "string",
                "deprecated": false,
                "deprecationMessage": "",
                "tagName": {
                  "text": "param"
                }
              }
            ]
          }
        },
        "closable": {
          "name": "closable",
          "setSignature": {
            "name": "closable",
            "type": "void",
            "deprecated": false,
            "deprecationMessage": "",
            "args": [
              {
                "name": "closable",
                "type": "boolean",
                "deprecated": false,
                "deprecationMessage": ""
              }
            ],
            "returnType": "void",
            "line": 62,
            "jsdoctags": [
              {
                "name": "closable",
                "type": "boolean",
                "deprecated": false,
                "deprecationMessage": "",
                "tagName": {
                  "text": "param"
                }
              }
            ]
          }
        },
        "showHeader": {
          "name": "showHeader",
          "setSignature": {
            "name": "showHeader",
            "type": "void",
            "deprecated": false,
            "deprecationMessage": "",
            "args": [
              {
                "name": "showHeader",
                "type": "boolean",
                "deprecated": false,
                "deprecationMessage": ""
              }
            ],
            "returnType": "void",
            "line": 65,
            "jsdoctags": [
              {
                "name": "showHeader",
                "type": "boolean",
                "deprecated": false,
                "deprecationMessage": "",
                "tagName": {
                  "text": "param"
                }
              }
            ]
          }
        }
      }
    },
    {
      "name": "ZyfraIconComponent",
      "id": "component-ZyfraIconComponent-79e018d63d72926a47d819a3e54638b9",
      "file": "libs/components/src/lib/icon/zyfra-icon.component.ts",
      "changeDetection": "ChangeDetectionStrategy.OnPush",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "zyfra-icon",
      "styleUrls": ["./zyfra-icon.component.less"],
      "styles": [],
      "templateUrl": ["./zyfra-icon.component.html"],
      "viewProviders": [],
      "inputsClass": [
        {
          "name": "iconClass",
          "defaultValue": "null",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 10,
          "type": "string"
        }
      ],
      "outputsClass": [],
      "propertiesClass": [],
      "methodsClass": [],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import { Component, ChangeDetectionStrategy, Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'zyfra-icon',\r\n  templateUrl: './zyfra-icon.component.html',\r\n  styleUrls: ['./zyfra-icon.component.less'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class ZyfraIconComponent {\r\n  @Input() iconClass: string = null;\r\n}\r\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data": ":host {\r\n    .zyfra-icon-color {\r\n        fill: none;\r\n    }\r\n}\r\n",
          "styleUrl": "./zyfra-icon.component.less"
        }
      ],
      "stylesData": "",
      "templateData": "<span class=\"zyfra-icon\" [ngClass]=\"iconClass\"></span>"
    },
    {
      "name": "ZyfraInputComponent",
      "id": "component-ZyfraInputComponent-ab02b51c5b9caab94cb37d929d040e42",
      "file": "libs/components/src/lib/input/zyfra-input.component.ts",
      "changeDetection": "ChangeDetectionStrategy.OnPush",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "zyfra-input",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./zyfra-input.component.html"],
      "viewProviders": [],
      "inputsClass": [
        {
          "name": "disabled",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 25,
          "type": "boolean"
        },
        {
          "name": "iClass",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 16,
          "type": "string"
        },
        {
          "name": "id",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 13,
          "type": "string"
        },
        {
          "name": "inputClass",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 18,
          "type": "string | string[] | Set<string> | literal type"
        },
        {
          "name": "label",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 15,
          "type": "string"
        },
        {
          "name": "mini",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 29,
          "type": "boolean"
        },
        {
          "name": "placeholder",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 14,
          "type": "string"
        },
        {
          "name": "required",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 26,
          "type": "boolean"
        },
        {
          "name": "spanClass",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 17,
          "type": "string"
        },
        {
          "name": "tooltip",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 27,
          "type": "string"
        },
        {
          "name": "tooltipPosition",
          "defaultValue": "'right'",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 28,
          "type": "\"left\" | \"right\" | \"above\" | \"below\""
        },
        {
          "name": "type",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 12,
          "type": "string"
        }
      ],
      "outputsClass": [
        {
          "name": "onBlur",
          "defaultValue": "new EventEmitter<FocusEvent>()",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 32,
          "type": "EventEmitter"
        },
        {
          "name": "onInput",
          "defaultValue": "new EventEmitter<CustomInputEvent<string>>()",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 31,
          "type": "EventEmitter"
        }
      ],
      "propertiesClass": [
        {
          "name": "formControl",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "FormControl",
          "optional": false,
          "description": "",
          "line": 7,
          "modifierKind": [123, 143],
          "inheritance": {
            "file": "WrappedFormComponent"
          }
        },
        {
          "name": "injector",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Injector",
          "optional": false,
          "description": "",
          "line": 9,
          "modifierKind": [123, 143],
          "inheritance": {
            "file": "WrappedFormComponent"
          }
        },
        {
          "name": "ngControl",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "NgControl",
          "optional": false,
          "description": "",
          "line": 9,
          "decorators": [
            {
              "name": "Optional",
              "stringifiedArguments": ""
            },
            {
              "name": "Self",
              "stringifiedArguments": ""
            }
          ],
          "modifierKind": [123, 143],
          "inheritance": {
            "file": "WrappedFormComponent"
          }
        }
      ],
      "methodsClass": [
        {
          "name": "handleInputEvent",
          "args": [
            {
              "name": "event",
              "type": "Event",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 42,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [123],
          "jsdoctags": [
            {
              "name": "event",
              "type": "Event",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "setDisabledState",
          "args": [
            {
              "name": "isDisabled",
              "type": "boolean",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 38,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [123, 157],
          "jsdoctags": [
            {
              "name": "isDisabled",
              "type": "boolean",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ],
          "inheritance": {
            "file": "WrappedFormComponent"
          }
        }
      ],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output } from '@angular/core';\r\nimport { AbstractControl, ControlValueAccessor } from '@angular/forms';\r\nimport { WrappedFormComponent } from '../@core/value-accessor/wrapped-form.component';\r\nimport { CustomInputEvent, HtmlInputEvent } from '../@core/models/events.models';\r\n\r\n@Component({\r\n  selector: 'zyfra-input',\r\n  templateUrl: './zyfra-input.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class ZyfraInputComponent extends WrappedFormComponent implements ControlValueAccessor {\r\n  @Input() type: string;\r\n  @Input() id: string;\r\n  @Input() placeholder: string;\r\n  @Input() label: string;\r\n  @Input() iClass: string;\r\n  @Input() spanClass: string;\r\n  @Input() inputClass:\r\n    | string\r\n    | string[]\r\n    | Set<string>\r\n    | {\r\n        [klass: string]: any;\r\n      };\r\n  @Input() disabled: boolean; // TODO remove, use FormControl disabled\r\n  @Input() required: boolean;\r\n  @Input() tooltip: string;\r\n  @Input() tooltipPosition: 'left' | 'right' | 'above' | 'below' = 'right';\r\n  @Input() mini: boolean;\r\n\r\n  @Output() onInput = new EventEmitter<CustomInputEvent<string>>();\r\n  @Output() onBlur = new EventEmitter<FocusEvent>();\r\n\r\n  public get controlRequired(): boolean {\r\n    return !!this.ngControl.control.validator({} as AbstractControl)?.required;\r\n  }\r\n\r\n  public override setDisabledState(isDisabled: boolean): void {\r\n    // do nothing\r\n  }\r\n\r\n  public handleInputEvent(event: Event): void {\r\n    const inputEvent = event as HtmlInputEvent<HTMLInputElement>;\r\n    this.onInput.emit({\r\n      value: inputEvent.target.value,\r\n      originalEvent: inputEvent,\r\n    });\r\n  }\r\n}\r\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "extends": "WrappedFormComponent",
      "implements": ["ControlValueAccessor"],
      "accessors": {
        "controlRequired": {
          "name": "controlRequired",
          "getSignature": {
            "name": "controlRequired",
            "type": "boolean",
            "returnType": "boolean",
            "line": 34
          }
        }
      },
      "templateData": "<div class=\"p-inputgroup\" [class.zyfra-input-group_disabled]=\"disabled\">\r\n  <span class=\"zyfra-input\" [class.zyfra-input_disabled]=\"disabled\" [class.p-float-label]=\"label\">\r\n    <i *ngIf=\"iClass\" [class]=\"iClass\"></i>\r\n\r\n    <ng-content select=\"[left]\"></ng-content>\r\n\r\n    <input\r\n      pInputText\r\n      autocomplete=\"off\"\r\n      [class.p-inputtext-mini]=\"mini\"\r\n      [type]=\"type\"\r\n      [id]=\"id\"\r\n      [formControl]=\"$any(ngControl.control)\"\r\n      (ngModelChange)=\"accessorOnChangeFn($event)\"\r\n      (blur)=\"onBlur.emit($event)\"\r\n      (input)=\"handleInputEvent($event)\"\r\n      [placeholder]=\"placeholder\"\r\n      [ngClass]=\"\r\n        ngControl\r\n          ? {\r\n              'ng-invalid': ngControl.invalid,\r\n              'ng-valid': ngControl.valid,\r\n              'ng-dirty': ngControl.dirty,\r\n              'ng-touched': ngControl.touched\r\n            }\r\n          : inputClass\r\n      \"\r\n      [zyfraDisableControl]=\"disabled\"\r\n      [required]=\"required\"\r\n      [zyfraTooltip]=\"tooltip ? tooltip : null\"\r\n      [zyfraTooltipPosition]=\"tooltipPosition\"\r\n    />\r\n    <label *ngIf=\"label\" [class.label-required]=\"required || controlRequired\">{{ label }}</label>\r\n\r\n    <ng-content select=\"[right]\"></ng-content>\r\n  </span>\r\n</div>\r\n"
    },
    {
      "name": "ZyfraInputGroupClearComponent",
      "id": "component-ZyfraInputGroupClearComponent-be07a546aff7ecc5543aa8b7fcae4167",
      "file": "libs/components/src/lib/input-group/zyfra-input-group-clear/zyfra-input-group-clear.component.ts",
      "changeDetection": "ChangeDetectionStrategy.OnPush",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "zyfra-input-group-clear",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./zyfra-input-group-clear.component.html"],
      "viewProviders": [],
      "inputsClass": [
        {
          "name": "control",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 10,
          "type": "ZyfraInputGroupControl<any>"
        }
      ],
      "outputsClass": [],
      "propertiesClass": [],
      "methodsClass": [
        {
          "name": "onClearClick",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 12,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [123]
        }
      ],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import { Component, ChangeDetectionStrategy, Input } from '@angular/core';\r\nimport { ZyfraInputGroupControl } from '../zyfra-input-group-control.class';\r\n\r\n@Component({\r\n  selector: 'zyfra-input-group-clear',\r\n  templateUrl: './zyfra-input-group-clear.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class ZyfraInputGroupClearComponent {\r\n  @Input() control: ZyfraInputGroupControl<any>;\r\n\r\n  public onClearClick(): void {\r\n    this.control?.ngControl.reset();\r\n  }\r\n}\r\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "templateData": "<button zyfraIconButton [disabled]='control.disabled' (click)='onClearClick()'>\r\n  <zyfra-icon iconClass='tools-broom'></zyfra-icon>\r\n</button>\r\n"
    },
    {
      "name": "ZyfraInputGroupComponent",
      "id": "component-ZyfraInputGroupComponent-5170949f68152245505c3348be59cac2",
      "file": "libs/components/src/lib/input-group/zyfra-input-group/zyfra-input-group.component.ts",
      "changeDetection": "ChangeDetectionStrategy.OnPush",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "zyfra-input-group",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./zyfra-input-group.component.html"],
      "viewProviders": [],
      "inputsClass": [
        {
          "name": "label",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 11,
          "type": "string"
        }
      ],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "clearComponent",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "ZyfraInputGroupClearComponent",
          "optional": false,
          "description": "",
          "line": 14,
          "decorators": [
            {
              "name": "ContentChild",
              "stringifiedArguments": "ZyfraInputGroupClearComponent"
            }
          ]
        },
        {
          "name": "control",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "ZyfraInputGroupControl<any>",
          "optional": false,
          "description": "",
          "line": 13,
          "decorators": [
            {
              "name": "ContentChild",
              "stringifiedArguments": "ZyfraInputGroupControl, {static: true}"
            }
          ]
        }
      ],
      "methodsClass": [
        {
          "name": "ngAfterContentInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 16,
          "deprecated": false,
          "deprecationMessage": ""
        }
      ],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import { Component, ChangeDetectionStrategy, ContentChild, Input, AfterContentInit } from '@angular/core';\r\nimport { ZyfraInputGroupClearComponent } from '../zyfra-input-group-clear/zyfra-input-group-clear.component';\r\nimport { ZyfraInputGroupControl } from '../zyfra-input-group-control.class';\r\n\r\n@Component({\r\n  selector: 'zyfra-input-group',\r\n  templateUrl: './zyfra-input-group.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class ZyfraInputGroupComponent implements AfterContentInit {\r\n  @Input() label: string;\r\n\r\n  @ContentChild(ZyfraInputGroupControl, { static: true }) control: ZyfraInputGroupControl<any>;\r\n  @ContentChild(ZyfraInputGroupClearComponent) clearComponent: ZyfraInputGroupClearComponent;\r\n\r\n  ngAfterContentInit(): void {\r\n    if (this.clearComponent) {\r\n      this.clearComponent.control = this.control;\r\n    }\r\n  }\r\n}\r\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "implements": ["AfterContentInit"],
      "templateData": "<div class=\"p-inputgroup\" [class.zyfra-input-group_disabled]=\"control.disabled\">\r\n  <span class=\"zyfra-input\" [class.zyfra-input_disabled]=\"control.disabled\" [class.p-float-label]=\"!!label\">\r\n    <ng-content></ng-content>\r\n    <label *ngIf=\"label\" [class.label-required]=\"control.required\">{{ label }}</label>\r\n  </span>\r\n</div>\r\n"
    },
    {
      "name": "ZyfraInputMaskComponent",
      "id": "component-ZyfraInputMaskComponent-628e36f121d4e9d3539063c1c58a6e87",
      "file": "libs/components/src/lib/input-mask/zyfra-input-mask.component.ts",
      "changeDetection": "ChangeDetectionStrategy.OnPush",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "zyfra-input-mask",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./zyfra-input-mask.component.html"],
      "viewProviders": [],
      "inputsClass": [
        {
          "name": "ariaLabel",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 31,
          "type": "string"
        },
        {
          "name": "ariaRequired",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 32,
          "type": "boolean"
        },
        {
          "name": "autoClear",
          "defaultValue": "true",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 13,
          "type": "boolean"
        },
        {
          "name": "autocomplete",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 30,
          "type": "string"
        },
        {
          "name": "autoFocus",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 29,
          "type": "boolean"
        },
        {
          "name": "characterPattern",
          "defaultValue": "'[A-Za-z]'",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 14,
          "type": "string"
        },
        {
          "name": "disabled",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 23,
          "type": "boolean"
        },
        {
          "name": "inputId",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 26,
          "type": "string"
        },
        {
          "name": "label",
          "defaultValue": "''",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 34,
          "type": "string"
        },
        {
          "name": "mask",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 15,
          "type": "string"
        },
        {
          "name": "maxlength",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 21,
          "type": "number"
        },
        {
          "name": "name",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 25,
          "type": "string"
        },
        {
          "name": "placeholder",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 19,
          "type": "string"
        },
        {
          "name": "readonly",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 24,
          "type": "boolean"
        },
        {
          "name": "required",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 27,
          "type": "boolean"
        },
        {
          "name": "size",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 20,
          "type": "number"
        },
        {
          "name": "slotChar",
          "defaultValue": "'_'",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 12,
          "type": "string"
        },
        {
          "name": "style",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 17,
          "type": "string"
        },
        {
          "name": "styleClass",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 18,
          "type": "string"
        },
        {
          "name": "tabindex",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 22,
          "type": "string"
        },
        {
          "name": "title",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 33,
          "type": "string"
        },
        {
          "name": "type",
          "defaultValue": "'text'",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 11,
          "type": "string"
        },
        {
          "name": "unmask",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 16,
          "type": "boolean"
        }
      ],
      "outputsClass": [
        {
          "name": "onBlur",
          "defaultValue": "new EventEmitter<FocusEvent>()",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 36,
          "type": "EventEmitter"
        },
        {
          "name": "onComplete",
          "defaultValue": "new EventEmitter<void>()",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 38,
          "type": "EventEmitter"
        },
        {
          "name": "onFocus",
          "defaultValue": "new EventEmitter<FocusEvent>()",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 37,
          "type": "EventEmitter"
        },
        {
          "name": "onInput",
          "defaultValue": "new EventEmitter<KeyboardEvent>()",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 40,
          "type": "EventEmitter"
        },
        {
          "name": "onKeydown",
          "defaultValue": "new EventEmitter<KeyboardEvent>()",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 39,
          "type": "EventEmitter"
        }
      ],
      "propertiesClass": [
        {
          "name": "formControl",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "FormControl",
          "optional": false,
          "description": "",
          "line": 7,
          "modifierKind": [123, 143],
          "inheritance": {
            "file": "WrappedFormComponent"
          }
        },
        {
          "name": "injector",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Injector",
          "optional": false,
          "description": "",
          "line": 9,
          "modifierKind": [123, 143],
          "inheritance": {
            "file": "WrappedFormComponent"
          }
        },
        {
          "name": "ngControl",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "NgControl",
          "optional": false,
          "description": "",
          "line": 9,
          "decorators": [
            {
              "name": "Optional",
              "stringifiedArguments": ""
            },
            {
              "name": "Self",
              "stringifiedArguments": ""
            }
          ],
          "modifierKind": [123, 143],
          "inheritance": {
            "file": "WrappedFormComponent"
          }
        }
      ],
      "methodsClass": [
        {
          "name": "setDisabledState",
          "args": [
            {
              "name": "isDisabled",
              "type": "boolean",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 42,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [123, 157],
          "jsdoctags": [
            {
              "name": "isDisabled",
              "type": "boolean",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ],
          "inheritance": {
            "file": "WrappedFormComponent"
          }
        }
      ],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output } from '@angular/core';\r\nimport { ControlValueAccessor } from '@angular/forms';\r\nimport { WrappedFormComponent } from '../@core/value-accessor/wrapped-form.component';\r\n\r\n@Component({\r\n  selector: 'zyfra-input-mask',\r\n  templateUrl: './zyfra-input-mask.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class ZyfraInputMaskComponent extends WrappedFormComponent implements ControlValueAccessor {\r\n  @Input() type: string = 'text';\r\n  @Input() slotChar: string = '_';\r\n  @Input() autoClear: boolean = true;\r\n  @Input() characterPattern: string = '[A-Za-z]';\r\n  @Input() mask: string;\r\n  @Input() unmask: boolean;\r\n  @Input() style: string;\r\n  @Input() styleClass: string;\r\n  @Input() placeholder: string;\r\n  @Input() size: number;\r\n  @Input() maxlength: number;\r\n  @Input() tabindex: string;\r\n  @Input() disabled: boolean; // TODO remove, use FormControl disabled\r\n  @Input() readonly: boolean;\r\n  @Input() name: string;\r\n  @Input() inputId: string;\r\n  @Input() required: boolean;\r\n\r\n  @Input() autoFocus: boolean;\r\n  @Input() autocomplete: string;\r\n  @Input() ariaLabel: string;\r\n  @Input() ariaRequired: boolean;\r\n  @Input() title: string;\r\n  @Input() label = '';\r\n\r\n  @Output() onBlur = new EventEmitter<FocusEvent>();\r\n  @Output() onFocus = new EventEmitter<FocusEvent>();\r\n  @Output() onComplete = new EventEmitter<void>();\r\n  @Output() onKeydown = new EventEmitter<KeyboardEvent>();\r\n  @Output() onInput = new EventEmitter<KeyboardEvent>();\r\n\r\n  public override setDisabledState(isDisabled: boolean): void {\r\n    // do nothing\r\n  }\r\n}\r\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "extends": "WrappedFormComponent",
      "implements": ["ControlValueAccessor"],
      "templateData": "<span class=\"zyfra-input\" [class.zyfra-input_disabled]=\"disabled\" [class.p-float-label]=\"label\">\r\n  <p-inputMask\r\n    [formControl]=\"$any(ngControl.control)\"\r\n    [mask]=\"mask\"\r\n    [type]=\"type\"\r\n    [slotChar]=\"slotChar\"\r\n    [autoClear]=\"autoClear\"\r\n    [unmask]=\"unmask\"\r\n    [style]=\"style\"\r\n    [styleClass]=\"styleClass\"\r\n    [placeholder]=\"placeholder\"\r\n    [size]=\"size\"\r\n    [maxlength]=\"maxlength\"\r\n    [tabindex]=\"tabindex\"\r\n    [zyfraDisableControl]=\"disabled\"\r\n    [readonly]=\"readonly\"\r\n    [name]=\"name\"\r\n    [inputId]=\"inputId\"\r\n    [required]=\"required\"\r\n    [characterPattern]=\"characterPattern\"\r\n    [autoFocus]=\"autoFocus\"\r\n    [autocomplete]=\"autocomplete\"\r\n    [ariaLabel]=\"ariaLabel\"\r\n    [ariaRequired]=\"ariaRequired\"\r\n    [title]=\"title\"\r\n    (ngModelChange)=\"accessorOnChangeFn($event)\"\r\n    (onFocus)=\"onFocus.emit($event)\"\r\n    (onBlur)=\"onBlur.emit($event)\"\r\n    (onComplete)=\"onComplete.emit($event)\"\r\n    (onInput)=\"onInput.emit($event)\"\r\n    (onKeydown)=\"onKeydown.emit($event)\"\r\n  ></p-inputMask>\r\n\r\n  <label *ngIf=\"label\" [class.label-required]=\"required\">{{ label }}</label>\r\n</span>\r\n"
    },
    {
      "name": "ZyfraInputNumberComponent",
      "id": "component-ZyfraInputNumberComponent-99c0be35c79219e67d0e80adc22e2010",
      "file": "libs/components/src/lib/input-number/zyfra-input-number.component.ts",
      "changeDetection": "ChangeDetectionStrategy.OnPush",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "zyfra-input-number",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./zyfra-input-number.component.html"],
      "viewProviders": [],
      "inputsClass": [
        {
          "name": "ariaLabel",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 47,
          "type": "string"
        },
        {
          "name": "ariaRequired",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 48,
          "type": "boolean"
        },
        {
          "name": "autocomplete",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 50,
          "type": "string"
        },
        {
          "name": "buttonLayout",
          "defaultValue": "'stacked'",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 15,
          "type": "string"
        },
        {
          "name": "currency",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 28,
          "type": "string"
        },
        {
          "name": "currencyDisplay",
          "defaultValue": "'symbol'",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 29,
          "type": "string"
        },
        {
          "name": "decrementButtonClass",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 20,
          "type": "string"
        },
        {
          "name": "decrementButtonIcon",
          "defaultValue": "'zyfra-icon chevrons-down'",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 22,
          "type": "string"
        },
        {
          "name": "disabled",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 45,
          "type": "boolean"
        },
        {
          "name": "format",
          "defaultValue": "true",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 13,
          "type": "boolean"
        },
        {
          "name": "iClass",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 18,
          "type": "string"
        },
        {
          "name": "incrementButtonClass",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 19,
          "type": "string"
        },
        {
          "name": "incrementButtonIcon",
          "defaultValue": "'zyfra-icon chevrons-up'",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 21,
          "type": "string"
        },
        {
          "name": "inputId",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 38,
          "type": "string"
        },
        {
          "name": "inputStyle",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 39,
          "type": "string"
        },
        {
          "name": "inputStyleClass",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 40,
          "type": "string"
        },
        {
          "name": "label",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 17,
          "type": "string"
        },
        {
          "name": "locale",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 23,
          "type": "string"
        },
        {
          "name": "localeMatcher",
          "defaultValue": "'best fit'",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 24,
          "type": "string"
        },
        {
          "name": "max",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 34,
          "type": "number"
        },
        {
          "name": "maxFractionDigits",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 32,
          "type": "number"
        },
        {
          "name": "maxlength",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 43,
          "type": "number"
        },
        {
          "name": "min",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 33,
          "type": "number"
        },
        {
          "name": "minFractionDigits",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 31,
          "type": "number"
        },
        {
          "name": "mode",
          "defaultValue": "'decimal'",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 25,
          "type": "string"
        },
        {
          "name": "name",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 49,
          "type": "string"
        },
        {
          "name": "placeholder",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 41,
          "type": "string"
        },
        {
          "name": "prefix",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 26,
          "type": "string"
        },
        {
          "name": "showButtons",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 14,
          "type": "boolean"
        },
        {
          "name": "size",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 42,
          "type": "number"
        },
        {
          "name": "spanClass",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 16,
          "type": "string"
        },
        {
          "name": "step",
          "defaultValue": "1",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 35,
          "type": "number"
        },
        {
          "name": "style",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 36,
          "type": "string"
        },
        {
          "name": "styleClass",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 37,
          "type": "string"
        },
        {
          "name": "suffix",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 27,
          "type": "string"
        },
        {
          "name": "tabindex",
          "defaultValue": "'0'",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 44,
          "type": "string"
        },
        {
          "name": "title",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 46,
          "type": "string"
        },
        {
          "name": "useGrouping",
          "defaultValue": "true",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 30,
          "type": "boolean"
        },
        {
          "name": "value",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 12,
          "type": "number"
        }
      ],
      "outputsClass": [
        {
          "name": "onBlur",
          "defaultValue": "new EventEmitter<FocusEvent>()",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 53,
          "type": "EventEmitter"
        },
        {
          "name": "onFocus",
          "defaultValue": "new EventEmitter<FocusEvent>()",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 52,
          "type": "EventEmitter"
        },
        {
          "name": "onInput",
          "defaultValue": "new EventEmitter<CustomInputEvent<number>>()",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 54,
          "type": "EventEmitter"
        }
      ],
      "propertiesClass": [
        {
          "name": "formControl",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "FormControl",
          "optional": false,
          "description": "",
          "line": 7,
          "modifierKind": [123, 143],
          "inheritance": {
            "file": "WrappedFormComponent"
          }
        },
        {
          "name": "injector",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Injector",
          "optional": false,
          "description": "",
          "line": 9,
          "modifierKind": [123, 143],
          "inheritance": {
            "file": "WrappedFormComponent"
          }
        },
        {
          "name": "ngControl",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "NgControl",
          "optional": false,
          "description": "",
          "line": 9,
          "decorators": [
            {
              "name": "Optional",
              "stringifiedArguments": ""
            },
            {
              "name": "Self",
              "stringifiedArguments": ""
            }
          ],
          "modifierKind": [123, 143],
          "inheritance": {
            "file": "WrappedFormComponent"
          }
        }
      ],
      "methodsClass": [
        {
          "name": "setDisabledState",
          "args": [
            {
              "name": "isDisabled",
              "type": "boolean",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 56,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [123, 157],
          "jsdoctags": [
            {
              "name": "isDisabled",
              "type": "boolean",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ],
          "inheritance": {
            "file": "WrappedFormComponent"
          }
        }
      ],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output } from '@angular/core';\r\nimport { ControlValueAccessor } from '@angular/forms';\r\nimport { WrappedFormComponent } from '../@core/value-accessor/wrapped-form.component';\r\nimport { CustomInputEvent } from '../@core/models/events.models';\r\n\r\n@Component({\r\n  selector: 'zyfra-input-number',\r\n  templateUrl: './zyfra-input-number.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class ZyfraInputNumberComponent extends WrappedFormComponent implements ControlValueAccessor {\r\n  @Input() value: number;\r\n  @Input() format = true;\r\n  @Input() showButtons: boolean;\r\n  @Input() buttonLayout = 'stacked';\r\n  @Input() spanClass: string;\r\n  @Input() label: string;\r\n  @Input() iClass: string;\r\n  @Input() incrementButtonClass: string;\r\n  @Input() decrementButtonClass: string;\r\n  @Input() incrementButtonIcon = 'zyfra-icon chevrons-up';\r\n  @Input() decrementButtonIcon = 'zyfra-icon chevrons-down';\r\n  @Input() locale: string;\r\n  @Input() localeMatcher = 'best fit';\r\n  @Input() mode = 'decimal';\r\n  @Input() prefix: string;\r\n  @Input() suffix: string;\r\n  @Input() currency: string;\r\n  @Input() currencyDisplay = 'symbol';\r\n  @Input() useGrouping = true;\r\n  @Input() minFractionDigits: number;\r\n  @Input() maxFractionDigits: number;\r\n  @Input() min: number;\r\n  @Input() max: number;\r\n  @Input() step = 1;\r\n  @Input() style: string;\r\n  @Input() styleClass: string;\r\n  @Input() inputId: string;\r\n  @Input() inputStyle: string;\r\n  @Input() inputStyleClass: string;\r\n  @Input() placeholder: string;\r\n  @Input() size: number;\r\n  @Input() maxlength: number;\r\n  @Input() tabindex: string = '0';\r\n  @Input() disabled: boolean; // TODO remove, use FormControl disabled\r\n  @Input() title: string;\r\n  @Input() ariaLabel: string;\r\n  @Input() ariaRequired: boolean;\r\n  @Input() name: string;\r\n  @Input() autocomplete: string;\r\n\r\n  @Output() onFocus = new EventEmitter<FocusEvent>();\r\n  @Output() onBlur = new EventEmitter<FocusEvent>();\r\n  @Output() onInput = new EventEmitter<CustomInputEvent<number>>();\r\n\r\n  public override setDisabledState(isDisabled: boolean): void {\r\n    // do nothing\r\n  }\r\n}\r\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "extends": "WrappedFormComponent",
      "implements": ["ControlValueAccessor"],
      "templateData": "<span class=\"zyfra-input\" [class.zyfra-input_disabled]=\"disabled\" [class.p-float-label]=\"label\">\r\n  <i *ngIf=\"iClass\" [class]=\"iClass\"></i>\r\n\r\n  <p-inputNumber\r\n    [formControl]=\"$any(ngControl.control)\"\r\n    (ngModelChange)=\"accessorOnChangeFn($event)\"\r\n    [format]=\"format\"\r\n    [showButtons]=\"showButtons\"\r\n    [buttonLayout]=\"buttonLayout\"\r\n    [incrementButtonClass]=\"incrementButtonClass\"\r\n    [decrementButtonClass]=\"decrementButtonClass\"\r\n    [incrementButtonIcon]=\"incrementButtonIcon\"\r\n    [decrementButtonIcon]=\"decrementButtonIcon\"\r\n    [locale]=\"locale\"\r\n    [localeMatcher]=\"localeMatcher\"\r\n    [mode]=\"mode\"\r\n    [prefix]=\"prefix\"\r\n    [suffix]=\"suffix\"\r\n    [placeholder]=\"placeholder\"\r\n    [currency]=\"currency\"\r\n    [currencyDisplay]=\"currencyDisplay\"\r\n    [useGrouping]=\"useGrouping\"\r\n    [minFractionDigits]=\"minFractionDigits\"\r\n    [maxFractionDigits]=\"maxFractionDigits\"\r\n    [min]=\"min\"\r\n    [max]=\"max\"\r\n    [step]=\"step\"\r\n    [style]=\"style\"\r\n    [styleClass]=\"styleClass\"\r\n    [inputId]=\"inputId\"\r\n    [inputStyle]=\"inputStyle\"\r\n    [inputStyleClass]=\"inputStyleClass\"\r\n    [size]=\"size\"\r\n    [maxlength]=\"maxlength\"\r\n    [tabindex]=\"tabindex\"\r\n    [zyfraDisableControl]=\"disabled\"\r\n    [title]=\"title\"\r\n    [ariaLabel]=\"ariaLabel\"\r\n    [ariaRequired]=\"ariaRequired\"\r\n    [name]=\"name\"\r\n    [autocomplete]=\"autocomplete\"\r\n    (onFocus)=\"onFocus.emit($event)\"\r\n    (onBlur)=\"onBlur.emit($event)\"\r\n    (onInput)=\"onInput.emit($event)\"\r\n  >\r\n  </p-inputNumber>\r\n\r\n  <label\r\n    *ngIf=\"label\"\r\n    [class.label-required]=\"ariaRequired\"\r\n    [style.padding-left]=\"showButtons && buttonLayout === 'horizontal' ? '38px' : ''\"\r\n    >{{ label }}</label\r\n  >\r\n</span>\r\n"
    },
    {
      "name": "ZyfraInputSwitchComponent",
      "id": "component-ZyfraInputSwitchComponent-eb9413855f1ef14ecb1cf25a5475ef8b",
      "file": "libs/components/src/lib/input-switch/zyfra-input-switch.component.ts",
      "changeDetection": "ChangeDetectionStrategy.OnPush",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "zyfra-input-switch",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./zyfra-input-switch.component.html"],
      "viewProviders": [],
      "inputsClass": [
        {
          "name": "ariaLabelledBy",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 16,
          "type": "string"
        },
        {
          "name": "disabled",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 17,
          "type": "boolean"
        },
        {
          "name": "inputId",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 14,
          "type": "string"
        },
        {
          "name": "name",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 15,
          "type": "string"
        },
        {
          "name": "readonly",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 18,
          "type": "boolean"
        },
        {
          "name": "style",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 11,
          "type": "string"
        },
        {
          "name": "styleClass",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 12,
          "type": "string"
        },
        {
          "name": "tabindex",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 13,
          "type": "number"
        }
      ],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "formControl",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "FormControl",
          "optional": false,
          "description": "",
          "line": 7,
          "modifierKind": [123, 143],
          "inheritance": {
            "file": "WrappedFormComponent"
          }
        },
        {
          "name": "injector",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Injector",
          "optional": false,
          "description": "",
          "line": 9,
          "modifierKind": [123, 143],
          "inheritance": {
            "file": "WrappedFormComponent"
          }
        },
        {
          "name": "ngControl",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "NgControl",
          "optional": false,
          "description": "",
          "line": 9,
          "decorators": [
            {
              "name": "Optional",
              "stringifiedArguments": ""
            },
            {
              "name": "Self",
              "stringifiedArguments": ""
            }
          ],
          "modifierKind": [123, 143],
          "inheritance": {
            "file": "WrappedFormComponent"
          }
        }
      ],
      "methodsClass": [
        {
          "name": "setDisabledState",
          "args": [
            {
              "name": "isDisabled",
              "type": "boolean",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 20,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [123, 157],
          "jsdoctags": [
            {
              "name": "isDisabled",
              "type": "boolean",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ],
          "inheritance": {
            "file": "WrappedFormComponent"
          }
        }
      ],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\r\nimport { ControlValueAccessor } from '@angular/forms';\r\nimport { WrappedFormComponent } from '../@core/value-accessor/wrapped-form.component';\r\n\r\n@Component({\r\n  selector: 'zyfra-input-switch',\r\n  templateUrl: './zyfra-input-switch.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class ZyfraInputSwitchComponent extends WrappedFormComponent implements ControlValueAccessor {\r\n  @Input() style: string;\r\n  @Input() styleClass: string;\r\n  @Input() tabindex: number;\r\n  @Input() inputId: string;\r\n  @Input() name: string;\r\n  @Input() ariaLabelledBy: string;\r\n  @Input() disabled: boolean; // TODO remove, use FormControl disabled\r\n  @Input() readonly: boolean;\r\n\r\n  public override setDisabledState(isDisabled: boolean): void {\r\n    // do nothing\r\n  }\r\n}\r\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "extends": "WrappedFormComponent",
      "implements": ["ControlValueAccessor"],
      "templateData": "<p-inputSwitch\r\n  [formControl]=\"$any(ngControl.control)\"\r\n  [style]=\"style\"\r\n  [styleClass]=\"styleClass\"\r\n  [tabindex]=\"tabindex\"\r\n  [inputId]=\"inputId\"\r\n  [name]=\"name\"\r\n  [ariaLabelledBy]=\"ariaLabelledBy\"\r\n  [zyfraDisableControl]=\"disabled\"\r\n  [readonly]=\"readonly\"\r\n  (ngModelChange)=\"accessorOnChangeFn($event)\"\r\n></p-inputSwitch>\r\n"
    },
    {
      "name": "ZyfraMenuApplicationsComponent",
      "id": "component-ZyfraMenuApplicationsComponent-7cd88be560be7d5837b7c89869124503",
      "file": "libs/components/src/lib/menu-applications/zyfra-menu-applications.component.ts",
      "changeDetection": "ChangeDetectionStrategy.OnPush",
      "encapsulation": ["ViewEncapsulation.None"],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "zyfra-menu-applications",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./zyfra-menu-applications.component.html"],
      "viewProviders": [],
      "inputsClass": [
        {
          "name": "activeItem",
          "defaultValue": "null",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 43,
          "type": "ZyfraMenuAppItem | null"
        },
        {
          "name": "bottomMenuItems",
          "defaultValue": "[]",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 42,
          "type": "ZyfraMenuAppItem[]"
        },
        {
          "name": "tooltipDelay",
          "defaultValue": "1000",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 40,
          "type": "number"
        },
        {
          "name": "topMenuItems",
          "defaultValue": "[]",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 41,
          "type": "ZyfraMenuAppItem[]"
        },
        {
          "name": "transition",
          "defaultValue": "{\r\n    open: {\r\n      duration: 300,\r\n      delay: 500,\r\n      timingFunction: 'ease-in',\r\n    },\r\n    close: {\r\n      duration: 300,\r\n      delay: 300,\r\n      timingFunction: 'ease-out',\r\n    },\r\n  }",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 28,
          "type": "ZyfraMenuAppTransitionSettings"
        }
      ],
      "outputsClass": [
        {
          "name": "selectItem",
          "defaultValue": "new EventEmitter<ZyfraMenuAppItem>()",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 45,
          "type": "EventEmitter"
        },
        {
          "name": "toggleState",
          "defaultValue": "new EventEmitter<boolean>()",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 46,
          "type": "EventEmitter"
        }
      ],
      "propertiesClass": [
        {
          "name": "_isOpen",
          "defaultValue": "true",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "optional": false,
          "description": "",
          "line": 50,
          "modifierKind": [121]
        },
        {
          "name": "destroy$",
          "defaultValue": "new Subject()",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "optional": false,
          "description": "",
          "line": 49,
          "modifierKind": [121]
        },
        {
          "name": "transitionDelayEnable",
          "defaultValue": "true",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "optional": false,
          "description": "",
          "line": 48
        },
        {
          "name": "wrapper",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "ElementRef<HTMLDivElement>",
          "optional": false,
          "description": "",
          "line": 26,
          "decorators": [
            {
              "name": "ViewChild",
              "stringifiedArguments": "'wrapper', {static: true}"
            }
          ]
        }
      ],
      "methodsClass": [
        {
          "name": "close",
          "args": [
            {
              "name": "withDelay",
              "type": "",
              "deprecated": false,
              "deprecationMessage": "",
              "defaultValue": "false"
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 151,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [123],
          "jsdoctags": [
            {
              "name": "withDelay",
              "type": "",
              "deprecated": false,
              "deprecationMessage": "",
              "defaultValue": "false",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "closeWithDelay",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 159,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [121]
        },
        {
          "name": "closeWithoutDelay",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 165,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [121]
        },
        {
          "name": "ngAfterViewInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 64,
          "deprecated": false,
          "deprecationMessage": ""
        },
        {
          "name": "ngOnDestroy",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 175,
          "deprecated": false,
          "deprecationMessage": ""
        },
        {
          "name": "onMouseEnterHandler",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 104,
          "deprecated": false,
          "deprecationMessage": "",
          "decorators": [
            {
              "name": "HostListener",
              "stringifiedArguments": "'mouseenter'"
            }
          ],
          "modifierKind": [123]
        },
        {
          "name": "onMouseOutHandler",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 109,
          "deprecated": false,
          "deprecationMessage": "",
          "decorators": [
            {
              "name": "HostListener",
              "stringifiedArguments": "'mouseleave'"
            }
          ],
          "modifierKind": [123]
        },
        {
          "name": "open",
          "args": [
            {
              "name": "withDelay",
              "type": "",
              "deprecated": false,
              "deprecationMessage": "",
              "defaultValue": "false"
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 131,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [123],
          "jsdoctags": [
            {
              "name": "withDelay",
              "type": "",
              "deprecated": false,
              "deprecationMessage": "",
              "defaultValue": "false",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "openWithDelay",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 139,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [121]
        },
        {
          "name": "openWithoutDelay",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 145,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [121]
        },
        {
          "name": "selectItemHandler",
          "args": [
            {
              "name": "item",
              "type": "ZyfraMenuAppItem",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 171,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [123],
          "jsdoctags": [
            {
              "name": "item",
              "type": "ZyfraMenuAppItem",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "setInitialPanelSizes",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 68,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [121]
        },
        {
          "name": "toggle",
          "args": [
            {
              "name": "withDelay",
              "type": "",
              "deprecated": false,
              "deprecationMessage": "",
              "defaultValue": "false"
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 113,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [123],
          "jsdoctags": [
            {
              "name": "withDelay",
              "type": "",
              "deprecated": false,
              "deprecationMessage": "",
              "defaultValue": "false",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "toggleWithDelay",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 121,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [121]
        },
        {
          "name": "toggleWithoutDelay",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 126,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [121]
        }
      ],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [
        {
          "name": "mouseenter",
          "args": [],
          "argsDecorator": [],
          "deprecated": false,
          "deprecationMessage": "",
          "line": 104
        },
        {
          "name": "mouseleave",
          "args": [],
          "argsDecorator": [],
          "deprecated": false,
          "deprecationMessage": "",
          "line": 109
        }
      ],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import {\r\n  AfterViewInit,\r\n  ChangeDetectionStrategy,\r\n  ChangeDetectorRef,\r\n  Component,\r\n  ElementRef,\r\n  EventEmitter,\r\n  HostListener,\r\n  Input,\r\n  OnDestroy,\r\n  Output,\r\n  Renderer2,\r\n  ViewChild,\r\n  ViewEncapsulation,\r\n} from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\nimport { ZyfraMenuAppItem, ZyfraMenuAppTransitionSettings } from './zyfra-menu-applications.interface';\r\n\r\n@Component({\r\n  selector: 'zyfra-menu-applications',\r\n  templateUrl: './zyfra-menu-applications.component.html',\r\n  encapsulation: ViewEncapsulation.None,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class ZyfraMenuApplicationsComponent implements AfterViewInit, OnDestroy {\r\n  @ViewChild('wrapper', { static: true }) wrapper: ElementRef<HTMLDivElement>;\r\n\r\n  @Input() transition: ZyfraMenuAppTransitionSettings = {\r\n    open: {\r\n      duration: 300,\r\n      delay: 500,\r\n      timingFunction: 'ease-in',\r\n    },\r\n    close: {\r\n      duration: 300,\r\n      delay: 300,\r\n      timingFunction: 'ease-out',\r\n    },\r\n  };\r\n  @Input() tooltipDelay = 1000;\r\n  @Input() topMenuItems: ZyfraMenuAppItem[] = [];\r\n  @Input() bottomMenuItems: ZyfraMenuAppItem[] = [];\r\n  @Input() activeItem: ZyfraMenuAppItem | null = null;\r\n\r\n  @Output() selectItem = new EventEmitter<ZyfraMenuAppItem>();\r\n  @Output() toggleState = new EventEmitter<boolean>();\r\n\r\n  transitionDelayEnable = true;\r\n  private destroy$ = new Subject();\r\n  private _isOpen = true;\r\n\r\n  set isOpen(isOpen: boolean) {\r\n    this._isOpen = isOpen;\r\n    this.toggleState.emit(this.isOpen);\r\n    this.cdr.detectChanges();\r\n  }\r\n\r\n  get isOpen(): boolean {\r\n    return this._isOpen;\r\n  }\r\n\r\n  constructor(private cdr: ChangeDetectorRef, private elementRef: ElementRef, private renderer: Renderer2) {}\r\n\r\n  ngAfterViewInit(): void {\r\n    this.setInitialPanelSizes();\r\n  }\r\n\r\n  private setInitialPanelSizes(): void {\r\n    const menuSplitter = this.elementRef.nativeElement.querySelector('.menu-splitter');\r\n    const panelBottom = this.elementRef.nativeElement.querySelector('.menu-applications-list__bottom');\r\n    const splitterPanels = this.elementRef.nativeElement.querySelectorAll('.menu-splitter__panel');\r\n\r\n    if (!menuSplitter || !panelBottom || !splitterPanels.length || splitterPanels.length !== 2) {\r\n      return;\r\n    }\r\n\r\n    const bottomPanelSize = Math.ceil((panelBottom.offsetHeight / menuSplitter.offsetHeight) * 100);\r\n\r\n    this.renderer.setStyle(splitterPanels[0], 'flex-basis', 'calc(' + (100 - bottomPanelSize) + '%)');\r\n    this.renderer.setStyle(splitterPanels[1], 'flex-basis', 'calc(' + bottomPanelSize + '%)');\r\n  }\r\n\r\n  get transitionStyles(): Record<string, string> {\r\n    let transitionDelay: number;\r\n\r\n    if (this.transitionDelayEnable) {\r\n      transitionDelay = this.isOpen ? this.transition.open.delay : this.transition.close.delay;\r\n    } else {\r\n      transitionDelay = 0;\r\n    }\r\n\r\n    return {\r\n      'transition-delay': `${transitionDelay}ms`,\r\n      'transition-duration': `${\r\n        this.isOpen ? this.transition.open.duration : this.transition.close.duration\r\n      }ms`,\r\n      'transition-timing-function': this.isOpen\r\n        ? this.transition.open.timingFunction\r\n        : this.transition.close.timingFunction,\r\n    };\r\n  }\r\n\r\n  @HostListener('mouseenter')\r\n  public onMouseEnterHandler(): void {\r\n    this.open(true);\r\n  }\r\n\r\n  @HostListener('mouseleave')\r\n  public onMouseOutHandler(): void {\r\n    this.close(true);\r\n  }\r\n\r\n  public toggle(withDelay = false): void {\r\n    if (withDelay) {\r\n      this.toggleWithDelay();\r\n    } else {\r\n      this.toggleWithoutDelay();\r\n    }\r\n  }\r\n\r\n  private toggleWithDelay(): void {\r\n    this.transitionDelayEnable = true;\r\n    this.isOpen = !this.isOpen;\r\n  }\r\n\r\n  private toggleWithoutDelay(): void {\r\n    this.transitionDelayEnable = false;\r\n    this.isOpen = !this.isOpen;\r\n  }\r\n\r\n  public open(withDelay = false): void {\r\n    if (withDelay) {\r\n      this.openWithDelay();\r\n    } else {\r\n      this.openWithoutDelay();\r\n    }\r\n  }\r\n\r\n  private openWithDelay(): void {\r\n    if (!this.isOpen) {\r\n      this.toggleWithDelay();\r\n    }\r\n  }\r\n\r\n  private openWithoutDelay(): void {\r\n    if (!this.isOpen) {\r\n      this.toggleWithoutDelay();\r\n    }\r\n  }\r\n\r\n  public close(withDelay = false): void {\r\n    if (withDelay) {\r\n      this.closeWithDelay();\r\n    } else {\r\n      this.closeWithoutDelay();\r\n    }\r\n  }\r\n\r\n  private closeWithDelay(): void {\r\n    if (this.isOpen) {\r\n      this.toggleWithDelay();\r\n    }\r\n  }\r\n\r\n  private closeWithoutDelay(): void {\r\n    if (this.isOpen) {\r\n      this.toggleWithoutDelay();\r\n    }\r\n  }\r\n\r\n  public selectItemHandler(item: ZyfraMenuAppItem): void {\r\n    this.selectItem.emit(item);\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.destroy$.next();\r\n    this.destroy$.complete();\r\n  }\r\n}\r\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "deprecated": false,
        "deprecationMessage": "",
        "args": [
          {
            "name": "cdr",
            "type": "ChangeDetectorRef",
            "deprecated": false,
            "deprecationMessage": ""
          },
          {
            "name": "elementRef",
            "type": "ElementRef",
            "deprecated": false,
            "deprecationMessage": ""
          },
          {
            "name": "renderer",
            "type": "Renderer2",
            "deprecated": false,
            "deprecationMessage": ""
          }
        ],
        "line": 60,
        "jsdoctags": [
          {
            "name": "cdr",
            "type": "ChangeDetectorRef",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          },
          {
            "name": "elementRef",
            "type": "ElementRef",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          },
          {
            "name": "renderer",
            "type": "Renderer2",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      "implements": ["AfterViewInit", "OnDestroy"],
      "accessors": {
        "isOpen": {
          "name": "isOpen",
          "setSignature": {
            "name": "isOpen",
            "type": "void",
            "deprecated": false,
            "deprecationMessage": "",
            "args": [
              {
                "name": "isOpen",
                "type": "boolean",
                "deprecated": false,
                "deprecationMessage": ""
              }
            ],
            "returnType": "void",
            "line": 52,
            "jsdoctags": [
              {
                "name": "isOpen",
                "type": "boolean",
                "deprecated": false,
                "deprecationMessage": "",
                "tagName": {
                  "text": "param"
                }
              }
            ]
          },
          "getSignature": {
            "name": "isOpen",
            "type": "boolean",
            "returnType": "boolean",
            "line": 58
          }
        },
        "transitionStyles": {
          "name": "transitionStyles",
          "getSignature": {
            "name": "transitionStyles",
            "type": "",
            "returnType": "Record<string, string>",
            "line": 83
          }
        }
      },
      "templateData": "<div\r\n  #wrapper\r\n  class=\"menu-applications\"\r\n  [class]=\"isOpen ? 'menu-applications_opened' : 'menu-applications_closed'\"\r\n  [style]=\"transitionStyles\"\r\n>\r\n  <div class=\"menu-applications-wrapper\">\r\n    <zyfra-splitter [minSizes]=\"[2, 1]\" styleClass=\"menu-splitter\" panelStyleClass=\"menu-splitter__panel\">\r\n      <ng-template zyfraSplitterTemplate>\r\n        <ul class=\"menu-applications-list menu-applications-list__top\">\r\n          <ng-container *ngTemplateOutlet=\"itemList; context: { $implicit: topMenuItems }\"></ng-container>\r\n        </ul>\r\n      </ng-template>\r\n      <ng-template zyfraSplitterTemplate>\r\n        <ul class=\"menu-applications-list menu-applications-list__bottom\">\r\n          <ng-container *ngTemplateOutlet=\"itemList; context: { $implicit: bottomMenuItems }\"></ng-container>\r\n        </ul>\r\n      </ng-template>\r\n    </zyfra-splitter>\r\n  </div>\r\n</div>\r\n\r\n<ng-template #itemList let-items>\r\n  <zyfra-menu-applications-item\r\n    *ngFor=\"let item of items\"\r\n    [item]=\"item\"\r\n    [isActive]=\"item === activeItem\"\r\n    [zyfraTooltip]=\"tooltip\"\r\n    [zyfraTooltipContext]=\"item\"\r\n    [zyfraTooltipDelay]=\"tooltipDelay\"\r\n    (click)=\"selectItemHandler(item)\"\r\n  ></zyfra-menu-applications-item>\r\n</ng-template>\r\n\r\n<ng-template #tooltip let-item>\r\n  <div class=\"menu-applications-tooltip\">\r\n    <div class=\"menu-applications-tooltip__title\">{{ item.title }}</div>\r\n    <div class=\"menu-applications-tooltip__desc\" *ngIf=\"item.description\">{{ item.description }}</div>\r\n  </div>\r\n</ng-template>\r\n"
    },
    {
      "name": "ZyfraMenuApplicationsItemComponent",
      "id": "component-ZyfraMenuApplicationsItemComponent-f8d763b5a49bd7ca5739242aaedc8f75",
      "file": "libs/components/src/lib/menu-applications/zyfra-menu-applications-item/zyfra-menu-applications-item.component.ts",
      "changeDetection": "ChangeDetectionStrategy.OnPush",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "zyfra-menu-applications-item",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./zyfra-menu-applications-item.component.html"],
      "viewProviders": [],
      "inputsClass": [
        {
          "name": "isActive",
          "defaultValue": "false",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 11,
          "type": "boolean"
        },
        {
          "name": "item",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 10,
          "type": "ZyfraMenuAppItem"
        }
      ],
      "outputsClass": [],
      "propertiesClass": [],
      "methodsClass": [],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\r\nimport { ZyfraMenuAppItem } from '../zyfra-menu-applications.interface';\r\n\r\n@Component({\r\n  selector: 'zyfra-menu-applications-item',\r\n  templateUrl: './zyfra-menu-applications-item.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class ZyfraMenuApplicationsItemComponent {\r\n  @Input() item: ZyfraMenuAppItem;\r\n  @Input() isActive = false;\r\n}\r\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "templateData": "<button\r\n  class=\"zyfra-menu-applications-item\"\r\n  [class.zyfra-menu-applications-item_active]=\"isActive\"\r\n  type=\"button\"\r\n>\r\n  <zyfra-icon [iconClass]=\"item.icon\" class=\"zyfra-menu-applications-item__icon\"></zyfra-icon>\r\n  <span class=\"zyfra-menu-applications-item__title\">{{ item.title }}</span>\r\n  <zyfra-icon class=\"zyfra-menu-applications-item__arrow\" iconClass=\"arrows-arrow-right\"></zyfra-icon>\r\n</button>\r\n"
    },
    {
      "name": "ZyfraMessageComponent",
      "id": "component-ZyfraMessageComponent-070634d35f67d7704b8893a1caca907f",
      "file": "libs/components/src/lib/message/zyfra-message.component.ts",
      "changeDetection": "ChangeDetectionStrategy.OnPush",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [
        {
          "name": "MessageService"
        }
      ],
      "selector": "zyfra-message",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./zyfra-message.component.html"],
      "viewProviders": [],
      "inputsClass": [
        {
          "name": "closable",
          "defaultValue": "true",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 14,
          "type": "boolean"
        },
        {
          "name": "enableService",
          "defaultValue": "true",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 17,
          "type": "boolean"
        },
        {
          "name": "escape",
          "defaultValue": "true",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 18,
          "type": "boolean"
        },
        {
          "name": "hideTransitionOptions",
          "defaultValue": "'200ms cubic-bezier(0.86, 0, 0.07, 1)'",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 20,
          "type": "string"
        },
        {
          "name": "showTransitionOptions",
          "defaultValue": "'300ms ease-out'",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 19,
          "type": "string"
        },
        {
          "name": "style",
          "defaultValue": "''",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 15,
          "type": "string"
        },
        {
          "name": "styleClass",
          "defaultValue": "''",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 16,
          "type": "string"
        },
        {
          "name": "value",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 13,
          "type": "Message[]"
        }
      ],
      "outputsClass": [],
      "propertiesClass": [],
      "methodsClass": [
        {
          "name": "clear",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 35,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [123]
        }
      ],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import { Component, Input, ChangeDetectionStrategy } from '@angular/core';\r\nimport { Message, MessageService, PrimeNGConfig } from 'primeng/api';\r\n\r\n@Component({\r\n  selector: 'zyfra-message',\r\n  templateUrl: './zyfra-message.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  styles: [],\r\n  providers: [MessageService],\r\n})\r\nexport class ZyfraMessageComponent {\r\n  //---- message component --------\r\n  @Input() value: Message[];\r\n  @Input() closable: boolean = true;\r\n  @Input() style: string = '';\r\n  @Input() styleClass: string = '';\r\n  @Input() enableService: boolean = true;\r\n  @Input() escape: boolean = true;\r\n  @Input() showTransitionOptions: string = '300ms ease-out';\r\n  @Input() hideTransitionOptions: string = '200ms cubic-bezier(0.86, 0, 0.07, 1)';\r\n\r\n  // --- for message service -----\r\n  // @Input() severity:string;\r\n  // @Input() summary:string;\r\n  // @Input() detail:string;\r\n  // @Input() id:any;\r\n  // @Input() life:number    = 3000;\r\n  // @Input() sticky:boolean = false;\r\n  // @Input() data:any;\r\n\r\n  constructor(private messageService: MessageService, private primengConfig: PrimeNGConfig) {\r\n    this.primengConfig.ripple = true;\r\n  }\r\n\r\n  public clear(): void {\r\n    this.value = [];\r\n  }\r\n}\r\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "deprecated": false,
        "deprecationMessage": "",
        "args": [
          {
            "name": "messageService",
            "type": "MessageService",
            "deprecated": false,
            "deprecationMessage": ""
          },
          {
            "name": "primengConfig",
            "type": "PrimeNGConfig",
            "deprecated": false,
            "deprecationMessage": ""
          }
        ],
        "line": 20,
        "jsdoctags": [
          {
            "name": "messageService",
            "type": "MessageService",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          },
          {
            "name": "primengConfig",
            "type": "PrimeNGConfig",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      "templateData": "<p-messages\r\n  [(value)]=\"value\"\r\n  [closable]=\"closable\"\r\n  [style]=\"style\"\r\n  [styleClass]=\"styleClass\"\r\n  [enableService]=\"enableService\"\r\n  [escape]=\"escape\"\r\n  [showTransitionOptions]=\"showTransitionOptions\"\r\n  [hideTransitionOptions]=\"hideTransitionOptions\"\r\n></p-messages>\r\n"
    },
    {
      "name": "ZyfraNavMenuComponent",
      "id": "component-ZyfraNavMenuComponent-d25fae2018d4eebddf3fc08b98197224",
      "file": "libs/components/src/lib/nav-menu/components/zyfra-nav-menu/zyfra-nav-menu.component.ts",
      "changeDetection": "ChangeDetectionStrategy.OnPush",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "zyfra-nav-menu",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./zyfra-nav-menu.component.html"],
      "viewProviders": [],
      "inputsClass": [
        {
          "name": "emptyMessage",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 45,
          "type": "string"
        },
        {
          "name": "headerConfig",
          "defaultValue": "{\r\n    settings: false,\r\n    home: false\r\n  }",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 60,
          "type": "HeaderConfig"
        },
        {
          "name": "menuTitle",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 44,
          "type": "string"
        },
        {
          "name": "model",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 65,
          "type": "[]"
        },
        {
          "name": "nodes",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 69,
          "type": "[]"
        },
        {
          "name": "searchPlaceholder",
          "defaultValue": "''",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 46,
          "type": "string"
        },
        {
          "name": "settingsConfig",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 49,
          "type": "SettingsConfig"
        },
        {
          "name": "toolbarConfig",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 47,
          "type": "ToolbarConfig"
        }
      ],
      "outputsClass": [
        {
          "name": "activeItemChange",
          "defaultValue": "new EventEmitter<NavMenuEvent>()",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 81,
          "type": "EventEmitter"
        },
        {
          "name": "homeClick",
          "defaultValue": "new EventEmitter<void>()",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 77,
          "type": "EventEmitter"
        },
        {
          "name": "nodeCollapse",
          "defaultValue": "new EventEmitter<NavMenuEvent>()",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 80,
          "type": "EventEmitter"
        },
        {
          "name": "nodeExpand",
          "defaultValue": "new EventEmitter<NavMenuEvent>()",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 79,
          "type": "EventEmitter"
        },
        {
          "name": "selectionChange",
          "defaultValue": "new EventEmitter<NavMenuSelectionEvent>()",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 78,
          "type": "EventEmitter"
        }
      ],
      "propertiesClass": [
        {
          "name": "_activeNode",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "TreeNode",
          "optional": false,
          "description": "",
          "line": 93,
          "modifierKind": [121]
        },
        {
          "name": "_nodes",
          "defaultValue": "[]",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "TreeNode[]",
          "optional": false,
          "description": "",
          "line": 95,
          "modifierKind": [121]
        },
        {
          "name": "_settings",
          "defaultValue": "DEFAULT_SETTINGS",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "SettingsConfig",
          "optional": false,
          "description": "",
          "line": 94,
          "modifierKind": [121]
        },
        {
          "name": "activeGroup",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "number",
          "optional": false,
          "description": "",
          "line": 91
        },
        {
          "name": "activeNode",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "TreeNode",
          "optional": false,
          "description": "",
          "line": 89
        },
        {
          "name": "destroy$",
          "defaultValue": "new Subject()",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "optional": false,
          "description": "",
          "line": 96,
          "modifierKind": [121]
        },
        {
          "name": "groupNodes",
          "defaultValue": "[]",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "TreeNode[][]",
          "optional": false,
          "description": "",
          "line": 90
        },
        {
          "name": "headerExtraTemplate",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "TemplateRef<any>",
          "optional": false,
          "description": "",
          "line": 84
        },
        {
          "name": "itemExtraTemplate",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "TemplateRef<any>",
          "optional": false,
          "description": "",
          "line": 86
        },
        {
          "name": "menu",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "ElementRef",
          "optional": false,
          "description": "",
          "line": 41,
          "decorators": [
            {
              "name": "ViewChild",
              "stringifiedArguments": "'navMenu'"
            }
          ]
        },
        {
          "name": "menuGroups",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "QueryList<ZyfraNavMenuGroupDirective>",
          "optional": false,
          "description": "",
          "line": 43,
          "decorators": [
            {
              "name": "ContentChildren",
              "stringifiedArguments": "ZyfraNavMenuGroupDirective"
            }
          ]
        },
        {
          "name": "settingsPanelConfig",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "SettingsConfig",
          "optional": false,
          "description": "",
          "line": 88
        },
        {
          "name": "templates",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "QueryList<ZyfraTemplateDirective>",
          "optional": false,
          "description": "",
          "line": 42,
          "decorators": [
            {
              "name": "ContentChildren",
              "stringifiedArguments": "ZyfraTemplateDirective"
            }
          ]
        },
        {
          "name": "toolbarExtraTemplate",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "TemplateRef<any>",
          "optional": false,
          "description": "",
          "line": 85
        }
      ],
      "methodsClass": [
        {
          "name": "activeElement",
          "args": [],
          "optional": false,
          "returnType": "HTMLElement",
          "typeParameters": [],
          "line": 236,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [121]
        },
        {
          "name": "applySettings",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 174,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [123]
        },
        {
          "name": "copyConfig",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 170,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [123]
        },
        {
          "name": "expandBranchFrom",
          "args": [
            {
              "name": "node",
              "type": "TreeNode",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 219,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [121],
          "jsdoctags": [
            {
              "name": "node",
              "type": "TreeNode",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "hasActive",
          "args": [
            {
              "name": "node",
              "type": "TreeNode",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "boolean",
          "typeParameters": [],
          "line": 188,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [121],
          "jsdoctags": [
            {
              "name": "node",
              "type": "TreeNode",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "isActive",
          "args": [
            {
              "name": "item",
              "type": "ZyfraMenuItem",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "boolean",
          "typeParameters": [],
          "line": 210,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [121],
          "jsdoctags": [
            {
              "name": "item",
              "type": "ZyfraMenuItem",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "isSelected",
          "args": [
            {
              "name": "node",
              "type": "TreeNode",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "boolean",
          "typeParameters": [],
          "line": 198,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [121],
          "jsdoctags": [
            {
              "name": "node",
              "type": "TreeNode",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "ngAfterContentInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 105,
          "deprecated": false,
          "deprecationMessage": ""
        },
        {
          "name": "ngAfterViewInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 129,
          "deprecated": false,
          "deprecationMessage": ""
        },
        {
          "name": "ngOnDestroy",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 153,
          "deprecated": false,
          "deprecationMessage": ""
        },
        {
          "name": "nodeCollapseHandler",
          "args": [
            {
              "name": "node",
              "type": "TreeNode",
              "deprecated": false,
              "deprecationMessage": ""
            },
            {
              "name": "groupIndex",
              "type": "number",
              "deprecated": false,
              "deprecationMessage": "",
              "optional": true
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 158,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [123],
          "jsdoctags": [
            {
              "name": "node",
              "type": "TreeNode",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "groupIndex",
              "type": "number",
              "deprecated": false,
              "deprecationMessage": "",
              "optional": true,
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "nodeExpandHandler",
          "args": [
            {
              "name": "node",
              "type": "TreeNode",
              "deprecated": false,
              "deprecationMessage": ""
            },
            {
              "name": "groupIndex",
              "type": "number",
              "deprecated": false,
              "deprecationMessage": "",
              "optional": true
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 162,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [123],
          "jsdoctags": [
            {
              "name": "node",
              "type": "TreeNode",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "groupIndex",
              "type": "number",
              "deprecated": false,
              "deprecationMessage": "",
              "optional": true,
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "scrollToActiveElement",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 229,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [121]
        },
        {
          "name": "selectionChangeHandler",
          "args": [
            {
              "name": "selection",
              "type": "TreeNode<ZyfraMenuItem> | TreeNode<ZyfraMenuItem>[]",
              "deprecated": false,
              "deprecationMessage": ""
            },
            {
              "name": "groupIndex",
              "type": "number",
              "deprecated": false,
              "deprecationMessage": "",
              "optional": true
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 178,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [123],
          "jsdoctags": [
            {
              "name": "selection",
              "type": "TreeNode<ZyfraMenuItem> | TreeNode<ZyfraMenuItem>[]",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "groupIndex",
              "type": "number",
              "deprecated": false,
              "deprecationMessage": "",
              "optional": true,
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "updateActiveItem",
          "args": [
            {
              "name": "node",
              "type": "TreeNode",
              "deprecated": false,
              "deprecationMessage": ""
            },
            {
              "name": "groupIndex",
              "type": "number",
              "deprecated": false,
              "deprecationMessage": "",
              "optional": true
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 166,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [123],
          "jsdoctags": [
            {
              "name": "node",
              "type": "TreeNode",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "groupIndex",
              "type": "number",
              "deprecated": false,
              "deprecationMessage": "",
              "optional": true,
              "tagName": {
                "text": "param"
              }
            }
          ]
        }
      ],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import {\r\n  AfterContentInit,\r\n  AfterViewInit,\r\n  ChangeDetectionStrategy,\r\n  ChangeDetectorRef,\r\n  Component,\r\n  ContentChildren,\r\n  ElementRef,\r\n  EventEmitter,\r\n  Input,\r\n  OnDestroy,\r\n  Output,\r\n  QueryList,\r\n  Renderer2,\r\n  TemplateRef,\r\n  ViewChild,\r\n  ViewContainerRef\r\n} from '@angular/core';\r\nimport { TreeNode } from 'primeng/api';\r\nimport { ZyfraNavMenuGroupDirective } from '../../directives/nav-menu-group.directive';\r\nimport { Router } from '@angular/router';\r\nimport { ZyfraMenuItem } from '../../model/zyfra-menu-item.interface';\r\nimport { Subject } from 'rxjs';\r\nimport { convertToNode } from '../../utils/treeNode.functions';\r\nimport {\r\n  DEFAULT_SETTINGS,\r\n  HeaderConfig,\r\n  NavMenuEvent,\r\n  NavMenuSelectionEvent,\r\n  SettingsConfig,\r\n  ToolbarConfig\r\n} from '../../model/nav-menu-config';\r\nimport { ZyfraTemplateDirective } from '../../../@core/shared/zyfra-template.module';\r\n\r\n@Component({\r\n  selector: 'zyfra-nav-menu',\r\n  templateUrl: './zyfra-nav-menu.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class ZyfraNavMenuComponent implements AfterViewInit, AfterContentInit, OnDestroy {\r\n  @ViewChild('navMenu') menu: ElementRef;\r\n  @ContentChildren(ZyfraTemplateDirective) templates: QueryList<ZyfraTemplateDirective>;\r\n  @ContentChildren(ZyfraNavMenuGroupDirective) menuGroups: QueryList<ZyfraNavMenuGroupDirective>;\r\n  @Input() menuTitle: string;\r\n  @Input() emptyMessage: string;\r\n  @Input() searchPlaceholder: string = '';\r\n  @Input() toolbarConfig: ToolbarConfig;\r\n\r\n  @Input() get settingsConfig(): SettingsConfig {\r\n    return this._settings;\r\n  }\r\n\r\n  set settingsConfig(settings: SettingsConfig) {\r\n    if (!settings) {\r\n      return;\r\n    }\r\n    this._settings = { ...DEFAULT_SETTINGS, ...settings };\r\n  };\r\n\r\n  @Input() headerConfig: HeaderConfig = {\r\n    settings: false,\r\n    home: false\r\n  };\r\n\r\n  @Input() set model(items: ZyfraMenuItem[]) {\r\n    this.nodes = (items || []).map(item => convertToNode(item));\r\n  }\r\n\r\n  @Input() set nodes(nodes: TreeNode[]) {\r\n    this._nodes = nodes;\r\n  }\r\n\r\n  get nodes(): TreeNode[] {\r\n    return this._nodes;\r\n  }\r\n\r\n  @Output() homeClick = new EventEmitter<void>();\r\n  @Output() selectionChange = new EventEmitter<NavMenuSelectionEvent>();\r\n  @Output() nodeExpand = new EventEmitter<NavMenuEvent>();\r\n  @Output() nodeCollapse = new EventEmitter<NavMenuEvent>();\r\n  @Output() activeItemChange = new EventEmitter<NavMenuEvent>();\r\n\r\n\r\n  headerExtraTemplate: TemplateRef<any>;\r\n  toolbarExtraTemplate: TemplateRef<any>;\r\n  itemExtraTemplate: TemplateRef<any>;\r\n\r\n  settingsPanelConfig: SettingsConfig;\r\n  activeNode: TreeNode;\r\n  groupNodes: TreeNode[][] = [];\r\n  activeGroup: number;\r\n\r\n  private _activeNode: TreeNode;\r\n  private _settings: SettingsConfig = DEFAULT_SETTINGS;\r\n  private _nodes: TreeNode[] = [];\r\n  private destroy$ = new Subject();\r\n\r\n  constructor(private renderer: Renderer2,\r\n              private viewContainerRef: ViewContainerRef,\r\n              private cdr: ChangeDetectorRef,\r\n              private router: Router\r\n  ) {\r\n  }\r\n\r\n  ngAfterContentInit(): void {\r\n    if (this.menuGroups) {\r\n      this.menuGroups.forEach(({ items }: ZyfraNavMenuGroupDirective) => {\r\n        this.groupNodes.push(items.map((item: ZyfraMenuItem) => convertToNode(item)));\r\n      });\r\n    }\r\n\r\n    this.templates.forEach((item) => {\r\n      switch (item.zyfraTemplate) {\r\n        case 'header':\r\n          this.headerExtraTemplate = item.templateRef;\r\n          break;\r\n        case 'toolbar':\r\n          this.toolbarExtraTemplate = item.templateRef;\r\n          break;\r\n        case 'menuitem':\r\n          this.itemExtraTemplate = item.templateRef;\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    });\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    let activeGroup;\r\n    if (this.groupNodes.length) {\r\n      this.groupNodes.some((nodes, groupIndex) =>\r\n        nodes.some((node) => {\r\n          const isActiveGroup = this.hasActive(node);\r\n          if (isActiveGroup) {\r\n            activeGroup = groupIndex;\r\n          }\r\n          return isActiveGroup;\r\n        }));\r\n    } else {\r\n      this.nodes.some(node => this.hasActive(node));\r\n    }\r\n    requestAnimationFrame(() => {\r\n      this.activeNode = this._activeNode;\r\n      this.activeGroup = activeGroup;\r\n      if (this.activeNode) {\r\n        this.expandBranchFrom(this.activeNode);\r\n        setTimeout(() => this.scrollToActiveElement(), 500);\r\n      }\r\n    });\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.destroy$.next();\r\n    this.destroy$.complete();\r\n  }\r\n\r\n  public nodeCollapseHandler(node: TreeNode, groupIndex?: number): void {\r\n    this.nodeCollapse.emit({ item: node.data, groupIndex });\r\n  }\r\n\r\n  public nodeExpandHandler(node: TreeNode, groupIndex?: number): void {\r\n    this.nodeExpand.emit({ item: node.data, groupIndex });\r\n  }\r\n\r\n  public updateActiveItem(node: TreeNode, groupIndex?: number): void {\r\n    this.activeItemChange.emit({ item: node.data, groupIndex });\r\n  }\r\n\r\n  public copyConfig(): void {\r\n    this.settingsPanelConfig = { ...this.settingsConfig };\r\n  }\r\n\r\n  public applySettings(): void {\r\n    this.settingsConfig = this.settingsPanelConfig;\r\n  }\r\n\r\n  public selectionChangeHandler(selection: TreeNode<ZyfraMenuItem> | TreeNode<ZyfraMenuItem>[], groupIndex?: number): void {\r\n    let selectionData;\r\n    if (selection) {\r\n      selectionData = Array.isArray(selection)\r\n        ? selection.map(node => node.data)\r\n        : selection.data;\r\n    }\r\n    this.selectionChange.emit({ selection: selectionData, groupIndex });\r\n  }\r\n\r\n  private hasActive(node: TreeNode): boolean {\r\n    if (this.isSelected(node)) {\r\n      return true;\r\n    }\r\n    if (node.children) {\r\n      return node.children.some(childNode => this.isSelected(childNode) || this.hasActive(childNode));\r\n    }\r\n    return this.isSelected(node);\r\n  }\r\n\r\n  private isSelected(node: TreeNode): boolean {\r\n    if (node.data.routerLink) {\r\n      const isActive = this.isActive(node.data);\r\n      if (isActive) {\r\n        node.styleClass = 'active';\r\n        this._activeNode = node;\r\n      }\r\n      return isActive;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  private isActive(item: ZyfraMenuItem): boolean {\r\n    return item.routerLink && this.router.isActive(this.router.createUrlTree(item.routerLink), {\r\n      paths: 'subset',\r\n      queryParams: 'subset',\r\n      fragment: 'ignored',\r\n      matrixParams: 'ignored'\r\n    });\r\n  }\r\n\r\n  private expandBranchFrom(node: TreeNode): void {\r\n    if (node.parent) {\r\n      node.parent.expanded = true;\r\n      this.expandBranchFrom(node.parent);\r\n    } else {\r\n      node.expanded = true;\r\n    }\r\n    this.cdr.markForCheck();\r\n  }\r\n\r\n  private scrollToActiveElement(): void {\r\n    const activeItem = this.activeElement();\r\n    if (activeItem) {\r\n      activeItem.scrollIntoView({ block: 'center', behavior: 'smooth' })\r\n    }\r\n  }\r\n\r\n  private activeElement(): HTMLElement {\r\n    return this.menu.nativeElement.querySelector('.p-treenode.active');\r\n  }\r\n}\r\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "deprecated": false,
        "deprecationMessage": "",
        "args": [
          {
            "name": "renderer",
            "type": "Renderer2",
            "deprecated": false,
            "deprecationMessage": ""
          },
          {
            "name": "viewContainerRef",
            "type": "ViewContainerRef",
            "deprecated": false,
            "deprecationMessage": ""
          },
          {
            "name": "cdr",
            "type": "ChangeDetectorRef",
            "deprecated": false,
            "deprecationMessage": ""
          },
          {
            "name": "router",
            "type": "Router",
            "deprecated": false,
            "deprecationMessage": ""
          }
        ],
        "line": 96,
        "jsdoctags": [
          {
            "name": "renderer",
            "type": "Renderer2",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          },
          {
            "name": "viewContainerRef",
            "type": "ViewContainerRef",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          },
          {
            "name": "cdr",
            "type": "ChangeDetectorRef",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          },
          {
            "name": "router",
            "type": "Router",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      "implements": ["AfterViewInit", "AfterContentInit", "OnDestroy"],
      "accessors": {
        "settingsConfig": {
          "name": "settingsConfig",
          "setSignature": {
            "name": "settingsConfig",
            "type": "void",
            "deprecated": false,
            "deprecationMessage": "",
            "args": [
              {
                "name": "settings",
                "type": "SettingsConfig",
                "deprecated": false,
                "deprecationMessage": ""
              }
            ],
            "returnType": "void",
            "line": 53,
            "jsdoctags": [
              {
                "name": "settings",
                "type": "SettingsConfig",
                "deprecated": false,
                "deprecationMessage": "",
                "tagName": {
                  "text": "param"
                }
              }
            ]
          },
          "getSignature": {
            "name": "settingsConfig",
            "type": "",
            "returnType": "SettingsConfig",
            "line": 49
          }
        },
        "model": {
          "name": "model",
          "setSignature": {
            "name": "model",
            "type": "void",
            "deprecated": false,
            "deprecationMessage": "",
            "args": [
              {
                "name": "items",
                "type": "ZyfraMenuItem[]",
                "deprecated": false,
                "deprecationMessage": ""
              }
            ],
            "returnType": "void",
            "line": 65,
            "jsdoctags": [
              {
                "name": "items",
                "type": "ZyfraMenuItem[]",
                "deprecated": false,
                "deprecationMessage": "",
                "tagName": {
                  "text": "param"
                }
              }
            ]
          }
        },
        "nodes": {
          "name": "nodes",
          "setSignature": {
            "name": "nodes",
            "type": "void",
            "deprecated": false,
            "deprecationMessage": "",
            "args": [
              {
                "name": "nodes",
                "type": "TreeNode[]",
                "deprecated": false,
                "deprecationMessage": ""
              }
            ],
            "returnType": "void",
            "line": 69,
            "jsdoctags": [
              {
                "name": "nodes",
                "type": "TreeNode[]",
                "deprecated": false,
                "deprecationMessage": "",
                "tagName": {
                  "text": "param"
                }
              }
            ]
          },
          "getSignature": {
            "name": "nodes",
            "type": "[]",
            "returnType": "TreeNode[]",
            "line": 73
          }
        }
      },
      "templateData": "<div class=\"zyfra-nav-menu p-component\" #navMenu>\r\n\r\n  <div class=\"header\" #header>\r\n    <div class=\"app-name\">{{menuTitle}}</div>\r\n    <div class=\"right-side\">\r\n      <ng-container *ngTemplateOutlet=\"headerExtraTemplate\"></ng-container>\r\n      <i *ngIf=\"headerConfig?.settings\" class=\"toolbar-button zyfra-icon settings-tune\"\r\n         (click)=\"copyConfig(); settingPanel.show($event, header)\"></i>\r\n      <i *ngIf=\"headerConfig?.home\" class=\"toolbar-button zyfra-icon social-home\"\r\n         (click)=\"homeClick.emit()\"></i>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"nav-menu-content\"\r\n       [ngClass]=\"settingsConfig?.selectedSize\">\r\n    <ng-container *ngIf=\"menuGroups.length; else noGroups\">\r\n      <zyfra-accordion [multiple]=\"!settingsConfig.singleGroup\">\r\n        <zyfra-accordion-tab *ngFor=\"let group of menuGroups; let i = index\" [selected]=\"i === activeGroup\">\r\n          <ng-template zyfraTemplate=\"header\">\r\n            <span class=\"p-accordion-header-text groupHeader\">\r\n                <i class=\"zyfra-icon vectors-circle\"></i>{{group.header}}\r\n            </span>\r\n          </ng-template>\r\n          <zyfra-menu-group-content [nodes]=\"groupNodes[i]\"\r\n                                    [selectionMode]=\"settingsConfig.selectionMode\"\r\n                                    [activeNode]=\"activeGroup === i ? activeNode : null\"\r\n                                    [searchPlaceholder]=\"searchPlaceholder\"\r\n                                    [toolbarConfig]=\"toolbarConfig\"\r\n                                    [toolbarExtra]=\"toolbarExtraTemplate\"\r\n                                    [itemExtra]=\"itemExtraTemplate\"\r\n                                    [emptyMessage]=\"emptyMessage\"\r\n                                    (activeItemChange)=\"updateActiveItem($event, i)\"\r\n                                    (selectionChange)=\"selectionChangeHandler($event, i)\"\r\n                                    (nodeCollapse)=\"nodeCollapseHandler($event, i)\"\r\n                                    (nodeExpand)=\"nodeExpandHandler($event, i)\">\r\n          </zyfra-menu-group-content>\r\n        </zyfra-accordion-tab>\r\n      </zyfra-accordion>\r\n    </ng-container>\r\n\r\n    <ng-template #noGroups>\r\n      <zyfra-menu-group-content [nodes]=\"nodes\"\r\n                                [activeNode]=\"activeNode\"\r\n                                [selectionMode]=\"settingsConfig.selectionMode\"\r\n                                [searchPlaceholder]=\"searchPlaceholder\"\r\n                                [toolbarConfig]=\"toolbarConfig\"\r\n                                [toolbarExtra]=\"toolbarExtraTemplate\"\r\n                                [itemExtra]=\"itemExtraTemplate\"\r\n                                [emptyMessage]=\"emptyMessage\"\r\n                                (activeItemChange)=\"updateActiveItem($event)\"\r\n                                (selectionChange)=\"selectionChangeHandler($event)\"\r\n                                (nodeCollapse)=\"nodeCollapseHandler($event)\"\r\n                                (nodeExpand)=\"nodeExpandHandler($event)\">\r\n      </zyfra-menu-group-content>\r\n    </ng-template>\r\n  </div>\r\n\r\n  <p-overlayPanel #settingPanel\r\n                  styleClass=\"settingsPanel\"\r\n                  [dismissable]=\"false\"\r\n                  [appendTo]=\"header\">\r\n    <ng-template pTemplate>\r\n      <div>Настройки навигационой панели</div>\r\n      <div class=\"settings-block\">\r\n        <span>Представление</span>\r\n        <zyfra-checkbox label=\"Одиночный режим групповых панелей\"\r\n                        [(ngModel)]=\"settingsPanelConfig.singleGroup\"></zyfra-checkbox>\r\n        <zyfra-checkbox label=\"Режим множественного выбора элементов\"\r\n                        [ngModel]=\"settingsPanelConfig.selectionMode === 'checkbox'\"\r\n                        (ngModelChange)=\"settingsPanelConfig.selectionMode = $event ? 'checkbox' : 'single'\"></zyfra-checkbox>\r\n      </div>\r\n      <div class=\"settings-block\">\r\n        <span>Степень компактности</span>\r\n        <p-radioButton name=\"size\"\r\n                       value=\"standard\"\r\n                       label=\"Стандартный вид\"\r\n                       [(ngModel)]=\"settingsPanelConfig.selectedSize\"></p-radioButton>\r\n        <p-radioButton name=\"size\"\r\n                       value=\"enlarged\"\r\n                       label=\"Увеличенный вид\"\r\n                       [(ngModel)]=\"settingsPanelConfig.selectedSize\"></p-radioButton>\r\n      </div>\r\n      <div>\r\n        <zyfra-button styleClass=\"p-button-secondary p-button-mini\"\r\n                      label=\"Отмена\"\r\n                      (onClick)=\"settingPanel.hide()\"></zyfra-button>\r\n        <zyfra-button styleClass=\"p-button-mini\"\r\n                      label=\"Подтвердить\"\r\n                      (onClick)=\"applySettings(); settingPanel.hide()\"></zyfra-button>\r\n      </div>\r\n    </ng-template>\r\n  </p-overlayPanel>\r\n</div>\r\n"
    },
    {
      "name": "ZyfraNavMenuGroupComponent",
      "id": "component-ZyfraNavMenuGroupComponent-42008c3e738aef911d17655306503ec2",
      "file": "libs/components/src/lib/nav-menu/components/zyfra-nav-menu-group/zyfra-nav-menu-group.component.ts",
      "changeDetection": "ChangeDetectionStrategy.OnPush",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "zyfra-menu-group-content",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./zyfra-nav-menu-group.component.html"],
      "viewProviders": [],
      "inputsClass": [
        {
          "name": "activeNode",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 43,
          "type": ""
        },
        {
          "name": "emptyMessage",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 39,
          "type": "string"
        },
        {
          "name": "itemExtra",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 37,
          "type": "TemplateRef<any>"
        },
        {
          "name": "nodes",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 55,
          "type": "[]"
        },
        {
          "name": "search",
          "defaultValue": "false",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 40,
          "type": "boolean"
        },
        {
          "name": "searchPlaceholder",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 41,
          "type": "string"
        },
        {
          "name": "selectionMode",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 71,
          "type": ""
        },
        {
          "name": "toolbarConfig",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 87,
          "type": ""
        },
        {
          "name": "toolbarExtra",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 38,
          "type": "TemplateRef<any>"
        }
      ],
      "outputsClass": [
        {
          "name": "activeItemChange",
          "defaultValue": "new EventEmitter()",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 100,
          "type": "EventEmitter<TreeNode>"
        },
        {
          "name": "nodeCollapse",
          "defaultValue": "new EventEmitter()",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 102,
          "type": "EventEmitter<TreeNode>"
        },
        {
          "name": "nodeExpand",
          "defaultValue": "new EventEmitter()",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 101,
          "type": "EventEmitter<TreeNode>"
        },
        {
          "name": "selectionChange",
          "defaultValue": "new EventEmitter()",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 99,
          "type": "EventEmitter<TreeNode | []>"
        }
      ],
      "propertiesClass": [
        {
          "name": "_activeNode",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "TreeNode",
          "optional": false,
          "description": "",
          "line": 111,
          "modifierKind": [121]
        },
        {
          "name": "_nodes",
          "defaultValue": "[]",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "TreeNode[]",
          "optional": false,
          "description": "",
          "line": 110,
          "modifierKind": [121]
        },
        {
          "name": "_selectionMode",
          "defaultValue": "'single'",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "SelectionType",
          "optional": false,
          "description": "",
          "line": 109,
          "modifierKind": [121]
        },
        {
          "name": "_toolbarConfig",
          "defaultValue": "DEFAULT_TOOLBAR_CONFIG",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "ToolbarConfig",
          "optional": false,
          "description": "",
          "line": 112,
          "modifierKind": [121]
        },
        {
          "name": "activeRootNode",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "TreeNode",
          "optional": false,
          "description": "",
          "line": 113,
          "modifierKind": [121]
        },
        {
          "name": "currentFolder",
          "defaultValue": "null",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "TreeNode",
          "optional": false,
          "description": "",
          "line": 107
        },
        {
          "name": "destroyed$",
          "defaultValue": "new Subject()",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "optional": false,
          "description": "",
          "line": 118,
          "modifierKind": [121]
        },
        {
          "name": "folderIcons",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "TemplateRef<any>",
          "optional": false,
          "description": "",
          "line": 36,
          "decorators": [
            {
              "name": "ViewChild",
              "stringifiedArguments": "'folderIcons'"
            }
          ],
          "modifierKind": [123]
        },
        {
          "name": "folderPath",
          "defaultValue": "[]",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "[]",
          "optional": false,
          "description": "",
          "line": 117,
          "modifierKind": [121]
        },
        {
          "name": "isToolbarNotEmpty",
          "defaultValue": "false",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "boolean",
          "optional": false,
          "description": "",
          "line": 104
        },
        {
          "name": "pathToActiveNode",
          "defaultValue": "[]",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "[]",
          "optional": false,
          "description": "",
          "line": 116,
          "modifierKind": [121]
        },
        {
          "name": "rubricatorNodes",
          "defaultValue": "[]",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "TreeNode[]",
          "optional": false,
          "description": "",
          "line": 115,
          "modifierKind": [121]
        },
        {
          "name": "tree",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Tree",
          "optional": false,
          "description": "",
          "line": 35,
          "decorators": [
            {
              "name": "ViewChild",
              "stringifiedArguments": "Tree"
            }
          ],
          "modifierKind": [123]
        },
        {
          "name": "treeWrapper",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Element",
          "optional": false,
          "description": "",
          "line": 114,
          "modifierKind": [121]
        },
        {
          "name": "viewMode",
          "defaultValue": "'hierarchy'",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "ViewMode",
          "optional": false,
          "description": "",
          "line": 106
        },
        {
          "name": "viewNodes",
          "defaultValue": "[]",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "TreeNode[]",
          "optional": false,
          "description": "",
          "line": 105
        }
      ],
      "methodsClass": [
        {
          "name": "changeActiveParent",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 264,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [121]
        },
        {
          "name": "changeSearchValue",
          "args": [
            {
              "name": "searchString",
              "type": "string",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 234,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [123],
          "jsdoctags": [
            {
              "name": "searchString",
              "type": "string",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "changeViewMode",
          "args": [
            {
              "name": "triggeredMode",
              "type": "ViewMode",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 219,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [123],
          "jsdoctags": [
            {
              "name": "triggeredMode",
              "type": "ViewMode",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "clearSearchField",
          "args": [
            {
              "name": "field",
              "type": "HTMLInputElement",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 238,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [123],
          "jsdoctags": [
            {
              "name": "field",
              "type": "HTMLInputElement",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "closeAll",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 210,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [123]
        },
        {
          "name": "collapseAllNodes",
          "args": [
            {
              "name": "excludeBranch",
              "type": "TreeNode",
              "deprecated": false,
              "deprecationMessage": "",
              "optional": true
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 283,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [121],
          "jsdoctags": [
            {
              "name": "excludeBranch",
              "type": "TreeNode",
              "deprecated": false,
              "deprecationMessage": "",
              "optional": true,
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "collapseBranch",
          "args": [
            {
              "name": "node",
              "type": "TreeNode",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 291,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [121],
          "jsdoctags": [
            {
              "name": "node",
              "type": "TreeNode",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "collapseBranchFrom",
          "args": [
            {
              "name": "node",
              "type": "TreeNode",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 271,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [121],
          "jsdoctags": [
            {
              "name": "node",
              "type": "TreeNode",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "ngAfterViewInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 145,
          "deprecated": false,
          "deprecationMessage": ""
        },
        {
          "name": "ngOnDestroy",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 151,
          "deprecated": false,
          "deprecationMessage": ""
        },
        {
          "name": "ngOnInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 126,
          "deprecated": false,
          "deprecationMessage": ""
        },
        {
          "name": "nodeCollapseHandler",
          "args": [
            {
              "name": "node",
              "type": "TreeNode",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 160,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [123],
          "jsdoctags": [
            {
              "name": "node",
              "type": "TreeNode",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "nodeExpandHandler",
          "args": [
            {
              "name": "node",
              "type": "TreeNode",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 166,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [123],
          "jsdoctags": [
            {
              "name": "node",
              "type": "TreeNode",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "resetActiveParent",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 253,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [121]
        },
        {
          "name": "selectionChangeHandler",
          "args": [
            {
              "name": "selection",
              "type": "TreeNode | TreeNode[]",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 156,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [123],
          "jsdoctags": [
            {
              "name": "selection",
              "type": "TreeNode | TreeNode[]",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "setActiveNode",
          "args": [
            {
              "name": "node",
              "type": "TreeNode",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 174,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [123],
          "jsdoctags": [
            {
              "name": "node",
              "type": "TreeNode",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "setCurrentNode",
          "args": [
            {
              "name": "node",
              "type": "TreeNode",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 245,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [121],
          "jsdoctags": [
            {
              "name": "node",
              "type": "TreeNode",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "toggleSearch",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 229,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [123]
        },
        {
          "name": "toLevelUp",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 195,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [123]
        },
        {
          "name": "toTop",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 203,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [123]
        },
        {
          "name": "updateIfHasActiveChild",
          "args": [
            {
              "name": "node",
              "type": "TreeNode",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 302,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [121],
          "jsdoctags": [
            {
              "name": "node",
              "type": "TreeNode",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "updateViewNodes",
          "args": [
            {
              "name": "newMode",
              "type": "ViewMode",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 309,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [121],
          "jsdoctags": [
            {
              "name": "newMode",
              "type": "ViewMode",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        }
      ],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import {\r\n  AfterViewInit,\r\n  ChangeDetectionStrategy,\r\n  ChangeDetectorRef,\r\n  Component,\r\n  EventEmitter,\r\n  Input,\r\n  OnDestroy,\r\n  OnInit,\r\n  Output,\r\n  Renderer2,\r\n  TemplateRef,\r\n  ViewChild,\r\n  ViewContainerRef\r\n} from '@angular/core';\r\nimport { Tree } from 'primeng/tree';\r\nimport { TreeNode } from 'primeng/api';\r\nimport { NavMenuService } from '../../service/selection.service';\r\nimport { filter, takeUntil } from 'rxjs/operators';\r\nimport { Subject } from 'rxjs';\r\nimport { fromRubricatorNodes, getPath } from '../../utils/treeNode.functions';\r\nimport {\r\n  DEFAULT_TOOLBAR_CONFIG,\r\n  SelectionType,\r\n  ToolbarConfig,\r\n  ViewMode\r\n} from '../../model/nav-menu-config';\r\n\r\n@Component({\r\n  selector: 'zyfra-menu-group-content',\r\n  templateUrl: './zyfra-nav-menu-group.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class ZyfraNavMenuGroupComponent implements OnInit, AfterViewInit, OnDestroy {\r\n  @ViewChild(Tree) public tree: Tree;\r\n  @ViewChild('folderIcons') public folderIcons: TemplateRef<any>;\r\n  @Input() itemExtra: TemplateRef<any>;\r\n  @Input() toolbarExtra: TemplateRef<any>;\r\n  @Input() emptyMessage: string;\r\n  @Input() search: boolean = false;\r\n  @Input() searchPlaceholder: string;\r\n\r\n  @Input() set activeNode(node: TreeNode) {\r\n    if (!node) {\r\n      return;\r\n    }\r\n    this.currentFolder = node.parent;\r\n    this.setActiveNode(node);\r\n  }\r\n\r\n  get activeNode(): TreeNode {\r\n    return this._activeNode;\r\n  }\r\n\r\n  @Input() set nodes(nodes: TreeNode[]) {\r\n    if (!nodes) {\r\n      return;\r\n    }\r\n\r\n    this._nodes = nodes;\r\n    this.viewNodes = nodes;\r\n    if (this.toolbarConfig.rubricatorMode) {\r\n      this.rubricatorNodes = fromRubricatorNodes(this.nodes);\r\n    }\r\n  }\r\n\r\n  get nodes(): TreeNode[] {\r\n    return this._nodes;\r\n  }\r\n\r\n  @Input() set selectionMode(mode: SelectionType) {\r\n    this._selectionMode = mode;\r\n    if (this.tree && this.tree.selection) {\r\n      if (Array.isArray(this.tree.selection) && this._selectionMode === 'single') {\r\n        this.setActiveNode(this.activeNode);\r\n      }\r\n      if (!Array.isArray(this.tree.selection) && this._selectionMode === 'checkbox') {\r\n        this.tree.selection = [this.tree.selection];\r\n      }\r\n    }\r\n  }\r\n\r\n  get selectionMode(): SelectionType {\r\n    return this._selectionMode;\r\n  }\r\n\r\n  @Input() set toolbarConfig(config: ToolbarConfig) {\r\n    if (!config) {\r\n      return;\r\n    }\r\n    this._toolbarConfig = { ...DEFAULT_TOOLBAR_CONFIG, ...config };\r\n    this.isToolbarNotEmpty = Object.values(this._toolbarConfig).some(value => value);\r\n  }\r\n\r\n  get toolbarConfig(): ToolbarConfig {\r\n    return this._toolbarConfig;\r\n  }\r\n\r\n  @Output() selectionChange: EventEmitter<TreeNode | TreeNode[]> = new EventEmitter();\r\n  @Output() activeItemChange: EventEmitter<TreeNode> = new EventEmitter();\r\n  @Output() nodeExpand: EventEmitter<TreeNode> = new EventEmitter();\r\n  @Output() nodeCollapse: EventEmitter<TreeNode> = new EventEmitter();\r\n\r\n  isToolbarNotEmpty: boolean = false;\r\n  viewNodes: TreeNode[] = [];\r\n  viewMode: ViewMode = 'hierarchy';\r\n  currentFolder: TreeNode = null;\r\n\r\n  private _selectionMode: SelectionType = 'single';\r\n  private _nodes: TreeNode[] = [];\r\n  private _activeNode: TreeNode;\r\n  private _toolbarConfig: ToolbarConfig = DEFAULT_TOOLBAR_CONFIG;\r\n  private activeRootNode: TreeNode;\r\n  private treeWrapper: Element;\r\n  private rubricatorNodes: TreeNode[] = [];\r\n  private pathToActiveNode = [];\r\n  private folderPath = [];\r\n  private destroyed$ = new Subject();\r\n\r\n  constructor(private renderer: Renderer2,\r\n              private viewContainerRef: ViewContainerRef,\r\n              private cdr: ChangeDetectorRef,\r\n              private navMenuService: NavMenuService\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.navMenuService.selection$\r\n      .pipe(\r\n        filter(() => Boolean(this.tree)),\r\n        takeUntil(this.destroyed$)\r\n      )\r\n      .subscribe(value => {\r\n        if (value !== this.activeNode) {\r\n          this.resetActiveParent();\r\n          if (this.selectionMode === 'single') {\r\n            if (this.tree.selection) {\r\n              this.tree.selection = null;\r\n              this.selectionChange.emit(this.tree.selection);\r\n            }\r\n          }\r\n        }\r\n      });\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    const embeddedViewRef = this.viewContainerRef.createEmbeddedView(this.folderIcons);\r\n    this.treeWrapper = this.tree.el.nativeElement.querySelector('.p-tree-wrapper');\r\n    this.renderer.appendChild(this.treeWrapper, embeddedViewRef.rootNodes[0]);\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.destroyed$.next();\r\n    this.destroyed$.complete();\r\n  }\r\n\r\n  public selectionChangeHandler(selection: TreeNode | TreeNode[]): void {\r\n    this.selectionChange.emit(selection);\r\n  };\r\n\r\n  public nodeCollapseHandler(node: TreeNode): void {\r\n    this.nodeCollapse.emit(node);\r\n    this.currentFolder = node.parent;\r\n    this.updateIfHasActiveChild(node);\r\n  }\r\n\r\n  public nodeExpandHandler(node: TreeNode): void {\r\n    if (node === this.activeRootNode) {\r\n      this.changeActiveParent();\r\n    }\r\n    this.setCurrentNode(node);\r\n    this.nodeExpand.emit(node);\r\n  }\r\n\r\n  public setActiveNode(node: TreeNode): void {\r\n    this.resetActiveParent();\r\n    if (this.selectionMode === 'single') {\r\n      this.tree.selection = node;\r\n      this.selectionChange.emit(this.tree.selection);\r\n      this._activeNode = node;\r\n      this.navMenuService.selectionChange(node);\r\n    } else {\r\n      if (this._activeNode) {\r\n        this._activeNode.styleClass = '';\r\n      }\r\n      this._activeNode = node;\r\n      this._activeNode.styleClass = 'active';\r\n    }\r\n    this.pathToActiveNode = getPath(node);\r\n    if (this.viewMode === 'folder') {\r\n      this.pathToActiveNode = [...this.folderPath, getPath(node)[1]];\r\n    }\r\n    this.activeItemChange.emit(node);\r\n  }\r\n\r\n  public toLevelUp(): void {\r\n    this.currentFolder.expanded = false;\r\n    this.nodeCollapseHandler(this.currentFolder);\r\n    this.currentFolder = this.folderPath.pop();\r\n    this.viewNodes = this.currentFolder ? [this.currentFolder] : this.nodes;\r\n    this.cdr.markForCheck();\r\n  }\r\n\r\n  public toTop(): void {\r\n    this.collapseBranchFrom(this.currentFolder);\r\n    this.currentFolder = null;\r\n    this.viewNodes = this.nodes;\r\n    this.cdr.markForCheck();\r\n  }\r\n\r\n  public closeAll(): void {\r\n    if (this.viewMode === 'folder') {\r\n      this.toTop();\r\n    } else {\r\n      this.collapseAllNodes();\r\n    }\r\n    this.currentFolder = null;\r\n  }\r\n\r\n  public changeViewMode(triggeredMode: ViewMode): void {\r\n    if (this.viewMode === 'rubricator') {\r\n      this.currentFolder = null;\r\n    }\r\n    this.viewMode = this.viewMode === triggeredMode\r\n      ? 'hierarchy'\r\n      : triggeredMode;\r\n    this.updateViewNodes(this.viewMode);\r\n  }\r\n\r\n  public toggleSearch(): void {\r\n    this.changeSearchValue('');\r\n    this.search = !this.search;\r\n  }\r\n\r\n  public changeSearchValue(searchString: string): void {\r\n    this.tree._filter(searchString);\r\n  }\r\n\r\n  public clearSearchField(field: HTMLInputElement): void {\r\n    field.value = '';\r\n    this.changeSearchValue('');\r\n    field.focus();\r\n  }\r\n\r\n\r\n  private setCurrentNode(node: TreeNode): void {\r\n    if (this.viewMode === 'folder') {\r\n      this.folderPath.push(this.currentFolder);\r\n      this.viewNodes = [node];\r\n    }\r\n    this.currentFolder = node;\r\n  }\r\n\r\n  private resetActiveParent(): void {\r\n    if (this.activeRootNode && this.pathToActiveNode) {\r\n      this.pathToActiveNode.forEach(node => {\r\n        if (node) {\r\n          node.styleClass = '';\r\n        }\r\n      });\r\n      this.activeRootNode = null;\r\n    }\r\n  }\r\n\r\n  private changeActiveParent(): void {\r\n    if (this.activeRootNode) {\r\n      this.activeRootNode.styleClass = '';\r\n      this.activeRootNode = this.pathToActiveNode.find(node => node?.styleClass === 'active-root');\r\n    }\r\n  }\r\n\r\n  private collapseBranchFrom(node: TreeNode): void {\r\n    this.updateIfHasActiveChild(node);\r\n    node.expanded = false;\r\n    while (this.folderPath.length) {\r\n      const parent = this.folderPath.pop();\r\n      if (parent) {\r\n        parent.expanded = false;\r\n      }\r\n      this.updateIfHasActiveChild(parent);\r\n    }\r\n  }\r\n\r\n  private collapseAllNodes(excludeBranch?: TreeNode): void {\r\n    this.viewNodes.forEach(node => {\r\n      if (node !== excludeBranch) {\r\n        this.collapseBranch(node);\r\n      }\r\n    });\r\n  }\r\n\r\n  private collapseBranch(node: TreeNode): void {\r\n    node.expanded = false;\r\n    if (node.children) {\r\n      node.children.forEach(childNode => {\r\n        this.updateIfHasActiveChild(childNode);\r\n        this.collapseBranch(childNode);\r\n      });\r\n    }\r\n    this.updateIfHasActiveChild(node);\r\n  }\r\n\r\n  private updateIfHasActiveChild(node: TreeNode): void {\r\n    if (node && this.pathToActiveNode.includes(node)) {\r\n      this.activeRootNode = node;\r\n      this.activeRootNode.styleClass = 'active-root';\r\n    }\r\n  }\r\n\r\n  private updateViewNodes(newMode: ViewMode): void {\r\n    if (newMode === 'rubricator') {\r\n      if (!this.rubricatorNodes.length) {\r\n        this.rubricatorNodes = fromRubricatorNodes(this.nodes);\r\n      }\r\n      this.viewNodes = this.rubricatorNodes;\r\n    } else if (newMode === 'folder') {\r\n      if (this.currentFolder) {\r\n        this.folderPath = getPath(this.currentFolder);\r\n        this.collapseAllNodes(this.folderPath[1] || this.currentFolder);\r\n        this.currentFolder.expanded = true;\r\n      }\r\n      this.viewNodes = this.currentFolder ? [this.currentFolder] : this.nodes;\r\n    } else {\r\n      this.viewNodes = this.nodes;\r\n    }\r\n    if (this.search) {\r\n      this.toggleSearch();\r\n    }\r\n  }\r\n}\r\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "deprecated": false,
        "deprecationMessage": "",
        "args": [
          {
            "name": "renderer",
            "type": "Renderer2",
            "deprecated": false,
            "deprecationMessage": ""
          },
          {
            "name": "viewContainerRef",
            "type": "ViewContainerRef",
            "deprecated": false,
            "deprecationMessage": ""
          },
          {
            "name": "cdr",
            "type": "ChangeDetectorRef",
            "deprecated": false,
            "deprecationMessage": ""
          },
          {
            "name": "navMenuService",
            "type": "NavMenuService",
            "deprecated": false,
            "deprecationMessage": ""
          }
        ],
        "line": 118,
        "jsdoctags": [
          {
            "name": "renderer",
            "type": "Renderer2",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          },
          {
            "name": "viewContainerRef",
            "type": "ViewContainerRef",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          },
          {
            "name": "cdr",
            "type": "ChangeDetectorRef",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          },
          {
            "name": "navMenuService",
            "type": "NavMenuService",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      "implements": ["OnInit", "AfterViewInit", "OnDestroy"],
      "accessors": {
        "activeNode": {
          "name": "activeNode",
          "setSignature": {
            "name": "activeNode",
            "type": "void",
            "deprecated": false,
            "deprecationMessage": "",
            "args": [
              {
                "name": "node",
                "type": "TreeNode",
                "deprecated": false,
                "deprecationMessage": ""
              }
            ],
            "returnType": "void",
            "line": 43,
            "jsdoctags": [
              {
                "name": "node",
                "type": "TreeNode",
                "deprecated": false,
                "deprecationMessage": "",
                "tagName": {
                  "text": "param"
                }
              }
            ]
          },
          "getSignature": {
            "name": "activeNode",
            "type": "",
            "returnType": "TreeNode",
            "line": 51
          }
        },
        "nodes": {
          "name": "nodes",
          "setSignature": {
            "name": "nodes",
            "type": "void",
            "deprecated": false,
            "deprecationMessage": "",
            "args": [
              {
                "name": "nodes",
                "type": "TreeNode[]",
                "deprecated": false,
                "deprecationMessage": ""
              }
            ],
            "returnType": "void",
            "line": 55,
            "jsdoctags": [
              {
                "name": "nodes",
                "type": "TreeNode[]",
                "deprecated": false,
                "deprecationMessage": "",
                "tagName": {
                  "text": "param"
                }
              }
            ]
          },
          "getSignature": {
            "name": "nodes",
            "type": "[]",
            "returnType": "TreeNode[]",
            "line": 67
          }
        },
        "selectionMode": {
          "name": "selectionMode",
          "setSignature": {
            "name": "selectionMode",
            "type": "void",
            "deprecated": false,
            "deprecationMessage": "",
            "args": [
              {
                "name": "mode",
                "type": "SelectionType",
                "deprecated": false,
                "deprecationMessage": ""
              }
            ],
            "returnType": "void",
            "line": 71,
            "jsdoctags": [
              {
                "name": "mode",
                "type": "SelectionType",
                "deprecated": false,
                "deprecationMessage": "",
                "tagName": {
                  "text": "param"
                }
              }
            ]
          },
          "getSignature": {
            "name": "selectionMode",
            "type": "",
            "returnType": "SelectionType",
            "line": 83
          }
        },
        "toolbarConfig": {
          "name": "toolbarConfig",
          "setSignature": {
            "name": "toolbarConfig",
            "type": "void",
            "deprecated": false,
            "deprecationMessage": "",
            "args": [
              {
                "name": "config",
                "type": "ToolbarConfig",
                "deprecated": false,
                "deprecationMessage": ""
              }
            ],
            "returnType": "void",
            "line": 87,
            "jsdoctags": [
              {
                "name": "config",
                "type": "ToolbarConfig",
                "deprecated": false,
                "deprecationMessage": "",
                "tagName": {
                  "text": "param"
                }
              }
            ]
          },
          "getSignature": {
            "name": "toolbarConfig",
            "type": "",
            "returnType": "ToolbarConfig",
            "line": 95
          }
        }
      },
      "templateData": "<p-tree #headerToolbar\r\n        filterBy=\"label\"\r\n        filterMode=\"strict\"\r\n        [value]=\"viewNodes\"\r\n        [class.folder-open]=\"viewMode === 'folder' && currentFolder\"\r\n        [emptyMessage]=\"'<Нет данных для отображения>'\"\r\n        [selectionMode]=\"selectionMode\"\r\n        [filterPlaceholder]=\"searchPlaceholder\"\r\n        (selectionChange)=\"selectionChangeHandler($event)\"\r\n        (onNodeCollapse)=\"nodeCollapseHandler($event.node)\"\r\n        (onNodeExpand)=\"nodeExpandHandler($event.node)\">\r\n\r\n    <ng-template *ngIf=\"isToolbarNotEmpty || toolbarExtra\" pTemplate=\"header\">\r\n        <div class=\"header header-toolbar\">\r\n            <div class=\"right-side\">\r\n                <ng-container *ngTemplateOutlet=\"toolbarExtra\"></ng-container>\r\n                <i *ngIf=\"toolbarConfig.filesMode\" class=\"toolbar-button zyfra-icon files-mode\"\r\n                   [class.active]=\"viewMode === 'folder'\"\r\n                   (click)=\"changeViewMode('folder')\"></i>\r\n                <i *ngIf=\"toolbarConfig.rubricatorMode\" class=\"toolbar-button zyfra-icon editor-alfavit\"\r\n                   [class.active]=\"viewMode === 'rubricator'\"\r\n                   (click)=\"changeViewMode('rubricator')\"></i>\r\n                <i *ngIf=\"toolbarConfig.closeAll\" class=\"toolbar-button zyfra-icon chevrons-close-all\"\r\n                   (click)=\"closeAll()\"></i>\r\n                <i *ngIf=\"toolbarConfig.search\" class=\"toolbar-button zyfra-icon sort-zoom-in\"\r\n                   [class.active]=\"search\"\r\n                   (click)=\"toggleSearch()\"></i>\r\n            </div>\r\n        </div>\r\n\r\n        <div *ngIf=\"search\"\r\n             class=\"header header-search-bar\">\r\n            <span class=\"search-bar p-input-icon-left p-input-icon-right\">\r\n                <i class=\"toolbar-button zyfra-icon sort-zoom-in\"></i>\r\n                <i class=\"toolbar-button zyfra-icon tools-broom\"\r\n                   [class.hidden]=\"!searchField.value\"\r\n                   (click)=\"clearSearchField(searchField)\"></i>\r\n                <input #searchField\r\n                       class=\"search-bar-field\"\r\n                       pInputText\r\n                       [zyfraAutofocus]=\"false\"\r\n                       type=\"text\"\r\n                       [placeholder]=\"searchPlaceholder\"\r\n                       (input)=\"changeSearchValue($any($event.target).value)\"/>\r\n            </span>\r\n        </div>\r\n    </ng-template>\r\n\r\n    <ng-template let-node pTemplate=\"default\">\r\n        <zyfra-nav-menu-item [item]=\"node.data\"\r\n                             (itemClick)=\"setActiveNode(node)\" [itemExtra]=\"itemExtra\">\r\n        </zyfra-nav-menu-item>\r\n    </ng-template>\r\n</p-tree>\r\n\r\n<ng-template #folderIcons>\r\n    <div class=\"folder-icons\" [class.visible]=\"this.viewMode === 'folder' && currentFolder\">\r\n        <i class=\"toolbar-button zyfra-icon arrows-corner-left-up\" (click)=\"toLevelUp()\"></i>\r\n        <i class=\"toolbar-button zyfra-icon arrows-arrow-up-level\" (click)=\"toTop()\"></i>\r\n    </div>\r\n</ng-template>\r\n"
    },
    {
      "name": "ZyfraNavMenuItemComponent",
      "id": "component-ZyfraNavMenuItemComponent-9575c1167f4bd79a1e72f006b97a4987",
      "file": "libs/components/src/lib/nav-menu/components/zyfra-menu-item/zyfra-nav-menu-item.component.ts",
      "changeDetection": "ChangeDetectionStrategy.OnPush",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "zyfra-nav-menu-item",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./zyfra-nav-menu-item.component.html"],
      "viewProviders": [],
      "inputsClass": [
        {
          "name": "item",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 17,
          "type": "ZyfraMenuItem"
        },
        {
          "name": "itemExtra",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 18,
          "type": "TemplateRef<any>"
        }
      ],
      "outputsClass": [
        {
          "name": "itemClick",
          "defaultValue": "new EventEmitter()",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 20,
          "type": "EventEmitter<ZyfraMenuItem>"
        }
      ],
      "propertiesClass": [],
      "methodsClass": [
        {
          "name": "itemClickHandler",
          "args": [
            {
              "name": "event",
              "type": "MouseEvent",
              "deprecated": false,
              "deprecationMessage": ""
            },
            {
              "name": "item",
              "type": "ZyfraMenuItem",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 22,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [123],
          "jsdoctags": [
            {
              "name": "event",
              "type": "MouseEvent",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "item",
              "type": "ZyfraMenuItem",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "onItemKeyDown",
          "args": [
            {
              "name": "event",
              "type": "",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 39,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [123],
          "jsdoctags": [
            {
              "name": "event",
              "type": "",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        }
      ],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import {\r\n  ChangeDetectionStrategy,\r\n  Component,\r\n  EventEmitter,\r\n  Input,\r\n  Output,\r\n  TemplateRef\r\n} from '@angular/core';\r\nimport { ZyfraMenuItem } from '../../model/zyfra-menu-item.interface';\r\n\r\n@Component({\r\n  selector: 'zyfra-nav-menu-item',\r\n  templateUrl: './zyfra-nav-menu-item.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class ZyfraNavMenuItemComponent {\r\n  @Input() item: ZyfraMenuItem;\r\n  @Input() itemExtra: TemplateRef<any>;\r\n\r\n  @Output() itemClick: EventEmitter<ZyfraMenuItem> = new EventEmitter();\r\n\r\n  public itemClickHandler(event: MouseEvent, item: ZyfraMenuItem): void {\r\n    if (item.disabled) {\r\n      event.preventDefault();\r\n      return;\r\n    }\r\n    if (!item.url) {\r\n      event.preventDefault();\r\n    }\r\n    if (item.command) {\r\n      item.command({\r\n        originalEvent: event,\r\n        item\r\n      });\r\n    }\r\n    this.itemClick.emit(item);\r\n  }\r\n\r\n  public onItemKeyDown(event): void {\r\n    const listItem = event.currentTarget.parentElement;\r\n    switch (event.code) {\r\n      case 'Space':\r\n      case 'Enter':\r\n        if (listItem) {\r\n          listItem.children[0].click();\r\n        }\r\n        event.preventDefault();\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n}\r\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "templateData": "<div class=\"p-menuitem-wrapper\" (click)=\"$event.stopPropagation()\">\r\n    <div class=\"p-menuitem-content\"\r\n         pTooltip\r\n         [class]=\"item.styleClass\"\r\n         [ngClass]=\"{'p-hidden': item.visible === false}\"\r\n         [ngStyle]=\"item.style\"\r\n         [tooltipOptions]=\"item.tooltipOptions\">\r\n        <a *ngIf=\"!item.routerLink\"\r\n           class=\"p-menuitem-link\"\r\n           role=\"menuitem\"\r\n           [attr.href]=\"item.url||null\"\r\n           [attr.tabindex]=\"item.disabled ? null : '0'\"\r\n           [attr.data-automationid]=\"item.automationId\"\r\n           [attr.target]=\"item.target\"\r\n           [attr.title]=\"item.title\"\r\n           [attr.id]=\"item.id\"\r\n           [ngClass]=\"{'p-disabled':item.disabled}\"\r\n           (keydown)=\"onItemKeyDown($event)\"\r\n           (click)=\"itemClickHandler($event, item)\">\r\n            <span *ngIf=\"item.icon\"\r\n                  class=\"p-menuitem-icon\"\r\n                  [ngClass]=\"item.icon\">\r\n            </span>\r\n            <span *ngIf=\"item.escape !== false; else htmlLabel\"\r\n                  #label\r\n                  class=\"p-menuitem-text\"\r\n                  [zyfraTooltip]=\"item.label\"\r\n                  zyfraTooltipPosition=\"below\"\r\n                  [zyfraTooltipOverflowText]=\"label\">{{item.label}}\r\n            </span>\r\n            <ng-template #htmlLabel>\r\n                <span #label\r\n                      class=\"p-menuitem-text\"\r\n                      [zyfraTooltip]=\"item.label\"\r\n                      zyfraTooltipPosition=\"below\"\r\n                      [zyfraTooltipOverflowText]=\"label\"\r\n                      [innerHTML]=\"item.label\">\r\n                </span>\r\n            </ng-template>\r\n        </a>\r\n        <a *ngIf=\"item.routerLink\"\r\n           class=\"p-menuitem-link\"\r\n           role=\"menuitem\"\r\n           [routerLink]=\"item.routerLink\"\r\n           [attr.data-automationid]=\"item.automationId\"\r\n           [queryParams]=\"item.queryParams\"\r\n           [routerLinkActive]=\"'p-menuitem-link-active'\"\r\n           [routerLinkActiveOptions]=\"item.routerLinkActiveOptions||{exact:false}\"\r\n           [attr.target]=\"item.target\"\r\n           [attr.id]=\"item.id\"\r\n           [attr.tabindex]=\"item.disabled ? null : '0'\"\r\n           [attr.title]=\"item.title\"\r\n           [ngClass]=\"{'p-disabled':item.disabled}\"\r\n           [fragment]=\"item.fragment\"\r\n           [queryParamsHandling]=\"item.queryParamsHandling\"\r\n           [preserveFragment]=\"item.preserveFragment\"\r\n           [skipLocationChange]=\"item.skipLocationChange\"\r\n           [replaceUrl]=\"item.replaceUrl\"\r\n           [state]=\"item.state\"\r\n           (keydown)=\"onItemKeyDown($event)\"\r\n           (click)=\"itemClickHandler($event, item)\">\r\n            <span *ngIf=\"item.icon\"\r\n                  class=\"p-menuitem-icon\"\r\n                  [ngClass]=\"item.icon\">\r\n            </span>\r\n            <span *ngIf=\"item.escape !== false; else htmlRouteLabel\"\r\n                  #label\r\n                  class=\"p-menuitem-text\"\r\n                  [zyfraTooltip]=\"item.label\"\r\n                  zyfraTooltipPosition=\"below\"\r\n                  [zyfraTooltipOverflowText]=\"label\">{{item.label}}\r\n            </span>\r\n            <ng-template #htmlRouteLabel>\r\n                <span #label\r\n                      class=\"p-menuitem-text\"\r\n                      [zyfraTooltip]=\"item.label\"\r\n                      zyfraTooltipPosition=\"below\"\r\n                      [zyfraTooltipOverflowText]=\"label\"\r\n                      [innerHTML]=\"item.label\">\r\n                </span>\r\n            </ng-template>\r\n        </a>\r\n\r\n        <ng-container *ngTemplateOutlet=\"itemExtra; context: { $implicit: item }\"></ng-container>\r\n    </div>\r\n</div>\r\n"
    },
    {
      "name": "ZyfraPaginatorComponent",
      "id": "component-ZyfraPaginatorComponent-c99938c2266d139a73933374fe5f49ba",
      "file": "libs/components/src/lib/paginator/zyfra-paginator.component.ts",
      "changeDetection": "ChangeDetectionStrategy.OnPush",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "zyfra-paginator",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./zyfra-paginator.component.html"],
      "viewProviders": [],
      "inputsClass": [
        {
          "name": "alwaysShow",
          "defaultValue": "true",
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "Whether to show it even there is only one page.",
          "description": "<p>Whether to show it even there is only one page.</p>\n",
          "line": 50,
          "type": "boolean"
        },
        {
          "name": "currentPageReportTemplate",
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "Template of the current page report element.\r\nAvailable placeholders are {currentPage},{totalPages},{rows},{first},{last} and {totalRecords}",
          "description": "<p>Template of the current page report element.\nAvailable placeholders are {currentPage},{totalPages},{rows},{first},{last} and {totalRecords}</p>\n",
          "line": 80,
          "type": "string"
        },
        {
          "name": "dropdownAppendTo",
          "defaultValue": "null",
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "Target element to attach the dropdown overlay, valid values are \"body\" or a local ng-template variable of another element\r\n(note: use binding with brackets for template variables, e.g. [appendTo]=\"mydiv\" for a div element having #mydiv as variable name).",
          "description": "<p>Target element to attach the dropdown overlay, valid values are &quot;body&quot; or a local ng-template variable of another element\n(note: use binding with brackets for template variables, e.g. [appendTo]=&quot;mydiv&quot; for a div element having #mydiv as variable name).</p>\n",
          "line": 71,
          "type": "any"
        },
        {
          "name": "dropdownItemTemplate",
          "defaultValue": "null",
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "Template instance to inject into the dropdown item inside in the paginator.",
          "description": "<p>Template instance to inject into the dropdown item inside in the paginator.</p>\n",
          "line": 66,
          "type": "TemplateRef<any>"
        },
        {
          "name": "dropdownScrollHeight",
          "defaultValue": "'200px'",
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "Dropdown height of the viewport in pixels, a scrollbar is defined if height of list exceeds this value.",
          "description": "<p>Dropdown height of the viewport in pixels, a scrollbar is defined if height of list exceeds this value.</p>\n",
          "line": 75,
          "type": "string"
        },
        {
          "name": "first",
          "defaultValue": "0",
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "Zero-relative number of the first row to be displayed.",
          "description": "<p>Zero-relative number of the first row to be displayed.</p>\n",
          "line": 29,
          "type": "number"
        },
        {
          "name": "pageLinkSize",
          "defaultValue": "5",
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "Number of page links to display.",
          "description": "<p>Number of page links to display.</p>\n",
          "line": 33,
          "type": "number"
        },
        {
          "name": "rows",
          "defaultValue": "0",
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "Data count to display per page.",
          "description": "<p>Data count to display per page.</p>\n",
          "line": 25,
          "type": "number"
        },
        {
          "name": "rowsPerPageOptions",
          "defaultValue": "null",
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "Array of integer/object values to display inside rows per page dropdown.\r\nA object that have 'showAll' key can be added to it to show all data. Exp; [10,20,30,{showAll:'All'}]",
          "description": "<p>Array of integer/object values to display inside rows per page dropdown.\nA object that have &#39;showAll&#39; key can be added to it to show all data. Exp; [10,20,30,{showAll:&#39;All&#39;}]</p>\n",
          "line": 38,
          "type": "PageOption[]"
        },
        {
          "name": "showCurrentPageReport",
          "defaultValue": "false",
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "Whether to display current page report.",
          "description": "<p>Whether to display current page report.</p>\n",
          "line": 84,
          "type": "boolean"
        },
        {
          "name": "showFirstLastIcon",
          "defaultValue": "true",
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "When enabled, icons are displayed on paginator to go first and last page.",
          "description": "<p>When enabled, icons are displayed on paginator to go first and last page.</p>\n",
          "line": 54,
          "type": "boolean"
        },
        {
          "name": "showJumpToPageDropdown",
          "defaultValue": "false",
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "Whether to display a dropdown to navigate to any page.",
          "description": "<p>Whether to display a dropdown to navigate to any page.</p>\n",
          "line": 88,
          "type": "boolean"
        },
        {
          "name": "showPageLinks",
          "defaultValue": "true",
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "Whether to show page links.",
          "description": "<p>Whether to show page links.</p>\n",
          "line": 92,
          "type": "boolean"
        },
        {
          "name": "style",
          "defaultValue": "null",
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "Inline style of the component.",
          "description": "<p>Inline style of the component.</p>\n",
          "line": 42,
          "type": "string"
        },
        {
          "name": "styleClass",
          "defaultValue": "null",
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "Style class of the component.",
          "description": "<p>Style class of the component.</p>\n",
          "line": 46,
          "type": "string"
        },
        {
          "name": "templateLeft",
          "defaultValue": "null",
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "Template instance to inject into the left side of the paginator.",
          "description": "<p>Template instance to inject into the left side of the paginator.</p>\n",
          "line": 58,
          "type": "TemplateRef<any>"
        },
        {
          "name": "templateRight",
          "defaultValue": "null",
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "Template instance to inject into the right side of the paginator.",
          "description": "<p>Template instance to inject into the right side of the paginator.</p>\n",
          "line": 62,
          "type": "TemplateRef<any>"
        },
        {
          "name": "totalRecords",
          "defaultValue": "0",
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "Number of total records.",
          "description": "<p>Number of total records.</p>\n",
          "line": 21,
          "type": "number"
        }
      ],
      "outputsClass": [
        {
          "name": "pageChange",
          "defaultValue": "new EventEmitter<PageChangeEvent>()",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 94,
          "type": "EventEmitter"
        }
      ],
      "propertiesClass": [],
      "methodsClass": [
        {
          "name": "onPageChange",
          "args": [
            {
              "name": "event",
              "type": "PageChangeEvent",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 96,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [123],
          "jsdoctags": [
            {
              "name": "event",
              "type": "PageChangeEvent",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        }
      ],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output, TemplateRef } from '@angular/core';\r\n\r\ntype PageOption = number | Record<string, unknown>;\r\n\r\nexport interface PageChangeEvent {\r\n  first: number;\r\n  rows: number;\r\n  page: number;\r\n  pageCount: number;\r\n}\r\n\r\n@Component({\r\n  selector: 'zyfra-paginator',\r\n  templateUrl: './zyfra-paginator.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class ZyfraPaginatorComponent {\r\n  /**\r\n   * Number of total records.\r\n   */\r\n  @Input() totalRecords = 0;\r\n  /**\r\n   *  Data count to display per page.\r\n   */\r\n  @Input() rows = 0;\r\n  /**\r\n   * \tZero-relative number of the first row to be displayed.\r\n   */\r\n  @Input() first = 0;\r\n  /**\r\n   * \tNumber of page links to display.\r\n   */\r\n  @Input() pageLinkSize = 5;\r\n  /**\r\n   * Array of integer/object values to display inside rows per page dropdown.\r\n   * A object that have 'showAll' key can be added to it to show all data. Exp; [10,20,30,{showAll:'All'}]\r\n   */\r\n  @Input() rowsPerPageOptions: PageOption[] = null;\r\n  /**\r\n   * \tInline style of the component.\r\n   */\r\n  @Input() style: string = null;\r\n  /**\r\n   * \tStyle class of the component.\r\n   */\r\n  @Input() styleClass: string = null;\r\n  /**\r\n   * Whether to show it even there is only one page.\r\n   */\r\n  @Input() alwaysShow = true;\r\n  /**\r\n   * When enabled, icons are displayed on paginator to go first and last page.\r\n   */\r\n  @Input() showFirstLastIcon = true;\r\n  /**\r\n   * Template instance to inject into the left side of the paginator.\r\n   */\r\n  @Input() templateLeft: TemplateRef<any> = null;\r\n  /**\r\n   * Template instance to inject into the right side of the paginator.\r\n   */\r\n  @Input() templateRight: TemplateRef<any> = null;\r\n  /**\r\n   * Template instance to inject into the dropdown item inside in the paginator.\r\n   */\r\n  @Input() dropdownItemTemplate: TemplateRef<any> = null;\r\n  /**\r\n   * Target element to attach the dropdown overlay, valid values are \"body\" or a local ng-template variable of another element\r\n   * (note: use binding with brackets for template variables, e.g. [appendTo]=\"mydiv\" for a div element having #mydiv as variable name).\r\n   */\r\n  @Input() dropdownAppendTo: any = null;\r\n  /**\r\n   * \tDropdown height of the viewport in pixels, a scrollbar is defined if height of list exceeds this value.\r\n   */\r\n  @Input() dropdownScrollHeight = '200px';\r\n  /**\r\n   * Template of the current page report element.\r\n   * Available placeholders are {currentPage},{totalPages},{rows},{first},{last} and {totalRecords}\r\n   */\r\n  @Input() currentPageReportTemplate: string;\r\n  /**\r\n   * Whether to display current page report.\r\n   */\r\n  @Input() showCurrentPageReport = false;\r\n  /**\r\n   * \tWhether to display a dropdown to navigate to any page.\r\n   */\r\n  @Input() showJumpToPageDropdown = false;\r\n  /**\r\n   * \tWhether to show page links.\r\n   */\r\n  @Input() showPageLinks = true;\r\n\r\n  @Output() pageChange = new EventEmitter<PageChangeEvent>();\r\n\r\n  public onPageChange(event: PageChangeEvent): void {\r\n    this.pageChange.emit(event);\r\n  }\r\n}\r\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "templateData": "<p-paginator\r\n  class=\"zyfra-paginator\"\r\n  [rows]=\"rows\"\r\n  [totalRecords]=\"totalRecords\"\r\n  [pageLinkSize]=\"pageLinkSize\"\r\n  [rowsPerPageOptions]=\"rowsPerPageOptions\"\r\n  [style]=\"style\"\r\n  [styleClass]=\"styleClass\"\r\n  [alwaysShow]=\"alwaysShow\"\r\n  [showFirstLastIcon]=\"showFirstLastIcon\"\r\n  [templateLeft]=\"templateLeft\"\r\n  [templateRight]=\"templateRight\"\r\n  [dropdownItemTemplate]=\"dropdownItemTemplate\"\r\n  [dropdownAppendTo]=\"dropdownAppendTo\"\r\n  [dropdownScrollHeight]=\"dropdownScrollHeight\"\r\n  [currentPageReportTemplate]=\"currentPageReportTemplate\"\r\n  [showCurrentPageReport]=\"showCurrentPageReport\"\r\n  [showJumpToPageDropdown]=\"showJumpToPageDropdown\"\r\n  [showPageLinks]=\"showPageLinks\"\r\n  (onPageChange)=\"onPageChange($event)\"\r\n></p-paginator>\r\n"
    },
    {
      "name": "ZyfraPasswordComponent",
      "id": "component-ZyfraPasswordComponent-765f7461ac0f0ecc97107f47acb4d27e",
      "file": "libs/components/src/lib/password/zyfra-password.component.ts",
      "changeDetection": "ChangeDetectionStrategy.OnPush",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "zyfra-password",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./zyfra-password.component.html"],
      "viewProviders": [],
      "inputsClass": [
        {
          "name": "appendTo",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 19,
          "type": "string"
        },
        {
          "name": "disabled",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 24,
          "type": "boolean"
        },
        {
          "name": "feedback",
          "defaultValue": "true",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 17,
          "type": "boolean"
        },
        {
          "name": "inputStyle",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 20,
          "type": "any"
        },
        {
          "name": "inputStyleClass",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 21,
          "type": "string"
        },
        {
          "name": "label",
          "defaultValue": "''",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 25,
          "type": "string"
        },
        {
          "name": "mediumLabel",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 15,
          "type": "string"
        },
        {
          "name": "mediumRegex",
          "defaultValue": "'^(((?=.*[a-z])(?=.*[A-Z]))|((?=.*[a-z])(?=.*[0-9]))|((?=.*[A-Z])(?=.*[0-9])))(?=.{6,}).'",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 12,
          "type": "string"
        },
        {
          "name": "promptLabel",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 11,
          "type": "string"
        },
        {
          "name": "required",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 26,
          "type": "boolean"
        },
        {
          "name": "strongLabel",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 16,
          "type": "string"
        },
        {
          "name": "strongRegex",
          "defaultValue": "'^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.{8,})'",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 13,
          "type": "string"
        },
        {
          "name": "style",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 22,
          "type": "string"
        },
        {
          "name": "styleClass",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 23,
          "type": "string"
        },
        {
          "name": "toggleMask",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 18,
          "type": "boolean"
        },
        {
          "name": "weakLabel",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 14,
          "type": "string"
        }
      ],
      "outputsClass": [
        {
          "name": "onBlur",
          "defaultValue": "new EventEmitter<FocusEvent>()",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 28,
          "type": "EventEmitter"
        },
        {
          "name": "onFocus",
          "defaultValue": "new EventEmitter<FocusEvent>()",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 29,
          "type": "EventEmitter"
        }
      ],
      "propertiesClass": [
        {
          "name": "formControl",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "FormControl",
          "optional": false,
          "description": "",
          "line": 7,
          "modifierKind": [123, 143],
          "inheritance": {
            "file": "WrappedFormComponent"
          }
        },
        {
          "name": "injector",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Injector",
          "optional": false,
          "description": "",
          "line": 9,
          "modifierKind": [123, 143],
          "inheritance": {
            "file": "WrappedFormComponent"
          }
        },
        {
          "name": "ngControl",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "NgControl",
          "optional": false,
          "description": "",
          "line": 9,
          "decorators": [
            {
              "name": "Optional",
              "stringifiedArguments": ""
            },
            {
              "name": "Self",
              "stringifiedArguments": ""
            }
          ],
          "modifierKind": [123, 143],
          "inheritance": {
            "file": "WrappedFormComponent"
          }
        }
      ],
      "methodsClass": [
        {
          "name": "setDisabledState",
          "args": [
            {
              "name": "isDisabled",
              "type": "boolean",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 18,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [123, 157],
          "jsdoctags": [
            {
              "name": "isDisabled",
              "type": "boolean",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ],
          "inheritance": {
            "file": "WrappedFormComponent"
          }
        }
      ],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output } from '@angular/core';\r\nimport { ControlValueAccessor } from '@angular/forms';\r\nimport { WrappedFormComponent } from '../@core/value-accessor/wrapped-form.component';\r\n\r\n@Component({\r\n  selector: 'zyfra-password',\r\n  templateUrl: './zyfra-password.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class ZyfraPasswordComponent extends WrappedFormComponent implements ControlValueAccessor {\r\n  @Input() promptLabel: string;\r\n  @Input() mediumRegex = '^(((?=.*[a-z])(?=.*[A-Z]))|((?=.*[a-z])(?=.*[0-9]))|((?=.*[A-Z])(?=.*[0-9])))(?=.{6,}).';\r\n  @Input() strongRegex = '^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.{8,})';\r\n  @Input() weakLabel: string;\r\n  @Input() mediumLabel: string;\r\n  @Input() strongLabel: string;\r\n  @Input() feedback = true;\r\n  @Input() toggleMask: boolean;\r\n  @Input() appendTo: string;\r\n  @Input() inputStyle: any;\r\n  @Input() inputStyleClass: string;\r\n  @Input() style: string;\r\n  @Input() styleClass: string;\r\n  @Input() disabled: boolean;\r\n  @Input() label = '';\r\n  @Input() required: boolean;\r\n\r\n  @Output() onBlur = new EventEmitter<FocusEvent>();\r\n  @Output() onFocus = new EventEmitter<FocusEvent>();\r\n}\r\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "extends": "WrappedFormComponent",
      "implements": ["ControlValueAccessor"],
      "templateData": "<span class=\"zyfra-input\" [class.zyfra-input_disabled]=\"disabled\" [class.p-float-label]=\"label\">\r\n  <p-password\r\n    [formControl]=\"$any(ngControl.control)\"\r\n    (ngModelChange)=\"accessorOnChangeFn($event)\"\r\n    [promptLabel]=\"promptLabel\"\r\n    [mediumRegex]=\"mediumRegex\"\r\n    [strongRegex]=\"strongRegex\"\r\n    [weakLabel]=\"weakLabel\"\r\n    [disabled]=\"disabled\"\r\n    [mediumLabel]=\"mediumLabel\"\r\n    [strongLabel]=\"strongLabel\"\r\n    [feedback]=\"feedback\"\r\n    [toggleMask]=\"toggleMask\"\r\n    [appendTo]=\"appendTo\"\r\n    [inputStyle]=\"inputStyle\"\r\n    [inputStyleClass]=\"inputStyleClass\"\r\n    [style]=\"style\"\r\n    [styleClass]=\"styleClass\"\r\n    (onBlur)=\"onBlur.emit($event)\"\r\n    (onFocus)=\"onFocus.emit($event)\"\r\n  ></p-password>\r\n\r\n  <label *ngIf=\"label\" [class.label-required]=\"required\">{{ label }}</label>\r\n</span>\r\n"
    },
    {
      "name": "ZyfraProgressBarComponent",
      "id": "component-ZyfraProgressBarComponent-57b7b9ed5cb9316938a7c97376cd88e6",
      "file": "libs/components/src/lib/progress/zyfra-progress-bar.component.ts",
      "changeDetection": "ChangeDetectionStrategy.OnPush",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "zyfra-progress-bar",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./zyfra-progress-bar.component.html"],
      "viewProviders": [],
      "inputsClass": [
        {
          "name": "color",
          "defaultValue": "'primary'",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 16,
          "type": "\"primary\" | \"secondary\" | \"info\" | \"warning\" | \"danger\" | \"success\""
        },
        {
          "name": "mode",
          "defaultValue": "'determinate'",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 12,
          "type": "\"determinate\" | \"indeterminate\""
        },
        {
          "name": "showValue",
          "defaultValue": "true",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 10,
          "type": "boolean"
        },
        {
          "name": "size",
          "defaultValue": "'normal'",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 15,
          "type": "\"normal\" | \"mini\""
        },
        {
          "name": "style",
          "defaultValue": "null",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 13,
          "type": "literal type"
        },
        {
          "name": "styleClass",
          "defaultValue": "null",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 14,
          "type": "string"
        },
        {
          "name": "unit",
          "defaultValue": "'%'",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 11,
          "type": "string"
        },
        {
          "name": "value",
          "defaultValue": "null",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 9,
          "type": "number"
        }
      ],
      "outputsClass": [],
      "propertiesClass": [],
      "methodsClass": [],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'zyfra-progress-bar',\r\n  templateUrl: './zyfra-progress-bar.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class ZyfraProgressBarComponent {\r\n  @Input() value: number = null;\r\n  @Input() showValue: boolean = true;\r\n  @Input() unit: string = '%';\r\n  @Input() mode: 'determinate' | 'indeterminate' = 'determinate';\r\n  @Input() style: { [key: string]: string | null } = null;\r\n  @Input() styleClass: string = null;\r\n  @Input() size: 'normal' | 'mini' = 'normal';\r\n  @Input() color: 'primary' | 'secondary' | 'info' | 'warning' | 'danger' | 'success' = 'primary';\r\n\r\n  public get styleClasses(): string {\r\n    return `zyfra-progress_size-${this.size} zyfra-progress_color-${this.color} ${this.styleClass}`;\r\n  }\r\n}\r\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "accessors": {
        "styleClasses": {
          "name": "styleClasses",
          "getSignature": {
            "name": "styleClasses",
            "type": "string",
            "returnType": "string",
            "line": 18
          }
        }
      },
      "templateData": "<p-progressBar\r\n  [value]=\"value\"\r\n  [showValue]=\"showValue\"\r\n  [unit]=\"unit\"\r\n  [mode]=\"mode\"\r\n  [style]=\"style\"\r\n  [styleClass]=\"styleClasses\"\r\n></p-progressBar>\r\n"
    },
    {
      "name": "ZyfraRadioButtonComponent",
      "id": "component-ZyfraRadioButtonComponent-5037eeff5cf59a266f60cf11ff366f56",
      "file": "libs/components/src/lib/radio-button/zyfra-radio-button.component.ts",
      "changeDetection": "ChangeDetectionStrategy.OnPush",
      "encapsulation": ["ViewEncapsulation.None"],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "zyfra-radio-button",
      "styleUrls": ["./zyfra-radio-button.component.less"],
      "styles": [],
      "templateUrl": ["./zyfra-radio-button.component.html"],
      "viewProviders": [],
      "inputsClass": [
        {
          "name": "ariaLabel",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 27,
          "type": "string"
        },
        {
          "name": "ariaLabelledBy",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 26,
          "type": "string"
        },
        {
          "name": "disabled",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 23,
          "type": "boolean"
        },
        {
          "name": "formControl",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 32,
          "type": "FormControl"
        },
        {
          "name": "formControlName",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 31,
          "type": "string"
        },
        {
          "name": "inputId",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 25,
          "type": "string"
        },
        {
          "name": "label",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 22,
          "type": "string"
        },
        {
          "name": "labelStyleClass",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 30,
          "type": "string"
        },
        {
          "name": "name",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 20,
          "type": "string"
        },
        {
          "name": "style",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 28,
          "type": "string"
        },
        {
          "name": "styleClass",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 29,
          "type": "string"
        },
        {
          "name": "tabindex",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 24,
          "type": "number"
        },
        {
          "name": "value",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 21,
          "type": "T"
        }
      ],
      "outputsClass": [
        {
          "name": "onBlur",
          "defaultValue": "new EventEmitter()",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 36,
          "type": "EventEmitter<FocusEvent>"
        },
        {
          "name": "onClick",
          "defaultValue": "new EventEmitter()",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 34,
          "type": "EventEmitter<PointerEvent>"
        },
        {
          "name": "onFocus",
          "defaultValue": "new EventEmitter()",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 35,
          "type": "EventEmitter<FocusEvent>"
        }
      ],
      "propertiesClass": [
        {
          "name": "formControl",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "FormControl",
          "optional": false,
          "description": "",
          "line": 7,
          "modifierKind": [123, 143],
          "inheritance": {
            "file": "WrappedFormComponent"
          }
        },
        {
          "name": "injector",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Injector",
          "optional": false,
          "description": "",
          "line": 9,
          "modifierKind": [123, 143],
          "inheritance": {
            "file": "WrappedFormComponent"
          }
        },
        {
          "name": "ngControl",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "NgControl",
          "optional": false,
          "description": "",
          "line": 9,
          "decorators": [
            {
              "name": "Optional",
              "stringifiedArguments": ""
            },
            {
              "name": "Self",
              "stringifiedArguments": ""
            }
          ],
          "modifierKind": [123, 143],
          "inheritance": {
            "file": "WrappedFormComponent"
          }
        }
      ],
      "methodsClass": [
        {
          "name": "handleBlur",
          "args": [
            {
              "name": "event",
              "type": "FocusEvent",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 46,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [123],
          "jsdoctags": [
            {
              "name": "event",
              "type": "FocusEvent",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "handleClick",
          "args": [
            {
              "name": "event",
              "type": "PointerEvent",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 38,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [123],
          "jsdoctags": [
            {
              "name": "event",
              "type": "PointerEvent",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "handleFocus",
          "args": [
            {
              "name": "event",
              "type": "FocusEvent",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 42,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [123],
          "jsdoctags": [
            {
              "name": "event",
              "type": "FocusEvent",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "setDisabledState",
          "args": [
            {
              "name": "isDisabled",
              "type": "boolean",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 50,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [123, 157],
          "jsdoctags": [
            {
              "name": "isDisabled",
              "type": "boolean",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ],
          "inheritance": {
            "file": "WrappedFormComponent"
          }
        }
      ],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import {\r\n  Component,\r\n  Input,\r\n  Output,\r\n  EventEmitter,\r\n  ChangeDetectionStrategy,\r\n  ViewEncapsulation,\r\n} from '@angular/core';\r\nimport { ControlValueAccessor, FormControl } from '@angular/forms';\r\nimport { WrappedFormComponent } from '../@core/value-accessor/wrapped-form.component';\r\n\r\n@Component({\r\n  selector: 'zyfra-radio-button',\r\n  templateUrl: './zyfra-radio-button.component.html',\r\n  styleUrls: ['./zyfra-radio-button.component.less'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class ZyfraRadioButtonComponent<T> extends WrappedFormComponent implements ControlValueAccessor {\r\n  @Input() name: string;\r\n  @Input() value: T;\r\n  @Input() label: string;\r\n  @Input() disabled: boolean;\r\n  @Input() tabindex: number;\r\n  @Input() inputId: string;\r\n  @Input() ariaLabelledBy: string;\r\n  @Input() ariaLabel: string;\r\n  @Input() style: string;\r\n  @Input() styleClass: string;\r\n  @Input() labelStyleClass: string;\r\n  @Input() formControlName: string;\r\n  @Input() override formControl: FormControl;\r\n\r\n  @Output() onClick: EventEmitter<PointerEvent> = new EventEmitter();\r\n  @Output() onFocus: EventEmitter<FocusEvent> = new EventEmitter();\r\n  @Output() onBlur: EventEmitter<FocusEvent> = new EventEmitter();\r\n\r\n  public handleClick(event: PointerEvent): void {\r\n    this.onClick.emit(event);\r\n  }\r\n\r\n  public handleFocus(event: FocusEvent): void {\r\n    this.onFocus.emit(event);\r\n  }\r\n\r\n  public handleBlur(event: FocusEvent): void {\r\n    this.onBlur.emit(event);\r\n  }\r\n\r\n  public override setDisabledState(isDisabled: boolean): void {\r\n    // do nothing\r\n  }\r\n}\r\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data": "@import '../../styles/typography/typography-const.less';\r\n\r\n@radioButtonSize: @20px;\r\n@radioButtonCoreSize: @8px;\r\n@radioButtonMiniSize: @16px;\r\n@radioButtonMiniCoreSize: @4px;\r\n@radioBorderAccent: @2px solid var(--radioButtonHover);\r\n\r\nzyfra-radio-button {\r\n  display: inline-block;\r\n}\r\n\r\np-radiobutton {\r\n  font-family: var(--fontFamily);\r\n  cursor: pointer;\r\n  \r\n  label {\r\n    cursor: pointer;\r\n  }\r\n\r\n  &:hover {\r\n    .p-radiobutton .p-radiobutton-box:not(.p-disabled):not(.p-highlight) {\r\n      border-color: var(--radioButtonHover);\r\n    }\r\n  }\r\n}\r\n\r\n.radio-disabled() {\r\n  background: var(--radioButtonDisabledBg);\r\n  border-color: var(--radioButtonDisabled);\r\n}\r\n\r\n.p-radiobutton-label {\r\n  margin-left: @8px;\r\n  line-height: @radioButtonSize;\r\n}\r\n\r\n.p-radiobutton {\r\n  width: @radioButtonSize;\r\n  height: @radioButtonSize;\r\n  vertical-align: middle;\r\n\r\n  &-mini {\r\n    width: @radioButtonMiniSize;\r\n    height: @radioButtonMiniSize;\r\n  }\r\n\r\n  &-group p-radiobutton {\r\n    margin-bottom: @6px;\r\n  }\r\n\r\n  &-disabled {\r\n    cursor: default;\r\n  }\r\n\r\n  .p-disabled.p-disabled {\r\n    opacity: initial;\r\n    .radio-disabled();\r\n  }\r\n\r\n  &-focused:not(.p-disabled) {\r\n    border-color: var(--radioButtonHover);\r\n  }\r\n\r\n  .p-radiobutton-box {\r\n    border: @radioBorderAccent;\r\n    background: var(--radioButtonBg);\r\n    width: @radioButtonSize;\r\n    height: @radioButtonSize;\r\n    &:not(:hover):not(.p-disabled) {\r\n      border-color: var(--radioButton);\r\n    }\r\n\r\n    .p-radiobutton-mini& {\r\n      width: @radioButtonMiniSize;\r\n      height: @radioButtonMiniSize;\r\n    }\r\n\r\n    .p-radiobutton-icon {\r\n      background-color: var(--radioButtonBg);\r\n      border: @radioBorderAccent;\r\n      width: @radioButtonCoreSize;\r\n      height: @radioButtonCoreSize;\r\n      transform: none;\r\n\r\n      .p-radiobutton-mini& {\r\n        width: @radioButtonMiniCoreSize;\r\n        height: @radioButtonMiniCoreSize;\r\n      }\r\n    }\r\n\r\n    &:not(.p-disabled) {\r\n      &.p-focus {\r\n        border-color: var(--radioButtonActive);\r\n      }\r\n\r\n      &:not(.p-highlight):hover {\r\n        border-color: var(--radioButtonHover);\r\n      }\r\n    }\r\n\r\n    &.p-highlight {\r\n      &.p-disabled {\r\n        &,\r\n        .p-radiobutton-icon {\r\n          .radio-disabled();\r\n        }\r\n      }\r\n      &:not(.p-disabled),\r\n      &:not(.p-disabled):hover {\r\n        background: var(--radioButtonBg);\r\n        border-color: var(--radioButtonHover);;\r\n      }\r\n    }\r\n  }\r\n}\r\n",
          "styleUrl": "./zyfra-radio-button.component.less"
        }
      ],
      "stylesData": "",
      "extends": "WrappedFormComponent",
      "implements": ["ControlValueAccessor"],
      "templateData": "<p-radioButton\r\n  [name]=\"name\"\r\n  [formControl]=\"$any(ngControl.control)\"\r\n  (ngModelChange)=\"accessorOnChangeFn($event)\"\r\n  [value]=\"value\"\r\n  [label]=\"label\"\r\n  [zyfraDisableControl]=\"disabled\"\r\n  [tabindex]=\"tabindex\"\r\n  [inputId]=\"inputId\"\r\n  [ariaLabelledBy]=\"ariaLabelledBy\"\r\n  [ariaLabel]=\"ariaLabel\"\r\n  [style]=\"style\"\r\n  [styleClass]=\"styleClass\"\r\n  [labelStyleClass]=\"labelStyleClass\"\r\n  (onClick)=\"handleClick($event)\"\r\n  (onFocus)=\"handleFocus($event)\"\r\n  (onBlur)=\"handleBlur($event)\"\r\n></p-radioButton>\r\n"
    },
    {
      "name": "ZyfraRelativeDatepickerComponent",
      "id": "component-ZyfraRelativeDatepickerComponent-d8d37aaa2a50cce47c532000eff29fda",
      "file": "libs/components/src/lib/datepicker/zyfra-relative-datepicker/zyfra-relative-datepicker.component.ts",
      "changeDetection": "ChangeDetectionStrategy.OnPush",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [
        {
          "name": "{\n    provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => ZyfraRelativeDatepickerComponent), multi: true,\n}",
          "type": "component"
        }
      ],
      "selector": "zyfra-relative-datepicker",
      "styleUrls": ["./zyfra-relative-datepicker.component.less"],
      "styles": [],
      "templateUrl": ["./zyfra-relative-datepicker.component.html"],
      "viewProviders": [],
      "inputsClass": [
        {
          "name": "disabled",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 43,
          "type": "boolean"
        },
        {
          "name": "label",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 41,
          "type": "string"
        },
        {
          "name": "placeholder",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 42,
          "type": "string"
        },
        {
          "name": "showClear",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 44,
          "type": "boolean"
        }
      ],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "activeDirectionId",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "RelativeDateDirectionId",
          "optional": false,
          "description": "",
          "line": 52,
          "modifierKind": [121]
        },
        {
          "name": "activeNumber",
          "defaultValue": "''",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 54,
          "modifierKind": [121]
        },
        {
          "name": "activePeriodId",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "RelativeDatePeriodId",
          "optional": false,
          "description": "",
          "line": 53,
          "modifierKind": [121]
        },
        {
          "name": "activeTimeId",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "RelativeDateTimeId",
          "optional": false,
          "description": "",
          "line": 51,
          "modifierKind": [121]
        },
        {
          "name": "directionItems",
          "defaultValue": "[...MenuItems.direction]",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "RelativeDateMenuItem<RelativeDateDirectionId>[]",
          "optional": false,
          "description": "",
          "line": 48,
          "modifierKind": [123]
        },
        {
          "name": "injector",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Injector",
          "optional": false,
          "description": "",
          "line": 61,
          "modifierKind": [123, 143]
        },
        {
          "name": "onChangeFn",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "function",
          "optional": false,
          "description": "",
          "line": 56
        },
        {
          "name": "onTouched",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "VoidFunction",
          "optional": false,
          "description": "",
          "line": 57
        },
        {
          "name": "periodItems",
          "defaultValue": "[...MenuItems.period]",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "RelativeDateMenuItem<RelativeDatePeriodId>[]",
          "optional": false,
          "description": "",
          "line": 49,
          "modifierKind": [123]
        },
        {
          "name": "subscriptions",
          "defaultValue": "new Subscription()",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "optional": false,
          "description": "",
          "line": 59,
          "modifierKind": [121, 143]
        },
        {
          "name": "timeItems",
          "defaultValue": "[...MenuItems.time]",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "RelativeDateMenuItem<RelativeDateTimeId>[]",
          "optional": false,
          "description": "",
          "line": 47,
          "modifierKind": [123]
        },
        {
          "name": "value",
          "defaultValue": "new FormControl('', Validators.pattern(ValidationPattern))",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "optional": false,
          "description": "",
          "line": 46,
          "modifierKind": [123]
        }
      ],
      "methodsClass": [
        {
          "name": "actualizeInput",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 139,
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "\n\nSet control input as text\n",
          "description": "<p>Set control input as text</p>\n",
          "modifierKind": [121]
        },
        {
          "name": "actualizeMenu",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 153,
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "\n\nActualize menu items, as radio group button\n",
          "description": "<p>Actualize menu items, as radio group button</p>\n",
          "modifierKind": [121]
        },
        {
          "name": "clearValue",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 93,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [123]
        },
        {
          "name": "ngAfterViewInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 63,
          "deprecated": false,
          "deprecationMessage": ""
        },
        {
          "name": "ngOnDestroy",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 76,
          "deprecated": false,
          "deprecationMessage": ""
        },
        {
          "name": "onMenuItemClick",
          "args": [
            {
              "name": "item",
              "type": "RelativeDateMenuItem",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 100,
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "\n\nAction click item menu\n",
          "description": "<p>Action click item menu</p>\n",
          "modifierKind": [123],
          "jsdoctags": [
            {
              "name": "item",
              "type": "RelativeDateMenuItem",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "parseInputValue",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 125,
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "\n\nParses control input value\n",
          "description": "<p>Parses control input value</p>\n",
          "modifierKind": [121]
        },
        {
          "name": "registerOnChange",
          "args": [
            {
              "name": "fn",
              "type": "function",
              "deprecated": false,
              "deprecationMessage": "",
              "function": [
                {
                  "name": "_",
                  "type": "",
                  "deprecated": false,
                  "deprecationMessage": ""
                }
              ]
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 85,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [123],
          "jsdoctags": [
            {
              "name": "fn",
              "type": "function",
              "deprecated": false,
              "deprecationMessage": "",
              "function": [
                {
                  "name": "_",
                  "type": "",
                  "deprecated": false,
                  "deprecationMessage": ""
                }
              ],
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "registerOnTouched",
          "args": [
            {
              "name": "fn",
              "type": "VoidFunction",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 89,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [123],
          "jsdoctags": [
            {
              "name": "fn",
              "type": "VoidFunction",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "writeValue",
          "args": [
            {
              "name": "value",
              "type": "number",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 80,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [123],
          "jsdoctags": [
            {
              "name": "value",
              "type": "number",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        }
      ],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import {\r\n  Component,\r\n  ChangeDetectionStrategy,\r\n  Input,\r\n  forwardRef,\r\n  OnDestroy,\r\n  Injector,\r\n  ChangeDetectorRef,\r\n  AfterViewInit,\r\n} from '@angular/core';\r\nimport { ControlValueAccessor, FormControl, NgControl, NG_VALUE_ACCESSOR, Validators } from '@angular/forms';\r\nimport { Subscription } from 'rxjs';\r\nimport {\r\n  getDefaultRelativeDateMenuItems,\r\n  IdByGroup,\r\n  RelativeDateDirectionId,\r\n  RelativeDateMenuItem,\r\n  RelativeDateMenuItems,\r\n  RelativeDatePeriodId,\r\n  RelativeDateTimeId,\r\n} from './relative-datepicker.models';\r\nimport { ParseTextInput, RenderText, UpdateActiveItem } from './relative-datepicker.utils';\r\n\r\nconst MenuItems: RelativeDateMenuItems = getDefaultRelativeDateMenuItems();\r\nconst ValidationPattern = '(T|\\\\*)((\\\\+|\\\\-)(\\\\d+)(Y|M|d|h|m|s))?';\r\n\r\n@Component({\r\n  selector: 'zyfra-relative-datepicker',\r\n  templateUrl: './zyfra-relative-datepicker.component.html',\r\n  styleUrls: ['./zyfra-relative-datepicker.component.less'],\r\n  providers: [\r\n    {\r\n      provide: NG_VALUE_ACCESSOR,\r\n      useExisting: forwardRef(() => ZyfraRelativeDatepickerComponent),\r\n      multi: true,\r\n    },\r\n  ],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class ZyfraRelativeDatepickerComponent implements AfterViewInit, ControlValueAccessor, OnDestroy {\r\n  @Input() public label: string;\r\n  @Input() public placeholder: string;\r\n  @Input() public disabled: boolean;\r\n  @Input() public showClear: boolean;\r\n\r\n  public value = new FormControl('', Validators.pattern(ValidationPattern));\r\n  public timeItems: RelativeDateMenuItem<RelativeDateTimeId>[] = [...MenuItems.time];\r\n  public directionItems: RelativeDateMenuItem<RelativeDateDirectionId>[] = [...MenuItems.direction];\r\n  public periodItems: RelativeDateMenuItem<RelativeDatePeriodId>[] = [...MenuItems.period];\r\n\r\n  private activeTimeId: RelativeDateTimeId;\r\n  private activeDirectionId: RelativeDateDirectionId;\r\n  private activePeriodId: RelativeDatePeriodId;\r\n  private activeNumber: string = '';\r\n\r\n  onChangeFn: (_: unknown) => unknown;\r\n  onTouched: VoidFunction;\r\n\r\n  private readonly subscriptions = new Subscription();\r\n\r\n  constructor(public readonly injector: Injector, private readonly cdr: ChangeDetectorRef) {}\r\n\r\n  ngAfterViewInit(): void {\r\n    const control = this.injector.get(NgControl);\r\n    this.value.addValidators(control.validator);\r\n\r\n    this.subscriptions.add(\r\n      this.value.valueChanges.subscribe(() => {\r\n        this.parseInputValue();\r\n        this.actualizeMenu();\r\n        this.onChangeFn(this.value.value);\r\n      })\r\n    );\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.subscriptions.unsubscribe();\r\n  }\r\n\r\n  public writeValue(value: number): void {\r\n    this.value.markAsDirty();\r\n    this.value.setValue(value);\r\n  }\r\n\r\n  public registerOnChange(fn: (_: unknown) => void): void {\r\n    this.onChangeFn = fn;\r\n  }\r\n\r\n  public registerOnTouched(fn: VoidFunction): void {\r\n    this.onTouched = fn;\r\n  }\r\n\r\n  public clearValue(): void {\r\n    this.value.setValue('');\r\n  }\r\n\r\n  /**\r\n   * Action click item menu\r\n   */\r\n  public onMenuItemClick(item: RelativeDateMenuItem): void {\r\n    switch (item.groupId) {\r\n      case 'time':\r\n        this.activeTimeId = <IdByGroup<'time'>>item.id;\r\n        break;\r\n\r\n      case 'direction':\r\n        this.activeDirectionId = <IdByGroup<'direction'>>item.id;\r\n        break;\r\n\r\n      case 'period':\r\n        this.activePeriodId = <IdByGroup<'period'>>item.id;\r\n        break;\r\n    }\r\n\r\n    this.actualizeMenu();\r\n    this.actualizeInput();\r\n    this.onChangeFn(this.value.value);\r\n\r\n    this.cdr.detectChanges();\r\n  }\r\n\r\n  /**\r\n   * Parses control input value\r\n   */\r\n  private parseInputValue(): void {\r\n    const textInput = this.value.value;\r\n\r\n    const model = ParseTextInput(textInput);\r\n\r\n    this.activeTimeId = model.time;\r\n    this.activeDirectionId = model.direction;\r\n    this.activeNumber = model.number;\r\n    this.activePeriodId = model.period;\r\n  }\r\n\r\n  /**\r\n   * Set control input as text\r\n   */\r\n  private actualizeInput(): void {\r\n    const stringValue = RenderText({\r\n      time: this.activeTimeId,\r\n      number: this.activeNumber,\r\n      direction: this.activeDirectionId,\r\n      period: this.activePeriodId,\r\n    });\r\n\r\n    this.value.setValue(stringValue);\r\n  }\r\n\r\n  /**\r\n   * Actualize menu items, as radio group button\r\n   */\r\n  private actualizeMenu(): void {\r\n    this.timeItems = UpdateActiveItem(this.timeItems, this.activeTimeId);\r\n    this.directionItems = UpdateActiveItem(this.directionItems, this.activeDirectionId);\r\n    this.periodItems = UpdateActiveItem(this.periodItems, this.activePeriodId);\r\n  }\r\n}\r\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data": "@import '../../../styles/typography/typography-const.less';\r\n\r\n.zyfra-datepicker-relative-menu {\r\n  list-style: none;\r\n  margin: 0;\r\n  padding: @8px 0;\r\n}\r\n\r\n.relative-menu-item {\r\n  height: @44px;\r\n  padding: 0 @24px;\r\n  display: flex;\r\n  align-items: center;\r\n  cursor: pointer;\r\n\r\n  &-icon {\r\n    font-size: @18px;\r\n    display: inherit;\r\n  }\r\n\r\n  &-label {\r\n    padding-left: @8px;\r\n  }\r\n\r\n  &-divider {\r\n    margin: @2px 0;\r\n    border-bottom: @1px solid var(--standartBorder);\r\n  }\r\n\r\n  &:hover {\r\n    background: var(--listItemHover);\r\n  }\r\n\r\n  &-active {\r\n    background: var(--listItemActive);\r\n    color: var(--listItemBg);\r\n\r\n    &:hover {\r\n      background: var(--listItemActive);\r\n    }\r\n  }\r\n}\r\n",
          "styleUrl": "./zyfra-relative-datepicker.component.less"
        }
      ],
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "deprecated": false,
        "deprecationMessage": "",
        "args": [
          {
            "name": "injector",
            "type": "Injector",
            "deprecated": false,
            "deprecationMessage": ""
          },
          {
            "name": "cdr",
            "type": "ChangeDetectorRef",
            "deprecated": false,
            "deprecationMessage": ""
          }
        ],
        "line": 59,
        "jsdoctags": [
          {
            "name": "injector",
            "type": "Injector",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          },
          {
            "name": "cdr",
            "type": "ChangeDetectorRef",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      "implements": ["AfterViewInit", "ControlValueAccessor", "OnDestroy"],
      "templateData": "<div class=\"zyfra-datepicker\">\r\n  <zyfra-input\r\n    style=\"order: 1\"\r\n    type=\"text\"\r\n    [formControl]=\"value\"\r\n    [placeholder]=\"placeholder\"\r\n    [disabled]=\"disabled\"\r\n    [label]=\"label\"\r\n    [inputClass]=\"{\r\n      'ng-invalid': !!value?.invalid,\r\n      'ng-valid': !!value?.valid,\r\n      'ng-dirty': !!value?.dirty,\r\n      'ng-touched': !!value?.touched\r\n    }\"\r\n  >\r\n    <div right>\r\n      <button\r\n        type=\"button\"\r\n        *ngIf=\"showClear\"\r\n        (click)=\"clearValue()\"\r\n        [disabled]=\"disabled\"\r\n        class=\"zyfra-datepicker-control zyfra-datepicker-button\"\r\n      >\r\n        <i class=\"zyfra-icon tools-broom\"></i>\r\n      </button>\r\n      <button\r\n        type=\"button\"\r\n        [disabled]=\"disabled\"\r\n        (click)=\"op.toggle($event)\"\r\n        class=\"zyfra-datepicker-control zyfra-datepicker-button\"\r\n      >\r\n        <i class=\"zyfra-icon date-clock\"></i>\r\n      </button>\r\n\r\n      <p-overlayPanel #op styleClass=\"p-overlay-clear-view\">\r\n        <ng-template pTemplate>\r\n          <ul role=\"listbox\" class=\"zyfra-datepicker-relative-menu\">\r\n            <ng-container *ngTemplateOutlet=\"menuItemsTemplate; context: { items: timeItems }\"></ng-container>\r\n            <li class=\"relative-menu-item-divider\"></li>\r\n            <ng-container\r\n              *ngTemplateOutlet=\"menuItemsTemplate; context: { items: directionItems }\"\r\n            ></ng-container>\r\n            <li class=\"relative-menu-item-divider\"></li>\r\n            <ng-container\r\n              *ngTemplateOutlet=\"menuItemsTemplate; context: { items: periodItems }\"\r\n            ></ng-container>\r\n\r\n            <ng-template #menuItemsTemplate let-items=\"items\">\r\n              <li\r\n                *ngFor=\"let item of items\"\r\n                [class.relative-menu-item-active]=\"item.active\"\r\n                (click)=\"onMenuItemClick(item)\"\r\n                class=\"relative-menu-item\"\r\n                role=\"button\"\r\n                tabindex=\"0\"\r\n              >\r\n                <div class=\"relative-menu-item-icon\">\r\n                  <i class=\"zyfra-icon {{ item.icon }}\"></i>\r\n                </div>\r\n                <div class=\"relative-menu-item-label\">{{ item.label }}</div>\r\n              </li>\r\n            </ng-template>\r\n          </ul>\r\n        </ng-template>\r\n      </p-overlayPanel>\r\n\r\n      <ng-content select=\"[buttons]\"></ng-content>\r\n    </div>\r\n  </zyfra-input>\r\n</div>\r\n"
    },
    {
      "name": "ZyfraRowTogglerComponent",
      "id": "component-ZyfraRowTogglerComponent-77c1b75839ac98f36a4c6dd1d7f6312a",
      "file": "libs/components/src/lib/table/row-toggler/row-toggler.component.ts",
      "changeDetection": "ChangeDetectionStrategy.OnPush",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "zyfra-row-toggler",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./row-toggler.component.html"],
      "viewProviders": [],
      "inputsClass": [
        {
          "name": "data",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 9,
          "type": "any"
        },
        {
          "name": "expanded",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 10,
          "type": "boolean"
        }
      ],
      "outputsClass": [],
      "propertiesClass": [],
      "methodsClass": [],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'zyfra-row-toggler',\r\n  templateUrl: './row-toggler.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class ZyfraRowTogglerComponent {\r\n  @Input() data: any;\r\n  @Input() expanded: boolean;\r\n}\r\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "templateData": "<button class=\"zyfra-row-toggler\" type=\"button\" [pRowToggler]=\"data\">\r\n  <i [ngClass]=\"expanded ? 'pi pi-chevron-down' : 'pi pi-chevron-right'\"></i>\r\n</button>\r\n"
    },
    {
      "name": "ZyfraSearchCellComponent",
      "id": "component-ZyfraSearchCellComponent-3c09713ebd1972307391a5002c2eb336",
      "file": "libs/components/src/lib/table/search-cell/search-cell.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "[zyfra-search-cell]",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./search-cell.component.html"],
      "viewProviders": [],
      "inputsClass": [
        {
          "name": "field",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 17,
          "type": "string",
          "inheritance": {
            "file": "ZyfraBaseSearchCellComponent"
          }
        },
        {
          "name": "isNativeFiltering",
          "defaultValue": "true",
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "If the value is true, then the native filtering of the table will be used,\r\notherwise the valueChange event will be emitted",
          "description": "<p>If the value is true, then the native filtering of the table will be used,\notherwise the valueChange event will be emitted</p>\n",
          "line": 22,
          "type": "boolean",
          "inheritance": {
            "file": "ZyfraBaseSearchCellComponent"
          }
        },
        {
          "name": "matchMode",
          "defaultValue": "'contains'",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 23,
          "type": "string",
          "inheritance": {
            "file": "ZyfraBaseSearchCellComponent"
          }
        },
        {
          "name": "placeholder",
          "defaultValue": "''",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 16,
          "type": "string",
          "inheritance": {
            "file": "ZyfraBaseSearchCellComponent"
          }
        }
      ],
      "outputsClass": [
        {
          "name": "valueChange",
          "defaultValue": "new EventEmitter<ValueChangeEvent>()",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 25,
          "type": "EventEmitter",
          "inheritance": {
            "file": "ZyfraBaseSearchCellComponent"
          }
        }
      ],
      "propertiesClass": [
        {
          "name": "table",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "ZyfraTableComponent",
          "optional": false,
          "description": "",
          "line": 13,
          "modifierKind": [123, 143],
          "inheritance": {
            "file": "ZyfraBaseSearchCellComponent"
          }
        },
        {
          "name": "hostClass",
          "defaultValue": "'search-cell'",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 27,
          "decorators": [
            {
              "name": "HostBinding",
              "stringifiedArguments": "'class'"
            }
          ],
          "inheritance": {
            "file": "ZyfraBaseSearchCellComponent"
          }
        }
      ],
      "methodsClass": [
        {
          "name": "filter",
          "args": [
            {
              "name": "value",
              "type": "any",
              "deprecated": false,
              "deprecationMessage": ""
            },
            {
              "name": "field",
              "type": "string",
              "deprecated": false,
              "deprecationMessage": ""
            },
            {
              "name": "matchMode",
              "type": "string",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 33,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [123],
          "jsdoctags": [
            {
              "name": "value",
              "type": "any",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "field",
              "type": "string",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "matchMode",
              "type": "string",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ],
          "inheritance": {
            "file": "ZyfraBaseSearchCellComponent"
          }
        }
      ],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [
        {
          "name": "class",
          "defaultValue": "'search-cell'",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 27,
          "type": "string",
          "inheritance": {
            "file": "ZyfraBaseSearchCellComponent"
          }
        }
      ],
      "hostListeners": [],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import { Component } from '@angular/core';\r\nimport { ZyfraBaseSearchCellComponent } from '../../@core/base-table';\r\nimport { ZyfraTableComponent } from '../zyfra-table.component';\r\n\r\n// eslint-disable-next-line @angular-eslint/prefer-on-push-component-change-detection\r\n@Component({\r\n  // eslint-disable-next-line @angular-eslint/component-selector\r\n  selector: '[zyfra-search-cell]',\r\n  templateUrl: './search-cell.component.html',\r\n  // changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class ZyfraSearchCellComponent extends ZyfraBaseSearchCellComponent {\r\n  constructor(public readonly table: ZyfraTableComponent) {\r\n    super();\r\n  }\r\n}\r\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "deprecated": false,
        "deprecationMessage": "",
        "args": [
          {
            "name": "table",
            "type": "ZyfraTableComponent",
            "deprecated": false,
            "deprecationMessage": ""
          }
        ],
        "line": 12,
        "jsdoctags": [
          {
            "name": "table",
            "type": "ZyfraTableComponent",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      "extends": "ZyfraBaseSearchCellComponent",
      "templateData": "<input\r\n  class=\"search-cell__input\"\r\n  type=\"text\"\r\n  (input)=\"filter($any($event.target).value, field, matchMode)\"\r\n  [value]=\"$any(table.filters[field])?.value || ''\"\r\n  [placeholder]=\"placeholder\"\r\n>\r\n<i class=\"search-cell__icon pi pi-search\"></i>\r\n"
    },
    {
      "name": "ZyfraSelectButtonComponent",
      "id": "component-ZyfraSelectButtonComponent-dc0e3a5e4213b54b89f7b691b59e9292",
      "file": "libs/components/src/lib/select-button/zyfra-select-button.component.ts",
      "changeDetection": "ChangeDetectionStrategy.OnPush",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "zyfra-select-button",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./zyfra-select-button.component.html"],
      "viewProviders": [],
      "inputsClass": [
        {
          "name": "ariaLabelledBy",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 28,
          "type": "string"
        },
        {
          "name": "dataKey",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 30,
          "type": "string"
        },
        {
          "name": "disabled",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 29,
          "type": "boolean"
        },
        {
          "name": "multiple",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 24,
          "type": "boolean"
        },
        {
          "name": "optionDisabled",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 23,
          "type": "string"
        },
        {
          "name": "optionLabel",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 21,
          "type": "string"
        },
        {
          "name": "options",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 20,
          "type": "OPTION[]"
        },
        {
          "name": "optionValue",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 22,
          "type": "string"
        },
        {
          "name": "style",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 26,
          "type": "string"
        },
        {
          "name": "styleClass",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 27,
          "type": "string"
        },
        {
          "name": "tabindex",
          "defaultValue": "0",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 25,
          "type": "number"
        }
      ],
      "outputsClass": [
        {
          "name": "onChange",
          "defaultValue": "new EventEmitter()",
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "\n\nOptional Change emitter\n",
          "description": "<p>Optional Change emitter</p>\n",
          "line": 35,
          "type": "EventEmitter<>"
        },
        {
          "name": "onOptionClick",
          "defaultValue": "new EventEmitter()",
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "\n\nOptional OptionClick emitter\n",
          "description": "<p>Optional OptionClick emitter</p>\n",
          "line": 40,
          "type": "EventEmitter<SelectButtonOptionClick<OPTION>>"
        }
      ],
      "propertiesClass": [],
      "methodsClass": [
        {
          "name": "handleChange",
          "args": [
            {
              "name": "data",
              "type": "SelectButtonChange<VALUE>",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 45,
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "\n\nOptional Change handler\n",
          "description": "<p>Optional Change handler</p>\n",
          "modifierKind": [123],
          "jsdoctags": [
            {
              "name": "data",
              "type": "SelectButtonChange<VALUE>",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "handleOptionClick",
          "args": [
            {
              "name": "data",
              "type": "SelectButtonOptionClick<OPTION>",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 52,
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "\n\nOptional OptionClick handler\n",
          "description": "<p>Optional OptionClick handler</p>\n",
          "modifierKind": [123],
          "jsdoctags": [
            {
              "name": "data",
              "type": "SelectButtonOptionClick<OPTION>",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        }
      ],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import { Component, Input, Output, EventEmitter, ChangeDetectionStrategy } from '@angular/core';\r\n\r\nexport interface SelectButtonOptionClick<T> {\r\n  index: number;\r\n  option: T;\r\n  originalEvent: PointerEvent;\r\n}\r\n\r\nexport interface SelectButtonChange<T> {\r\n  index: number;\r\n  value: T;\r\n}\r\n\r\n@Component({\r\n  selector: 'zyfra-select-button',\r\n  templateUrl: './zyfra-select-button.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class ZyfraSelectButtonComponent<OPTION, VALUE> {\r\n  @Input() options: OPTION[];\r\n  @Input() optionLabel: string;\r\n  @Input() optionValue: string;\r\n  @Input() optionDisabled: string;\r\n  @Input() multiple: boolean;\r\n  @Input() tabindex: number = 0;\r\n  @Input() style: string;\r\n  @Input() styleClass: string;\r\n  @Input() ariaLabelledBy: string;\r\n  @Input() disabled: boolean;\r\n  @Input() dataKey: string;\r\n\r\n  /**\r\n   * Optional Change emitter\r\n   */\r\n  @Output() onChange: EventEmitter<SelectButtonChange<VALUE>['value']> = new EventEmitter();\r\n\r\n  /**\r\n   * Optional OptionClick emitter\r\n   */\r\n  @Output() onOptionClick: EventEmitter<SelectButtonOptionClick<OPTION>> = new EventEmitter();\r\n\r\n  /**\r\n   * Optional Change handler\r\n   */\r\n  public handleChange(data: SelectButtonChange<VALUE>): void {\r\n    this.onChange.emit(data.value);\r\n  }\r\n\r\n  /**\r\n   * Optional OptionClick handler\r\n   */\r\n  public handleOptionClick(data: SelectButtonOptionClick<OPTION>): void {\r\n    this.onOptionClick.emit(data);\r\n  }\r\n}\r\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "templateData": "<p-selectButton\r\n  [options]=\"options\"\r\n  [optionLabel]=\"optionLabel\"\r\n  [optionValue]=\"optionValue\"\r\n  [optionDisabled]=\"optionDisabled\"\r\n  [multiple]=\"multiple\"\r\n  [tabindex]=\"tabindex\"\r\n  [style]=\"style\"\r\n  [styleClass]=\"styleClass\"\r\n  [ariaLabelledBy]=\"ariaLabelledBy\"\r\n  [disabled]=\"disabled\"\r\n  [dataKey]=\"dataKey\"\r\n  (onChange)=\"handleChange($event)\"\r\n  (onOptionClick)=\"handleOptionClick($event)\"\r\n></p-selectButton>\r\n"
    },
    {
      "name": "ZyfraSliderComponent",
      "id": "component-ZyfraSliderComponent-dc32cbb24b95edcada3ad3f281c47a6a",
      "file": "libs/components/src/lib/slider/zyfra-slider.component.ts",
      "changeDetection": "ChangeDetectionStrategy.OnPush",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "zyfra-slider",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./zyfra-slider.component.html"],
      "viewProviders": [],
      "inputsClass": [
        {
          "name": "animate",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 13,
          "type": "boolean"
        },
        {
          "name": "ariaLabelledBy",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 23,
          "type": "string"
        },
        {
          "name": "disabled",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 14,
          "type": "boolean"
        },
        {
          "name": "max",
          "defaultValue": "100",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 16,
          "type": "number"
        },
        {
          "name": "min",
          "defaultValue": "0",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 15,
          "type": "number"
        },
        {
          "name": "orientation",
          "defaultValue": "'horizontal'",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 17,
          "type": "SliderOrientation"
        },
        {
          "name": "range",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 19,
          "type": "boolean"
        },
        {
          "name": "step",
          "defaultValue": "1",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 18,
          "type": "number"
        },
        {
          "name": "style",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 20,
          "type": "string"
        },
        {
          "name": "styleClass",
          "defaultValue": "''",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 21,
          "type": "string"
        },
        {
          "name": "tabindex",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 22,
          "type": "number"
        }
      ],
      "outputsClass": [
        {
          "name": "onSlideEnd",
          "defaultValue": "new EventEmitter()",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 25,
          "type": "EventEmitter<any>"
        }
      ],
      "propertiesClass": [
        {
          "name": "formControl",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "FormControl",
          "optional": false,
          "description": "",
          "line": 7,
          "modifierKind": [123, 143],
          "inheritance": {
            "file": "WrappedFormComponent"
          }
        },
        {
          "name": "injector",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Injector",
          "optional": false,
          "description": "",
          "line": 9,
          "modifierKind": [123, 143],
          "inheritance": {
            "file": "WrappedFormComponent"
          }
        },
        {
          "name": "ngControl",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "NgControl",
          "optional": false,
          "description": "",
          "line": 9,
          "decorators": [
            {
              "name": "Optional",
              "stringifiedArguments": ""
            },
            {
              "name": "Self",
              "stringifiedArguments": ""
            }
          ],
          "modifierKind": [123, 143],
          "inheritance": {
            "file": "WrappedFormComponent"
          }
        }
      ],
      "methodsClass": [
        {
          "name": "onSlideEndHandler",
          "args": [
            {
              "name": "event",
              "type": "",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 31,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [123],
          "jsdoctags": [
            {
              "name": "event",
              "type": "",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "setDisabledState",
          "args": [
            {
              "name": "isDisabled",
              "type": "boolean",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 35,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [123, 157],
          "jsdoctags": [
            {
              "name": "isDisabled",
              "type": "boolean",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ],
          "inheritance": {
            "file": "WrappedFormComponent"
          }
        }
      ],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output } from '@angular/core';\r\nimport { ControlValueAccessor } from '@angular/forms';\r\nimport { WrappedFormComponent } from '../@core/value-accessor/wrapped-form.component';\r\n\r\ntype SliderOrientation = 'horizontal' | 'vertical';\r\n\r\n@Component({\r\n  selector: 'zyfra-slider',\r\n  templateUrl: './zyfra-slider.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class ZyfraSliderComponent extends WrappedFormComponent implements ControlValueAccessor {\r\n  @Input() animate: boolean;\r\n  @Input() disabled: boolean; // TODO remove, use FormControl disabled\r\n  @Input() min: number = 0;\r\n  @Input() max: number = 100;\r\n  @Input() orientation: SliderOrientation = 'horizontal';\r\n  @Input() step: number = 1;\r\n  @Input() range: boolean;\r\n  @Input() style: string;\r\n  @Input() styleClass: string = '';\r\n  @Input() tabindex: number;\r\n  @Input() ariaLabelledBy: string;\r\n\r\n  @Output() onSlideEnd: EventEmitter<any> = new EventEmitter();\r\n\r\n  get styleClasses(): string {\r\n    return `${this.range ? 'zyfra-slider_range ' : ''} ${this.styleClass}`;\r\n  }\r\n\r\n  public onSlideEndHandler(event): void {\r\n    this.onSlideEnd.emit(event);\r\n  }\r\n\r\n  public override setDisabledState(isDisabled: boolean): void {\r\n    // do nothing\r\n  }\r\n}\r\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "extends": "WrappedFormComponent",
      "implements": ["ControlValueAccessor"],
      "accessors": {
        "styleClasses": {
          "name": "styleClasses",
          "getSignature": {
            "name": "styleClasses",
            "type": "string",
            "returnType": "string",
            "line": 27
          }
        }
      },
      "templateData": "<p-slider\r\n  [formControl]=\"$any(ngControl.control)\"\r\n  (ngModelChange)=\"accessorOnChangeFn($event)\"\r\n  [animate]=\"animate\"\r\n  [disabled]=\"disabled\"\r\n  [min]=\"min\"\r\n  [max]=\"max\"\r\n  [orientation]=\"orientation\"\r\n  [step]=\"step\"\r\n  [range]=\"range\"\r\n  [style]=\"style\"\r\n  [styleClass]=\"styleClasses\"\r\n  [tabindex]=\"tabindex\"\r\n  [ariaLabelledBy]=\"ariaLabelledBy\"\r\n  (onSlideEnd)=\"onSlideEndHandler($event)\"\r\n></p-slider>\r\n"
    },
    {
      "name": "ZyfraSortIconComponent",
      "id": "component-ZyfraSortIconComponent-3d26e6858b83a6a69e4dfb0188ab034d",
      "file": "libs/components/src/lib/table/sort-icon/sort-icon.component.ts",
      "changeDetection": "ChangeDetectionStrategy.OnPush",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "zyfra-sort-icon",
      "styleUrls": ["./sort-icon.component.less"],
      "styles": [],
      "templateUrl": ["./sort-icon.component.html"],
      "viewProviders": [],
      "inputsClass": [
        {
          "name": "field",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 10,
          "type": "string"
        }
      ],
      "outputsClass": [],
      "propertiesClass": [],
      "methodsClass": [],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'zyfra-sort-icon',\r\n  templateUrl: './sort-icon.component.html',\r\n  styleUrls: ['./sort-icon.component.less'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class ZyfraSortIconComponent {\r\n  @Input() field: string;\r\n}\r\n",
      "assetsDirs": [],
      "styleUrlsData": [
        {
          "data": ":host {\r\n  float: right;\r\n}\r\n",
          "styleUrl": "./sort-icon.component.less"
        }
      ],
      "stylesData": "",
      "templateData": "<p-sortIcon [field]=\"field\"></p-sortIcon>\r\n"
    },
    {
      "name": "ZyfraSpinnerComponent",
      "id": "component-ZyfraSpinnerComponent-dbe1bfb1e2576243ce4dc3adddaf125e",
      "file": "libs/components/src/lib/spinner/zyfra-spinner.component.ts",
      "changeDetection": "ChangeDetectionStrategy.OnPush",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "zyfra-spinner",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./zyfra-spinner.component.html"],
      "viewProviders": [],
      "inputsClass": [
        {
          "name": "animationDuration",
          "defaultValue": "'2s'",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 16,
          "type": "string"
        },
        {
          "name": "color",
          "defaultValue": "'primary'",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 17,
          "type": "SpinnerColor"
        },
        {
          "name": "fill",
          "defaultValue": "'none'",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 15,
          "type": "string"
        },
        {
          "name": "size",
          "defaultValue": "'100px'",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 11,
          "type": "string"
        },
        {
          "name": "strokeWidth",
          "defaultValue": "'2'",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 14,
          "type": "string"
        },
        {
          "name": "style",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 12,
          "type": "Record<string | string | number>"
        },
        {
          "name": "styleClass",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 13,
          "type": "string"
        }
      ],
      "outputsClass": [],
      "propertiesClass": [],
      "methodsClass": [],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\r\n\r\ntype SpinnerColor = 'primary' | 'secondary' | 'info' | 'warning' | 'danger' | 'success';\r\n\r\n@Component({\r\n  selector: 'zyfra-spinner',\r\n  templateUrl: './zyfra-spinner.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class ZyfraSpinnerComponent {\r\n  @Input() size = '100px';\r\n  @Input() style: Record<string, string | number>;\r\n  @Input() styleClass: string;\r\n  @Input() strokeWidth = '2';\r\n  @Input() fill = 'none';\r\n  @Input() animationDuration = '2s';\r\n  @Input() color: SpinnerColor = 'primary';\r\n\r\n  get spinnerStyle(): Record<string, string | number> {\r\n    return {\r\n      ...this.style,\r\n      width: this.size,\r\n      height: this.size,\r\n    };\r\n  }\r\n}\r\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "accessors": {
        "spinnerStyle": {
          "name": "spinnerStyle",
          "getSignature": {
            "name": "spinnerStyle",
            "type": "",
            "returnType": "Record<string, string | number>",
            "line": 19
          }
        }
      },
      "templateData": "<p-progressSpinner\r\n  [class]=\"'zyfra-spinner zyfra-spinner_color-' + color\"\r\n  [style]=\"spinnerStyle\"\r\n  [styleClass]=\"styleClass\"\r\n  [strokeWidth]=\"strokeWidth\"\r\n  [fill]=\"fill\"\r\n  [animationDuration]=\"animationDuration\"\r\n></p-progressSpinner>\r\n"
    },
    {
      "name": "ZyfraSplitButtonComponent",
      "id": "component-ZyfraSplitButtonComponent-3cff2915b293ee84e9081ccb2efe81e2",
      "file": "libs/components/src/lib/split-button/zyfra-split-button.component.ts",
      "changeDetection": "ChangeDetectionStrategy.OnPush",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "zyfra-split-button",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./zyfra-split-button.component.html"],
      "viewProviders": [],
      "inputsClass": [
        {
          "name": "appendTo",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 19,
          "type": "any"
        },
        {
          "name": "dir",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 20,
          "type": "string"
        },
        {
          "name": "disabled",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 14,
          "type": "boolean"
        },
        {
          "name": "hideTransitionOptions",
          "defaultValue": "'195ms ease-in'",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 24,
          "type": "string"
        },
        {
          "name": "icon",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 12,
          "type": "string"
        },
        {
          "name": "iconPos",
          "defaultValue": "'left'",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 13,
          "type": "\"left\" | \"right\""
        },
        {
          "name": "label",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 11,
          "type": "string"
        },
        {
          "name": "menuStyle",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 16,
          "type": "string"
        },
        {
          "name": "menuStyleClass",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 17,
          "type": "string"
        },
        {
          "name": "model",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 22,
          "type": "MenuItem[]"
        },
        {
          "name": "showTransitionOptions",
          "defaultValue": "'225ms ease-out'",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 23,
          "type": "string"
        },
        {
          "name": "style",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 15,
          "type": "string"
        },
        {
          "name": "styleClass",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 18,
          "type": "string"
        },
        {
          "name": "tabindex",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 21,
          "type": "number"
        }
      ],
      "outputsClass": [
        {
          "name": "onClick",
          "defaultValue": "new EventEmitter()",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 26,
          "type": "EventEmitter<PointerEvent>"
        },
        {
          "name": "onDropdownClick",
          "defaultValue": "new EventEmitter()",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 27,
          "type": "EventEmitter<PointerEvent>"
        }
      ],
      "propertiesClass": [],
      "methodsClass": [
        {
          "name": "nativeClick",
          "args": [
            {
              "name": "event",
              "type": "Event",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 29,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [123],
          "jsdoctags": [
            {
              "name": "event",
              "type": "Event",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "onClickHandler",
          "args": [
            {
              "name": "event",
              "type": "PointerEvent",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 35,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [123],
          "jsdoctags": [
            {
              "name": "event",
              "type": "PointerEvent",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "onDropdownClickHandler",
          "args": [
            {
              "name": "event",
              "type": "PointerEvent",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 39,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [123],
          "jsdoctags": [
            {
              "name": "event",
              "type": "PointerEvent",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        }
      ],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import { Component, Input, Output, EventEmitter, ChangeDetectionStrategy } from '@angular/core';\r\n\r\nimport { MenuItem } from 'primeng/api';\r\n\r\n@Component({\r\n  selector: 'zyfra-split-button',\r\n  templateUrl: './zyfra-split-button.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class ZyfraSplitButtonComponent {\r\n  @Input() label: string;\r\n  @Input() icon: string;\r\n  @Input() iconPos: 'left' | 'right' = 'left';\r\n  @Input() disabled: boolean;\r\n  @Input() style: string;\r\n  @Input() menuStyle: string;\r\n  @Input() menuStyleClass: string;\r\n  @Input() styleClass: string;\r\n  @Input() appendTo: any;\r\n  @Input() dir: string;\r\n  @Input() tabindex: number;\r\n  @Input() model: MenuItem[];\r\n  @Input() showTransitionOptions = '225ms ease-out';\r\n  @Input() hideTransitionOptions = '195ms ease-in';\r\n\r\n  @Output() onClick: EventEmitter<PointerEvent> = new EventEmitter();\r\n  @Output() onDropdownClick: EventEmitter<PointerEvent> = new EventEmitter();\r\n\r\n  public nativeClick(event: Event): void {\r\n    if (this.disabled) {\r\n      event.stopPropagation();\r\n    }\r\n  }\r\n\r\n  public onClickHandler(event: PointerEvent): void {\r\n    this.onClick.emit(event);\r\n  }\r\n\r\n  public onDropdownClickHandler(event: PointerEvent): void {\r\n    this.onDropdownClick.emit(event);\r\n  }\r\n}\r\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "templateData": "<p-splitButton\r\n  [model]=\"model\"\r\n  [label]=\"label\"\r\n  [icon]=\"icon\"\r\n  [iconPos]=\"iconPos\"\r\n  [disabled]=\"disabled\"\r\n  [style]=\"style\"\r\n  [styleClass]=\"styleClass\"\r\n  [menuStyle]=\"menuStyle\"\r\n  [menuStyleClass]=\"menuStyleClass\"\r\n  [appendTo]=\"appendTo\"\r\n  [tabindex]=\"tabindex\"\r\n  [dir]=\"dir\"\r\n  [showTransitionOptions]=\"showTransitionOptions\"\r\n  [hideTransitionOptions]=\"hideTransitionOptions\"\r\n  (click)=\"nativeClick($event)\"\r\n  (onClick)=\"onClickHandler($event)\"\r\n  (onDropdownClick)=\"onDropdownClickHandler($event)\"\r\n></p-splitButton>\r\n"
    },
    {
      "name": "ZyfraSplitterComponent",
      "id": "component-ZyfraSplitterComponent-dfbeb56d5dd826c54bfd244e8d364e90",
      "file": "libs/components/src/lib/splitter/zyfra-splitter.component.ts",
      "changeDetection": "ChangeDetectionStrategy.OnPush",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [
        {
          "name": "ZyfraSplitterTemplatesService"
        },
        {
          "name": "ZuiDestroyService"
        }
      ],
      "selector": "zyfra-splitter",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./zyfra-splitter.component.html"],
      "viewProviders": [],
      "inputsClass": [
        {
          "name": "gutterSize",
          "defaultValue": "8",
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "Size of the divider in pixels.",
          "description": "<p>Size of the divider in pixels.</p>\n",
          "line": 48,
          "type": "number"
        },
        {
          "name": "layout",
          "defaultValue": "'vertical'",
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "Orientation of the panels, valid values are \"horizontal\" and \"vertical\".",
          "description": "<p>Orientation of the panels, valid values are &quot;horizontal&quot; and &quot;vertical&quot;.</p>\n",
          "line": 43,
          "type": "\"horizontal\" | \"vertical\""
        },
        {
          "name": "minSizes",
          "defaultValue": "[]",
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "Minimum size of the elements relative to 100%.",
          "description": "<p>Minimum size of the elements relative to 100%.</p>\n",
          "line": 38,
          "type": "number[]"
        },
        {
          "name": "panelSizes",
          "defaultValue": "[]",
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "Size of the elements relative to 100%.",
          "description": "<p>Size of the elements relative to 100%.</p>\n",
          "line": 33,
          "type": "number[]"
        },
        {
          "name": "panelStyle",
          "defaultValue": "null",
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "Inline style of the pnanel.",
          "description": "<p>Inline style of the pnanel.</p>\n",
          "line": 78,
          "type": "literal type"
        },
        {
          "name": "panelStyleClass",
          "defaultValue": "null",
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "Style class of the panel.",
          "description": "<p>Style class of the panel.</p>\n",
          "line": 73,
          "type": "string"
        },
        {
          "name": "stateKey",
          "defaultValue": "null",
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "Storage identifier of a stateful Splitter.",
          "description": "<p>Storage identifier of a stateful Splitter.</p>\n",
          "line": 53,
          "type": "string"
        },
        {
          "name": "stateStorage",
          "defaultValue": "'session'",
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "Defines where a stateful splitter keeps its state, valid values are \"session\" for sessionStorage and \"local\" for localStorage.",
          "description": "<p>Defines where a stateful splitter keeps its state, valid values are &quot;session&quot; for sessionStorage and &quot;local&quot; for localStorage.</p>\n",
          "line": 58,
          "type": "\"session\" | \"local\""
        },
        {
          "name": "style",
          "defaultValue": "null",
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "Inline style of the component.",
          "description": "<p>Inline style of the component.</p>\n",
          "line": 63,
          "type": "literal type"
        },
        {
          "name": "styleClass",
          "defaultValue": "null",
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "Style class of the component.",
          "description": "<p>Style class of the component.</p>\n",
          "line": 68,
          "type": "string"
        }
      ],
      "outputsClass": [
        {
          "name": "onResizeEnd",
          "defaultValue": "new EventEmitter<onResizeEvent>()",
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "\n\nCallback to invoke when resize ends.\n\n",
          "description": "<p>Callback to invoke when resize ends.</p>\n",
          "line": 99,
          "type": "EventEmitter"
        },
        {
          "name": "onResizeStart",
          "defaultValue": "new EventEmitter<onResizeEvent>()",
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "\n\nCallback to invoke when resize starts.\n\n",
          "description": "<p>Callback to invoke when resize starts.</p>\n",
          "line": 93,
          "type": "EventEmitter"
        }
      ],
      "propertiesClass": [
        {
          "name": "panels",
          "defaultValue": "[]",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "[]",
          "optional": false,
          "description": "",
          "line": 101
        },
        {
          "name": "splitter",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "SplitterExtended",
          "optional": false,
          "description": "",
          "line": 87,
          "decorators": [
            {
              "name": "ViewChild",
              "stringifiedArguments": "SplitterExtended, {static: true}"
            }
          ]
        },
        {
          "name": "templates",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "QueryList<ZyfraSplitterTemplateDirective>",
          "optional": false,
          "description": "<p>Template html.</p>\n",
          "line": 85,
          "rawdescription": "\n\nTemplate html.\n\n",
          "decorators": [
            {
              "name": "ContentChildren",
              "stringifiedArguments": "ZyfraSplitterTemplateDirective"
            }
          ]
        }
      ],
      "methodsClass": [
        {
          "name": "ngAfterContentInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 108,
          "deprecated": false,
          "deprecationMessage": ""
        },
        {
          "name": "onResizeStartHandler",
          "args": [
            {
              "name": "event",
              "type": "",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 120,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [123],
          "jsdoctags": [
            {
              "name": "event",
              "type": "",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        }
      ],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import {\r\n  AfterContentInit,\r\n  ChangeDetectionStrategy,\r\n  ChangeDetectorRef,\r\n  Component,\r\n  ContentChildren,\r\n  EventEmitter,\r\n  Input,\r\n  Output,\r\n  QueryList,\r\n  ViewChild,\r\n} from '@angular/core';\r\nimport { ZyfraSplitterTemplateDirective } from './zyfra-splitter.directives';\r\nimport { ZyfraSplitterTemplatesService } from './zyfra-splitter-templates.service';\r\nimport { delay, takeUntil, tap } from 'rxjs/operators';\r\nimport { SplitterExtended } from './p-splitter/splitter';\r\nimport { ZuiDestroyService } from '@digital-plant/zyfra-helpers';\r\n\r\ntype onResizeEvent = { originalEvent: MouseEvent; sizes: [number, number] };\r\n\r\n@Component({\r\n  selector: 'zyfra-splitter',\r\n  templateUrl: './zyfra-splitter.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  providers: [ZyfraSplitterTemplatesService, ZuiDestroyService]\r\n})\r\nexport class ZyfraSplitterComponent implements AfterContentInit {\r\n  // Вся информация о методах и свойствах хранится тут import { Splitter } from 'primeng/splitter';\r\n  /**\r\n   * Size of the elements relative to 100%.\r\n   *\r\n   */\r\n  @Input() panelSizes: number[] = [];\r\n  /**\r\n   * Minimum size of the elements relative to 100%.\r\n   *\r\n   */\r\n  @Input() minSizes: number[] = [];\r\n  /**\r\n   * Orientation of the panels, valid values are \"horizontal\" and \"vertical\".\r\n   *\r\n   */\r\n  @Input() layout: 'horizontal' | 'vertical' = 'vertical';\r\n  /**\r\n   * Size of the divider in pixels.\r\n   *\r\n   */\r\n  @Input() gutterSize = 8;\r\n  /**\r\n   * Storage identifier of a stateful Splitter.\r\n   *\r\n   */\r\n  @Input() stateKey: string = null;\r\n  /**\r\n   * Defines where a stateful splitter keeps its state, valid values are \"session\" for sessionStorage and \"local\" for localStorage.\r\n   *\r\n   */\r\n  @Input() stateStorage: 'session' | 'local' = 'session';\r\n  /**\r\n   * Inline style of the component.\r\n   *\r\n   */\r\n  @Input() style: { [key: string]: string | null } = null;\r\n  /**\r\n   * Style class of the component.\r\n   *\r\n   */\r\n  @Input() styleClass: string = null;\r\n  /**\r\n   * Style class of the panel.\r\n   *\r\n   */\r\n  @Input() panelStyleClass: string = null;\r\n  /**\r\n   * Inline style of the pnanel.\r\n   *\r\n   */\r\n  @Input() panelStyle: { [key: string]: string | null } = null;\r\n\r\n  /**\r\n   * Template html.\r\n   *\r\n   */\r\n  @ContentChildren(ZyfraSplitterTemplateDirective)\r\n  templates: QueryList<ZyfraSplitterTemplateDirective>;\r\n\r\n  @ViewChild(SplitterExtended, { static: true }) splitter: SplitterExtended;\r\n\r\n  /**\r\n   * Callback to invoke when resize starts.\r\n   *\r\n   */\r\n  @Output() onResizeStart = new EventEmitter<onResizeEvent>();\r\n\r\n  /**\r\n   * Callback to invoke when resize ends.\r\n   *\r\n   */\r\n  @Output() onResizeEnd = new EventEmitter<onResizeEvent>();\r\n\r\n  panels = [];\r\n\r\n  constructor(\r\n    private readonly zyfraSplitterService: ZyfraSplitterTemplatesService,\r\n    private readonly zuiDestroyService: ZuiDestroyService,\r\n    private readonly cdRef: ChangeDetectorRef) {}\r\n\r\n  ngAfterContentInit(): void {\r\n    this.zyfraSplitterService.list$.pipe(\r\n      tap((templates) => {\r\n        this.panels = templates.map(item => item.template);\r\n        this.cdRef.markForCheck();\r\n      }),\r\n      delay(0),\r\n      tap(() => this.splitter.updateTemplates()),\r\n      takeUntil(this.zuiDestroyService),\r\n    ).subscribe();\r\n  }\r\n\r\n  public onResizeStartHandler(event): void {\r\n    this.onResizeStart.emit(event);\r\n  }\r\n}\r\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "deprecated": false,
        "deprecationMessage": "",
        "args": [
          {
            "name": "zyfraSplitterService",
            "type": "ZyfraSplitterTemplatesService",
            "deprecated": false,
            "deprecationMessage": ""
          },
          {
            "name": "zuiDestroyService",
            "type": "ZuiDestroyService",
            "deprecated": false,
            "deprecationMessage": ""
          },
          {
            "name": "cdRef",
            "type": "ChangeDetectorRef",
            "deprecated": false,
            "deprecationMessage": ""
          }
        ],
        "line": 101,
        "jsdoctags": [
          {
            "name": "zyfraSplitterService",
            "type": "ZyfraSplitterTemplatesService",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          },
          {
            "name": "zuiDestroyService",
            "type": "ZuiDestroyService",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          },
          {
            "name": "cdRef",
            "type": "ChangeDetectorRef",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      "implements": ["AfterContentInit"],
      "templateData": "<p-splitter\r\n  #splitter\r\n  [panelSizes]=\"panelSizes\"\r\n  [minSizes]=\"minSizes\"\r\n  [layout]=\"layout\"\r\n  [gutterSize]=\"gutterSize\"\r\n  [stateKey]=\"stateKey\"\r\n  [stateStorage]=\"stateStorage\"\r\n  [style]=\"style\"\r\n  [styleClass]=\"styleClass\"\r\n  [panelStyleClass]=\"panelStyleClass\"\r\n  [panelStyle]=\"panelStyle\"\r\n  (onResizeStart)=\"onResizeStartHandler($event)\"\r\n  (onResizeEnd)=\"onResizeEnd.emit($event)\"\r\n>\r\n  <ng-template pTemplate *ngFor=\"let item of panels; let i = index\">\r\n    <ng-container *ngTemplateOutlet=\"item\"></ng-container>\r\n  </ng-template>\r\n</p-splitter>\r\n"
    },
    {
      "name": "ZyfraTableCheckboxComponent",
      "id": "component-ZyfraTableCheckboxComponent-a4f47376dc0c9580516ff61ec5ec49c2",
      "file": "libs/components/src/lib/table/table-checkbox/zyfra-table-checkbox.component.ts",
      "changeDetection": "ChangeDetectionStrategy.OnPush",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "zyfra-table-checkbox",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./zyfra-table-checkbox.component.html"],
      "viewProviders": [],
      "inputsClass": [
        {
          "name": "ariaLabel",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 19,
          "type": "string"
        },
        {
          "name": "disabled",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 13,
          "type": "boolean"
        },
        {
          "name": "index",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 15,
          "type": "number"
        },
        {
          "name": "inputId",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 16,
          "type": "string"
        },
        {
          "name": "name",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 17,
          "type": "string"
        },
        {
          "name": "required",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 18,
          "type": "boolean"
        },
        {
          "name": "value",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 14,
          "type": "any"
        }
      ],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "checkbox",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "TableCheckbox",
          "optional": false,
          "description": "",
          "line": 11,
          "decorators": [
            {
              "name": "ViewChild",
              "stringifiedArguments": "'checkbox', {static: true}"
            }
          ]
        }
      ],
      "methodsClass": [
        {
          "name": "onClick",
          "args": [
            {
              "name": "event",
              "type": "Event",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 25,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [123],
          "jsdoctags": [
            {
              "name": "event",
              "type": "Event",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        }
      ],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import { ChangeDetectionStrategy, Component, Input, Optional, ViewChild } from '@angular/core';\r\nimport { ZyfraSelectableRowDirective } from '../directives/selectable-row.directive';\r\nimport { TableCheckbox } from 'primeng/table';\r\n\r\n@Component({\r\n  selector: 'zyfra-table-checkbox',\r\n  templateUrl: './zyfra-table-checkbox.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class ZyfraTableCheckboxComponent {\r\n  @ViewChild('checkbox', { static: true }) checkbox: TableCheckbox;\r\n\r\n  @Input() disabled: boolean;\r\n  @Input() value: any;\r\n  @Input() index: number;\r\n  @Input() inputId: string;\r\n  @Input() name: string;\r\n  @Input() required: boolean;\r\n  @Input() ariaLabel: string;\r\n\r\n  constructor(\r\n    @Optional() private zyfraSelectableRow: ZyfraSelectableRowDirective\r\n  ) {}\r\n\r\n  public onClick(event: Event): void {\r\n    if (this.zyfraSelectableRow) {\r\n      event.stopPropagation();\r\n    }\r\n  }\r\n}\r\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "deprecated": false,
        "deprecationMessage": "",
        "args": [
          {
            "name": "zyfraSelectableRow",
            "type": "ZyfraSelectableRowDirective",
            "deprecated": false,
            "deprecationMessage": ""
          }
        ],
        "line": 19,
        "jsdoctags": [
          {
            "name": "zyfraSelectableRow",
            "type": "ZyfraSelectableRowDirective",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      "templateData": "<p-tableCheckbox\r\n  #checkbox\r\n  [value]=\"value\"\r\n  [disabled]=\"disabled\"\r\n  [index]=\"index\"\r\n  [inputId]=\"inputId\"\r\n  [name]=\"name\"\r\n  [required]=\"required\"\r\n  [ariaLabel]=\"ariaLabel\"\r\n  (click)=\"onClick($event)\"\r\n></p-tableCheckbox>\r\n"
    },
    {
      "name": "ZyfraTableColumnFilterComponent",
      "id": "component-ZyfraTableColumnFilterComponent-73324c5e9d0acc1a0fe6b66ade7a824c",
      "file": "libs/components/src/lib/table/table-column-filter/table-column-filter.component.ts",
      "changeDetection": "ChangeDetectionStrategy.OnPush",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [
        {
          "name": "{\n    provide: Table, useFactory: (zyfraTable: ZyfraTableComponent): Table => zyfraTable.table, deps: [ZyfraTableComponent],\n}",
          "type": "component",
          "ns": "{\n    provide: Table, useFactory: (zyfraTable: ZyfraTableComponent): Table => zyfraTable"
        }
      ],
      "selector": "zyfra-table-column-filter",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./table-column-filter.component.html"],
      "viewProviders": [],
      "inputsClass": [
        {
          "name": "currency",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 55,
          "type": "string"
        },
        {
          "name": "currencyDisplay",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 56,
          "type": "string"
        },
        {
          "name": "display",
          "defaultValue": "'row'",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 36,
          "type": "string"
        },
        {
          "name": "field",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 34,
          "type": "string"
        },
        {
          "name": "hideOnClear",
          "defaultValue": "false",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 45,
          "type": "boolean"
        },
        {
          "name": "locale",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 53,
          "type": "string"
        },
        {
          "name": "localeMatcher",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 54,
          "type": "string"
        },
        {
          "name": "matchMode",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 38,
          "type": "string"
        },
        {
          "name": "matchModeOptions",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 47,
          "type": "SelectItem[]"
        },
        {
          "name": "maxConstraints",
          "defaultValue": "2",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 48,
          "type": "number"
        },
        {
          "name": "maxFractionDigits",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 50,
          "type": "number"
        },
        {
          "name": "minFractionDigits",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 49,
          "type": "number"
        },
        {
          "name": "operator",
          "defaultValue": "FilterOperator.AND",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 39,
          "type": "string"
        },
        {
          "name": "placeholder",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 46,
          "type": "string"
        },
        {
          "name": "prefix",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 51,
          "type": "string"
        },
        {
          "name": "showAddButton",
          "defaultValue": "true",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 44,
          "type": "boolean"
        },
        {
          "name": "showApplyButton",
          "defaultValue": "true",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 42,
          "type": "boolean"
        },
        {
          "name": "showClearButton",
          "defaultValue": "true",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 41,
          "type": "boolean"
        },
        {
          "name": "showMatchModes",
          "defaultValue": "true",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 43,
          "type": "boolean"
        },
        {
          "name": "showMenu",
          "defaultValue": "true",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 37,
          "type": "boolean"
        },
        {
          "name": "showOperator",
          "defaultValue": "true",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 40,
          "type": "boolean"
        },
        {
          "name": "suffix",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 52,
          "type": "string"
        },
        {
          "name": "type",
          "defaultValue": "'text'",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 35,
          "type": "string"
        },
        {
          "name": "useGrouping",
          "defaultValue": "true",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 57,
          "type": "boolean"
        }
      ],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "filterTemplate",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "TemplateRef<any>",
          "optional": false,
          "description": "",
          "line": 31
        },
        {
          "name": "footerTemplate",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "TemplateRef<any>",
          "optional": false,
          "description": "",
          "line": 32
        },
        {
          "name": "headerTemplate",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "TemplateRef<any>",
          "optional": false,
          "description": "",
          "line": 30
        },
        {
          "name": "templates",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "QueryList<BaseTableTemplateDirective>",
          "optional": false,
          "description": "",
          "line": 28,
          "decorators": [
            {
              "name": "ContentChildren",
              "stringifiedArguments": "BaseTableTemplateDirective"
            }
          ]
        }
      ],
      "methodsClass": [
        {
          "name": "ngAfterContentInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 59,
          "deprecated": false,
          "deprecationMessage": ""
        }
      ],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import {\r\n  AfterContentInit,\r\n  ChangeDetectionStrategy,\r\n  Component,\r\n  ContentChildren,\r\n  Input,\r\n  QueryList,\r\n  TemplateRef,\r\n} from '@angular/core';\r\nimport { FilterOperator, SelectItem } from 'primeng/api';\r\nimport { Table } from 'primeng/table';\r\nimport { ZyfraTableComponent } from '../zyfra-table.component';\r\nimport { BaseTableTemplateDirective } from '../../@core/base-table/directives/base-table-template.directive';\r\n\r\n@Component({\r\n  selector: 'zyfra-table-column-filter',\r\n  templateUrl: './table-column-filter.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  providers: [\r\n    {\r\n      provide: Table,\r\n      useFactory: (zyfraTable: ZyfraTableComponent): Table => zyfraTable.table,\r\n      deps: [ZyfraTableComponent],\r\n    },\r\n  ],\r\n})\r\nexport class ZyfraTableColumnFilterComponent implements AfterContentInit {\r\n  @ContentChildren(BaseTableTemplateDirective) templates: QueryList<BaseTableTemplateDirective>;\r\n\r\n  headerTemplate: TemplateRef<any>;\r\n  filterTemplate: TemplateRef<any>;\r\n  footerTemplate: TemplateRef<any>;\r\n\r\n  @Input() field: string;\r\n  @Input() type = 'text';\r\n  @Input() display = 'row';\r\n  @Input() showMenu = true;\r\n  @Input() matchMode: string;\r\n  @Input() operator: string = FilterOperator.AND;\r\n  @Input() showOperator = true;\r\n  @Input() showClearButton = true;\r\n  @Input() showApplyButton = true;\r\n  @Input() showMatchModes = true;\r\n  @Input() showAddButton = true;\r\n  @Input() hideOnClear = false;\r\n  @Input() placeholder: string;\r\n  @Input() matchModeOptions: SelectItem[];\r\n  @Input() maxConstraints = 2;\r\n  @Input() minFractionDigits: number;\r\n  @Input() maxFractionDigits: number;\r\n  @Input() prefix: string;\r\n  @Input() suffix: string;\r\n  @Input() locale: string;\r\n  @Input() localeMatcher: string;\r\n  @Input() currency: string;\r\n  @Input() currencyDisplay: string;\r\n  @Input() useGrouping = true;\r\n\r\n  ngAfterContentInit(): void {\r\n    this.templates.forEach(item => {\r\n      switch (item.getType()) {\r\n        case 'header':\r\n          this.headerTemplate = item.template;\r\n          break;\r\n        case 'footer':\r\n          this.footerTemplate = item.template;\r\n          break;\r\n        case 'filter':\r\n          this.filterTemplate = item.template;\r\n          break;\r\n      }\r\n    });\r\n  }\r\n}\r\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "implements": ["AfterContentInit"],
      "templateData": "<p-columnFilter\r\n  [field]=\"field\"\r\n  [type]=\"type\"\r\n  [display]=\"display\"\r\n  [showMenu]=\"showMenu\"\r\n  [matchMode]=\"matchMode\"\r\n  [operator]=\"operator\"\r\n  [showOperator]=\"showOperator\"\r\n  [showClearButton]=\"showClearButton\"\r\n  [showApplyButton]=\"showApplyButton\"\r\n  [showMatchModes]=\"showMatchModes\"\r\n  [showAddButton]=\"showAddButton\"\r\n  [hideOnClear]=\"hideOnClear\"\r\n  [placeholder]=\"placeholder\"\r\n  [matchModeOptions]=\"matchModeOptions\"\r\n  [maxConstraints]=\"maxConstraints\"\r\n  [minFractionDigits]=\"minFractionDigits\"\r\n  [maxFractionDigits]=\"maxFractionDigits\"\r\n  [prefix]=\"prefix\"\r\n  [suffix]=\"suffix\"\r\n  [locale]=\"locale\"\r\n  [localeMatcher]=\"localeMatcher\"\r\n  [currency]=\"currency\"\r\n  [currencyDisplay]=\"currencyDisplay\"\r\n  [useGrouping]=\"useGrouping\"\r\n>\r\n  <ng-template pTemplate=\"header\" let-field *ngIf=\"headerTemplate\">\r\n    <ng-container *ngTemplateOutlet=\"headerTemplate; context: { $implicit: field }\"></ng-container>\r\n  </ng-template>\r\n\r\n  <ng-template pTemplate=\"filter\" let-value let-filterCallback=\"filterCallback\" *ngIf=\"filterTemplate\">\r\n    <ng-container *ngTemplateOutlet=\"filterTemplate; context: {\r\n      $implicit: value,\r\n      filterCallback: filterCallback\r\n    }\"></ng-container>\r\n  </ng-template>\r\n\r\n  <ng-template pTemplate=\"footer\" let-field *ngIf=\"footerTemplate\">\r\n    <ng-container *ngTemplateOutlet=\"footerTemplate; context: { $implicit: field }\"></ng-container>\r\n  </ng-template>\r\n</p-columnFilter>\r\n"
    },
    {
      "name": "ZyfraTableComponent",
      "id": "component-ZyfraTableComponent-678a655ec0a13625f7ed8ac541e60232",
      "file": "libs/components/src/lib/table/zyfra-table.component.ts",
      "changeDetection": "ChangeDetectionStrategy.OnPush",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [
        {
          "name": "TableService"
        },
        {
          "name": "FilterService"
        },
        {
          "name": "{\n    provide: TargetTableToken, useFactory: (zyfraTable: ZyfraTableComponent): ZyfraTableComponent => zyfraTable, deps: [ZyfraTableComponent],\n}",
          "type": "component"
        },
        {
          "name": "{\n    provide: Table, useFactory: (zyfraTable: ZyfraTableComponent): Table => zyfraTable.table, deps: [ZyfraTableComponent],\n}",
          "type": "component",
          "ns": "{\n    provide: Table, useFactory: (zyfraTable: ZyfraTableComponent): Table => zyfraTable"
        }
      ],
      "selector": "zyfra-table",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./zyfra-table.component.html"],
      "viewProviders": [],
      "inputsClass": [
        {
          "name": "breakpoint",
          "defaultValue": "'960px'",
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "The breakpoint to define the maximum width boundary when using stack responsive layout",
          "description": "<p>The breakpoint to define the maximum width boundary when using stack responsive layout</p>\n",
          "line": 68,
          "type": "string"
        },
        {
          "name": "className",
          "defaultValue": "'zyfra-table-class'",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 157,
          "type": "string"
        },
        {
          "name": "csvSeparator",
          "defaultValue": "','",
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "Character to use as the csv separator",
          "description": "<p>Character to use as the csv separator</p>\n",
          "line": 85,
          "type": "string"
        },
        {
          "name": "editingRowKeys",
          "defaultValue": "{}",
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "Map instance to keep the rows being edited where key of the map is the data key of the row",
          "description": "<p>Map instance to keep the rows being edited where key of the map is the data key of the row</p>\n",
          "line": 147,
          "type": "literal type"
        },
        {
          "name": "editMode",
          "defaultValue": "'cell'",
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "Defines the editing mode, valid values are \"cell\" and \"row\"",
          "description": "<p>Defines the editing mode, valid values are &quot;cell&quot; and &quot;row&quot;</p>\n",
          "line": 143,
          "type": "\"cell\" | \"row\""
        },
        {
          "name": "expandedRowKeys",
          "defaultValue": "{}",
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "Map instance to keep the expanded rows where key of the map is the data key of the row",
          "description": "<p>Map instance to keep the expanded rows where key of the map is the data key of the row</p>\n",
          "line": 107,
          "type": "literal type"
        },
        {
          "name": "exportFilename",
          "defaultValue": "'download'",
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "Name of the exported file",
          "description": "<p>Name of the exported file</p>\n",
          "line": 89,
          "type": "string"
        },
        {
          "name": "exportFunction",
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "A function to implement custom export. Need to return string value",
          "description": "<p>A function to implement custom export. Need to return string value</p>\n",
          "line": 131,
          "type": "function"
        },
        {
          "name": "filters",
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "An array of FilterMetadata objects to provide external filters",
          "description": "<p>An array of FilterMetadata objects to provide external filters</p>\n",
          "line": 97,
          "type": ""
        },
        {
          "name": "frozenValue",
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "An array of objects to display as frozen",
          "description": "<p>An array of objects to display as frozen</p>\n",
          "line": 60,
          "type": "any[]"
        },
        {
          "name": "groupRowsBy",
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "One or more field names to use in row grouping",
          "description": "<p>One or more field names to use in row grouping</p>\n",
          "line": 151,
          "type": "string | string[]"
        },
        {
          "name": "groupRowsByOrder",
          "defaultValue": "1",
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "Order to sort when default row grouping is enabled",
          "description": "<p>Order to sort when default row grouping is enabled</p>\n",
          "line": 155,
          "type": "number"
        },
        {
          "name": "paginatorDropdownScrollHeight",
          "defaultValue": "'200px'",
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "Paginator dropdown height of the viewport in pixels, a scrollbar is defined if height of list exceeds this value",
          "description": "<p>Paginator dropdown height of the viewport in pixels, a scrollbar is defined if height of list exceeds this value</p>\n",
          "line": 127,
          "type": "string"
        },
        {
          "name": "responsive",
          "defaultValue": "false",
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "Defines if the columns should be stacked in smaller screens",
          "description": "<p>Defines if the columns should be stacked in smaller screens</p>\n",
          "line": 123,
          "type": "boolean"
        },
        {
          "name": "responsiveLayout",
          "defaultValue": "'stack'",
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "Defines the responsive mode",
          "description": "<p>Defines the responsive mode</p>\n",
          "line": 64,
          "type": "\"stack\" | \"scroll\""
        },
        {
          "name": "rowExpandMode",
          "defaultValue": "'multiple'",
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "Whether multiple rows can be expanded at any time",
          "description": "<p>Whether multiple rows can be expanded at any time</p>\n",
          "line": 111,
          "type": "\"single\" | \"multiple\""
        },
        {
          "name": "rowGroupMode",
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "Type of the row grouping",
          "description": "<p>Type of the row grouping</p>\n",
          "line": 72,
          "type": "\"subheader\" | \"rowspan\""
        },
        {
          "name": "rowTrackBy",
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "Function to optimize the dom operations by delegating to ngForTrackBy, default algoritm checks for object identity",
          "description": "<p>Function to optimize the dom operations by delegating to ngForTrackBy, default algoritm checks for object identity</p>\n",
          "line": 81,
          "type": "function"
        },
        {
          "name": "scrollDirection",
          "defaultValue": "'vertical'",
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "Orientation of the scrolling",
          "description": "<p>Orientation of the scrolling</p>\n",
          "line": 115,
          "type": "\"vertical\" | \"horizontal\" | \"both\""
        },
        {
          "name": "showInitialSortBadge",
          "defaultValue": "true",
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "Whether to use the initial sort badge or not",
          "description": "<p>Whether to use the initial sort badge or not</p>\n",
          "line": 77,
          "type": "boolean"
        },
        {
          "name": "stateKey",
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "Unique identifier of a stateful table to use in state storage",
          "description": "<p>Unique identifier of a stateful table to use in state storage</p>\n",
          "line": 135,
          "type": "string"
        },
        {
          "name": "stateStorage",
          "defaultValue": "'session'",
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "Defines where a stateful table keeps its state, valid values are \"session\" for sessionStorage and \"local\" for localStorage",
          "description": "<p>Defines where a stateful table keeps its state, valid values are &quot;session&quot; for sessionStorage and &quot;local&quot; for localStorage</p>\n",
          "line": 139,
          "type": "\"session\" | \"local\""
        },
        {
          "name": "virtualScrollDelay",
          "defaultValue": "250",
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "Threshold in milliseconds to delay lazy loading during scrolling",
          "description": "<p>Threshold in milliseconds to delay lazy loading during scrolling</p>\n",
          "line": 119,
          "type": "number"
        },
        {
          "name": "alwaysShowPaginator",
          "defaultValue": "true",
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "Whether to show it even there is only one page",
          "description": "<p>Whether to show it even there is only one page</p>\n",
          "line": 104,
          "type": "boolean",
          "inheritance": {
            "file": "ZyfraBaseTableComponent"
          }
        },
        {
          "name": "autoLayout",
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "Whether the cell widths scale according to their content or not",
          "description": "<p>Whether the cell widths scale according to their content or not</p>\n",
          "line": 72,
          "type": "boolean",
          "inheritance": {
            "file": "ZyfraBaseTableComponent"
          }
        },
        {
          "name": "columnResizeMode",
          "defaultValue": "'fit'",
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "Defines whether the overall table width should change on column resize, valid values are \"fit\" and \"expand\"",
          "description": "<p>Defines whether the overall table width should change on column resize, valid values are &quot;fit&quot; and &quot;expand&quot;</p>\n",
          "line": 233,
          "type": "\"fit\" | \"expand\"",
          "inheritance": {
            "file": "ZyfraBaseTableComponent"
          }
        },
        {
          "name": "columns",
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "An array of objects to represent dynamic columns",
          "description": "<p>An array of objects to represent dynamic columns</p>\n",
          "line": 52,
          "type": "any[]",
          "inheritance": {
            "file": "ZyfraBaseTableComponent"
          }
        },
        {
          "name": "compareSelectionBy",
          "defaultValue": "'deepEquals'",
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "Algorithm to define if a row is selected,\r\nvalid values are \"equals\" that compares by reference and \"deepEquals\" that compares all fields",
          "description": "<p>Algorithm to define if a row is selected,\nvalid values are &quot;equals&quot; that compares by reference and &quot;deepEquals&quot; that compares all fields</p>\n",
          "line": 177,
          "type": "\"deepEquals\" | \"equals\"",
          "inheritance": {
            "file": "ZyfraBaseTableComponent"
          }
        },
        {
          "name": "contextMenu",
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "Local ng-template varilable of a ContextMenu",
          "description": "<p>Local ng-template varilable of a ContextMenu</p>\n",
          "line": 241,
          "type": "any",
          "inheritance": {
            "file": "ZyfraBaseTableComponent"
          }
        },
        {
          "name": "contextMenuSelection",
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "Context menu selection",
          "description": "<p>Context menu selection</p>\n",
          "line": 139,
          "type": "any",
          "inheritance": {
            "file": "ZyfraBaseTableComponent"
          }
        },
        {
          "name": "contextMenuSelectionMode",
          "defaultValue": "'separate'",
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "Context menu selection mode",
          "description": "<p>Context menu selection mode</p>\n",
          "line": 143,
          "type": "\"separate\" | \"joint\"",
          "inheritance": {
            "file": "ZyfraBaseTableComponent"
          }
        },
        {
          "name": "currentPageReportTemplate",
          "defaultValue": "'{currentPage} of {totalPages}'",
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "Template of the current page report element.\r\nAvailable placeholders are {currentPage},{totalPages},{rows},{first},{last} and {totalRecords}",
          "description": "<p>Template of the current page report element.\nAvailable placeholders are {currentPage},{totalPages},{rows},{first},{last} and {totalRecords}</p>\n",
          "line": 119,
          "type": "string",
          "inheritance": {
            "file": "ZyfraBaseTableComponent"
          }
        },
        {
          "name": "customSort",
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "Whether to use the default sorting or a custom one using sortFunction",
          "description": "<p>Whether to use the default sorting or a custom one using sortFunction</p>\n",
          "line": 159,
          "type": "boolean",
          "inheritance": {
            "file": "ZyfraBaseTableComponent"
          }
        },
        {
          "name": "dataKey",
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "A property to uniquely identify a record in data",
          "description": "<p>A property to uniquely identify a record in data</p>\n",
          "line": 167,
          "type": "string",
          "inheritance": {
            "file": "ZyfraBaseTableComponent"
          }
        },
        {
          "name": "defaultSortOrder",
          "defaultValue": "1",
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "Sort order to use when an unsorted column gets sorted by user interaction",
          "description": "<p>Sort order to use when an unsorted column gets sorted by user interaction</p>\n",
          "line": 147,
          "type": "number",
          "inheritance": {
            "file": "ZyfraBaseTableComponent"
          }
        },
        {
          "name": "filterDelay",
          "defaultValue": "300",
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "Delay in milliseconds before filtering the data",
          "description": "<p>Delay in milliseconds before filtering the data</p>\n",
          "line": 249,
          "type": "number",
          "inheritance": {
            "file": "ZyfraBaseTableComponent"
          }
        },
        {
          "name": "filterLocale",
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "Locale to use in filtering. The default locale is the host environment's current locale.",
          "description": "<p>Locale to use in filtering. The default locale is the host environment&#39;s current locale.</p>\n",
          "line": 257,
          "type": "string",
          "inheritance": {
            "file": "ZyfraBaseTableComponent"
          }
        },
        {
          "name": "filterMode",
          "defaultValue": "'lenient'",
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "Mode for filtering valid values are \"lenient\" and \"strict\". Default is lenient.",
          "description": "<p>Mode for filtering valid values are &quot;lenient&quot; and &quot;strict&quot;. Default is lenient.</p>\n",
          "line": 253,
          "type": "\"lenient\" | \"strict\"",
          "inheritance": {
            "file": "ZyfraBaseTableComponent"
          }
        },
        {
          "name": "first",
          "defaultValue": "0",
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "Index of the first row to be displayed",
          "description": "<p>Index of the first row to be displayed</p>\n",
          "line": 92,
          "type": "number",
          "inheritance": {
            "file": "ZyfraBaseTableComponent"
          }
        },
        {
          "name": "frozenColumns",
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "An array of objects to represent dynamic columns that are frozen",
          "description": "<p>An array of objects to represent dynamic columns that are frozen</p>\n",
          "line": 225,
          "type": "any[]",
          "inheritance": {
            "file": "ZyfraBaseTableComponent"
          }
        },
        {
          "name": "frozenWidth",
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "Width of the frozen columns container",
          "description": "<p>Width of the frozen columns container</p>\n",
          "line": 221,
          "type": "string",
          "inheritance": {
            "file": "ZyfraBaseTableComponent"
          }
        },
        {
          "name": "globalFilterFields",
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "An array of fields as string to use in global filtering",
          "description": "<p>An array of fields as string to use in global filtering</p>\n",
          "line": 245,
          "type": "string[]",
          "inheritance": {
            "file": "ZyfraBaseTableComponent"
          }
        },
        {
          "name": "lazy",
          "defaultValue": "false",
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "Defines if data is loaded and interacted with in lazy manner",
          "description": "<p>Defines if data is loaded and interacted with in lazy manner</p>\n",
          "line": 76,
          "type": "boolean",
          "inheritance": {
            "file": "ZyfraBaseTableComponent"
          }
        },
        {
          "name": "lazyLoadOnInit",
          "defaultValue": "true",
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "Whether to call lazy loading on initialization",
          "description": "<p>Whether to call lazy loading on initialization</p>\n",
          "line": 80,
          "type": "boolean",
          "inheritance": {
            "file": "ZyfraBaseTableComponent"
          }
        },
        {
          "name": "loading",
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "Displays a loader to indicate data load is in progress",
          "description": "<p>Displays a loader to indicate data load is in progress</p>\n",
          "line": 185,
          "type": "boolean",
          "inheritance": {
            "file": "ZyfraBaseTableComponent"
          }
        },
        {
          "name": "loadingIcon",
          "defaultValue": "'pi pi-spinner'",
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "The icon to show while indicating data load is in progress",
          "description": "<p>The icon to show while indicating data load is in progress</p>\n",
          "line": 189,
          "type": "string",
          "inheritance": {
            "file": "ZyfraBaseTableComponent"
          }
        },
        {
          "name": "maxBufferPx",
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "Configures how much buffer space to render back up to when it detects that more buffer is required",
          "description": "<p>Configures how much buffer space to render back up to when it detects that more buffer is required</p>\n",
          "line": 217,
          "type": "number",
          "inheritance": {
            "file": "ZyfraBaseTableComponent"
          }
        },
        {
          "name": "metaKeySelection",
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "Defines whether metaKey is should be considered for the selection.\r\nOn touch enabled devices, metaKeySelection is turned off automatically",
          "description": "<p>Defines whether metaKey is should be considered for the selection.\nOn touch enabled devices, metaKeySelection is turned off automatically</p>\n",
          "line": 172,
          "type": "boolean",
          "inheritance": {
            "file": "ZyfraBaseTableComponent"
          }
        },
        {
          "name": "minBufferPx",
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "Minimum amount of content buffer (in pixels) that the viewport must render",
          "description": "<p>Minimum amount of content buffer (in pixels) that the viewport must render</p>\n",
          "line": 213,
          "type": "number",
          "inheritance": {
            "file": "ZyfraBaseTableComponent"
          }
        },
        {
          "name": "multiSortMeta",
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "An array of SortMeta objects to sort the data by default in multiple sort mode",
          "description": "<p>An array of SortMeta objects to sort the data by default in multiple sort mode</p>\n",
          "line": 273,
          "type": "SortMeta[]",
          "inheritance": {
            "file": "ZyfraBaseTableComponent"
          }
        },
        {
          "name": "pageLinks",
          "defaultValue": "5",
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "Number of total records, defaults to length of value when not defined",
          "description": "<p>Number of total records, defaults to length of value when not defined</p>\n",
          "line": 96,
          "type": "number",
          "inheritance": {
            "file": "ZyfraBaseTableComponent"
          }
        },
        {
          "name": "paginator",
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "When specified as true, enables the pagination",
          "description": "<p>When specified as true, enables the pagination</p>\n",
          "line": 84,
          "type": "boolean",
          "inheritance": {
            "file": "ZyfraBaseTableComponent"
          }
        },
        {
          "name": "paginatorDropdownAppendTo",
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "Target element to attach the paginator dropdown overlay,\r\nvalid values are \"body\" or a local ng-template variable of another element\r\n(note: use binding with brackets for template variables, e.g. [appendTo]=\"mydiv\" for a div element having #mydiv as variable name)",
          "description": "<p>Target element to attach the paginator dropdown overlay,\nvalid values are &quot;body&quot; or a local ng-template variable of another element\n(note: use binding with brackets for template variables, e.g. [appendTo]=&quot;mydiv&quot; for a div element having #mydiv as variable name)</p>\n",
          "line": 114,
          "type": "any",
          "inheritance": {
            "file": "ZyfraBaseTableComponent"
          }
        },
        {
          "name": "paginatorPosition",
          "defaultValue": "'bottom'",
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "Position of the paginator, options are \"top\",\"bottom\" or \"both\"",
          "description": "<p>Position of the paginator, options are &quot;top&quot;,&quot;bottom&quot; or &quot;both&quot;</p>\n",
          "line": 108,
          "type": "\"top\" | \"bottom\" | \"both\"",
          "inheritance": {
            "file": "ZyfraBaseTableComponent"
          }
        },
        {
          "name": "reorderableColumns",
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "When enabled, columns can be reordered using drag and drop",
          "description": "<p>When enabled, columns can be reordered using drag and drop</p>\n",
          "line": 237,
          "type": "boolean",
          "inheritance": {
            "file": "ZyfraBaseTableComponent"
          }
        },
        {
          "name": "resetPageOnSort",
          "defaultValue": "true",
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "When true, resets paginator to first page after sorting",
          "description": "<p>When true, resets paginator to first page after sorting</p>\n",
          "line": 155,
          "type": "boolean",
          "inheritance": {
            "file": "ZyfraBaseTableComponent"
          }
        },
        {
          "name": "resizableColumns",
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "When enabled, columns can be resized using drag and drop",
          "description": "<p>When enabled, columns can be resized using drag and drop</p>\n",
          "line": 229,
          "type": "boolean",
          "inheritance": {
            "file": "ZyfraBaseTableComponent"
          }
        },
        {
          "name": "rowHover",
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "Adds hover effect to rows without the need for selectionMode",
          "description": "<p>Adds hover effect to rows without the need for selectionMode</p>\n",
          "line": 181,
          "type": "boolean",
          "inheritance": {
            "file": "ZyfraBaseTableComponent"
          }
        },
        {
          "name": "rows",
          "defaultValue": "10",
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "Number of rows to display per page",
          "description": "<p>Number of rows to display per page</p>\n",
          "line": 88,
          "type": "number",
          "inheritance": {
            "file": "ZyfraBaseTableComponent"
          }
        },
        {
          "name": "rowsPerPageOptions",
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "Number of page links to display in paginator",
          "description": "<p>Number of page links to display in paginator</p>\n",
          "line": 100,
          "type": "any[]",
          "inheritance": {
            "file": "ZyfraBaseTableComponent"
          }
        },
        {
          "name": "scrollable",
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "When specifies, enables horizontal and/or vertical scrolling",
          "description": "<p>When specifies, enables horizontal and/or vertical scrolling</p>\n",
          "line": 197,
          "type": "boolean",
          "inheritance": {
            "file": "ZyfraBaseTableComponent"
          }
        },
        {
          "name": "scrollHeight",
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "Height of the scroll viewport in fixed pixels or the \"flex\" keyword for a dynamic size",
          "description": "<p>Height of the scroll viewport in fixed pixels or the &quot;flex&quot; keyword for a dynamic size</p>\n",
          "line": 201,
          "type": "string",
          "inheritance": {
            "file": "ZyfraBaseTableComponent"
          }
        },
        {
          "name": "selection",
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "Selected row in single mode or an array of values in multiple mode",
          "description": "<p>Selected row in single mode or an array of values in multiple mode</p>\n",
          "line": 277,
          "type": "any",
          "inheritance": {
            "file": "ZyfraBaseTableComponent"
          }
        },
        {
          "name": "selectionMode",
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "Specifies the selection mode, valid values are \"single\" and \"multiple\"",
          "description": "<p>Specifies the selection mode, valid values are &quot;single&quot; and &quot;multiple&quot;</p>\n",
          "line": 163,
          "type": "\"single\" | \"multiple\"",
          "inheritance": {
            "file": "ZyfraBaseTableComponent"
          }
        },
        {
          "name": "showCurrentPageReport",
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "Whether to display current page report",
          "description": "<p>Whether to display current page report</p>\n",
          "line": 123,
          "type": "boolean",
          "inheritance": {
            "file": "ZyfraBaseTableComponent"
          }
        },
        {
          "name": "showFirstLastIcon",
          "defaultValue": "true",
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "When enabled, icons are displayed on paginator to go first and last page",
          "description": "<p>When enabled, icons are displayed on paginator to go first and last page</p>\n",
          "line": 131,
          "type": "boolean",
          "inheritance": {
            "file": "ZyfraBaseTableComponent"
          }
        },
        {
          "name": "showJumpToPageDropdown",
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "Whether to display a dropdown to navigate to any page",
          "description": "<p>Whether to display a dropdown to navigate to any page</p>\n",
          "line": 127,
          "type": "boolean",
          "inheritance": {
            "file": "ZyfraBaseTableComponent"
          }
        },
        {
          "name": "showLoader",
          "defaultValue": "true",
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "Whether to show the loading mask when loading property is true",
          "description": "<p>Whether to show the loading mask when loading property is true</p>\n",
          "line": 193,
          "type": "boolean",
          "inheritance": {
            "file": "ZyfraBaseTableComponent"
          }
        },
        {
          "name": "showPageLinks",
          "defaultValue": "true",
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "Whether to show page links",
          "description": "<p>Whether to show page links</p>\n",
          "line": 135,
          "type": "boolean",
          "inheritance": {
            "file": "ZyfraBaseTableComponent"
          }
        },
        {
          "name": "sortField",
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "Name of the field to sort data by default",
          "description": "<p>Name of the field to sort data by default</p>\n",
          "line": 265,
          "type": "string",
          "inheritance": {
            "file": "ZyfraBaseTableComponent"
          }
        },
        {
          "name": "sortMode",
          "defaultValue": "'single'",
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "Defines whether sorting works on single column or on multiple columns",
          "description": "<p>Defines whether sorting works on single column or on multiple columns</p>\n",
          "line": 151,
          "type": "\"single\" | \"multiple\"",
          "inheritance": {
            "file": "ZyfraBaseTableComponent"
          }
        },
        {
          "name": "sortOrder",
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "Order to sort when default sorting is enabled",
          "description": "<p>Order to sort when default sorting is enabled</p>\n",
          "line": 269,
          "type": "number",
          "inheritance": {
            "file": "ZyfraBaseTableComponent"
          }
        },
        {
          "name": "stripedMode",
          "defaultValue": "false",
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "When true turns on striped display mode",
          "description": "<p>When true turns on striped display mode</p>\n",
          "line": 281,
          "type": "boolean",
          "inheritance": {
            "file": "ZyfraBaseTableComponent"
          }
        },
        {
          "name": "style",
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "Inline style of the component",
          "description": "<p>Inline style of the component</p>\n",
          "line": 56,
          "type": "any",
          "inheritance": {
            "file": "ZyfraBaseTableComponent"
          }
        },
        {
          "name": "styleClass",
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "Style class of the component",
          "description": "<p>Style class of the component</p>\n",
          "line": 60,
          "type": "string",
          "inheritance": {
            "file": "ZyfraBaseTableComponent"
          }
        },
        {
          "name": "tableStyle",
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "Inline style of the table",
          "description": "<p>Inline style of the table</p>\n",
          "line": 64,
          "type": "Record<string | string>",
          "inheritance": {
            "file": "ZyfraBaseTableComponent"
          }
        },
        {
          "name": "tableStyleClass",
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "Style class of the table",
          "description": "<p>Style class of the table</p>\n",
          "line": 68,
          "type": "string",
          "inheritance": {
            "file": "ZyfraBaseTableComponent"
          }
        },
        {
          "name": "title",
          "defaultValue": "''",
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "Table title",
          "description": "<p>Table title</p>\n",
          "line": 44,
          "type": "string",
          "inheritance": {
            "file": "ZyfraBaseTableComponent"
          }
        },
        {
          "name": "totalRecords",
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "Number of total records, defaults to length of value when not defined",
          "description": "<p>Number of total records, defaults to length of value when not defined</p>\n",
          "line": 261,
          "type": "number",
          "inheritance": {
            "file": "ZyfraBaseTableComponent"
          }
        },
        {
          "name": "value",
          "defaultValue": "[]",
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "An array of objects to display",
          "description": "<p>An array of objects to display</p>\n",
          "line": 48,
          "type": "T[]",
          "inheritance": {
            "file": "ZyfraBaseTableComponent"
          }
        },
        {
          "name": "virtualRowHeight",
          "defaultValue": "32",
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "Height of a row to use in calculations of virtual scrolling",
          "description": "<p>Height of a row to use in calculations of virtual scrolling</p>\n",
          "line": 209,
          "type": "number",
          "inheritance": {
            "file": "ZyfraBaseTableComponent"
          }
        },
        {
          "name": "virtualScroll",
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "Whether the data should be loaded on demand during scroll",
          "description": "<p>Whether the data should be loaded on demand during scroll</p>\n",
          "line": 205,
          "type": "boolean",
          "inheritance": {
            "file": "ZyfraBaseTableComponent"
          }
        }
      ],
      "outputsClass": [
        {
          "name": "activeElementChange",
          "defaultValue": "new EventEmitter<T>()",
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "\n\nChange active element\n",
          "description": "<p>Change active element</p>\n",
          "line": 165,
          "type": "EventEmitter<T>",
          "inheritance": {
            "file": "ZyfraBaseTableComponent"
          }
        },
        {
          "name": "firstChange",
          "defaultValue": "new EventEmitter<number>()",
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "\n\nCallback to invoke first is changed\n",
          "description": "<p>Callback to invoke first is changed</p>\n",
          "line": 197,
          "type": "EventEmitter"
        },
        {
          "name": "rowCollapse",
          "defaultValue": "new EventEmitter<{ originalEvent: Event; data: unknown }>()",
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "\n\nCallback to invoke when a row is collapsed\n",
          "description": "<p>Callback to invoke when a row is collapsed</p>\n",
          "line": 181,
          "type": "EventEmitter"
        },
        {
          "name": "rowExpand",
          "defaultValue": "new EventEmitter<{ originalEvent: Event; data: unknown }>()",
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "\n\nCallback to invoke when a row is expanded\n",
          "description": "<p>Callback to invoke when a row is expanded</p>\n",
          "line": 177,
          "type": "EventEmitter"
        },
        {
          "name": "rowReorder",
          "defaultValue": "new EventEmitter<{ dragIndex: number; dropIndex: number }>()",
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "\n\nCallback to invoke when a row is reordered\n",
          "description": "<p>Callback to invoke when a row is reordered</p>\n",
          "line": 185,
          "type": "EventEmitter"
        },
        {
          "name": "rowSelect",
          "defaultValue": "new EventEmitter<RowSelectionEvent>()",
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "\n\nCallback to invoke when a row is selected\n",
          "description": "<p>Callback to invoke when a row is selected</p>\n",
          "line": 169,
          "type": "EventEmitter"
        },
        {
          "name": "rowUnselect",
          "defaultValue": "new EventEmitter<RowSelectionEvent>()",
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "\n\nCallback to invoke when a row is unselected\n",
          "description": "<p>Callback to invoke when a row is unselected</p>\n",
          "line": 173,
          "type": "EventEmitter"
        },
        {
          "name": "stateRestore",
          "defaultValue": "new EventEmitter<unknown>()",
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "\n\nCallback to invoke table state is restored\n",
          "description": "<p>Callback to invoke table state is restored</p>\n",
          "line": 193,
          "type": "EventEmitter"
        },
        {
          "name": "stateSave",
          "defaultValue": "new EventEmitter<unknown>()",
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "\n\nCallback to invoke table state is saved\n",
          "description": "<p>Callback to invoke table state is saved</p>\n",
          "line": 189,
          "type": "EventEmitter"
        },
        {
          "name": "colReorder",
          "defaultValue": "new EventEmitter<{ dragIndex: number; dropIndex: number; columns: string[] }>()",
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "\n\nCallback to invoke when a column is reordered\n",
          "description": "<p>Callback to invoke when a column is reordered</p>\n",
          "line": 331,
          "type": "EventEmitter",
          "inheritance": {
            "file": "ZyfraBaseTableComponent"
          }
        },
        {
          "name": "colResize",
          "defaultValue": "new EventEmitter<{ element: unknown; delta: unknown }>()",
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "\n\nCallback to invoke when a column is resized\n",
          "description": "<p>Callback to invoke when a column is resized</p>\n",
          "line": 326,
          "type": "EventEmitter",
          "inheritance": {
            "file": "ZyfraBaseTableComponent"
          }
        },
        {
          "name": "contextMenuSelect",
          "defaultValue": "new EventEmitter<{ originalEvent: Event; node: unknown }>()",
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "\n\nCallback to invoke when a node is selected with right click\n",
          "description": "<p>Callback to invoke when a node is selected with right click</p>\n",
          "line": 322,
          "type": "EventEmitter",
          "inheritance": {
            "file": "ZyfraBaseTableComponent"
          }
        },
        {
          "name": "editCancel",
          "defaultValue": "new EventEmitter<{ column: unknown; data: unknown }>()",
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "\n\nCallback to invoke when cell edit is cancelled with escape key\n",
          "description": "<p>Callback to invoke when cell edit is cancelled with escape key</p>\n",
          "line": 343,
          "type": "EventEmitter",
          "inheritance": {
            "file": "ZyfraBaseTableComponent"
          }
        },
        {
          "name": "editComplete",
          "defaultValue": "new EventEmitter<{ column: unknown; data: unknown }>()",
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "\n\nCallback to invoke when cell edit is completed\n",
          "description": "<p>Callback to invoke when cell edit is completed</p>\n",
          "line": 339,
          "type": "EventEmitter",
          "inheritance": {
            "file": "ZyfraBaseTableComponent"
          }
        },
        {
          "name": "editInit",
          "defaultValue": "new EventEmitter<{ column: unknown; data: unknown; originalEvent: Event }>()",
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "\n\nCallback to invoke when a cell switches to edit mode.\n",
          "description": "<p>Callback to invoke when a cell switches to edit mode.</p>\n",
          "line": 335,
          "type": "EventEmitter",
          "inheritance": {
            "file": "ZyfraBaseTableComponent"
          }
        },
        {
          "name": "headerCheckboxToggle",
          "defaultValue": "new EventEmitter<{ originalEvent: Event; checked: boolean }>()",
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "\n\nCallback to invoke when state of header checkbox changes\n",
          "description": "<p>Callback to invoke when state of header checkbox changes</p>\n",
          "line": 347,
          "type": "EventEmitter",
          "inheritance": {
            "file": "ZyfraBaseTableComponent"
          }
        },
        {
          "name": "lazyLoad",
          "defaultValue": "new EventEmitter<{\r\n    first: number;\r\n    rows: number;\r\n    sortField: string;\r\n    sortOrder: SortOrder;\r\n    multiSortMeta: SortMeta[];\r\n    filters: Record<string, unknown>;\r\n    globalFilter: unknown;\r\n  }>()",
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "\n\nCallback to invoke when paging, sorting or filtering happens in lazy mode\n",
          "description": "<p>Callback to invoke when paging, sorting or filtering happens in lazy mode</p>\n",
          "line": 305,
          "type": "EventEmitter",
          "inheritance": {
            "file": "ZyfraBaseTableComponent"
          }
        },
        {
          "name": "onFilter",
          "defaultValue": "new EventEmitter<{ filters: Record<string, unknown>; filteredValue: unknown }>()",
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "\n\nCallback to invoke when data is filtered\n",
          "description": "<p>Callback to invoke when data is filtered</p>\n",
          "line": 288,
          "type": "EventEmitter",
          "inheritance": {
            "file": "ZyfraBaseTableComponent"
          }
        },
        {
          "name": "onSort",
          "defaultValue": "new EventEmitter<{\r\n    field: string;\r\n    order: SortOrder;\r\n    multisortmeta: SortMeta[];\r\n  } | null>()",
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "\n\nCallback to invoke when a column gets sorted\n",
          "description": "<p>Callback to invoke when a column gets sorted</p>\n",
          "line": 296,
          "type": "EventEmitter",
          "inheritance": {
            "file": "ZyfraBaseTableComponent"
          }
        },
        {
          "name": "page",
          "defaultValue": "new EventEmitter<{ first: number; rows: number }>()",
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "\n\nCallback to invoke when pagination occurs\n",
          "description": "<p>Callback to invoke when pagination occurs</p>\n",
          "line": 292,
          "type": "EventEmitter",
          "inheritance": {
            "file": "ZyfraBaseTableComponent"
          }
        },
        {
          "name": "selectionChange",
          "defaultValue": "new EventEmitter<unknown>()",
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "\n\nCallback to invoke when selection is changed\n",
          "description": "<p>Callback to invoke when selection is changed</p>\n",
          "line": 351,
          "type": "EventEmitter",
          "inheritance": {
            "file": "ZyfraBaseTableComponent"
          }
        },
        {
          "name": "sortFunction",
          "defaultValue": "new EventEmitter<TableSortEvent>()",
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "\n\nA function to implement custom sorting\n",
          "description": "<p>A function to implement custom sorting</p>\n",
          "line": 318,
          "type": "EventEmitter",
          "inheritance": {
            "file": "ZyfraBaseTableComponent"
          }
        }
      ],
      "propertiesClass": [
        {
          "name": "_filters",
          "defaultValue": "{}",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Filters",
          "optional": false,
          "description": "",
          "line": 91,
          "modifierKind": [121]
        },
        {
          "name": "expandedRowTemplate",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "TemplateRef<any>",
          "optional": false,
          "description": "",
          "line": 46,
          "modifierKind": [123]
        },
        {
          "name": "footerGroupedTemplate",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "TemplateRef<any>",
          "optional": false,
          "description": "",
          "line": 47,
          "modifierKind": [123]
        },
        {
          "name": "frozenExpandedRowTemplate",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "TemplateRef<any>",
          "optional": false,
          "description": "",
          "line": 48,
          "modifierKind": [123]
        },
        {
          "name": "frozenRowsTemplate",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "TemplateRef<any>",
          "optional": false,
          "description": "",
          "line": 49,
          "modifierKind": [123]
        },
        {
          "name": "groupFooterTemplate",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "TemplateRef<>",
          "optional": false,
          "description": "",
          "line": 50,
          "modifierKind": [123]
        },
        {
          "name": "groupHeaderTemplate",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "TemplateRef<>",
          "optional": false,
          "description": "",
          "line": 51,
          "modifierKind": [123]
        },
        {
          "name": "headerGroupedTemplate",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "TemplateRef<any>",
          "optional": false,
          "description": "",
          "line": 52,
          "modifierKind": [123]
        },
        {
          "name": "loadingBodyTemplate",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "TemplateRef<any>",
          "optional": false,
          "description": "",
          "line": 53,
          "modifierKind": [123]
        },
        {
          "name": "rowspanTemplate",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "TemplateRef<any>",
          "optional": false,
          "description": "",
          "line": 54,
          "modifierKind": [123]
        },
        {
          "name": "table",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Table",
          "optional": false,
          "description": "",
          "line": 43,
          "decorators": [
            {
              "name": "ViewChild",
              "stringifiedArguments": "'ptable', {static: true}"
            }
          ]
        },
        {
          "name": "templates",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "QueryList<BaseTableTemplateDirective>",
          "optional": false,
          "description": "",
          "line": 44,
          "decorators": [
            {
              "name": "ContentChildren",
              "stringifiedArguments": "BaseTableTemplateDirective"
            }
          ]
        },
        {
          "name": "_activeElement",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "T",
          "optional": false,
          "description": "",
          "line": 355,
          "modifierKind": [121],
          "inheritance": {
            "file": "ZyfraBaseTableComponent"
          }
        },
        {
          "name": "bodyTemplate",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "TemplateRef<any>",
          "optional": false,
          "description": "",
          "line": 25,
          "modifierKind": [123],
          "inheritance": {
            "file": "ZyfraBaseTableComponent"
          }
        },
        {
          "name": "captionTemplate",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "TemplateRef<any>",
          "optional": false,
          "description": "",
          "line": 26,
          "modifierKind": [123],
          "inheritance": {
            "file": "ZyfraBaseTableComponent"
          }
        },
        {
          "name": "colGroupTemplate",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "TemplateRef<any>",
          "optional": false,
          "description": "",
          "line": 27,
          "modifierKind": [123],
          "inheritance": {
            "file": "ZyfraBaseTableComponent"
          }
        },
        {
          "name": "emptyMessageTemplate",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "TemplateRef<any>",
          "optional": false,
          "description": "",
          "line": 28,
          "modifierKind": [123],
          "inheritance": {
            "file": "ZyfraBaseTableComponent"
          }
        },
        {
          "name": "footerTemplate",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "TemplateRef<any>",
          "optional": false,
          "description": "",
          "line": 29,
          "modifierKind": [123],
          "inheritance": {
            "file": "ZyfraBaseTableComponent"
          }
        },
        {
          "name": "frozenBodyTemplate",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "TemplateRef<any>",
          "optional": false,
          "description": "",
          "line": 30,
          "modifierKind": [123],
          "inheritance": {
            "file": "ZyfraBaseTableComponent"
          }
        },
        {
          "name": "frozenColGroupTemplate",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "TemplateRef<any>",
          "optional": false,
          "description": "",
          "line": 31,
          "modifierKind": [123],
          "inheritance": {
            "file": "ZyfraBaseTableComponent"
          }
        },
        {
          "name": "frozenFooterTemplate",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "TemplateRef<any>",
          "optional": false,
          "description": "",
          "line": 32,
          "modifierKind": [123],
          "inheritance": {
            "file": "ZyfraBaseTableComponent"
          }
        },
        {
          "name": "frozenHeaderTemplate",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "TemplateRef<any>",
          "optional": false,
          "description": "",
          "line": 33,
          "modifierKind": [123],
          "inheritance": {
            "file": "ZyfraBaseTableComponent"
          }
        },
        {
          "name": "headerTemplate",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "TemplateRef<any>",
          "optional": false,
          "description": "",
          "line": 34,
          "modifierKind": [123],
          "inheritance": {
            "file": "ZyfraBaseTableComponent"
          }
        },
        {
          "name": "initialData",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "T[]",
          "optional": false,
          "description": "",
          "line": 354,
          "modifierKind": [121],
          "inheritance": {
            "file": "ZyfraBaseTableComponent"
          }
        },
        {
          "name": "paginatorDropdownItemTemplate",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "TemplateRef<any>",
          "optional": false,
          "description": "",
          "line": 35,
          "modifierKind": [123],
          "inheritance": {
            "file": "ZyfraBaseTableComponent"
          }
        },
        {
          "name": "paginatorLeftTemplate",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "TemplateRef<any>",
          "optional": false,
          "description": "",
          "line": 36,
          "modifierKind": [123],
          "inheritance": {
            "file": "ZyfraBaseTableComponent"
          }
        },
        {
          "name": "paginatorRightTemplate",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "TemplateRef<any>",
          "optional": false,
          "description": "",
          "line": 37,
          "modifierKind": [123],
          "inheritance": {
            "file": "ZyfraBaseTableComponent"
          }
        },
        {
          "name": "styleClasses",
          "defaultValue": "'p-datatable-gridlines'",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 23,
          "inheritance": {
            "file": "ZyfraBaseTableComponent"
          }
        },
        {
          "name": "summaryTemplate",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "TemplateRef<any>",
          "optional": false,
          "description": "",
          "line": 38,
          "modifierKind": [123],
          "inheritance": {
            "file": "ZyfraBaseTableComponent"
          }
        }
      ],
      "methodsClass": [
        {
          "name": "clear",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 270,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [123]
        },
        {
          "name": "exportCSV",
          "args": [
            {
              "name": "options",
              "type": "any",
              "deprecated": false,
              "deprecationMessage": "",
              "optional": true
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 266,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [123],
          "jsdoctags": [
            {
              "name": "options",
              "type": "any",
              "deprecated": false,
              "deprecationMessage": "",
              "optional": true,
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "getContentTemplate",
          "args": [],
          "optional": false,
          "returnType": "QueryList<BaseTableTemplateDirective>",
          "typeParameters": [],
          "line": 201,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [123, 157],
          "inheritance": {
            "file": "ZyfraBaseTableComponent"
          }
        },
        {
          "name": "getTable",
          "args": [],
          "optional": false,
          "returnType": "Table",
          "typeParameters": [],
          "line": 205,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [123, 157],
          "inheritance": {
            "file": "ZyfraBaseTableComponent"
          }
        },
        {
          "name": "initTemplateByType",
          "args": [
            {
              "name": "item",
              "type": "BaseTableTemplateDirective",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 209,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [123, 157],
          "jsdoctags": [
            {
              "name": "item",
              "type": "BaseTableTemplateDirective",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ],
          "inheritance": {
            "file": "ZyfraBaseTableComponent"
          }
        },
        {
          "name": "checkUpdateStyleClasses",
          "args": [
            {
              "name": "changes",
              "type": "SimpleChanges",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 504,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [122],
          "jsdoctags": [
            {
              "name": "changes",
              "type": "SimpleChanges",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ],
          "inheritance": {
            "file": "ZyfraBaseTableComponent"
          }
        },
        {
          "name": "filter",
          "args": [
            {
              "name": "value",
              "type": "any",
              "deprecated": false,
              "deprecationMessage": ""
            },
            {
              "name": "field",
              "type": "string",
              "deprecated": false,
              "deprecationMessage": ""
            },
            {
              "name": "matchMode",
              "type": "string",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 476,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [123],
          "jsdoctags": [
            {
              "name": "value",
              "type": "any",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "field",
              "type": "string",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "matchMode",
              "type": "string",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ],
          "inheritance": {
            "file": "ZyfraBaseTableComponent"
          }
        },
        {
          "name": "filterGlobal",
          "args": [
            {
              "name": "value",
              "type": "",
              "deprecated": false,
              "deprecationMessage": ""
            },
            {
              "name": "matchMode",
              "type": "",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 480,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [123],
          "jsdoctags": [
            {
              "name": "value",
              "type": "",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "matchMode",
              "type": "",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ],
          "inheritance": {
            "file": "ZyfraBaseTableComponent"
          }
        },
        {
          "name": "isSelected",
          "args": [
            {
              "name": "rowData",
              "type": "",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "boolean",
          "typeParameters": [],
          "line": 484,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [123],
          "jsdoctags": [
            {
              "name": "rowData",
              "type": "",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ],
          "inheritance": {
            "file": "ZyfraBaseTableComponent"
          }
        },
        {
          "name": "ngAfterContentInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 378,
          "deprecated": false,
          "deprecationMessage": "",
          "inheritance": {
            "file": "ZyfraBaseTableComponent"
          }
        },
        {
          "name": "ngOnChanges",
          "args": [
            {
              "name": "changes",
              "type": "SimpleChanges",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 369,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "changes",
              "type": "SimpleChanges",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ],
          "inheritance": {
            "file": "ZyfraBaseTableComponent"
          }
        },
        {
          "name": "resetScrollTop",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 446,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [123],
          "inheritance": {
            "file": "ZyfraBaseTableComponent"
          }
        },
        {
          "name": "resetSort",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 458,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [123],
          "inheritance": {
            "file": "ZyfraBaseTableComponent"
          }
        },
        {
          "name": "scrollTo",
          "args": [
            {
              "name": "options",
              "type": "any",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 454,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [123],
          "jsdoctags": [
            {
              "name": "options",
              "type": "any",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ],
          "inheritance": {
            "file": "ZyfraBaseTableComponent"
          }
        },
        {
          "name": "scrollToVirtualIndex",
          "args": [
            {
              "name": "index",
              "type": "number",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 450,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [123],
          "jsdoctags": [
            {
              "name": "index",
              "type": "number",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ],
          "inheritance": {
            "file": "ZyfraBaseTableComponent"
          }
        },
        {
          "name": "setValue",
          "args": [
            {
              "name": "value",
              "type": "T[]",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 442,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [123],
          "jsdoctags": [
            {
              "name": "value",
              "type": "T[]",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ],
          "inheritance": {
            "file": "ZyfraBaseTableComponent"
          }
        },
        {
          "name": "updateStyleClasses",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 488,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [122],
          "inheritance": {
            "file": "ZyfraBaseTableComponent"
          }
        }
      ],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import {\r\n  AfterContentInit,\r\n  ChangeDetectionStrategy,\r\n  Component,\r\n  ContentChildren,\r\n  EventEmitter,\r\n  Input,\r\n  OnChanges,\r\n  Output,\r\n  QueryList,\r\n  TemplateRef,\r\n  ViewChild,\r\n} from '@angular/core';\r\nimport { FilterService } from 'primeng/api';\r\nimport { Table, TableService } from 'primeng/table';\r\nimport { TargetTableToken, ZyfraBaseTableComponent } from '../@core/base-table';\r\nimport { BaseTableTemplateDirective } from '../@core/base-table/directives/base-table-template.directive';\r\nimport { Filters, RowSelectionEvent } from './zyfra-table.types';\r\n\r\n@Component({\r\n  selector: 'zyfra-table',\r\n  templateUrl: './zyfra-table.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  providers: [\r\n    TableService,\r\n    FilterService,\r\n    {\r\n      provide: TargetTableToken,\r\n      useFactory: (zyfraTable: ZyfraTableComponent): ZyfraTableComponent => zyfraTable,\r\n      deps: [ZyfraTableComponent],\r\n    },\r\n    {\r\n      provide: Table,\r\n      useFactory: (zyfraTable: ZyfraTableComponent): Table => zyfraTable.table,\r\n      deps: [ZyfraTableComponent],\r\n    },\r\n  ],\r\n})\r\nexport class ZyfraTableComponent<T = unknown>\r\n  extends ZyfraBaseTableComponent<T>\r\n  implements AfterContentInit, OnChanges\r\n{\r\n  @ViewChild('ptable', { static: true }) table: Table;\r\n  @ContentChildren(BaseTableTemplateDirective) templates: QueryList<BaseTableTemplateDirective>;\r\n\r\n  public expandedRowTemplate: TemplateRef<any>;\r\n  public footerGroupedTemplate: TemplateRef<any>;\r\n  public frozenExpandedRowTemplate: TemplateRef<any>;\r\n  public frozenRowsTemplate: TemplateRef<any>;\r\n  public groupFooterTemplate: TemplateRef<unknown>;\r\n  public groupHeaderTemplate: TemplateRef<unknown>;\r\n  public headerGroupedTemplate: TemplateRef<any>;\r\n  public loadingBodyTemplate: TemplateRef<any>;\r\n  public rowspanTemplate: TemplateRef<any>;\r\n\r\n  //region Inputs\r\n  /**\r\n   * An array of objects to display as frozen\r\n   */\r\n  @Input() frozenValue: any[];\r\n  /**\r\n   * Defines the responsive mode\r\n   */\r\n  @Input() responsiveLayout: 'stack' | 'scroll' = 'stack';\r\n  /**\r\n   * The breakpoint to define the maximum width boundary when using stack responsive layout\r\n   */\r\n  @Input() breakpoint = '960px';\r\n  /**\r\n   * Type of the row grouping\r\n   */\r\n  @Input() rowGroupMode: 'subheader' | 'rowspan';\r\n\r\n  /**\r\n   * Whether to use the initial sort badge or not\r\n   */\r\n  @Input() showInitialSortBadge = true;\r\n  /**\r\n   * Function to optimize the dom operations by delegating to ngForTrackBy, default algoritm checks for object identity\r\n   */\r\n  @Input() rowTrackBy: (...args: any[]) => any;\r\n  /**\r\n   * Character to use as the csv separator\r\n   */\r\n  @Input() csvSeparator = ',';\r\n  /**\r\n   * Name of the exported file\r\n   */\r\n  @Input() exportFilename = 'download';\r\n\r\n  private _filters: Filters = {};\r\n\r\n  /**\r\n   * An array of FilterMetadata objects to provide external filters\r\n   */\r\n  @Input()\r\n  set filters(filters: Filters) {\r\n    this._filters = filters;\r\n  }\r\n\r\n  get filters(): Filters {\r\n    return this.table.filters;\r\n  }\r\n  /**\r\n   * Map instance to keep the expanded rows where key of the map is the data key of the row\r\n   */\r\n  @Input() expandedRowKeys: { [s: string]: boolean } = {};\r\n  /**\r\n   * Whether multiple rows can be expanded at any time\r\n   */\r\n  @Input() rowExpandMode: 'single' | 'multiple' = 'multiple';\r\n  /**\r\n   * Orientation of the scrolling\r\n   */\r\n  @Input() scrollDirection: 'vertical' | 'horizontal' | 'both' = 'vertical';\r\n  /**\r\n   * Threshold in milliseconds to delay lazy loading during scrolling\r\n   */\r\n  @Input() virtualScrollDelay = 250;\r\n  /**\r\n   * Defines if the columns should be stacked in smaller screens\r\n   */\r\n  @Input() responsive = false;\r\n  /**\r\n   * Paginator dropdown height of the viewport in pixels, a scrollbar is defined if height of list exceeds this value\r\n   */\r\n  @Input() paginatorDropdownScrollHeight = '200px';\r\n  /**\r\n   * A function to implement custom export. Need to return string value\r\n   */\r\n  @Input() exportFunction: (event: { data: any; field: any }) => string;\r\n  /**\r\n   * Unique identifier of a stateful table to use in state storage\r\n   */\r\n  @Input() stateKey: string;\r\n  /**\r\n   * Defines where a stateful table keeps its state, valid values are \"session\" for sessionStorage and \"local\" for localStorage\r\n   */\r\n  @Input() stateStorage: 'session' | 'local' = 'session';\r\n  /**\r\n   * Defines the editing mode, valid values are \"cell\" and \"row\"\r\n   */\r\n  @Input() editMode: 'cell' | 'row' = 'cell';\r\n  /**\r\n   * Map instance to keep the rows being edited where key of the map is the data key of the row\r\n   */\r\n  @Input() editingRowKeys: { [s: string]: boolean } = {};\r\n  /**\r\n   * One or more field names to use in row grouping\r\n   */\r\n  @Input() groupRowsBy: string | string[];\r\n  /**\r\n   * Order to sort when default row grouping is enabled\r\n   */\r\n  @Input() groupRowsByOrder = 1;\r\n\r\n  @Input() className: string = 'zyfra-table-class';\r\n\r\n  //endregion\r\n\r\n  //region Outputs\r\n  /**\r\n   * Change active element\r\n   */\r\n  @Output() override activeElementChange: EventEmitter<T> = new EventEmitter<T>();\r\n  /**\r\n   * Callback to invoke when a row is selected\r\n   */\r\n  @Output() rowSelect = new EventEmitter<RowSelectionEvent>();\r\n  /**\r\n   * Callback to invoke when a row is unselected\r\n   */\r\n  @Output() rowUnselect = new EventEmitter<RowSelectionEvent>();\r\n  /**\r\n   * Callback to invoke when a row is expanded\r\n   */\r\n  @Output() rowExpand = new EventEmitter<{ originalEvent: Event; data: unknown }>();\r\n  /**\r\n   * Callback to invoke when a row is collapsed\r\n   */\r\n  @Output() rowCollapse = new EventEmitter<{ originalEvent: Event; data: unknown }>();\r\n  /**\r\n   * Callback to invoke when a row is reordered\r\n   */\r\n  @Output() rowReorder = new EventEmitter<{ dragIndex: number; dropIndex: number }>();\r\n  /**\r\n   * Callback to invoke table state is saved\r\n   */\r\n  @Output() stateSave = new EventEmitter<unknown>();\r\n  /**\r\n   * Callback to invoke table state is restored\r\n   */\r\n  @Output() stateRestore = new EventEmitter<unknown>();\r\n  /**\r\n   * Callback to invoke first is changed\r\n   */\r\n  @Output() firstChange = new EventEmitter<number>();\r\n  //endregion\r\n\r\n  //region Base class overrides\r\n  public override getContentTemplate(): QueryList<BaseTableTemplateDirective> {\r\n    return this.templates;\r\n  }\r\n\r\n  public override getTable(): Table {\r\n    return this.table;\r\n  }\r\n\r\n  public override initTemplateByType(item: BaseTableTemplateDirective): void {\r\n    switch (item.getType()) {\r\n      case 'headergrouped':\r\n        this.headerGroupedTemplate = item.template;\r\n        break;\r\n\r\n      case 'loadingbody':\r\n        this.loadingBodyTemplate = item.template;\r\n        break;\r\n\r\n      case 'footergrouped':\r\n        this.footerGroupedTemplate = item.template;\r\n        break;\r\n\r\n      case 'rowexpansion':\r\n        this.expandedRowTemplate = item.template;\r\n        break;\r\n\r\n      case 'groupheader':\r\n        this.groupHeaderTemplate = item.template;\r\n        break;\r\n\r\n      case 'rowspan':\r\n        this.rowspanTemplate = item.template;\r\n        break;\r\n\r\n      case 'groupfooter':\r\n        this.groupFooterTemplate = item.template;\r\n        break;\r\n\r\n      case 'frozenrows':\r\n        this.frozenRowsTemplate = item.template;\r\n        break;\r\n\r\n      case 'frozenheader':\r\n        this.frozenHeaderTemplate = item.template;\r\n        break;\r\n\r\n      case 'frozenbody':\r\n        this.frozenBodyTemplate = item.template;\r\n        break;\r\n\r\n      case 'frozenfooter':\r\n        this.frozenFooterTemplate = item.template;\r\n        break;\r\n\r\n      case 'frozencolgroup':\r\n        this.frozenColGroupTemplate = item.template;\r\n        break;\r\n\r\n      case 'frozenrowexpansion':\r\n        this.frozenExpandedRowTemplate = item.template;\r\n        break;\r\n    }\r\n  }\r\n  //endregion\r\n\r\n  public exportCSV(options?: any): void {\r\n    return this.table.exportCSV(options);\r\n  }\r\n\r\n  public clear(): void {\r\n    this.table.clear();\r\n  }\r\n}\r\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "extends": "ZyfraBaseTableComponent",
      "implements": ["AfterContentInit", "OnChanges"],
      "accessors": {
        "filters": {
          "name": "filters",
          "setSignature": {
            "name": "filters",
            "type": "void",
            "deprecated": false,
            "deprecationMessage": "",
            "args": [
              {
                "name": "filters",
                "type": "Filters",
                "deprecated": false,
                "deprecationMessage": ""
              }
            ],
            "returnType": "void",
            "line": 97,
            "rawdescription": "An array of FilterMetadata objects to provide external filters",
            "description": "<p>An array of FilterMetadata objects to provide external filters</p>\n",
            "jsdoctags": [
              {
                "name": "filters",
                "type": "Filters",
                "deprecated": false,
                "deprecationMessage": "",
                "tagName": {
                  "text": "param"
                }
              }
            ]
          },
          "getSignature": {
            "name": "filters",
            "type": "",
            "returnType": "Filters",
            "line": 101
          }
        }
      },
      "templateData": "<p-table\r\n  [class]=\"className\"\r\n  #ptable\r\n  [value]=\"value\"\r\n  [columns]=\"columns\"\r\n  [frozenColumns]=\"frozenColumns\"\r\n  [frozenValue]=\"frozenValue\"\r\n  [style]=\"style\"\r\n  [styleClass]=\"styleClasses\"\r\n  [tableStyle]=\"tableStyle\"\r\n  [tableStyleClass]=\"tableStyleClass\"\r\n  [paginator]=\"paginator\"\r\n  [rows]=\"rows\"\r\n  [first]=\"first\"\r\n  [totalRecords]=\"totalRecords\"\r\n  [pageLinks]=\"pageLinks\"\r\n  [rowsPerPageOptions]=\"rowsPerPageOptions\"\r\n  [alwaysShowPaginator]=\"alwaysShowPaginator\"\r\n  [showFirstLastIcon]=\"showFirstLastIcon\"\r\n  [paginatorPosition]=\"paginatorPosition\"\r\n  [currentPageReportTemplate]=\"currentPageReportTemplate\"\r\n  [showCurrentPageReport]=\"showCurrentPageReport\"\r\n  [showJumpToPageDropdown]=\"showJumpToPageDropdown\"\r\n  [showPageLinks]=\"showPageLinks\"\r\n  [sortMode]=\"sortMode\"\r\n  [sortField]=\"sortField\"\r\n  [sortOrder]=\"sortOrder\"\r\n  [multiSortMeta]=\"multiSortMeta\"\r\n  [defaultSortOrder]=\"defaultSortOrder\"\r\n  [customSort]=\"customSort\"\r\n  [showInitialSortBadge]=\"showInitialSortBadge\"\r\n  [selectionMode]=\"selectionMode\"\r\n  [selection]=\"selection\"\r\n  [contextMenuSelection]=\"contextMenuSelection\"\r\n  [contextMenuSelectionMode]=\"contextMenuSelectionMode\"\r\n  [dataKey]=\"dataKey\"\r\n  [metaKeySelection]=\"metaKeySelection\"\r\n  [rowTrackBy]=\"rowTrackBy\"\r\n  [lazy]=\"lazy\"\r\n  [lazyLoadOnInit]=\"lazyLoadOnInit\"\r\n  [compareSelectionBy]=\"compareSelectionBy\"\r\n  [csvSeparator]=\"csvSeparator\"\r\n  [exportFilename]=\"exportFilename\"\r\n  [filters]=\"filters\"\r\n  [filterDelay]=\"filterDelay\"\r\n  [globalFilterFields]=\"globalFilterFields\"\r\n  [filterLocale]=\"filterLocale\"\r\n  [expandedRowKeys]=\"expandedRowKeys\"\r\n  [rowExpandMode]=\"rowExpandMode\"\r\n  [scrollable]=\"scrollable\"\r\n  [scrollDirection]=\"scrollDirection\"\r\n  [scrollHeight]=\"scrollHeight\"\r\n  [virtualScroll]=\"virtualScroll\"\r\n  [virtualScrollDelay]=\"virtualScrollDelay\"\r\n  [virtualRowHeight]=\"virtualRowHeight\"\r\n  [responsive]=\"responsive\"\r\n  [contextMenu]=\"contextMenu\"\r\n  [resizableColumns]=\"resizableColumns\"\r\n  [columnResizeMode]=\"columnResizeMode\"\r\n  [reorderableColumns]=\"reorderableColumns\"\r\n  [loading]=\"loading\"\r\n  [loadingIcon]=\"loadingIcon\"\r\n  [showLoader]=\"showLoader\"\r\n  [rowHover]=\"rowHover\"\r\n  [paginatorDropdownAppendTo]=\"paginatorDropdownAppendTo\"\r\n  [paginatorDropdownScrollHeight]=\"paginatorDropdownScrollHeight\"\r\n  [autoLayout]=\"autoLayout\"\r\n  [resetPageOnSort]=\"resetPageOnSort\"\r\n  [exportFunction]=\"exportFunction\"\r\n  [stateKey]=\"stateKey\"\r\n  [stateStorage]=\"stateStorage\"\r\n  [editMode]=\"editMode\"\r\n  [editingRowKeys]=\"editingRowKeys\"\r\n  [minBufferPx]=\"minBufferPx\"\r\n  [maxBufferPx]=\"maxBufferPx\"\r\n  [groupRowsBy]=\"groupRowsBy\"\r\n  [rowGroupMode]=\"rowGroupMode\"\r\n  (onRowSelect)=\"rowSelect.emit($event)\"\r\n  (onRowUnselect)=\"rowUnselect.emit($event)\"\r\n  (onPage)=\"page.emit($event)\"\r\n  (onSort)=\"onSort.emit($event)\"\r\n  (onFilter)=\"onFilter.emit($event)\"\r\n  (onLazyLoad)=\"lazyLoad.emit($event)\"\r\n  (onRowExpand)=\"rowExpand.emit($event)\"\r\n  (onRowCollapse)=\"rowCollapse.emit($event)\"\r\n  (onContextMenuSelect)=\"contextMenuSelect.emit($event)\"\r\n  (onColResize)=\"colResize.emit($event)\"\r\n  (onColReorder)=\"colReorder.emit($event)\"\r\n  (onRowReorder)=\"rowReorder.emit($event)\"\r\n  (onEditInit)=\"editInit.emit($event)\"\r\n  (onEditComplete)=\"editComplete.emit($event)\"\r\n  (onEditCancel)=\"editCancel.emit($event)\"\r\n  (onHeaderCheckboxToggle)=\"headerCheckboxToggle.emit($event)\"\r\n  (onStateSave)=\"stateSave.emit($event)\"\r\n  (onStateRestore)=\"stateRestore.emit($event)\"\r\n  (sortFunction)=\"sortFunction.emit($event)\"\r\n  (firstChange)=\"firstChange.emit($event)\"\r\n  (selectionChange)=\"selectionChange.emit($event)\"\r\n>\r\n  <ng-template pTemplate=\"caption\" *ngIf=\"captionTemplate || title\">\r\n    <div class=\"zyfra-table-title\">{{ title }}</div>\r\n    <ng-container *ngIf=\"captionTemplate\">\r\n      <ng-container *ngTemplateOutlet=\"captionTemplate\"></ng-container>\r\n    </ng-container>\r\n  </ng-template>\r\n\r\n  <ng-template pTemplate=\"header\" *ngIf=\"headerTemplate\" let-columns>\r\n    <ng-container *ngTemplateOutlet=\"headerTemplate; context: { $implicit: columns }\"></ng-container>\r\n  </ng-template>\r\n\r\n  <ng-template pTemplate=\"groupheader\" let-item *ngIf=\"groupHeaderTemplate\">\r\n    <ng-container *ngTemplateOutlet=\"groupHeaderTemplate; context: { $implicit: item }\"></ng-container>\r\n  </ng-template>\r\n\r\n  <ng-template pTemplate=\"groupfooter\" let-item *ngIf=\"groupFooterTemplate\">\r\n    <ng-container *ngTemplateOutlet=\"groupFooterTemplate; context: { $implicit: item }\"></ng-container>\r\n  </ng-template>\r\n\r\n  <ng-template\r\n    pTemplate=\"body\"\r\n    let-item\r\n    let-rowIndex=\"rowIndex\"\r\n    let-rowgroup=\"rowgroup\"\r\n    let-rowspan=\"rowspan\"\r\n    let-expanded=\"expanded\"\r\n    let-editing=\"editing\"\r\n    let-columns=\"columns\"\r\n    *ngIf=\"bodyTemplate\"\r\n  >\r\n    <ng-container\r\n      *ngTemplateOutlet=\"\r\n        bodyTemplate;\r\n        context: {\r\n          $implicit: item,\r\n          rowIndex: rowIndex,\r\n          rowgroup: rowgroup,\r\n          rowspan: rowspan,\r\n          expanded: expanded,\r\n          editing: editing,\r\n          columns: columns\r\n        }\r\n      \"\r\n    ></ng-container>\r\n  </ng-template>\r\n\r\n  <ng-template pTemplate=\"frozenbody\" let-item let-rowIndex=\"rowIndex\" *ngIf=\"frozenBodyTemplate\">\r\n    <ng-container\r\n      *ngTemplateOutlet=\"\r\n        frozenBodyTemplate;\r\n        context: {\r\n          $implicit: item,\r\n          rowIndex: rowIndex\r\n        }\r\n      \"\r\n    ></ng-container>\r\n  </ng-template>\r\n\r\n  <ng-template pTemplate=\"loadingbody\" let-columns=\"columns\" *ngIf=\"loadingBodyTemplate\">\r\n    <ng-container\r\n      *ngTemplateOutlet=\"\r\n        loadingBodyTemplate;\r\n        context: {\r\n          columns: columns\r\n        }\r\n      \"\r\n    ></ng-container>\r\n  </ng-template>\r\n\r\n  <ng-template pTemplate=\"rowexpansion\" let-item *ngIf=\"expandedRowTemplate\">\r\n    <ng-container *ngTemplateOutlet=\"expandedRowTemplate; context: { $implicit: item }\"></ng-container>\r\n  </ng-template>\r\n\r\n  <ng-template pTemplate=\"footer\" *ngIf=\"footerTemplate\">\r\n    <ng-container *ngTemplateOutlet=\"footerTemplate\"></ng-container>\r\n  </ng-template>\r\n\r\n  <ng-template pTemplate=\"summary\" *ngIf=\"summaryTemplate\">\r\n    <ng-container *ngTemplateOutlet=\"summaryTemplate\"></ng-container>\r\n  </ng-template>\r\n\r\n  <ng-template pTemplate=\"emptymessage\" *ngIf=\"emptyMessageTemplate\">\r\n    <ng-container *ngTemplateOutlet=\"emptyMessageTemplate\"></ng-container>\r\n  </ng-template>\r\n\r\n  <ng-template pTemplate=\"paginatorleft\" *ngIf=\"paginatorLeftTemplate\">\r\n    <ng-container *ngTemplateOutlet=\"paginatorLeftTemplate\"></ng-container>\r\n  </ng-template>\r\n\r\n  <ng-template pTemplate=\"paginatorright\" *ngIf=\"paginatorRightTemplate\">\r\n    <ng-container *ngTemplateOutlet=\"paginatorRightTemplate\"></ng-container>\r\n  </ng-template>\r\n</p-table>\r\n"
    },
    {
      "name": "ZyfraTableHeaderCheckboxComponent",
      "id": "component-ZyfraTableHeaderCheckboxComponent-d54faaf8c4de6a4469ff29289b0b1119",
      "file": "libs/components/src/lib/table/table-header-checkbox/table-header-checkbox.component.ts",
      "changeDetection": "ChangeDetectionStrategy.OnPush",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "zyfra-table-header-checkbox",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./table-header-checkbox.component.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [],
      "methodsClass": [],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import { ChangeDetectionStrategy, Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'zyfra-table-header-checkbox',\r\n  templateUrl: './table-header-checkbox.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class ZyfraTableHeaderCheckboxComponent {}\r\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "templateData": "<p-tableHeaderCheckbox></p-tableHeaderCheckbox>\r\n"
    },
    {
      "name": "ZyfraTabMenuComponent",
      "id": "component-ZyfraTabMenuComponent-6a078b552bc8822c74ec0f4ff05b18ed",
      "file": "libs/components/src/lib/tab-menu/zyfra-tab-menu.component.ts",
      "changeDetection": "ChangeDetectionStrategy.OnPush",
      "encapsulation": ["ViewEncapsulation.None"],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "zyfra-tab-menu",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./zyfra-tab-menu.component.html"],
      "viewProviders": [],
      "inputsClass": [
        {
          "name": "activeItem",
          "defaultValue": "null",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 41,
          "type": "MenuItem"
        },
        {
          "name": "model",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 44,
          "type": "[]"
        },
        {
          "name": "style",
          "defaultValue": "null",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 42,
          "type": "string"
        },
        {
          "name": "styleClass",
          "defaultValue": "null",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 43,
          "type": "string"
        }
      ],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "_model",
          "defaultValue": "null",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "MenuItem[]",
          "optional": false,
          "description": "",
          "line": 54,
          "modifierKind": [121]
        },
        {
          "name": "backLabel",
          "defaultValue": "'Вернуться'",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 51,
          "modifierKind": [123]
        },
        {
          "name": "currentMenu",
          "defaultValue": "null",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "null",
          "optional": false,
          "description": "",
          "line": 59,
          "modifierKind": [121]
        },
        {
          "name": "currentMenuIndex",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "number",
          "optional": false,
          "description": "",
          "line": 60,
          "modifierKind": [121]
        },
        {
          "name": "destroyed$",
          "defaultValue": "new Subject()",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "optional": false,
          "description": "",
          "line": 62,
          "modifierKind": [121]
        },
        {
          "name": "disableNextControl",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "boolean",
          "optional": false,
          "description": "",
          "line": 35,
          "decorators": [
            {
              "name": "HostBinding",
              "stringifiedArguments": "'class.scrolled-to-end'"
            }
          ]
        },
        {
          "name": "disablePrevControl",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "boolean",
          "optional": false,
          "description": "",
          "line": 34,
          "decorators": [
            {
              "name": "HostBinding",
              "stringifiedArguments": "'class.scrolled-to-start'"
            }
          ]
        },
        {
          "name": "hasOverflow",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "boolean",
          "optional": false,
          "description": "",
          "line": 36,
          "decorators": [
            {
              "name": "HostBinding",
              "stringifiedArguments": "'class.has-overflow'"
            }
          ]
        },
        {
          "name": "maxScrollDistance",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "number",
          "optional": false,
          "description": "",
          "line": 56,
          "modifierKind": [121]
        },
        {
          "name": "navLinks",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "NodeListOf<Element>",
          "optional": false,
          "description": "",
          "line": 57,
          "modifierKind": [121]
        },
        {
          "name": "navListElement",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "HTMLElement",
          "optional": false,
          "description": "",
          "line": 58,
          "modifierKind": [121]
        },
        {
          "name": "nextControl",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "ElementRef",
          "optional": false,
          "description": "",
          "line": 40,
          "decorators": [
            {
              "name": "ViewChild",
              "stringifiedArguments": "'nextControl'"
            }
          ],
          "modifierKind": [123]
        },
        {
          "name": "openedItem",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "MenuItem",
          "optional": false,
          "description": "",
          "line": 52,
          "modifierKind": [123]
        },
        {
          "name": "prevControl",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "ElementRef",
          "optional": false,
          "description": "",
          "line": 39,
          "decorators": [
            {
              "name": "ViewChild",
              "stringifiedArguments": "'prevControl'"
            }
          ],
          "modifierKind": [123]
        },
        {
          "name": "scroll$",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Observable<Event>",
          "optional": false,
          "description": "",
          "line": 63,
          "modifierKind": [121]
        },
        {
          "name": "stopOutsideClickListener$",
          "defaultValue": "new Subject()",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "optional": false,
          "description": "",
          "line": 64,
          "modifierKind": [121]
        },
        {
          "name": "subMenuContainer",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "ElementRef",
          "optional": false,
          "description": "",
          "line": 38,
          "decorators": [
            {
              "name": "ViewChild",
              "stringifiedArguments": "'tabSubmenuContainer'"
            }
          ]
        },
        {
          "name": "subMenuObserver",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "MutationObserver",
          "optional": false,
          "description": "",
          "line": 61,
          "modifierKind": [121]
        },
        {
          "name": "tabMenu",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "TabMenu",
          "optional": false,
          "description": "",
          "line": 37,
          "decorators": [
            {
              "name": "ViewChild",
              "stringifiedArguments": "TabMenu"
            }
          ],
          "modifierKind": [123]
        },
        {
          "name": "tabsChanged",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "boolean",
          "optional": false,
          "description": "",
          "line": 55,
          "modifierKind": [121]
        }
      ],
      "methodsClass": [
        {
          "name": "initClickListeners",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 180,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [121]
        },
        {
          "name": "initOutsideClickListener",
          "args": [
            {
              "name": "menu",
              "type": "",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 120,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [123],
          "jsdoctags": [
            {
              "name": "menu",
              "type": "",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "initSubmenuObserver",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 200,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [121]
        },
        {
          "name": "isPartlyVisible",
          "args": [
            {
              "name": "target",
              "type": "HTMLElement",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "boolean",
          "typeParameters": [],
          "line": 167,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [121],
          "jsdoctags": [
            {
              "name": "target",
              "type": "HTMLElement",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "ngAfterViewChecked",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 81,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [123]
        },
        {
          "name": "ngAfterViewInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 72,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [123]
        },
        {
          "name": "ngOnDestroy",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 91,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [123]
        },
        {
          "name": "scrollNext",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 145,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [123]
        },
        {
          "name": "scrollPrevious",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 141,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [123]
        },
        {
          "name": "selectTabFromList",
          "args": [
            {
              "name": "index",
              "type": "number",
              "deprecated": false,
              "deprecationMessage": ""
            },
            {
              "name": "overlayPanel",
              "type": "OverlayPanel",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 133,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [123],
          "jsdoctags": [
            {
              "name": "index",
              "type": "number",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "overlayPanel",
              "type": "OverlayPanel",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "toggleMenu",
          "args": [
            {
              "name": "event",
              "type": "MouseEvent",
              "deprecated": false,
              "deprecationMessage": ""
            },
            {
              "name": "menu",
              "type": "SlideMenu",
              "deprecated": false,
              "deprecationMessage": ""
            },
            {
              "name": "index",
              "type": "number",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 99,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [123],
          "jsdoctags": [
            {
              "name": "event",
              "type": "MouseEvent",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "menu",
              "type": "SlideMenu",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "index",
              "type": "number",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "updateActiveItem",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 217,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [121]
        },
        {
          "name": "updateControlsState",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 149,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [121]
        },
        {
          "name": "updateControlsStyles",
          "args": [
            {
              "name": "isDisabled",
              "type": "boolean",
              "deprecated": false,
              "deprecationMessage": ""
            },
            {
              "name": "el",
              "type": "HTMLElement",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 159,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [121],
          "jsdoctags": [
            {
              "name": "isDisabled",
              "type": "boolean",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "el",
              "type": "HTMLElement",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "updateCurrentIndex",
          "args": [
            {
              "name": "target",
              "type": "HTMLElement",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 222,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [121],
          "jsdoctags": [
            {
              "name": "target",
              "type": "HTMLElement",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        }
      ],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [
        {
          "name": "class.has-overflow",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 36,
          "type": "boolean"
        },
        {
          "name": "class.scrolled-to-end",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 35,
          "type": "boolean"
        },
        {
          "name": "class.scrolled-to-start",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 34,
          "type": "boolean"
        }
      ],
      "hostListeners": [],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import {\r\n  Component,\r\n  Input,\r\n  ViewEncapsulation,\r\n  ViewChild,\r\n  ElementRef,\r\n  Renderer2,\r\n  AfterViewInit,\r\n  HostBinding,\r\n  AfterViewChecked,\r\n  OnDestroy,\r\n  ChangeDetectionStrategy,\r\n  ChangeDetectorRef,\r\n  Inject,\r\n} from '@angular/core';\r\nimport { MenuItem } from 'primeng/api';\r\nimport { TabMenu } from 'primeng/tabmenu';\r\nimport { fromEvent, Observable, Subject } from 'rxjs';\r\nimport { debounceTime, filter, first, takeUntil } from 'rxjs/operators';\r\nimport { SlideMenu } from 'primeng/slidemenu';\r\nimport { DOCUMENT } from '@angular/common';\r\nimport { OverlayPanel } from 'primeng/overlaypanel';\r\n\r\n@Component({\r\n  selector: 'zyfra-tab-menu',\r\n  templateUrl: './zyfra-tab-menu.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  encapsulation: ViewEncapsulation.None,\r\n})\r\nexport class ZyfraTabMenuComponent implements AfterViewInit, AfterViewChecked, OnDestroy {\r\n  @HostBinding('class.scrolled-to-start') disablePrevControl: boolean;\r\n  @HostBinding('class.scrolled-to-end') disableNextControl: boolean;\r\n  @HostBinding('class.has-overflow') hasOverflow: boolean;\r\n  @ViewChild(TabMenu) public tabMenu: TabMenu;\r\n  @ViewChild('tabSubmenuContainer') subMenuContainer: ElementRef;\r\n  @ViewChild('prevControl') public prevControl: ElementRef;\r\n  @ViewChild('nextControl') public nextControl: ElementRef;\r\n  @Input() activeItem: MenuItem = null;\r\n  @Input() style: string = null;\r\n  @Input() styleClass: string = null;\r\n  @Input() set model(items: MenuItem[]) {\r\n    this._model = items;\r\n    this.tabsChanged = true;\r\n  }\r\n  get model(): MenuItem[] {\r\n    return this._model;\r\n  }\r\n  public backLabel = 'Вернуться';\r\n  public openedItem: MenuItem;\r\n\r\n  private _model: MenuItem[] = null;\r\n  private tabsChanged: boolean;\r\n  private maxScrollDistance: number;\r\n  private navLinks: NodeListOf<Element>;\r\n  private navListElement: HTMLElement;\r\n  private currentMenu = null;\r\n  private currentMenuIndex: number;\r\n  private subMenuObserver: MutationObserver;\r\n  private destroyed$ = new Subject();\r\n  private scroll$: Observable<Event>;\r\n  private stopOutsideClickListener$ = new Subject();\r\n\r\n  constructor(\r\n    @Inject(DOCUMENT) private document: Document,\r\n    private renderer: Renderer2,\r\n    private cdr: ChangeDetectorRef\r\n  ) {}\r\n\r\n  public ngAfterViewInit(): void {\r\n    this.navListElement = this.tabMenu.navbar.nativeElement;\r\n    this.navLinks = this.navListElement.querySelectorAll('a.p-menuitem-link');\r\n    this.initClickListeners();\r\n    this.scroll$ = fromEvent(this.navListElement, 'scroll').pipe(debounceTime(50));\r\n    this.scroll$.pipe(takeUntil(this.destroyed$)).subscribe(() => this.updateControlsState());\r\n    this.initSubmenuObserver();\r\n  }\r\n\r\n  public ngAfterViewChecked(): void {\r\n    if (this.tabsChanged) {\r\n      this.tabsChanged = false;\r\n      requestAnimationFrame(() => {\r\n        this.hasOverflow = this.navListElement.scrollWidth > this.navListElement.offsetWidth;\r\n        this.updateControlsState();\r\n      });\r\n    }\r\n  }\r\n\r\n  public ngOnDestroy(): void {\r\n    this.subMenuObserver.disconnect();\r\n    this.stopOutsideClickListener$.next();\r\n    this.stopOutsideClickListener$.complete();\r\n    this.destroyed$.next();\r\n    this.destroyed$.complete();\r\n  }\r\n\r\n  public toggleMenu(event: MouseEvent, menu: SlideMenu, index: number): void {\r\n    const currentTarget = (event.target as HTMLElement).closest('li');\r\n    if (this.currentMenu && this.currentMenu !== menu) {\r\n      this.currentMenu.hide();\r\n    }\r\n    const toggleMenu = (): void => {\r\n      menu.toggle({ currentTarget });\r\n      this.currentMenu = menu;\r\n      this.currentMenuIndex = index;\r\n    };\r\n\r\n    if (this.isPartlyVisible(event.target as HTMLElement)) {\r\n      currentTarget.scrollIntoView({ inline: 'nearest' });\r\n      this.scroll$.pipe(first(), takeUntil(this.destroyed$)).subscribe(() => toggleMenu());\r\n    } else {\r\n      toggleMenu();\r\n    }\r\n    event.stopImmediatePropagation();\r\n    event.preventDefault();\r\n  }\r\n\r\n  public initOutsideClickListener(menu): void {\r\n    this.stopOutsideClickListener$.next();\r\n    fromEvent(this.document, 'click')\r\n      .pipe(takeUntil(this.stopOutsideClickListener$))\r\n      .subscribe((e: Event) => {\r\n        const clickInside = e.composedPath().includes(this.subMenuContainer.nativeElement);\r\n        if (!clickInside) {\r\n          menu.hide();\r\n          this.stopOutsideClickListener$.next();\r\n        }\r\n      });\r\n  }\r\n\r\n  public selectTabFromList(index: number, overlayPanel: OverlayPanel): void {\r\n    if (this.model[index].disabled) return;\r\n    this.activeItem = this.model[index];\r\n    this.navLinks.item(index).scrollIntoView({ inline: 'center' });\r\n    (this.navLinks.item(index) as HTMLElement).click();\r\n    overlayPanel.hide();\r\n  }\r\n\r\n  public scrollPrevious(): void {\r\n    this.navListElement.scrollLeft -= this.navListElement.offsetWidth;\r\n  }\r\n\r\n  public scrollNext(): void {\r\n    this.navListElement.scrollLeft += this.navListElement.offsetWidth;\r\n  }\r\n\r\n  private updateControlsState(): void {\r\n    if (this.hasOverflow) {\r\n      this.maxScrollDistance = this.navListElement.scrollWidth - this.navListElement.offsetWidth;\r\n      this.disablePrevControl = this.navListElement.scrollLeft === 0;\r\n      this.disableNextControl = this.maxScrollDistance - this.navListElement.scrollLeft < 1;\r\n      this.updateControlsStyles(this.disablePrevControl, this.prevControl.nativeElement);\r\n      this.updateControlsStyles(this.disableNextControl, this.nextControl.nativeElement);\r\n    }\r\n  }\r\n\r\n  private updateControlsStyles(isDisabled: boolean, el: HTMLElement): void {\r\n    if (isDisabled) {\r\n      this.renderer.addClass(el, 'disabled');\r\n    } else {\r\n      this.renderer.removeClass(el, 'disabled');\r\n    }\r\n  }\r\n\r\n  private isPartlyVisible(target: HTMLElement): boolean {\r\n    const offsetParent = target.offsetParent as HTMLElement;\r\n    const isLeftSideHidden =\r\n      offsetParent.offsetLeft - this.navListElement.scrollLeft < this.nextControl.nativeElement.offsetWidth;\r\n    const isRightSideHidden =\r\n      offsetParent.offsetLeft +\r\n        offsetParent.offsetWidth -\r\n        this.nextControl.nativeElement.offsetWidth -\r\n        this.navListElement.scrollLeft >\r\n      this.navListElement.offsetWidth;\r\n    return isLeftSideHidden || isRightSideHidden;\r\n  }\r\n\r\n  private initClickListeners(): void {\r\n    fromEvent(this.navListElement, 'click')\r\n      .pipe(takeUntil(this.destroyed$))\r\n      .subscribe((e: Event) => {\r\n        this.updateCurrentIndex(e.target as HTMLElement);\r\n        this.updateActiveItem();\r\n      });\r\n\r\n    fromEvent(this.subMenuContainer.nativeElement, 'click')\r\n      .pipe(\r\n        filter(\r\n          (e: Event) => !(e.target as HTMLElement).nextElementSibling && e.target instanceof HTMLAnchorElement\r\n        ),\r\n        takeUntil(this.destroyed$)\r\n      )\r\n      .subscribe(() => {\r\n        this.updateActiveItem();\r\n      });\r\n  }\r\n\r\n  private initSubmenuObserver(): void {\r\n    const target = this.subMenuContainer.nativeElement;\r\n    const config = {\r\n      childList: true,\r\n    };\r\n    const callback = (mutations: MutationRecord[]): void => {\r\n      mutations.forEach(() => {\r\n        this.openedItem = this.subMenuContainer.nativeElement.hasChildNodes()\r\n          ? this.model[this.currentMenuIndex]\r\n          : null;\r\n        this.cdr.markForCheck();\r\n      });\r\n    };\r\n    this.subMenuObserver = new MutationObserver(callback);\r\n    this.subMenuObserver.observe(target, config);\r\n  }\r\n\r\n  private updateActiveItem(): void {\r\n    this.activeItem = this.model[this.currentMenuIndex];\r\n    this.cdr.markForCheck();\r\n  }\r\n\r\n  private updateCurrentIndex(target: HTMLElement): void {\r\n    this.navLinks.forEach((value, key) => {\r\n      if (value === target.closest('a')) {\r\n        this.currentMenuIndex = key;\r\n      }\r\n    });\r\n  }\r\n}\r\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "deprecated": false,
        "deprecationMessage": "",
        "args": [
          {
            "name": "document",
            "type": "Document",
            "deprecated": false,
            "deprecationMessage": ""
          },
          {
            "name": "renderer",
            "type": "Renderer2",
            "deprecated": false,
            "deprecationMessage": ""
          },
          {
            "name": "cdr",
            "type": "ChangeDetectorRef",
            "deprecated": false,
            "deprecationMessage": ""
          }
        ],
        "line": 64,
        "jsdoctags": [
          {
            "name": "document",
            "type": "Document",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          },
          {
            "name": "renderer",
            "type": "Renderer2",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          },
          {
            "name": "cdr",
            "type": "ChangeDetectorRef",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      "implements": ["AfterViewInit", "AfterViewChecked", "OnDestroy"],
      "accessors": {
        "model": {
          "name": "model",
          "setSignature": {
            "name": "model",
            "type": "void",
            "deprecated": false,
            "deprecationMessage": "",
            "args": [
              {
                "name": "items",
                "type": "MenuItem[]",
                "deprecated": false,
                "deprecationMessage": ""
              }
            ],
            "returnType": "void",
            "line": 44,
            "jsdoctags": [
              {
                "name": "items",
                "type": "MenuItem[]",
                "deprecated": false,
                "deprecationMessage": "",
                "tagName": {
                  "text": "param"
                }
              }
            ]
          },
          "getSignature": {
            "name": "model",
            "type": "[]",
            "returnType": "MenuItem[]",
            "line": 48
          }
        }
      },
      "templateData": "<div class=\"tab-container\" [class]=\"styleClass\">\r\n  <div class=\"scroll-control scroll-control-left shadow-mini-right-container\">\r\n    <div class=\"control-group\">\r\n      <button class=\"control-group__item\" (click)=\"scrollPrevious()\">\r\n        <i #prevControl class=\"pi pi-angle-left control-icon\"></i>\r\n      </button>\r\n    </div>\r\n  </div>\r\n\r\n  <p-tabMenu [model]=\"model\" [activeItem]=\"activeItem\" [style]=\"style\" [styleClass]=\"styleClass\">\r\n    <ng-template pTemplate=\"item\" let-item let-i=\"index\">\r\n      <i *ngIf=\"item.icon\" class=\"p-menuitem-icon pi pi-fw {{ item.icon }}\"></i>\r\n      <span class=\"p-menuitem-text\">{{ item?.label }}</span>\r\n      <ng-container *ngIf=\"item.items && item.items\">\r\n        <i\r\n          class=\"menu-toggle-icon zyfra-icon {{\r\n            this.openedItem === item ? 'chevrons-dropdown' : 'chevrons-menu-right'\r\n          }}\"\r\n          (click)=\"toggleMenu($event, menu, i)\"\r\n        ></i>\r\n        <p-slideMenu\r\n          #menu\r\n          [model]=\"$any(item.items)\"\r\n          [popup]=\"true\"\r\n          [appendTo]=\"tabSubmenuContainer\"\r\n          [backLabel]=\"backLabel\"\r\n          (onShow)=\"initOutsideClickListener(menu)\"\r\n        ></p-slideMenu>\r\n      </ng-container>\r\n    </ng-template>\r\n  </p-tabMenu>\r\n\r\n  <div class=\"scroll-control scroll-control-right shadow-mini-left-container\">\r\n    <div class=\"control-group\">\r\n      <button class=\"control-group__item\" (click)=\"op.toggle($event)\">\r\n        <i class=\"pi pi-ellipsis-v control-icon\"></i>\r\n      </button>\r\n      <button class=\"control-group__item\" (click)=\"scrollNext()\">\r\n        <i #nextControl class=\"pi pi-angle-right control-icon\"></i>\r\n      </button>\r\n    </div>\r\n  </div>\r\n\r\n  <p-overlayPanel #op [appendTo]=\"tabListContainer\">\r\n    <ng-template pTemplate>\r\n      <li\r\n        *ngFor=\"let tab of model; let i = index\"\r\n        [class.p-disabled]=\"tab.disabled\"\r\n        class=\"tab-list-item text-overflow\"\r\n        [zyfraTooltip]=\"tab.label\"\r\n        zyfraTooltipPosition=\"below\"\r\n        (click)=\"selectTabFromList(i, op)\"\r\n      >\r\n        {{ tab.label }}\r\n      </li>\r\n    </ng-template>\r\n  </p-overlayPanel>\r\n\r\n  <ul #tabListContainer class=\"tab-list-panel-container\"></ul>\r\n</div>\r\n<div #tabSubmenuContainer class=\"tab-submenu-container\"></div>\r\n"
    },
    {
      "name": "ZyfraTabPanelComponent",
      "id": "component-ZyfraTabPanelComponent-8c09af5e5a287b6b1120ca3b94fe902c",
      "file": "libs/components/src/lib/tab-view/zyfra-tab-panel/zyfra-tab-panel.component.ts",
      "changeDetection": "ChangeDetectionStrategy.OnPush",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "zyfra-tab-panel",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./zyfra-tab-panel.component.html"],
      "viewProviders": [],
      "inputsClass": [
        {
          "name": "cache",
          "defaultValue": "true",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 26,
          "type": "boolean"
        },
        {
          "name": "closable",
          "defaultValue": "false",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 23,
          "type": "boolean"
        },
        {
          "name": "disabled",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 32,
          "type": "boolean"
        },
        {
          "name": "header",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 41,
          "type": "string"
        },
        {
          "name": "headerStyle",
          "defaultValue": "null",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 24,
          "type": "string"
        },
        {
          "name": "headerStyleClass",
          "defaultValue": "null",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 25,
          "type": "string"
        },
        {
          "name": "leftIcon",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 50,
          "type": "string"
        },
        {
          "name": "rightIcon",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 59,
          "type": "string"
        },
        {
          "name": "selected",
          "defaultValue": "false",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 22,
          "type": "boolean"
        },
        {
          "name": "tooltip",
          "defaultValue": "null",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 27,
          "type": "any"
        },
        {
          "name": "tooltipPosition",
          "defaultValue": "'top'",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 29,
          "type": "\"right\" | \"left\" | \"top\" | \"bottom\""
        },
        {
          "name": "tooltipPositionStyle",
          "defaultValue": "'absolute'",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 30,
          "type": "string"
        },
        {
          "name": "tooltipStyleClass",
          "defaultValue": "null",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 28,
          "type": "string"
        }
      ],
      "outputsClass": [
        {
          "name": "propChange",
          "defaultValue": "new EventEmitter()",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 68,
          "type": "EventEmitter<void>"
        }
      ],
      "propertiesClass": [
        {
          "name": "_disabled",
          "defaultValue": "false",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "boolean",
          "optional": false,
          "description": "",
          "line": 71,
          "modifierKind": [121]
        },
        {
          "name": "_header",
          "defaultValue": "null",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 70,
          "modifierKind": [121]
        },
        {
          "name": "_leftIcon",
          "defaultValue": "null",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 72,
          "modifierKind": [121]
        },
        {
          "name": "_rightIcon",
          "defaultValue": "null",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 73,
          "modifierKind": [121]
        },
        {
          "name": "contentTemplate",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "TemplateRef<any>",
          "optional": false,
          "description": "",
          "line": 19,
          "decorators": [
            {
              "name": "ContentChild",
              "stringifiedArguments": "'content'"
            }
          ],
          "modifierKind": [123]
        },
        {
          "name": "headerTemplate",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "TemplateRef<any>",
          "optional": false,
          "description": "",
          "line": 18,
          "decorators": [
            {
              "name": "ContentChild",
              "stringifiedArguments": "'header'"
            }
          ],
          "modifierKind": [123]
        },
        {
          "name": "implicitContent",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "TemplateRef<any>",
          "optional": false,
          "description": "",
          "line": 21,
          "decorators": [
            {
              "name": "ViewChild",
              "stringifiedArguments": "TemplateRef"
            }
          ]
        }
      ],
      "methodsClass": [],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import {\r\n  ChangeDetectionStrategy,\r\n  Component,\r\n  ContentChild,\r\n  EventEmitter,\r\n  Input,\r\n  Output,\r\n  TemplateRef,\r\n  ViewChild,\r\n} from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'zyfra-tab-panel',\r\n  templateUrl: './zyfra-tab-panel.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class ZyfraTabPanelComponent {\r\n  @ContentChild('header') public headerTemplate: TemplateRef<any>;\r\n  @ContentChild('content') public contentTemplate: TemplateRef<any>;\r\n\r\n  @ViewChild(TemplateRef) implicitContent: TemplateRef<any>;\r\n  @Input() selected: boolean = false;\r\n  @Input() closable: boolean = false;\r\n  @Input() headerStyle: string = null;\r\n  @Input() headerStyleClass: string = null;\r\n  @Input() cache: boolean = true;\r\n  @Input() tooltip: any = null;\r\n  @Input() tooltipStyleClass: string = null;\r\n  @Input() tooltipPosition: 'right' | 'left' | 'top' | 'bottom' = 'top';\r\n  @Input() tooltipPositionStyle: string = 'absolute';\r\n\r\n  @Input() set disabled(disabled: boolean) {\r\n    this._disabled = disabled;\r\n    this.propChange.emit();\r\n  }\r\n\r\n  get disabled(): boolean {\r\n    return this._disabled;\r\n  }\r\n\r\n  @Input() set header(header: string) {\r\n    this._header = header;\r\n    this.propChange.emit();\r\n  }\r\n\r\n  get header(): string {\r\n    return this._header;\r\n  }\r\n\r\n  @Input() set leftIcon(leftIcon: string) {\r\n    this._leftIcon = leftIcon;\r\n    this.propChange.emit();\r\n  }\r\n\r\n  get leftIcon(): string {\r\n    return this._leftIcon;\r\n  }\r\n\r\n  @Input() set rightIcon(rightIcon: string) {\r\n    this._rightIcon = rightIcon;\r\n    this.propChange.emit();\r\n  }\r\n\r\n  get rightIcon(): string {\r\n    return this._rightIcon;\r\n  }\r\n\r\n  @Output() propChange: EventEmitter<void> = new EventEmitter();\r\n\r\n  private _header: string = null;\r\n  private _disabled: boolean = false;\r\n  private _leftIcon: string = null;\r\n  private _rightIcon: string = null;\r\n}\r\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "accessors": {
        "disabled": {
          "name": "disabled",
          "setSignature": {
            "name": "disabled",
            "type": "void",
            "deprecated": false,
            "deprecationMessage": "",
            "args": [
              {
                "name": "disabled",
                "type": "boolean",
                "deprecated": false,
                "deprecationMessage": ""
              }
            ],
            "returnType": "void",
            "line": 32,
            "jsdoctags": [
              {
                "name": "disabled",
                "type": "boolean",
                "deprecated": false,
                "deprecationMessage": "",
                "tagName": {
                  "text": "param"
                }
              }
            ]
          },
          "getSignature": {
            "name": "disabled",
            "type": "boolean",
            "returnType": "boolean",
            "line": 37
          }
        },
        "header": {
          "name": "header",
          "setSignature": {
            "name": "header",
            "type": "void",
            "deprecated": false,
            "deprecationMessage": "",
            "args": [
              {
                "name": "header",
                "type": "string",
                "deprecated": false,
                "deprecationMessage": ""
              }
            ],
            "returnType": "void",
            "line": 41,
            "jsdoctags": [
              {
                "name": "header",
                "type": "string",
                "deprecated": false,
                "deprecationMessage": "",
                "tagName": {
                  "text": "param"
                }
              }
            ]
          },
          "getSignature": {
            "name": "header",
            "type": "string",
            "returnType": "string",
            "line": 46
          }
        },
        "leftIcon": {
          "name": "leftIcon",
          "setSignature": {
            "name": "leftIcon",
            "type": "void",
            "deprecated": false,
            "deprecationMessage": "",
            "args": [
              {
                "name": "leftIcon",
                "type": "string",
                "deprecated": false,
                "deprecationMessage": ""
              }
            ],
            "returnType": "void",
            "line": 50,
            "jsdoctags": [
              {
                "name": "leftIcon",
                "type": "string",
                "deprecated": false,
                "deprecationMessage": "",
                "tagName": {
                  "text": "param"
                }
              }
            ]
          },
          "getSignature": {
            "name": "leftIcon",
            "type": "string",
            "returnType": "string",
            "line": 55
          }
        },
        "rightIcon": {
          "name": "rightIcon",
          "setSignature": {
            "name": "rightIcon",
            "type": "void",
            "deprecated": false,
            "deprecationMessage": "",
            "args": [
              {
                "name": "rightIcon",
                "type": "string",
                "deprecated": false,
                "deprecationMessage": ""
              }
            ],
            "returnType": "void",
            "line": 59,
            "jsdoctags": [
              {
                "name": "rightIcon",
                "type": "string",
                "deprecated": false,
                "deprecationMessage": "",
                "tagName": {
                  "text": "param"
                }
              }
            ]
          },
          "getSignature": {
            "name": "rightIcon",
            "type": "string",
            "returnType": "string",
            "line": 64
          }
        }
      },
      "templateData": "<ng-template><ng-content></ng-content></ng-template>\r\n"
    },
    {
      "name": "ZyfraTabViewComponent",
      "id": "component-ZyfraTabViewComponent-0e22f9045aaa8997bcb2796f80ddd543",
      "file": "libs/components/src/lib/tab-view/zyfra-tab-view/zyfra-tab-view.component.ts",
      "changeDetection": "ChangeDetectionStrategy.OnPush",
      "encapsulation": ["ViewEncapsulation.None"],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "zyfra-tab-view",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./zyfra-tab-view.component.html"],
      "viewProviders": [],
      "inputsClass": [
        {
          "name": "activeIndex",
          "defaultValue": "null",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 41,
          "type": "number | null"
        },
        {
          "name": "controlClose",
          "defaultValue": "false",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 42,
          "type": "boolean"
        },
        {
          "name": "style",
          "defaultValue": "null",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 43,
          "type": "string | null"
        },
        {
          "name": "styleClass",
          "defaultValue": "null",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 44,
          "type": "string | null"
        }
      ],
      "outputsClass": [
        {
          "name": "activeIndexChange",
          "defaultValue": "new EventEmitter()",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 46,
          "type": "EventEmitter<number>"
        },
        {
          "name": "onChange",
          "defaultValue": "new EventEmitter()",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 47,
          "type": "EventEmitter<any>"
        },
        {
          "name": "onClose",
          "defaultValue": "new EventEmitter()",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 48,
          "type": "EventEmitter<any>"
        }
      ],
      "propertiesClass": [
        {
          "name": "destroyed$",
          "defaultValue": "new Subject()",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Subject<any>",
          "optional": false,
          "description": "",
          "line": 59,
          "modifierKind": [121]
        },
        {
          "name": "disableNextControl",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "boolean",
          "optional": false,
          "description": "",
          "line": 35,
          "decorators": [
            {
              "name": "HostBinding",
              "stringifiedArguments": "'class.scrolled-to-end'"
            }
          ]
        },
        {
          "name": "disablePrevControl",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "boolean",
          "optional": false,
          "description": "",
          "line": 34,
          "decorators": [
            {
              "name": "HostBinding",
              "stringifiedArguments": "'class.scrolled-to-start'"
            }
          ]
        },
        {
          "name": "hasOverflow",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "boolean",
          "optional": false,
          "description": "",
          "line": 36,
          "decorators": [
            {
              "name": "HostBinding",
              "stringifiedArguments": "'class.has-overflow'"
            }
          ]
        },
        {
          "name": "keyDownHandler",
          "defaultValue": "() => {...}",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "optional": false,
          "description": "",
          "line": 61,
          "modifierKind": [121]
        },
        {
          "name": "lastFocused",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Element",
          "optional": false,
          "description": "",
          "line": 57,
          "modifierKind": [121]
        },
        {
          "name": "maxScrollDistance",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "number",
          "optional": false,
          "description": "",
          "line": 55,
          "modifierKind": [121]
        },
        {
          "name": "navContentElement",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "HTMLElement",
          "optional": false,
          "description": "",
          "line": 58,
          "modifierKind": [121]
        },
        {
          "name": "navLinks",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "NodeListOf<HTMLElement>",
          "optional": false,
          "description": "",
          "line": 56,
          "modifierKind": [121]
        },
        {
          "name": "nextControl",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "ElementRef",
          "optional": false,
          "description": "",
          "line": 39,
          "decorators": [
            {
              "name": "ViewChild",
              "stringifiedArguments": "'nextControl'"
            }
          ],
          "modifierKind": [123]
        },
        {
          "name": "prevControl",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "ElementRef",
          "optional": false,
          "description": "",
          "line": 38,
          "decorators": [
            {
              "name": "ViewChild",
              "stringifiedArguments": "'prevControl'"
            }
          ],
          "modifierKind": [123]
        },
        {
          "name": "tabClosed",
          "defaultValue": "false",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "optional": false,
          "description": "",
          "line": 54,
          "modifierKind": [121]
        },
        {
          "name": "tabList",
          "defaultValue": "[]",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "literal type[]",
          "optional": false,
          "description": "",
          "line": 51,
          "modifierKind": [123]
        },
        {
          "name": "tabPanels",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "QueryList<ZyfraTabPanelComponent>",
          "optional": false,
          "description": "",
          "line": 40,
          "decorators": [
            {
              "name": "ContentChildren",
              "stringifiedArguments": "ZyfraTabPanelComponent"
            }
          ]
        },
        {
          "name": "tabs",
          "defaultValue": "[]",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "ZyfraTabPanelComponent[]",
          "optional": false,
          "description": "",
          "line": 50,
          "modifierKind": [123]
        },
        {
          "name": "tabsChanged",
          "defaultValue": "true",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "optional": false,
          "description": "",
          "line": 53,
          "modifierKind": [121]
        },
        {
          "name": "tabsChanged$",
          "defaultValue": "new Subject()",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Subject<any>",
          "optional": false,
          "description": "",
          "line": 60,
          "modifierKind": [121]
        },
        {
          "name": "tabView",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "TabView",
          "optional": false,
          "description": "",
          "line": 37,
          "decorators": [
            {
              "name": "ViewChild",
              "stringifiedArguments": "TabView"
            }
          ],
          "modifierKind": [123]
        }
      ],
      "methodsClass": [
        {
          "name": "activeIndexChangeHandler",
          "args": [
            {
              "name": "event",
              "type": "",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 135,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [123],
          "jsdoctags": [
            {
              "name": "event",
              "type": "",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "changeFocus",
          "args": [
            {
              "name": "next",
              "type": "Element",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 247,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [121],
          "jsdoctags": [
            {
              "name": "next",
              "type": "Element",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "focusNext",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 228,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [121]
        },
        {
          "name": "focusPrev",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 211,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [121]
        },
        {
          "name": "handleChange",
          "args": [
            {
              "name": "event",
              "type": "",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 140,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [123],
          "jsdoctags": [
            {
              "name": "event",
              "type": "",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "handleClose",
          "args": [
            {
              "name": "event",
              "type": "",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 145,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [123],
          "jsdoctags": [
            {
              "name": "event",
              "type": "",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "initialPrepare",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 98,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [121]
        },
        {
          "name": "ngAfterContentInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 82,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [123]
        },
        {
          "name": "ngAfterViewChecked",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 112,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [123]
        },
        {
          "name": "ngAfterViewInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 90,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [123]
        },
        {
          "name": "ngOnDestroy",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 127,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [123]
        },
        {
          "name": "removeListeners",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 207,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [121]
        },
        {
          "name": "scrollNext",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 159,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [123]
        },
        {
          "name": "scrollPrevious",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 155,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [123]
        },
        {
          "name": "selectTabFromList",
          "args": [
            {
              "name": "event",
              "type": "MouseEvent",
              "deprecated": false,
              "deprecationMessage": ""
            },
            {
              "name": "index",
              "type": "number",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 163,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [123],
          "jsdoctags": [
            {
              "name": "event",
              "type": "MouseEvent",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "index",
              "type": "number",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "tabsInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 172,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [121]
        },
        {
          "name": "updateControlsState",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 189,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [121]
        },
        {
          "name": "updateControlsStyles",
          "args": [
            {
              "name": "isDisabled",
              "type": "boolean",
              "deprecated": false,
              "deprecationMessage": ""
            },
            {
              "name": "el",
              "type": "HTMLElement",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 199,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [121],
          "jsdoctags": [
            {
              "name": "isDisabled",
              "type": "boolean",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "el",
              "type": "HTMLElement",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        }
      ],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [
        {
          "name": "class.has-overflow",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 36,
          "type": "boolean"
        },
        {
          "name": "class.scrolled-to-end",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 35,
          "type": "boolean"
        },
        {
          "name": "class.scrolled-to-start",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 34,
          "type": "boolean"
        }
      ],
      "hostListeners": [],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import {\r\n  AfterContentInit,\r\n  AfterViewChecked,\r\n  AfterViewInit,\r\n  ChangeDetectionStrategy,\r\n  ChangeDetectorRef,\r\n  Component,\r\n  ContentChildren,\r\n  ElementRef,\r\n  EventEmitter,\r\n  HostBinding,\r\n  Inject,\r\n  Input,\r\n  OnDestroy,\r\n  Output,\r\n  QueryList,\r\n  Renderer2,\r\n  ViewChild,\r\n  ViewEncapsulation,\r\n} from '@angular/core';\r\nimport { debounceTime, takeUntil } from 'rxjs/operators';\r\nimport { fromEvent, merge, Subject } from 'rxjs';\r\nimport { TabView } from 'primeng/tabview';\r\nimport { ZyfraTabPanelComponent } from '../zyfra-tab-panel/zyfra-tab-panel.component';\r\nimport { DOCUMENT } from '@angular/common';\r\n\r\n@Component({\r\n  selector: 'zyfra-tab-view',\r\n  templateUrl: './zyfra-tab-view.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  encapsulation: ViewEncapsulation.None,\r\n})\r\nexport class ZyfraTabViewComponent implements AfterContentInit, AfterViewInit, AfterViewChecked, OnDestroy {\r\n  @HostBinding('class.scrolled-to-start') disablePrevControl: boolean;\r\n  @HostBinding('class.scrolled-to-end') disableNextControl: boolean;\r\n  @HostBinding('class.has-overflow') hasOverflow: boolean;\r\n  @ViewChild(TabView) public tabView: TabView;\r\n  @ViewChild('prevControl') public prevControl: ElementRef;\r\n  @ViewChild('nextControl') public nextControl: ElementRef;\r\n  @ContentChildren(ZyfraTabPanelComponent) tabPanels: QueryList<ZyfraTabPanelComponent>;\r\n  @Input() activeIndex: number | null = null;\r\n  @Input() controlClose = false;\r\n  @Input() style: string | null = null;\r\n  @Input() styleClass: string | null = null;\r\n\r\n  @Output() activeIndexChange: EventEmitter<number> = new EventEmitter();\r\n  @Output() onChange: EventEmitter<any> = new EventEmitter();\r\n  @Output() onClose: EventEmitter<any> = new EventEmitter();\r\n\r\n  public tabs: ZyfraTabPanelComponent[] = [];\r\n  public tabList: { header: string; index: number; disabled: boolean }[] = [];\r\n\r\n  private tabsChanged = true;\r\n  private tabClosed = false;\r\n  private maxScrollDistance: number;\r\n  private navLinks: NodeListOf<HTMLElement>;\r\n  private lastFocused: Element;\r\n  private navContentElement: HTMLElement;\r\n  private destroyed$: Subject<any> = new Subject();\r\n  private tabsChanged$: Subject<any> = new Subject();\r\n  private keyDownHandler = (e: KeyboardEvent): void => {\r\n    // use an arrow function to access the context of the component\r\n    if (e.key !== 'ArrowRight' && e.key !== 'ArrowLeft') {\r\n      return;\r\n    }\r\n    switch (e.key) {\r\n      case 'ArrowLeft':\r\n        this.focusPrev();\r\n        break;\r\n      case 'ArrowRight':\r\n        this.focusNext();\r\n        break;\r\n    }\r\n  };\r\n\r\n  constructor(\r\n    @Inject(DOCUMENT) private document: Document,\r\n    private renderer: Renderer2,\r\n    private cdr: ChangeDetectorRef\r\n  ) {}\r\n\r\n  public ngAfterContentInit(): void {\r\n    this.tabsInit();\r\n    this.tabPanels.changes.pipe(takeUntil(this.destroyed$)).subscribe(() => {\r\n      this.tabsChanged$.next();\r\n      this.tabsInit();\r\n    });\r\n  }\r\n\r\n  public ngAfterViewInit(): void {\r\n    this.navContentElement = this.tabView.content.nativeElement;\r\n    this.navContentElement.addEventListener('keydown', this.keyDownHandler);\r\n    fromEvent(this.navContentElement, 'scroll')\r\n      .pipe(debounceTime(50), takeUntil(this.destroyed$))\r\n      .subscribe(() => this.updateControlsState());\r\n  }\r\n\r\n  private initialPrepare(): void {\r\n    this.navLinks = this.navContentElement.querySelectorAll('a.p-tabview-nav-link');\r\n    const highlight = this.navContentElement.querySelector('li.p-highlight');\r\n    let focusPresent = false;\r\n    this.navLinks.forEach((value) => {\r\n      if (this.lastFocused === value) {\r\n        focusPresent = true;\r\n      }\r\n    });\r\n    if (!focusPresent) {\r\n      this.lastFocused = highlight ? highlight.firstElementChild : this.navLinks.item(0);\r\n    }\r\n  }\r\n\r\n  public ngAfterViewChecked(): void {\r\n    if (this.tabsChanged || this.tabClosed) {\r\n      requestAnimationFrame(() => {\r\n        this.hasOverflow = this.navContentElement.scrollWidth > this.navContentElement.offsetWidth;\r\n        this.updateControlsState();\r\n        if (this.tabsChanged) {\r\n          this.initialPrepare();\r\n        }\r\n        this.tabsChanged = false;\r\n        this.tabClosed = false;\r\n        this.cdr.markForCheck();\r\n      });\r\n    }\r\n  }\r\n\r\n  public ngOnDestroy(): void {\r\n    this.removeListeners();\r\n    this.tabsChanged$.next();\r\n    this.tabsChanged$.complete();\r\n    this.destroyed$.next();\r\n    this.destroyed$.complete();\r\n  }\r\n\r\n  public activeIndexChangeHandler(event): void {\r\n    this.activeIndex = event;\r\n    this.activeIndexChange.emit(event);\r\n  }\r\n\r\n  public handleChange(event): void {\r\n    this.onChange.emit(event);\r\n    this.changeFocus(this.navLinks.item(event.index));\r\n  }\r\n\r\n  public handleClose(event): void {\r\n    const closedTab = event.originalEvent.target.offsetParent;\r\n    this.tabClosed = true;\r\n    this.tabList = this.tabList.filter(({ index }) => index !== event.index);\r\n    if (this.lastFocused === closedTab) {\r\n      this.changeFocus(this.navLinks.item(this.tabList[0].index));\r\n    }\r\n    this.onClose.emit(event);\r\n  }\r\n\r\n  public scrollPrevious(): void {\r\n    this.navContentElement.scrollLeft -= this.navContentElement.offsetWidth;\r\n  }\r\n\r\n  public scrollNext(): void {\r\n    this.navContentElement.scrollLeft += this.navContentElement.offsetWidth;\r\n  }\r\n\r\n  public selectTabFromList(event: MouseEvent, index: number): void {\r\n    this.navLinks.item(index).scrollIntoView({ inline: 'center' });\r\n    if (!this.tabList[index].disabled && this.activeIndex !== index) {\r\n      this.activeIndex = index;\r\n      this.changeFocus(this.navLinks.item(index));\r\n      this.onChange.emit({ originalEvent: event, index });\r\n    }\r\n  }\r\n\r\n  private tabsInit(): void {\r\n    this.tabs = this.tabPanels.toArray();\r\n    this.tabList = this.tabs.map((value, index) => ({\r\n      header: value.header,\r\n      index,\r\n      disabled: value.disabled,\r\n    }));\r\n\r\n    this.tabsChanged = true;\r\n    merge(...this.tabs.map((value) => value.propChange))\r\n      .pipe(takeUntil(this.tabsChanged$))\r\n      .subscribe(() => {\r\n        this.cdr.markForCheck();\r\n      });\r\n    this.cdr.markForCheck();\r\n  }\r\n\r\n  private updateControlsState(): void {\r\n    if (this.hasOverflow) {\r\n      this.maxScrollDistance = this.navContentElement.scrollWidth - this.navContentElement.offsetWidth;\r\n      this.disablePrevControl = this.navContentElement.scrollLeft === 0;\r\n      this.disableNextControl = this.maxScrollDistance - this.navContentElement.scrollLeft < 1;\r\n      this.updateControlsStyles(this.disablePrevControl, this.prevControl.nativeElement);\r\n      this.updateControlsStyles(this.disableNextControl, this.nextControl.nativeElement);\r\n    }\r\n  }\r\n\r\n  private updateControlsStyles(isDisabled: boolean, el: HTMLElement): void {\r\n    if (isDisabled) {\r\n      this.renderer.addClass(el, 'disabled');\r\n    } else {\r\n      this.renderer.removeClass(el, 'disabled');\r\n    }\r\n  }\r\n\r\n  private removeListeners(): void {\r\n    this.navContentElement.removeEventListener('keydown', this.keyDownHandler);\r\n  }\r\n\r\n  private focusPrev(): void {\r\n    const current = this.document.activeElement;\r\n    if (!current.parentElement.previousElementSibling) {\r\n      return;\r\n    }\r\n    const next = current.parentElement.previousElementSibling.firstChild as HTMLElement;\r\n    if (!next) {\r\n      return;\r\n    }\r\n    this.changeFocus(next);\r\n    next.focus();\r\n    if (next.offsetLeft < this.navContentElement.scrollLeft) {\r\n      this.navContentElement.scrollLeft =\r\n        next.offsetLeft + next.offsetWidth - this.navContentElement.offsetWidth;\r\n    }\r\n  }\r\n\r\n  private focusNext(): void {\r\n    const current = this.document.activeElement;\r\n    if (!current.parentElement.nextElementSibling) {\r\n      return;\r\n    }\r\n    const next = current.parentElement.nextElementSibling.firstChild as HTMLElement;\r\n    if (!next) {\r\n      return;\r\n    }\r\n    this.changeFocus(next);\r\n    next.focus();\r\n    if (\r\n      next.offsetLeft + next.offsetWidth >\r\n      this.navContentElement.offsetWidth + this.navContentElement.scrollLeft\r\n    ) {\r\n      this.navContentElement.scrollLeft = next.offsetLeft;\r\n    }\r\n  }\r\n\r\n  private changeFocus(next: Element): void {\r\n    this.lastFocused = next;\r\n  }\r\n}\r\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "deprecated": false,
        "deprecationMessage": "",
        "args": [
          {
            "name": "document",
            "type": "Document",
            "deprecated": false,
            "deprecationMessage": ""
          },
          {
            "name": "renderer",
            "type": "Renderer2",
            "deprecated": false,
            "deprecationMessage": ""
          },
          {
            "name": "cdr",
            "type": "ChangeDetectorRef",
            "deprecated": false,
            "deprecationMessage": ""
          }
        ],
        "line": 74,
        "jsdoctags": [
          {
            "name": "document",
            "type": "Document",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          },
          {
            "name": "renderer",
            "type": "Renderer2",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          },
          {
            "name": "cdr",
            "type": "ChangeDetectorRef",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      "implements": ["AfterContentInit", "AfterViewInit", "AfterViewChecked", "OnDestroy"],
      "templateData": "<div class=\"tab-container\" [class]=\"styleClass\">\r\n  <div class=\"scroll-control scroll-control-left shadow-mini-right-container\">\r\n    <div class=\"control-group\">\r\n      <button class=\"control-group__item\" (click)=\"scrollPrevious()\">\r\n        <i #prevControl class=\"pi pi-angle-left control-icon\"></i>\r\n      </button>\r\n    </div>\r\n  </div>\r\n\r\n  <p-tabView\r\n    [activeIndex]=\"activeIndex\"\r\n    [controlClose]=\"controlClose\"\r\n    [style]=\"style\"\r\n    [styleClass]=\"styleClass\"\r\n    (activeIndexChange)=\"activeIndexChangeHandler($event)\"\r\n    (onChange)=\"handleChange($event)\"\r\n    (onClose)=\"handleClose($event)\"\r\n  >\r\n    <ng-container *ngFor=\"let tab of tabs\">\r\n      <p-tabPanel\r\n        [header]=\"tab.header\"\r\n        [selected]=\"tab.selected\"\r\n        [disabled]=\"tab.disabled\"\r\n        [closable]=\"tab.closable\"\r\n        [leftIcon]=\"tab.leftIcon\"\r\n        [rightIcon]=\"tab.rightIcon\"\r\n        [headerStyle]=\"tab.headerStyle\"\r\n        [headerStyleClass]=\"tab.headerStyleClass\"\r\n        [cache]=\"tab.cache\"\r\n        [tooltip]=\"tab.tooltip\"\r\n        [tooltipPosition]=\"tab.tooltipPosition\"\r\n        [tooltipStyleClass]=\"tab.tooltipStyleClass\"\r\n      >\r\n        <ng-template *ngIf=\"tab.headerTemplate\" pTemplate=\"header\">\r\n          <ng-container\r\n            [ngTemplateOutlet]=\"tab.headerTemplate\"\r\n            [ngTemplateOutletContext]=\"{ $implicit: tab }\"\r\n          ></ng-container>\r\n        </ng-template>\r\n\r\n        <ng-template *ngIf=\"tab.contentTemplate\" pTemplate=\"content\">\r\n          <ng-container\r\n            [ngTemplateOutlet]=\"tab.contentTemplate\"\r\n            [ngTemplateOutletContext]=\"{ $implicit: tab }\"\r\n          ></ng-container>\r\n        </ng-template>\r\n\r\n        <ng-container\r\n          [ngTemplateOutlet]=\"tab.implicitContent\"\r\n          [ngTemplateOutletContext]=\"{ $implicit: tab }\"\r\n        ></ng-container>\r\n      </p-tabPanel>\r\n    </ng-container>\r\n  </p-tabView>\r\n\r\n  <div class=\"scroll-control scroll-control-right shadow-mini-left-container\">\r\n    <div class=\"control-group\">\r\n      <button class=\"control-group__item\" (click)=\"op.toggle($event)\">\r\n        <i class=\"pi pi-ellipsis-v control-icon\"></i>\r\n      </button>\r\n      <button class=\"control-group__item\" (click)=\"scrollNext()\">\r\n        <i #nextControl class=\"pi pi-angle-right control-icon\"></i>\r\n      </button>\r\n    </div>\r\n  </div>\r\n\r\n  <p-overlayPanel #op [appendTo]=\"tabListContainer\">\r\n    <ng-template pTemplate>\r\n      <div\r\n        *ngFor=\"let tab of tabList\"\r\n        class=\"tab-list-item text-overflow\"\r\n        [class.p-disabled]=\"tab.disabled\"\r\n        tooltipPosition=\"bottom\"\r\n        [pTooltip]=\"tab.header\"\r\n        (click)=\"selectTabFromList($event, tab.index); op.hide()\"\r\n      >\r\n        {{ tab.header }}\r\n      </div>\r\n    </ng-template>\r\n  </p-overlayPanel>\r\n\r\n  <div #tabListContainer class=\"tab-list-panel-container\"></div>\r\n</div>\r\n"
    },
    {
      "name": "ZyfraTextareaComponent",
      "id": "component-ZyfraTextareaComponent-1a085d2470b7a4369c2c33dcb8595590",
      "file": "libs/components/src/lib/textarea/zyfra-textarea.component.ts",
      "changeDetection": "ChangeDetectionStrategy.OnPush",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "zyfra-textarea",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./zyfra-textarea.component.html"],
      "viewProviders": [],
      "inputsClass": [
        {
          "name": "autoResize",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 13,
          "type": "boolean"
        },
        {
          "name": "class",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 17,
          "type": "string"
        },
        {
          "name": "cols",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 12,
          "type": "number"
        },
        {
          "name": "disabled",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 18,
          "type": "boolean"
        },
        {
          "name": "id",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 14,
          "type": "string"
        },
        {
          "name": "label",
          "defaultValue": "''",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 21,
          "type": "string"
        },
        {
          "name": "maxlength",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 19,
          "type": "number"
        },
        {
          "name": "minlength",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 20,
          "type": "number"
        },
        {
          "name": "name",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 15,
          "type": "string"
        },
        {
          "name": "placeholder",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 16,
          "type": "string"
        },
        {
          "name": "required",
          "defaultValue": "false",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 22,
          "type": "boolean"
        },
        {
          "name": "rows",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 11,
          "type": "number"
        }
      ],
      "outputsClass": [
        {
          "name": "onResize",
          "defaultValue": "new EventEmitter<unknown>()",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 24,
          "type": "EventEmitter"
        }
      ],
      "propertiesClass": [
        {
          "name": "formControl",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "FormControl",
          "optional": false,
          "description": "",
          "line": 7,
          "modifierKind": [123, 143],
          "inheritance": {
            "file": "WrappedFormComponent"
          }
        },
        {
          "name": "injector",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Injector",
          "optional": false,
          "description": "",
          "line": 9,
          "modifierKind": [123, 143],
          "inheritance": {
            "file": "WrappedFormComponent"
          }
        },
        {
          "name": "ngControl",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "NgControl",
          "optional": false,
          "description": "",
          "line": 9,
          "decorators": [
            {
              "name": "Optional",
              "stringifiedArguments": ""
            },
            {
              "name": "Self",
              "stringifiedArguments": ""
            }
          ],
          "modifierKind": [123, 143],
          "inheritance": {
            "file": "WrappedFormComponent"
          }
        }
      ],
      "methodsClass": [
        {
          "name": "setDisabledState",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 26,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [123, 157],
          "inheritance": {
            "file": "WrappedFormComponent"
          }
        }
      ],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output } from '@angular/core';\r\nimport { ControlValueAccessor } from '@angular/forms';\r\nimport { WrappedFormComponent } from '../@core/value-accessor/wrapped-form.component';\r\n\r\n@Component({\r\n  selector: 'zyfra-textarea',\r\n  templateUrl: './zyfra-textarea.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class ZyfraTextareaComponent extends WrappedFormComponent implements ControlValueAccessor {\r\n  @Input() rows: number;\r\n  @Input() cols: number;\r\n  @Input() autoResize: boolean;\r\n  @Input() id: string;\r\n  @Input() name: string;\r\n  @Input() placeholder: string;\r\n  @Input() class: string;\r\n  @Input() disabled: boolean; // TODO remove this, use FormControl disable state\r\n  @Input() maxlength: number;\r\n  @Input() minlength: number;\r\n  @Input() label = '';\r\n  @Input() required = false;\r\n\r\n  @Output() onResize = new EventEmitter<unknown>();\r\n\r\n  public override setDisabledState(): void {\r\n    // do nothing\r\n  }\r\n}\r\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "extends": "WrappedFormComponent",
      "implements": ["ControlValueAccessor"],
      "templateData": "<span\r\n  class=\"zyfra-input zyfra-textarea\"\r\n  [class.zyfra-input_disabled]=\"disabled\"\r\n  [class.p-float-label]=\"label\"\r\n>\r\n  <textarea\r\n    pInputTextarea\r\n    [rows]=\"rows\"\r\n    [cols]=\"cols\"\r\n    [autoResize]=\"autoResize\"\r\n    [formControl]=\"$any(ngControl.control)\"\r\n    (ngModelChange)=\"accessorOnChangeFn($event)\"\r\n    [placeholder]=\"placeholder\"\r\n    [class]=\"class\"\r\n    [zyfraDisableControl]=\"disabled\"\r\n    [maxlength]=\"maxlength\"\r\n    [minlength]=\"minlength\"\r\n    [name]=\"name\"\r\n    (onResize)=\"onResize.emit($event)\"\r\n  ></textarea>\r\n\r\n  <label *ngIf=\"label\" [class.label-required]=\"required\">{{ label }}</label>\r\n</span>\r\n"
    },
    {
      "name": "ZyfraToastComponent",
      "id": "component-ZyfraToastComponent-502ef278b6e65aa99e6eb9cccf69cce2",
      "file": "libs/components/src/lib/toast/zyfra-toast.component.ts",
      "changeDetection": "ChangeDetectionStrategy.OnPush",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "zyfra-toast",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./zyfra-toast.component.html"],
      "viewProviders": [],
      "inputsClass": [
        {
          "name": "autoZIndex",
          "defaultValue": "true",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 17,
          "type": "boolean"
        },
        {
          "name": "baseZIndex",
          "defaultValue": "0",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 16,
          "type": "number"
        },
        {
          "name": "customTemplate",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 10,
          "type": "TemplateRef<any>"
        },
        {
          "name": "hideTransformOptions",
          "defaultValue": "'translateY(-100%)'",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 21,
          "type": "string"
        },
        {
          "name": "hideTransitionOptions",
          "defaultValue": "'250ms ease-in'",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 19,
          "type": "string"
        },
        {
          "name": "key",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 12,
          "type": "string"
        },
        {
          "name": "position",
          "defaultValue": "'top-right'",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 15,
          "type": "string"
        },
        {
          "name": "preventDuplicates",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 23,
          "type": "boolean"
        },
        {
          "name": "preventOpenDuplicates",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 22,
          "type": "boolean"
        },
        {
          "name": "showTransformOptions",
          "defaultValue": "'translateY(100%)'",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 20,
          "type": "string"
        },
        {
          "name": "showTransitionOptions",
          "defaultValue": "'300ms ease-out'",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 18,
          "type": "string"
        },
        {
          "name": "style",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 13,
          "type": "string"
        },
        {
          "name": "styleClass",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 14,
          "type": "string"
        }
      ],
      "outputsClass": [
        {
          "name": "onClose",
          "defaultValue": "new EventEmitter()",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 25,
          "type": "EventEmitter<any>"
        }
      ],
      "propertiesClass": [],
      "methodsClass": [],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output, TemplateRef } from '@angular/core';\r\nimport { PrimeNGConfig } from 'primeng/api';\r\n\r\n@Component({\r\n  selector: 'zyfra-toast',\r\n  templateUrl: './zyfra-toast.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class ZyfraToastComponent {\r\n  @Input() customTemplate: TemplateRef<any>;\r\n\r\n  @Input() key: string;\r\n  @Input() style: string;\r\n  @Input() styleClass: string;\r\n  @Input() position: string = 'top-right';\r\n  @Input() baseZIndex: number = 0;\r\n  @Input() autoZIndex: boolean = true;\r\n  @Input() showTransitionOptions: string = '300ms ease-out';\r\n  @Input() hideTransitionOptions: string = '250ms ease-in';\r\n  @Input() showTransformOptions: string = 'translateY(100%)';\r\n  @Input() hideTransformOptions: string = 'translateY(-100%)';\r\n  @Input() preventOpenDuplicates: boolean;\r\n  @Input() preventDuplicates: boolean;\r\n\r\n  @Output() onClose: EventEmitter<any> = new EventEmitter();\r\n\r\n  constructor(private primengConfig: PrimeNGConfig) {\r\n    this.primengConfig.ripple = true;\r\n  }\r\n}\r\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "deprecated": false,
        "deprecationMessage": "",
        "args": [
          {
            "name": "primengConfig",
            "type": "PrimeNGConfig",
            "deprecated": false,
            "deprecationMessage": ""
          }
        ],
        "line": 25,
        "jsdoctags": [
          {
            "name": "primengConfig",
            "type": "PrimeNGConfig",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      "templateData": "<p-toast\r\n  [key]=\"key\"\r\n  [style]=\"style\"\r\n  [styleClass]=\"styleClass\"\r\n  [position]=\"position\"\r\n  [baseZIndex]=\"baseZIndex\"\r\n  [autoZIndex]=\"autoZIndex\"\r\n  [showTransitionOptions]=\"showTransitionOptions\"\r\n  [hideTransitionOptions]=\"hideTransitionOptions\"\r\n  [showTransformOptions]=\"showTransformOptions\"\r\n  [hideTransformOptions]=\"hideTransformOptions\"\r\n  [preventOpenDuplicates]=\"preventOpenDuplicates\"\r\n  [preventDuplicates]=\"preventDuplicates\"\r\n  (onClose)=\"onClose.emit($event)\"\r\n>\r\n  <ng-template *ngIf=\"customTemplate\" let-message pTemplate=\"message\">\r\n    <div class=\"p-toast-message-custom\">\r\n      <ng-container *ngTemplateOutlet=\"customTemplate; context: { message: message }\"></ng-container>\r\n    </div>\r\n  </ng-template>\r\n</p-toast>\r\n"
    },
    {
      "name": "ZyfraToggleButtonComponent",
      "id": "component-ZyfraToggleButtonComponent-4d3e44ec5e568c53bad63add1efefe41",
      "file": "libs/components/src/lib/toggle-button/zyfra-toggle-button.component.ts",
      "changeDetection": "ChangeDetectionStrategy.OnPush",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "zyfra-toggle-button",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./zyfra-toggle-button.component.html"],
      "viewProviders": [],
      "inputsClass": [
        {
          "name": "ariaLabelledBy",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 25,
          "type": "string"
        },
        {
          "name": "disabled",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 20,
          "type": "boolean"
        },
        {
          "name": "iconPos",
          "defaultValue": "'left'",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 19,
          "type": "\"left\" | \"right\""
        },
        {
          "name": "inputId",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 24,
          "type": "string"
        },
        {
          "name": "model",
          "defaultValue": "true",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 14,
          "type": "boolean"
        },
        {
          "name": "offIcon",
          "defaultValue": "'zyfra-icon cancel-close'",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 18,
          "type": "string"
        },
        {
          "name": "offLabel",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 16,
          "type": "string"
        },
        {
          "name": "onIcon",
          "defaultValue": "'zyfra-icon selection-check-simple'",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 17,
          "type": "string"
        },
        {
          "name": "onLabel",
          "defaultValue": "'confirm'",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 15,
          "type": "string"
        },
        {
          "name": "style",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 21,
          "type": "string"
        },
        {
          "name": "styleClass",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 22,
          "type": "string"
        },
        {
          "name": "tabindex",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 23,
          "type": "number"
        }
      ],
      "outputsClass": [
        {
          "name": "onChange",
          "defaultValue": "new EventEmitter<boolean>()",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 27,
          "type": "EventEmitter<boolean>"
        }
      ],
      "propertiesClass": [],
      "methodsClass": [
        {
          "name": "handleChange",
          "args": [
            {
              "name": "event",
              "type": "TToggleButtonClick",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 29,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [123],
          "jsdoctags": [
            {
              "name": "event",
              "type": "TToggleButtonClick",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        }
      ],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import { Component, Input, Output, EventEmitter, ChangeDetectionStrategy } from '@angular/core';\r\n\r\nexport interface TToggleButtonClick {\r\n  originalEvent: PointerEvent;\r\n  checked: boolean;\r\n}\r\n\r\n@Component({\r\n  selector: 'zyfra-toggle-button',\r\n  templateUrl: './zyfra-toggle-button.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class ZyfraToggleButtonComponent {\r\n  @Input() model = true;\r\n  @Input() onLabel: string = 'confirm';\r\n  @Input() offLabel: string;\r\n  @Input() onIcon = 'zyfra-icon selection-check-simple';\r\n  @Input() offIcon = 'zyfra-icon cancel-close';\r\n  @Input() iconPos: 'left' | 'right' = 'left';\r\n  @Input() disabled: boolean;\r\n  @Input() style: string;\r\n  @Input() styleClass: string;\r\n  @Input() tabindex: number;\r\n  @Input() inputId: string;\r\n  @Input() ariaLabelledBy: string;\r\n\r\n  @Output() onChange: EventEmitter<boolean> = new EventEmitter<boolean>();\r\n\r\n  public handleChange(event: TToggleButtonClick): void {\r\n    this.model = event.checked;\r\n    this.onChange.emit(this.model);\r\n  }\r\n}\r\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "templateData": "<p-toggleButton\r\n  [(ngModel)]=\"model\"\r\n  [onLabel]=\"onLabel\"\r\n  [offLabel]=\"offLabel\"\r\n  [onIcon]=\"onIcon\"\r\n  [offIcon]=\"offIcon\"\r\n  [iconPos]=\"iconPos\"\r\n  [disabled]=\"disabled\"\r\n  [style]=\"style\"\r\n  [styleClass]=\"styleClass\"\r\n  [tabindex]=\"tabindex\"\r\n  [inputId]=\"inputId\"\r\n  [ariaLabelledBy]=\"ariaLabelledBy\"\r\n  (onChange)=\"handleChange($event)\"\r\n>\r\n</p-toggleButton>\r\n"
    },
    {
      "name": "ZyfraTooltipComponent",
      "id": "component-ZyfraTooltipComponent-0c2f2bf2f1e55826989ba9fc2aa6d480",
      "file": "libs/components/src/lib/tooltip/zyfra-tooltip.component.ts",
      "changeDetection": "ChangeDetectionStrategy.OnPush",
      "encapsulation": ["ViewEncapsulation.None"],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "zyfra-tooltip",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./zyfra-tooltip.component.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [
        {
          "name": "close",
          "defaultValue": "new EventEmitter()",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 40,
          "type": "EventEmitter<boolean>"
        }
      ],
      "propertiesClass": [
        {
          "name": "_options",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "ZyfraTooltipOptionsModel",
          "optional": false,
          "description": "",
          "line": 42,
          "modifierKind": [121]
        },
        {
          "name": "hostClasses",
          "defaultValue": "''",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 38,
          "decorators": [
            {
              "name": "HostBinding",
              "stringifiedArguments": "'class'"
            }
          ]
        }
      ],
      "methodsClass": [
        {
          "name": "animationend",
          "args": [
            {
              "name": "event",
              "type": "AnimationEvent",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 44,
          "deprecated": false,
          "deprecationMessage": "",
          "decorators": [
            {
              "name": "HostListener",
              "stringifiedArguments": "'animationend', ['$event']"
            }
          ],
          "modifierKind": [123],
          "jsdoctags": [
            {
              "name": "event",
              "type": "AnimationEvent",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        }
      ],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [
        {
          "name": "class",
          "defaultValue": "''",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 38,
          "type": "string"
        },
        {
          "name": "style.left.px",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 23,
          "type": "number"
        },
        {
          "name": "style.top.px",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 20,
          "type": "number"
        }
      ],
      "hostListeners": [
        {
          "name": "animationend",
          "args": [
            {
              "name": "event",
              "type": "AnimationEvent",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "argsDecorator": ["$event"],
          "deprecated": false,
          "deprecationMessage": "",
          "line": 44
        }
      ],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import {\r\n  Component,\r\n  EventEmitter,\r\n  ViewEncapsulation,\r\n  Output,\r\n  TemplateRef,\r\n  HostBinding,\r\n  ChangeDetectionStrategy,\r\n  HostListener,\r\n} from '@angular/core';\r\nimport { ZyfraTooltipOptionsModel } from './zyfra-tooltip.model';\r\n\r\n@Component({\r\n  selector: 'zyfra-tooltip',\r\n  templateUrl: './zyfra-tooltip.component.html',\r\n  encapsulation: ViewEncapsulation.None,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class ZyfraTooltipComponent {\r\n  @HostBinding('style.top.px') get topParam(): number {\r\n    return this.options.top;\r\n  }\r\n  @HostBinding('style.left.px') get leftParam(): number {\r\n    return this.options.left;\r\n  }\r\n\r\n  set options(op: ZyfraTooltipOptionsModel) {\r\n    this._options = op;\r\n    this.hostClasses = op.className;\r\n  }\r\n  get options(): ZyfraTooltipOptionsModel {\r\n    return this._options;\r\n  }\r\n\r\n  get hasTemplateRef(): boolean {\r\n    return this._options.content instanceof TemplateRef;\r\n  }\r\n  @HostBinding('class') hostClasses = '';\r\n\r\n  @Output() close: EventEmitter<boolean> = new EventEmitter();\r\n\r\n  private _options: ZyfraTooltipOptionsModel;\r\n  @HostListener('animationend', ['$event'])\r\n  public animationend(event: AnimationEvent): void {\r\n    if (event.animationName === 'tooltipOut') {\r\n      this.close.emit(true);\r\n    }\r\n  }\r\n}\r\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "accessors": {
        "topParam": {
          "name": "topParam",
          "getSignature": {
            "name": "topParam",
            "type": "number",
            "returnType": "number",
            "line": 20
          }
        },
        "leftParam": {
          "name": "leftParam",
          "getSignature": {
            "name": "leftParam",
            "type": "number",
            "returnType": "number",
            "line": 23
          }
        },
        "options": {
          "name": "options",
          "setSignature": {
            "name": "options",
            "type": "void",
            "deprecated": false,
            "deprecationMessage": "",
            "args": [
              {
                "name": "op",
                "type": "ZyfraTooltipOptionsModel",
                "deprecated": false,
                "deprecationMessage": ""
              }
            ],
            "returnType": "void",
            "line": 27,
            "jsdoctags": [
              {
                "name": "op",
                "type": "ZyfraTooltipOptionsModel",
                "deprecated": false,
                "deprecationMessage": "",
                "tagName": {
                  "text": "param"
                }
              }
            ]
          },
          "getSignature": {
            "name": "options",
            "type": "",
            "returnType": "ZyfraTooltipOptionsModel",
            "line": 31
          }
        },
        "hasTemplateRef": {
          "name": "hasTemplateRef",
          "getSignature": {
            "name": "hasTemplateRef",
            "type": "boolean",
            "returnType": "boolean",
            "line": 35
          }
        }
      },
      "templateData": "<ng-template [ngIf]=\"hasTemplateRef\" [ngIfElse]=\"string\">\r\n  <ng-container *ngTemplateOutlet=\"$any(options.content); context: { $implicit: options.context }\"> </ng-container>\r\n</ng-template>\r\n<ng-template #string>\r\n  {{ $any(options.content) | charLimit: 220 }}\r\n</ng-template>\r\n"
    },
    {
      "name": "ZyfraTreeComponent",
      "id": "component-ZyfraTreeComponent-d32ad56252c00d173b1afde573574151",
      "file": "libs/components/src/lib/tree/zyfra-tree.component.ts",
      "changeDetection": "ChangeDetectionStrategy.OnPush",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "zyfra-tree",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./zyfra-tree.component.html"],
      "viewProviders": [],
      "inputsClass": [
        {
          "name": "ariaLabel",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 60,
          "type": "string"
        },
        {
          "name": "ariaLabelledBy",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 62,
          "type": "string"
        },
        {
          "name": "contextMenu",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 36,
          "type": "any"
        },
        {
          "name": "draggableNodes",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 44,
          "type": "boolean"
        },
        {
          "name": "draggableScope",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 40,
          "type": "any"
        },
        {
          "name": "droppableNodes",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 46,
          "type": "boolean"
        },
        {
          "name": "droppableScope",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 42,
          "type": "any"
        },
        {
          "name": "emptyMessage",
          "defaultValue": "''",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 58,
          "type": "string"
        },
        {
          "name": "enableFilter",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 66,
          "type": "boolean"
        },
        {
          "name": "filterBy",
          "defaultValue": "'label'",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 68,
          "type": "string"
        },
        {
          "name": "filterLocale",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 74,
          "type": "string"
        },
        {
          "name": "filterMode",
          "defaultValue": "'lenient'",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 70,
          "type": "string"
        },
        {
          "name": "filterPlaceholder",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 72,
          "type": "string"
        },
        {
          "name": "indentation",
          "defaultValue": "1.5",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 86,
          "type": "number"
        },
        {
          "name": "items",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 26,
          "type": "TreeNode[]"
        },
        {
          "name": "layout",
          "defaultValue": "'vertical'",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 38,
          "type": "string"
        },
        {
          "name": "loading",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 54,
          "type": "boolean"
        },
        {
          "name": "loadingIcon",
          "defaultValue": "'pi pi-spinner'",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 56,
          "type": "string"
        },
        {
          "name": "maxBufferPx",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 84,
          "type": "number"
        },
        {
          "name": "metaKeySelection",
          "defaultValue": "true",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 48,
          "type": "boolean"
        },
        {
          "name": "minBufferPx",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 82,
          "type": "number"
        },
        {
          "name": "propagateSelectionDown",
          "defaultValue": "true",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 52,
          "type": "boolean"
        },
        {
          "name": "propagateSelectionUp",
          "defaultValue": "true",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 50,
          "type": "boolean"
        },
        {
          "name": "scrollHeight",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 76,
          "type": "string"
        },
        {
          "name": "selection",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 30,
          "type": "any"
        },
        {
          "name": "selectionMode",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 28,
          "type": "string"
        },
        {
          "name": "style",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 32,
          "type": "any"
        },
        {
          "name": "styleClass",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 34,
          "type": "string"
        },
        {
          "name": "trackBy",
          "defaultValue": "(index: number, item: any): any => item",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 88,
          "type": "(index: number, item: any) => any"
        },
        {
          "name": "validateDrop",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 64,
          "type": "boolean"
        },
        {
          "name": "virtualNodeHeight",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 80,
          "type": "string"
        },
        {
          "name": "virtualScroll",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 78,
          "type": "boolean"
        }
      ],
      "outputsClass": [
        {
          "name": "onFilter",
          "defaultValue": "new EventEmitter()",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 24,
          "type": "EventEmitter<any>"
        },
        {
          "name": "onNodeCollapse",
          "defaultValue": "new EventEmitter()",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 18,
          "type": "EventEmitter<any>"
        },
        {
          "name": "onNodeContextMenuSelect",
          "defaultValue": "new EventEmitter()",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 20,
          "type": "EventEmitter<any>"
        },
        {
          "name": "onNodeDrop",
          "defaultValue": "new EventEmitter()",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 22,
          "type": "EventEmitter<any>"
        },
        {
          "name": "onNodeExpand",
          "defaultValue": "new EventEmitter()",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 16,
          "type": "EventEmitter<any>"
        },
        {
          "name": "onNodeSelect",
          "defaultValue": "new EventEmitter()",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 12,
          "type": "EventEmitter<any>"
        },
        {
          "name": "onNodeUnselect",
          "defaultValue": "new EventEmitter()",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 14,
          "type": "EventEmitter<any>"
        },
        {
          "name": "selectionChange",
          "defaultValue": "new EventEmitter()",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 10,
          "type": "EventEmitter<any>"
        }
      ],
      "propertiesClass": [],
      "methodsClass": [
        {
          "name": "onFilterHandler",
          "args": [
            {
              "name": "event",
              "type": "Event",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 114,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [123],
          "jsdoctags": [
            {
              "name": "event",
              "type": "Event",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "onNodeCollapseHandler",
          "args": [
            {
              "name": "event",
              "type": "Event",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 102,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [123],
          "jsdoctags": [
            {
              "name": "event",
              "type": "Event",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "onNodeContextMenuSelectHandler",
          "args": [
            {
              "name": "event",
              "type": "Event",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 106,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [123],
          "jsdoctags": [
            {
              "name": "event",
              "type": "Event",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "onNodeDropHandler",
          "args": [
            {
              "name": "event",
              "type": "Event",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 110,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [123],
          "jsdoctags": [
            {
              "name": "event",
              "type": "Event",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "onNodeExpandHandler",
          "args": [
            {
              "name": "event",
              "type": "Event",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 98,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [123],
          "jsdoctags": [
            {
              "name": "event",
              "type": "Event",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "onNodeSelectHandler",
          "args": [
            {
              "name": "event",
              "type": "Event",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 90,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [123],
          "jsdoctags": [
            {
              "name": "event",
              "type": "Event",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "onNodeUnselectHandler",
          "args": [
            {
              "name": "event",
              "type": "Event",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 94,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [123],
          "jsdoctags": [
            {
              "name": "event",
              "type": "Event",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        }
      ],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import { Component, OnInit, Input, Output, EventEmitter, ChangeDetectionStrategy } from '@angular/core';\r\nimport { TreeNode } from 'primeng/api';\r\n\r\n@Component({\r\n  selector: 'zyfra-tree',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  templateUrl: './zyfra-tree.component.html',\r\n})\r\nexport class ZyfraTreeComponent {\r\n  @Output() selectionChange: EventEmitter<any> = new EventEmitter();\r\n\r\n  @Output() onNodeSelect: EventEmitter<any> = new EventEmitter();\r\n\r\n  @Output() onNodeUnselect: EventEmitter<any> = new EventEmitter();\r\n\r\n  @Output() onNodeExpand: EventEmitter<any> = new EventEmitter();\r\n\r\n  @Output() onNodeCollapse: EventEmitter<any> = new EventEmitter();\r\n\r\n  @Output() onNodeContextMenuSelect: EventEmitter<any> = new EventEmitter();\r\n\r\n  @Output() onNodeDrop: EventEmitter<any> = new EventEmitter();\r\n\r\n  @Output() onFilter: EventEmitter<any> = new EventEmitter();\r\n\r\n  @Input() items: TreeNode[];\r\n\r\n  @Input() selectionMode: string; // single | multipple | checkbox\r\n\r\n  @Input() selection: any;\r\n\r\n  @Input() style: any;\r\n\r\n  @Input() styleClass: string;\r\n\r\n  @Input() contextMenu: any;\r\n\r\n  @Input() layout = 'vertical';\r\n\r\n  @Input() draggableScope: any;\r\n\r\n  @Input() droppableScope: any;\r\n\r\n  @Input() draggableNodes: boolean;\r\n\r\n  @Input() droppableNodes: boolean;\r\n\r\n  @Input() metaKeySelection = true;\r\n\r\n  @Input() propagateSelectionUp = true;\r\n\r\n  @Input() propagateSelectionDown = true;\r\n\r\n  @Input() loading: boolean;\r\n\r\n  @Input() loadingIcon = 'pi pi-spinner';\r\n\r\n  @Input() emptyMessage = '';\r\n\r\n  @Input() ariaLabel: string;\r\n\r\n  @Input() ariaLabelledBy: string;\r\n\r\n  @Input() validateDrop: boolean;\r\n\r\n  @Input() enableFilter: boolean;\r\n\r\n  @Input() filterBy = 'label';\r\n\r\n  @Input() filterMode = 'lenient';\r\n\r\n  @Input() filterPlaceholder: string;\r\n\r\n  @Input() filterLocale: string;\r\n\r\n  @Input() scrollHeight: string;\r\n\r\n  @Input() virtualScroll: boolean;\r\n\r\n  @Input() virtualNodeHeight: string;\r\n\r\n  @Input() minBufferPx: number;\r\n\r\n  @Input() maxBufferPx: number;\r\n\r\n  @Input() indentation = 1.5;\r\n\r\n  @Input() trackBy = (index: number, item: any): any => item;\r\n\r\n  public onNodeSelectHandler(event: Event): void {\r\n    this.onNodeSelect.emit(event);\r\n  }\r\n\r\n  public onNodeUnselectHandler(event: Event): void {\r\n    this.onNodeUnselect.emit(event);\r\n  }\r\n\r\n  public onNodeExpandHandler(event: Event): void {\r\n    this.onNodeExpand.emit(event);\r\n  }\r\n\r\n  public onNodeCollapseHandler(event: Event): void {\r\n    this.onNodeCollapse.emit(event);\r\n  }\r\n\r\n  public onNodeContextMenuSelectHandler(event: Event): void {\r\n    this.onNodeContextMenuSelect.emit(event);\r\n  }\r\n\r\n  public onNodeDropHandler(event: Event): void {\r\n    this.onNodeDrop.emit(event);\r\n  }\r\n\r\n  public onFilterHandler(event: Event): void {\r\n    this.onFilter.emit(event);\r\n  }\r\n}\r\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "templateData": "<p-tree\r\n  [value]=\"items\"\r\n  [selectionMode]=\"selectionMode\"\r\n  [(selection)]=\"selection\"\r\n  [style]=\"style\"\r\n  [styleClass]=\"styleClass\"\r\n  [contextMenu]=\"contextMenu\"\r\n  [layout]=\"layout\"\r\n  [draggableScope]=\"draggableScope\"\r\n  [droppableScope]=\"droppableScope\"\r\n  [draggableNodes]=\"draggableNodes\"\r\n  [droppableNodes]=\"droppableNodes\"\r\n  [metaKeySelection]=\"metaKeySelection\"\r\n  [propagateSelectionUp]=\"propagateSelectionUp\"\r\n  [propagateSelectionDown]=\"propagateSelectionDown\"\r\n  [loading]=\"loading\"\r\n  [loadingIcon]=\"loadingIcon\"\r\n  [emptyMessage]=\"emptyMessage\"\r\n  [ariaLabel]=\"ariaLabel\"\r\n  [ariaLabelledBy]=\"ariaLabelledBy\"\r\n  [validateDrop]=\"validateDrop\"\r\n  [filter]=\"enableFilter\"\r\n  [filterBy]=\"filterBy\"\r\n  [filterMode]=\"filterMode\"\r\n  [filterPlaceholder]=\"filterPlaceholder\"\r\n  [filterLocale]=\"filterLocale\"\r\n  [scrollHeight]=\"scrollHeight\"\r\n  [virtualScroll]=\"virtualScroll\"\r\n  [virtualNodeHeight]=\"virtualNodeHeight\"\r\n  [minBufferPx]=\"minBufferPx\"\r\n  [maxBufferPx]=\"maxBufferPx\"\r\n  [trackBy]=\"trackBy\"\r\n  [indentation]=\"indentation\"\r\n  (onNodeSelect)=\"onNodeSelectHandler($event)\"\r\n  (onNodeUnselect)=\"onNodeUnselectHandler($event)\"\r\n  (onNodeExpand)=\"onNodeExpandHandler($event)\"\r\n  (onNodeCollapse)=\"onNodeCollapseHandler($event)\"\r\n  (onNodeContextMenuSelect)=\"onNodeContextMenuSelectHandler($event)\"\r\n  (onNodeDrop)=\"onNodeDropHandler($event)\"\r\n  (onFilter)=\"onFilterHandler($event)\"\r\n></p-tree>\r\n"
    },
    {
      "name": "ZyfraTreeTableCellEditorComponent",
      "id": "component-ZyfraTreeTableCellEditorComponent-5d3eece6c1461df3d22df97384be477d",
      "file": "libs/components/src/lib/tree-table/tree-table-cell-editor/tree-table-cell-editor.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [
        {
          "name": "{\n    provide: TTEditableColumn, useFactory: (treeTableEditableColumnDirective): TTEditableColumn => treeTableEditableColumnDirective, deps: [ZyfraTreeTableEditableColumnDirective],\n}",
          "type": "directive"
        }
      ],
      "selector": "zyfra-tree-table-cell-editor",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./tree-table-cell-editor.component.html"],
      "viewProviders": [],
      "inputsClass": [
        {
          "name": "value",
          "defaultValue": "''",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 31,
          "type": "string"
        }
      ],
      "outputsClass": [
        {
          "name": "valueChange",
          "defaultValue": "new EventEmitter<string>()",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 32,
          "type": "EventEmitter"
        }
      ],
      "propertiesClass": [
        {
          "name": "inputTemplate",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "TemplateRef<>",
          "optional": false,
          "description": "",
          "line": 34
        },
        {
          "name": "templates",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "QueryList<BaseTableTemplateDirective>",
          "optional": false,
          "description": "",
          "line": 29,
          "decorators": [
            {
              "name": "ContentChildren",
              "stringifiedArguments": "BaseTableTemplateDirective"
            }
          ]
        }
      ],
      "methodsClass": [
        {
          "name": "ngAfterContentInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 40,
          "deprecated": false,
          "deprecationMessage": ""
        },
        {
          "name": "stopPropagation",
          "args": [
            {
              "name": "event",
              "type": "MouseEvent",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 36,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [123],
          "jsdoctags": [
            {
              "name": "event",
              "type": "MouseEvent",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        }
      ],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import {\r\n  AfterContentInit,\r\n  Component,\r\n  ContentChildren,\r\n  EventEmitter,\r\n  Input,\r\n  Output,\r\n  QueryList,\r\n  TemplateRef,\r\n} from '@angular/core';\r\nimport { TTEditableColumn } from 'primeng/treetable';\r\nimport { ZyfraTreeTableEditableColumnDirective } from '../directives/tree-table-editable-column.directive';\r\nimport { BaseTableTemplateDirective } from '../../@core/base-table/directives/base-table-template.directive';\r\n\r\n// eslint-disable-next-line @angular-eslint/prefer-on-push-component-change-detection\r\n@Component({\r\n  selector: 'zyfra-tree-table-cell-editor',\r\n  templateUrl: './tree-table-cell-editor.component.html',\r\n  providers: [\r\n    {\r\n      provide: TTEditableColumn,\r\n      useFactory: (treeTableEditableColumnDirective): TTEditableColumn => treeTableEditableColumnDirective,\r\n      deps: [ZyfraTreeTableEditableColumnDirective],\r\n    },\r\n  ],\r\n  // changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class ZyfraTreeTableCellEditorComponent implements AfterContentInit {\r\n  @ContentChildren(BaseTableTemplateDirective) templates: QueryList<BaseTableTemplateDirective>;\r\n\r\n  @Input() value = '';\r\n  @Output() valueChange = new EventEmitter<string>();\r\n\r\n  inputTemplate: TemplateRef<unknown>;\r\n\r\n  public stopPropagation(event: MouseEvent): void {\r\n    event.stopPropagation();\r\n  }\r\n\r\n  ngAfterContentInit(): void {\r\n    this.templates.forEach(item => {\r\n      switch (item.getType()) {\r\n        case 'input':\r\n          this.inputTemplate = item.template;\r\n          break;\r\n      }\r\n    });\r\n  }\r\n}\r\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "implements": ["AfterContentInit"],
      "templateData": "<p-treeTableCellEditor>\r\n  <ng-template pTemplate=\"input\">\r\n    <ng-container *ngIf=\"inputTemplate; else defaultInputTemplate\">\r\n      <ng-container *ngTemplateOutlet=\"inputTemplate\"></ng-container>\r\n    </ng-container>\r\n\r\n    <ng-template #defaultInputTemplate>\r\n      <input\r\n        type=\"text\"\r\n        [value]=\"value\"\r\n        (input)=\"valueChange.emit($any($event.target).value)\"\r\n        (click)=\"stopPropagation($event)\"\r\n      />\r\n    </ng-template>\r\n  </ng-template>\r\n\r\n  <ng-template pTemplate=\"output\">\r\n    <ng-content></ng-content>\r\n  </ng-template>\r\n</p-treeTableCellEditor>\r\n"
    },
    {
      "name": "ZyfraTreeTableCheckboxComponent",
      "id": "component-ZyfraTreeTableCheckboxComponent-e1a09f6c045cd4ae574ca8d1804d2e5e",
      "file": "libs/components/src/lib/tree-table/tree-table-checkbox/tree-table-checkbox.component.ts",
      "changeDetection": "ChangeDetectionStrategy.OnPush",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "zyfra-tree-table-checkbox",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./tree-table-checkbox.component.html"],
      "viewProviders": [],
      "inputsClass": [
        {
          "name": "disabled",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 10,
          "type": "boolean"
        },
        {
          "name": "value",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 11,
          "type": "any"
        }
      ],
      "outputsClass": [],
      "propertiesClass": [],
      "methodsClass": [
        {
          "name": "onClick",
          "args": [
            {
              "name": "event",
              "type": "Event",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 15,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [123],
          "jsdoctags": [
            {
              "name": "event",
              "type": "Event",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        }
      ],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import { ChangeDetectionStrategy, Component, Input, Optional } from '@angular/core';\r\nimport { ZyfraTreeTableSelectableRowDirective } from '../directives/tree-table-selectable-row.directive';\r\n\r\n@Component({\r\n  selector: 'zyfra-tree-table-checkbox',\r\n  templateUrl: './tree-table-checkbox.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class ZyfraTreeTableCheckboxComponent {\r\n  @Input() disabled: boolean;\r\n  @Input('value') rowNode: any;\r\n\r\n  constructor(@Optional() private selectableRowDirective: ZyfraTreeTableSelectableRowDirective) {}\r\n\r\n  public onClick(event: Event): void {\r\n    if (this.selectableRowDirective) {\r\n      event.stopPropagation();\r\n    }\r\n  }\r\n}\r\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "deprecated": false,
        "deprecationMessage": "",
        "args": [
          {
            "name": "selectableRowDirective",
            "type": "ZyfraTreeTableSelectableRowDirective",
            "deprecated": false,
            "deprecationMessage": ""
          }
        ],
        "line": 11,
        "jsdoctags": [
          {
            "name": "selectableRowDirective",
            "type": "ZyfraTreeTableSelectableRowDirective",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      "templateData": "<p-treeTableCheckbox\r\n  [value]=\"rowNode\"\r\n  [disabled]=\"disabled\"\r\n  (click)=\"onClick($event)\"\r\n></p-treeTableCheckbox>\r\n"
    },
    {
      "name": "ZyfraTreeTableComponent",
      "id": "component-ZyfraTreeTableComponent-3690c7641df076d782fbe2485993038b",
      "file": "libs/components/src/lib/tree-table/tree-table.component.ts",
      "changeDetection": "ChangeDetectionStrategy.OnPush",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [
        {
          "name": "TreeTableService"
        },
        {
          "name": "{\n    provide: TargetTableToken, useFactory: (zyfraTable: ZyfraTreeTableComponent): ZyfraTreeTableComponent => zyfraTable, deps: [ZyfraTreeTableComponent],\n}",
          "type": "component"
        },
        {
          "name": "{\n    provide: TreeTable, useFactory: (zyfraTable: ZyfraTreeTableComponent): TreeTable => zyfraTable.table, deps: [ZyfraTreeTableComponent],\n}",
          "type": "component",
          "ns": "{\n    provide: TreeTable, useFactory: (zyfraTable: ZyfraTreeTableComponent): TreeTable => zyfraTable"
        }
      ],
      "selector": "zyfra-tree-table",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./tree-table.component.html"],
      "viewProviders": [],
      "inputsClass": [
        {
          "name": "filters",
          "defaultValue": "{}",
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "An array of FilterMetadata objects to provide external filters",
          "description": "<p>An array of FilterMetadata objects to provide external filters</p>\n",
          "line": 47,
          "type": "literal type"
        },
        {
          "name": "rowTrackBy",
          "defaultValue": "(index: number, item: any) => item",
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "Function to optimize the dom operations by delegating to ngForTrackBy, default algoritm checks for object identity",
          "description": "<p>Function to optimize the dom operations by delegating to ngForTrackBy, default algoritm checks for object identity</p>\n",
          "line": 79,
          "type": "function"
        },
        {
          "name": "alwaysShowPaginator",
          "defaultValue": "true",
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "Whether to show it even there is only one page",
          "description": "<p>Whether to show it even there is only one page</p>\n",
          "line": 104,
          "type": "boolean",
          "inheritance": {
            "file": "ZyfraBaseTableComponent"
          }
        },
        {
          "name": "autoLayout",
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "Whether the cell widths scale according to their content or not",
          "description": "<p>Whether the cell widths scale according to their content or not</p>\n",
          "line": 72,
          "type": "boolean",
          "inheritance": {
            "file": "ZyfraBaseTableComponent"
          }
        },
        {
          "name": "columnResizeMode",
          "defaultValue": "'fit'",
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "Defines whether the overall table width should change on column resize, valid values are \"fit\" and \"expand\"",
          "description": "<p>Defines whether the overall table width should change on column resize, valid values are &quot;fit&quot; and &quot;expand&quot;</p>\n",
          "line": 233,
          "type": "\"fit\" | \"expand\"",
          "inheritance": {
            "file": "ZyfraBaseTableComponent"
          }
        },
        {
          "name": "columns",
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "An array of objects to represent dynamic columns",
          "description": "<p>An array of objects to represent dynamic columns</p>\n",
          "line": 52,
          "type": "any[]",
          "inheritance": {
            "file": "ZyfraBaseTableComponent"
          }
        },
        {
          "name": "compareSelectionBy",
          "defaultValue": "'deepEquals'",
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "Algorithm to define if a row is selected,\r\nvalid values are \"equals\" that compares by reference and \"deepEquals\" that compares all fields",
          "description": "<p>Algorithm to define if a row is selected,\nvalid values are &quot;equals&quot; that compares by reference and &quot;deepEquals&quot; that compares all fields</p>\n",
          "line": 177,
          "type": "\"deepEquals\" | \"equals\"",
          "inheritance": {
            "file": "ZyfraBaseTableComponent"
          }
        },
        {
          "name": "contextMenu",
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "Local ng-template varilable of a ContextMenu",
          "description": "<p>Local ng-template varilable of a ContextMenu</p>\n",
          "line": 241,
          "type": "any",
          "inheritance": {
            "file": "ZyfraBaseTableComponent"
          }
        },
        {
          "name": "contextMenuSelection",
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "Context menu selection",
          "description": "<p>Context menu selection</p>\n",
          "line": 139,
          "type": "any",
          "inheritance": {
            "file": "ZyfraBaseTableComponent"
          }
        },
        {
          "name": "contextMenuSelectionMode",
          "defaultValue": "'separate'",
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "Context menu selection mode",
          "description": "<p>Context menu selection mode</p>\n",
          "line": 143,
          "type": "\"separate\" | \"joint\"",
          "inheritance": {
            "file": "ZyfraBaseTableComponent"
          }
        },
        {
          "name": "currentPageReportTemplate",
          "defaultValue": "'{currentPage} of {totalPages}'",
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "Template of the current page report element.\r\nAvailable placeholders are {currentPage},{totalPages},{rows},{first},{last} and {totalRecords}",
          "description": "<p>Template of the current page report element.\nAvailable placeholders are {currentPage},{totalPages},{rows},{first},{last} and {totalRecords}</p>\n",
          "line": 119,
          "type": "string",
          "inheritance": {
            "file": "ZyfraBaseTableComponent"
          }
        },
        {
          "name": "customSort",
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "Whether to use the default sorting or a custom one using sortFunction",
          "description": "<p>Whether to use the default sorting or a custom one using sortFunction</p>\n",
          "line": 159,
          "type": "boolean",
          "inheritance": {
            "file": "ZyfraBaseTableComponent"
          }
        },
        {
          "name": "dataKey",
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "A property to uniquely identify a record in data",
          "description": "<p>A property to uniquely identify a record in data</p>\n",
          "line": 167,
          "type": "string",
          "inheritance": {
            "file": "ZyfraBaseTableComponent"
          }
        },
        {
          "name": "defaultSortOrder",
          "defaultValue": "1",
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "Sort order to use when an unsorted column gets sorted by user interaction",
          "description": "<p>Sort order to use when an unsorted column gets sorted by user interaction</p>\n",
          "line": 147,
          "type": "number",
          "inheritance": {
            "file": "ZyfraBaseTableComponent"
          }
        },
        {
          "name": "filterDelay",
          "defaultValue": "300",
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "Delay in milliseconds before filtering the data",
          "description": "<p>Delay in milliseconds before filtering the data</p>\n",
          "line": 249,
          "type": "number",
          "inheritance": {
            "file": "ZyfraBaseTableComponent"
          }
        },
        {
          "name": "filterLocale",
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "Locale to use in filtering. The default locale is the host environment's current locale.",
          "description": "<p>Locale to use in filtering. The default locale is the host environment&#39;s current locale.</p>\n",
          "line": 257,
          "type": "string",
          "inheritance": {
            "file": "ZyfraBaseTableComponent"
          }
        },
        {
          "name": "filterMode",
          "defaultValue": "'lenient'",
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "Mode for filtering valid values are \"lenient\" and \"strict\". Default is lenient.",
          "description": "<p>Mode for filtering valid values are &quot;lenient&quot; and &quot;strict&quot;. Default is lenient.</p>\n",
          "line": 253,
          "type": "\"lenient\" | \"strict\"",
          "inheritance": {
            "file": "ZyfraBaseTableComponent"
          }
        },
        {
          "name": "first",
          "defaultValue": "0",
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "Index of the first row to be displayed",
          "description": "<p>Index of the first row to be displayed</p>\n",
          "line": 92,
          "type": "number",
          "inheritance": {
            "file": "ZyfraBaseTableComponent"
          }
        },
        {
          "name": "frozenColumns",
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "An array of objects to represent dynamic columns that are frozen",
          "description": "<p>An array of objects to represent dynamic columns that are frozen</p>\n",
          "line": 225,
          "type": "any[]",
          "inheritance": {
            "file": "ZyfraBaseTableComponent"
          }
        },
        {
          "name": "frozenWidth",
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "Width of the frozen columns container",
          "description": "<p>Width of the frozen columns container</p>\n",
          "line": 221,
          "type": "string",
          "inheritance": {
            "file": "ZyfraBaseTableComponent"
          }
        },
        {
          "name": "globalFilterFields",
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "An array of fields as string to use in global filtering",
          "description": "<p>An array of fields as string to use in global filtering</p>\n",
          "line": 245,
          "type": "string[]",
          "inheritance": {
            "file": "ZyfraBaseTableComponent"
          }
        },
        {
          "name": "lazy",
          "defaultValue": "false",
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "Defines if data is loaded and interacted with in lazy manner",
          "description": "<p>Defines if data is loaded and interacted with in lazy manner</p>\n",
          "line": 76,
          "type": "boolean",
          "inheritance": {
            "file": "ZyfraBaseTableComponent"
          }
        },
        {
          "name": "lazyLoadOnInit",
          "defaultValue": "true",
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "Whether to call lazy loading on initialization",
          "description": "<p>Whether to call lazy loading on initialization</p>\n",
          "line": 80,
          "type": "boolean",
          "inheritance": {
            "file": "ZyfraBaseTableComponent"
          }
        },
        {
          "name": "loading",
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "Displays a loader to indicate data load is in progress",
          "description": "<p>Displays a loader to indicate data load is in progress</p>\n",
          "line": 185,
          "type": "boolean",
          "inheritance": {
            "file": "ZyfraBaseTableComponent"
          }
        },
        {
          "name": "loadingIcon",
          "defaultValue": "'pi pi-spinner'",
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "The icon to show while indicating data load is in progress",
          "description": "<p>The icon to show while indicating data load is in progress</p>\n",
          "line": 189,
          "type": "string",
          "inheritance": {
            "file": "ZyfraBaseTableComponent"
          }
        },
        {
          "name": "maxBufferPx",
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "Configures how much buffer space to render back up to when it detects that more buffer is required",
          "description": "<p>Configures how much buffer space to render back up to when it detects that more buffer is required</p>\n",
          "line": 217,
          "type": "number",
          "inheritance": {
            "file": "ZyfraBaseTableComponent"
          }
        },
        {
          "name": "metaKeySelection",
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "Defines whether metaKey is should be considered for the selection.\r\nOn touch enabled devices, metaKeySelection is turned off automatically",
          "description": "<p>Defines whether metaKey is should be considered for the selection.\nOn touch enabled devices, metaKeySelection is turned off automatically</p>\n",
          "line": 172,
          "type": "boolean",
          "inheritance": {
            "file": "ZyfraBaseTableComponent"
          }
        },
        {
          "name": "minBufferPx",
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "Minimum amount of content buffer (in pixels) that the viewport must render",
          "description": "<p>Minimum amount of content buffer (in pixels) that the viewport must render</p>\n",
          "line": 213,
          "type": "number",
          "inheritance": {
            "file": "ZyfraBaseTableComponent"
          }
        },
        {
          "name": "multiSortMeta",
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "An array of SortMeta objects to sort the data by default in multiple sort mode",
          "description": "<p>An array of SortMeta objects to sort the data by default in multiple sort mode</p>\n",
          "line": 273,
          "type": "SortMeta[]",
          "inheritance": {
            "file": "ZyfraBaseTableComponent"
          }
        },
        {
          "name": "pageLinks",
          "defaultValue": "5",
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "Number of total records, defaults to length of value when not defined",
          "description": "<p>Number of total records, defaults to length of value when not defined</p>\n",
          "line": 96,
          "type": "number",
          "inheritance": {
            "file": "ZyfraBaseTableComponent"
          }
        },
        {
          "name": "paginator",
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "When specified as true, enables the pagination",
          "description": "<p>When specified as true, enables the pagination</p>\n",
          "line": 84,
          "type": "boolean",
          "inheritance": {
            "file": "ZyfraBaseTableComponent"
          }
        },
        {
          "name": "paginatorDropdownAppendTo",
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "Target element to attach the paginator dropdown overlay,\r\nvalid values are \"body\" or a local ng-template variable of another element\r\n(note: use binding with brackets for template variables, e.g. [appendTo]=\"mydiv\" for a div element having #mydiv as variable name)",
          "description": "<p>Target element to attach the paginator dropdown overlay,\nvalid values are &quot;body&quot; or a local ng-template variable of another element\n(note: use binding with brackets for template variables, e.g. [appendTo]=&quot;mydiv&quot; for a div element having #mydiv as variable name)</p>\n",
          "line": 114,
          "type": "any",
          "inheritance": {
            "file": "ZyfraBaseTableComponent"
          }
        },
        {
          "name": "paginatorPosition",
          "defaultValue": "'bottom'",
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "Position of the paginator, options are \"top\",\"bottom\" or \"both\"",
          "description": "<p>Position of the paginator, options are &quot;top&quot;,&quot;bottom&quot; or &quot;both&quot;</p>\n",
          "line": 108,
          "type": "\"top\" | \"bottom\" | \"both\"",
          "inheritance": {
            "file": "ZyfraBaseTableComponent"
          }
        },
        {
          "name": "reorderableColumns",
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "When enabled, columns can be reordered using drag and drop",
          "description": "<p>When enabled, columns can be reordered using drag and drop</p>\n",
          "line": 237,
          "type": "boolean",
          "inheritance": {
            "file": "ZyfraBaseTableComponent"
          }
        },
        {
          "name": "resetPageOnSort",
          "defaultValue": "true",
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "When true, resets paginator to first page after sorting",
          "description": "<p>When true, resets paginator to first page after sorting</p>\n",
          "line": 155,
          "type": "boolean",
          "inheritance": {
            "file": "ZyfraBaseTableComponent"
          }
        },
        {
          "name": "resizableColumns",
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "When enabled, columns can be resized using drag and drop",
          "description": "<p>When enabled, columns can be resized using drag and drop</p>\n",
          "line": 229,
          "type": "boolean",
          "inheritance": {
            "file": "ZyfraBaseTableComponent"
          }
        },
        {
          "name": "rowHover",
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "Adds hover effect to rows without the need for selectionMode",
          "description": "<p>Adds hover effect to rows without the need for selectionMode</p>\n",
          "line": 181,
          "type": "boolean",
          "inheritance": {
            "file": "ZyfraBaseTableComponent"
          }
        },
        {
          "name": "rows",
          "defaultValue": "10",
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "Number of rows to display per page",
          "description": "<p>Number of rows to display per page</p>\n",
          "line": 88,
          "type": "number",
          "inheritance": {
            "file": "ZyfraBaseTableComponent"
          }
        },
        {
          "name": "rowsPerPageOptions",
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "Number of page links to display in paginator",
          "description": "<p>Number of page links to display in paginator</p>\n",
          "line": 100,
          "type": "any[]",
          "inheritance": {
            "file": "ZyfraBaseTableComponent"
          }
        },
        {
          "name": "scrollable",
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "When specifies, enables horizontal and/or vertical scrolling",
          "description": "<p>When specifies, enables horizontal and/or vertical scrolling</p>\n",
          "line": 197,
          "type": "boolean",
          "inheritance": {
            "file": "ZyfraBaseTableComponent"
          }
        },
        {
          "name": "scrollHeight",
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "Height of the scroll viewport in fixed pixels or the \"flex\" keyword for a dynamic size",
          "description": "<p>Height of the scroll viewport in fixed pixels or the &quot;flex&quot; keyword for a dynamic size</p>\n",
          "line": 201,
          "type": "string",
          "inheritance": {
            "file": "ZyfraBaseTableComponent"
          }
        },
        {
          "name": "selection",
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "Selected row in single mode or an array of values in multiple mode",
          "description": "<p>Selected row in single mode or an array of values in multiple mode</p>\n",
          "line": 277,
          "type": "any",
          "inheritance": {
            "file": "ZyfraBaseTableComponent"
          }
        },
        {
          "name": "selectionMode",
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "Specifies the selection mode, valid values are \"single\" and \"multiple\"",
          "description": "<p>Specifies the selection mode, valid values are &quot;single&quot; and &quot;multiple&quot;</p>\n",
          "line": 163,
          "type": "\"single\" | \"multiple\"",
          "inheritance": {
            "file": "ZyfraBaseTableComponent"
          }
        },
        {
          "name": "showCurrentPageReport",
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "Whether to display current page report",
          "description": "<p>Whether to display current page report</p>\n",
          "line": 123,
          "type": "boolean",
          "inheritance": {
            "file": "ZyfraBaseTableComponent"
          }
        },
        {
          "name": "showFirstLastIcon",
          "defaultValue": "true",
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "When enabled, icons are displayed on paginator to go first and last page",
          "description": "<p>When enabled, icons are displayed on paginator to go first and last page</p>\n",
          "line": 131,
          "type": "boolean",
          "inheritance": {
            "file": "ZyfraBaseTableComponent"
          }
        },
        {
          "name": "showJumpToPageDropdown",
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "Whether to display a dropdown to navigate to any page",
          "description": "<p>Whether to display a dropdown to navigate to any page</p>\n",
          "line": 127,
          "type": "boolean",
          "inheritance": {
            "file": "ZyfraBaseTableComponent"
          }
        },
        {
          "name": "showLoader",
          "defaultValue": "true",
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "Whether to show the loading mask when loading property is true",
          "description": "<p>Whether to show the loading mask when loading property is true</p>\n",
          "line": 193,
          "type": "boolean",
          "inheritance": {
            "file": "ZyfraBaseTableComponent"
          }
        },
        {
          "name": "showPageLinks",
          "defaultValue": "true",
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "Whether to show page links",
          "description": "<p>Whether to show page links</p>\n",
          "line": 135,
          "type": "boolean",
          "inheritance": {
            "file": "ZyfraBaseTableComponent"
          }
        },
        {
          "name": "sortField",
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "Name of the field to sort data by default",
          "description": "<p>Name of the field to sort data by default</p>\n",
          "line": 265,
          "type": "string",
          "inheritance": {
            "file": "ZyfraBaseTableComponent"
          }
        },
        {
          "name": "sortMode",
          "defaultValue": "'single'",
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "Defines whether sorting works on single column or on multiple columns",
          "description": "<p>Defines whether sorting works on single column or on multiple columns</p>\n",
          "line": 151,
          "type": "\"single\" | \"multiple\"",
          "inheritance": {
            "file": "ZyfraBaseTableComponent"
          }
        },
        {
          "name": "sortOrder",
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "Order to sort when default sorting is enabled",
          "description": "<p>Order to sort when default sorting is enabled</p>\n",
          "line": 269,
          "type": "number",
          "inheritance": {
            "file": "ZyfraBaseTableComponent"
          }
        },
        {
          "name": "stripedMode",
          "defaultValue": "false",
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "When true turns on striped display mode",
          "description": "<p>When true turns on striped display mode</p>\n",
          "line": 281,
          "type": "boolean",
          "inheritance": {
            "file": "ZyfraBaseTableComponent"
          }
        },
        {
          "name": "style",
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "Inline style of the component",
          "description": "<p>Inline style of the component</p>\n",
          "line": 56,
          "type": "any",
          "inheritance": {
            "file": "ZyfraBaseTableComponent"
          }
        },
        {
          "name": "styleClass",
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "Style class of the component",
          "description": "<p>Style class of the component</p>\n",
          "line": 60,
          "type": "string",
          "inheritance": {
            "file": "ZyfraBaseTableComponent"
          }
        },
        {
          "name": "tableStyle",
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "Inline style of the table",
          "description": "<p>Inline style of the table</p>\n",
          "line": 64,
          "type": "Record<string | string>",
          "inheritance": {
            "file": "ZyfraBaseTableComponent"
          }
        },
        {
          "name": "tableStyleClass",
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "Style class of the table",
          "description": "<p>Style class of the table</p>\n",
          "line": 68,
          "type": "string",
          "inheritance": {
            "file": "ZyfraBaseTableComponent"
          }
        },
        {
          "name": "title",
          "defaultValue": "''",
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "Table title",
          "description": "<p>Table title</p>\n",
          "line": 44,
          "type": "string",
          "inheritance": {
            "file": "ZyfraBaseTableComponent"
          }
        },
        {
          "name": "totalRecords",
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "Number of total records, defaults to length of value when not defined",
          "description": "<p>Number of total records, defaults to length of value when not defined</p>\n",
          "line": 261,
          "type": "number",
          "inheritance": {
            "file": "ZyfraBaseTableComponent"
          }
        },
        {
          "name": "value",
          "defaultValue": "[]",
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "An array of objects to display",
          "description": "<p>An array of objects to display</p>\n",
          "line": 48,
          "type": "T[]",
          "inheritance": {
            "file": "ZyfraBaseTableComponent"
          }
        },
        {
          "name": "virtualRowHeight",
          "defaultValue": "32",
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "Height of a row to use in calculations of virtual scrolling",
          "description": "<p>Height of a row to use in calculations of virtual scrolling</p>\n",
          "line": 209,
          "type": "number",
          "inheritance": {
            "file": "ZyfraBaseTableComponent"
          }
        },
        {
          "name": "virtualScroll",
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "Whether the data should be loaded on demand during scroll",
          "description": "<p>Whether the data should be loaded on demand during scroll</p>\n",
          "line": 205,
          "type": "boolean",
          "inheritance": {
            "file": "ZyfraBaseTableComponent"
          }
        }
      ],
      "outputsClass": [
        {
          "name": "activeElementChange",
          "defaultValue": "new EventEmitter<T>()",
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "\n\nChange active element\n",
          "description": "<p>Change active element</p>\n",
          "line": 54,
          "type": "EventEmitter<T>",
          "inheritance": {
            "file": "ZyfraBaseTableComponent"
          }
        },
        {
          "name": "contextMenuSelectionChange",
          "defaultValue": "new EventEmitter<unknown>()",
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "\n\nCallback to invoke when selection of context menu selection is changed\n",
          "description": "<p>Callback to invoke when selection of context menu selection is changed</p>\n",
          "line": 74,
          "type": "EventEmitter"
        },
        {
          "name": "onNodeCollapse",
          "defaultValue": "new EventEmitter<{ originalEvent: Event; node: unknown }>()",
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "\n\nCallback to invoke when a node is collapsed\n",
          "description": "<p>Callback to invoke when a node is collapsed</p>\n",
          "line": 62,
          "type": "EventEmitter"
        },
        {
          "name": "onNodeExpand",
          "defaultValue": "new EventEmitter<{ originalEvent: Event; node: unknown }>()",
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "\n\nCallback to invoke when a node is expanded\n",
          "description": "<p>Callback to invoke when a node is expanded</p>\n",
          "line": 58,
          "type": "EventEmitter"
        },
        {
          "name": "onNodeSelect",
          "defaultValue": "new EventEmitter<{ originalEvent: Event; node: unknown }>()",
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "\n\nCallback to invoke when a node is selected\n",
          "description": "<p>Callback to invoke when a node is selected</p>\n",
          "line": 66,
          "type": "EventEmitter"
        },
        {
          "name": "onNodeUnselect",
          "defaultValue": "new EventEmitter<{ originalEvent: Event; node: unknown }>()",
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "\n\nCallback to invoke when a node is unselected\n",
          "description": "<p>Callback to invoke when a node is unselected</p>\n",
          "line": 70,
          "type": "EventEmitter"
        },
        {
          "name": "colReorder",
          "defaultValue": "new EventEmitter<{ dragIndex: number; dropIndex: number; columns: string[] }>()",
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "\n\nCallback to invoke when a column is reordered\n",
          "description": "<p>Callback to invoke when a column is reordered</p>\n",
          "line": 331,
          "type": "EventEmitter",
          "inheritance": {
            "file": "ZyfraBaseTableComponent"
          }
        },
        {
          "name": "colResize",
          "defaultValue": "new EventEmitter<{ element: unknown; delta: unknown }>()",
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "\n\nCallback to invoke when a column is resized\n",
          "description": "<p>Callback to invoke when a column is resized</p>\n",
          "line": 326,
          "type": "EventEmitter",
          "inheritance": {
            "file": "ZyfraBaseTableComponent"
          }
        },
        {
          "name": "contextMenuSelect",
          "defaultValue": "new EventEmitter<{ originalEvent: Event; node: unknown }>()",
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "\n\nCallback to invoke when a node is selected with right click\n",
          "description": "<p>Callback to invoke when a node is selected with right click</p>\n",
          "line": 322,
          "type": "EventEmitter",
          "inheritance": {
            "file": "ZyfraBaseTableComponent"
          }
        },
        {
          "name": "editCancel",
          "defaultValue": "new EventEmitter<{ column: unknown; data: unknown }>()",
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "\n\nCallback to invoke when cell edit is cancelled with escape key\n",
          "description": "<p>Callback to invoke when cell edit is cancelled with escape key</p>\n",
          "line": 343,
          "type": "EventEmitter",
          "inheritance": {
            "file": "ZyfraBaseTableComponent"
          }
        },
        {
          "name": "editComplete",
          "defaultValue": "new EventEmitter<{ column: unknown; data: unknown }>()",
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "\n\nCallback to invoke when cell edit is completed\n",
          "description": "<p>Callback to invoke when cell edit is completed</p>\n",
          "line": 339,
          "type": "EventEmitter",
          "inheritance": {
            "file": "ZyfraBaseTableComponent"
          }
        },
        {
          "name": "editInit",
          "defaultValue": "new EventEmitter<{ column: unknown; data: unknown; originalEvent: Event }>()",
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "\n\nCallback to invoke when a cell switches to edit mode.\n",
          "description": "<p>Callback to invoke when a cell switches to edit mode.</p>\n",
          "line": 335,
          "type": "EventEmitter",
          "inheritance": {
            "file": "ZyfraBaseTableComponent"
          }
        },
        {
          "name": "headerCheckboxToggle",
          "defaultValue": "new EventEmitter<{ originalEvent: Event; checked: boolean }>()",
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "\n\nCallback to invoke when state of header checkbox changes\n",
          "description": "<p>Callback to invoke when state of header checkbox changes</p>\n",
          "line": 347,
          "type": "EventEmitter",
          "inheritance": {
            "file": "ZyfraBaseTableComponent"
          }
        },
        {
          "name": "lazyLoad",
          "defaultValue": "new EventEmitter<{\r\n    first: number;\r\n    rows: number;\r\n    sortField: string;\r\n    sortOrder: SortOrder;\r\n    multiSortMeta: SortMeta[];\r\n    filters: Record<string, unknown>;\r\n    globalFilter: unknown;\r\n  }>()",
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "\n\nCallback to invoke when paging, sorting or filtering happens in lazy mode\n",
          "description": "<p>Callback to invoke when paging, sorting or filtering happens in lazy mode</p>\n",
          "line": 305,
          "type": "EventEmitter",
          "inheritance": {
            "file": "ZyfraBaseTableComponent"
          }
        },
        {
          "name": "onFilter",
          "defaultValue": "new EventEmitter<{ filters: Record<string, unknown>; filteredValue: unknown }>()",
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "\n\nCallback to invoke when data is filtered\n",
          "description": "<p>Callback to invoke when data is filtered</p>\n",
          "line": 288,
          "type": "EventEmitter",
          "inheritance": {
            "file": "ZyfraBaseTableComponent"
          }
        },
        {
          "name": "onSort",
          "defaultValue": "new EventEmitter<{\r\n    field: string;\r\n    order: SortOrder;\r\n    multisortmeta: SortMeta[];\r\n  } | null>()",
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "\n\nCallback to invoke when a column gets sorted\n",
          "description": "<p>Callback to invoke when a column gets sorted</p>\n",
          "line": 296,
          "type": "EventEmitter",
          "inheritance": {
            "file": "ZyfraBaseTableComponent"
          }
        },
        {
          "name": "page",
          "defaultValue": "new EventEmitter<{ first: number; rows: number }>()",
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "\n\nCallback to invoke when pagination occurs\n",
          "description": "<p>Callback to invoke when pagination occurs</p>\n",
          "line": 292,
          "type": "EventEmitter",
          "inheritance": {
            "file": "ZyfraBaseTableComponent"
          }
        },
        {
          "name": "selectionChange",
          "defaultValue": "new EventEmitter<unknown>()",
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "\n\nCallback to invoke when selection is changed\n",
          "description": "<p>Callback to invoke when selection is changed</p>\n",
          "line": 351,
          "type": "EventEmitter",
          "inheritance": {
            "file": "ZyfraBaseTableComponent"
          }
        },
        {
          "name": "sortFunction",
          "defaultValue": "new EventEmitter<TableSortEvent>()",
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "\n\nA function to implement custom sorting\n",
          "description": "<p>A function to implement custom sorting</p>\n",
          "line": 318,
          "type": "EventEmitter",
          "inheritance": {
            "file": "ZyfraBaseTableComponent"
          }
        }
      ],
      "propertiesClass": [
        {
          "name": "table",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "TreeTable",
          "optional": false,
          "description": "",
          "line": 40,
          "decorators": [
            {
              "name": "ViewChild",
              "stringifiedArguments": "'table', {static: true}"
            }
          ]
        },
        {
          "name": "templates",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "QueryList<BaseTableTemplateDirective>",
          "optional": false,
          "description": "",
          "line": 41,
          "decorators": [
            {
              "name": "ContentChildren",
              "stringifiedArguments": "BaseTableTemplateDirective"
            }
          ]
        },
        {
          "name": "_activeElement",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "T",
          "optional": false,
          "description": "",
          "line": 355,
          "modifierKind": [121],
          "inheritance": {
            "file": "ZyfraBaseTableComponent"
          }
        },
        {
          "name": "bodyTemplate",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "TemplateRef<any>",
          "optional": false,
          "description": "",
          "line": 25,
          "modifierKind": [123],
          "inheritance": {
            "file": "ZyfraBaseTableComponent"
          }
        },
        {
          "name": "captionTemplate",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "TemplateRef<any>",
          "optional": false,
          "description": "",
          "line": 26,
          "modifierKind": [123],
          "inheritance": {
            "file": "ZyfraBaseTableComponent"
          }
        },
        {
          "name": "colGroupTemplate",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "TemplateRef<any>",
          "optional": false,
          "description": "",
          "line": 27,
          "modifierKind": [123],
          "inheritance": {
            "file": "ZyfraBaseTableComponent"
          }
        },
        {
          "name": "emptyMessageTemplate",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "TemplateRef<any>",
          "optional": false,
          "description": "",
          "line": 28,
          "modifierKind": [123],
          "inheritance": {
            "file": "ZyfraBaseTableComponent"
          }
        },
        {
          "name": "footerTemplate",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "TemplateRef<any>",
          "optional": false,
          "description": "",
          "line": 29,
          "modifierKind": [123],
          "inheritance": {
            "file": "ZyfraBaseTableComponent"
          }
        },
        {
          "name": "frozenBodyTemplate",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "TemplateRef<any>",
          "optional": false,
          "description": "",
          "line": 30,
          "modifierKind": [123],
          "inheritance": {
            "file": "ZyfraBaseTableComponent"
          }
        },
        {
          "name": "frozenColGroupTemplate",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "TemplateRef<any>",
          "optional": false,
          "description": "",
          "line": 31,
          "modifierKind": [123],
          "inheritance": {
            "file": "ZyfraBaseTableComponent"
          }
        },
        {
          "name": "frozenFooterTemplate",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "TemplateRef<any>",
          "optional": false,
          "description": "",
          "line": 32,
          "modifierKind": [123],
          "inheritance": {
            "file": "ZyfraBaseTableComponent"
          }
        },
        {
          "name": "frozenHeaderTemplate",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "TemplateRef<any>",
          "optional": false,
          "description": "",
          "line": 33,
          "modifierKind": [123],
          "inheritance": {
            "file": "ZyfraBaseTableComponent"
          }
        },
        {
          "name": "headerTemplate",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "TemplateRef<any>",
          "optional": false,
          "description": "",
          "line": 34,
          "modifierKind": [123],
          "inheritance": {
            "file": "ZyfraBaseTableComponent"
          }
        },
        {
          "name": "initialData",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "T[]",
          "optional": false,
          "description": "",
          "line": 354,
          "modifierKind": [121],
          "inheritance": {
            "file": "ZyfraBaseTableComponent"
          }
        },
        {
          "name": "paginatorDropdownItemTemplate",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "TemplateRef<any>",
          "optional": false,
          "description": "",
          "line": 35,
          "modifierKind": [123],
          "inheritance": {
            "file": "ZyfraBaseTableComponent"
          }
        },
        {
          "name": "paginatorLeftTemplate",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "TemplateRef<any>",
          "optional": false,
          "description": "",
          "line": 36,
          "modifierKind": [123],
          "inheritance": {
            "file": "ZyfraBaseTableComponent"
          }
        },
        {
          "name": "paginatorRightTemplate",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "TemplateRef<any>",
          "optional": false,
          "description": "",
          "line": 37,
          "modifierKind": [123],
          "inheritance": {
            "file": "ZyfraBaseTableComponent"
          }
        },
        {
          "name": "styleClasses",
          "defaultValue": "'p-datatable-gridlines'",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 23,
          "inheritance": {
            "file": "ZyfraBaseTableComponent"
          }
        },
        {
          "name": "summaryTemplate",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "TemplateRef<any>",
          "optional": false,
          "description": "",
          "line": 38,
          "modifierKind": [123],
          "inheritance": {
            "file": "ZyfraBaseTableComponent"
          }
        }
      ],
      "methodsClass": [
        {
          "name": "getContentTemplate",
          "args": [],
          "optional": false,
          "returnType": "QueryList<BaseTableTemplateDirective>",
          "typeParameters": [],
          "line": 82,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [123, 157],
          "inheritance": {
            "file": "ZyfraBaseTableComponent"
          }
        },
        {
          "name": "getTable",
          "args": [],
          "optional": false,
          "returnType": "TreeTable",
          "typeParameters": [],
          "line": 86,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [123, 157],
          "inheritance": {
            "file": "ZyfraBaseTableComponent"
          }
        },
        {
          "name": "initTemplateByType",
          "args": [
            {
              "name": "item",
              "type": "BaseTableTemplateDirective",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 90,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [123, 157],
          "jsdoctags": [
            {
              "name": "item",
              "type": "BaseTableTemplateDirective",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ],
          "inheritance": {
            "file": "ZyfraBaseTableComponent"
          }
        },
        {
          "name": "checkUpdateStyleClasses",
          "args": [
            {
              "name": "changes",
              "type": "SimpleChanges",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 504,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [122],
          "jsdoctags": [
            {
              "name": "changes",
              "type": "SimpleChanges",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ],
          "inheritance": {
            "file": "ZyfraBaseTableComponent"
          }
        },
        {
          "name": "filter",
          "args": [
            {
              "name": "value",
              "type": "any",
              "deprecated": false,
              "deprecationMessage": ""
            },
            {
              "name": "field",
              "type": "string",
              "deprecated": false,
              "deprecationMessage": ""
            },
            {
              "name": "matchMode",
              "type": "string",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 476,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [123],
          "jsdoctags": [
            {
              "name": "value",
              "type": "any",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "field",
              "type": "string",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "matchMode",
              "type": "string",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ],
          "inheritance": {
            "file": "ZyfraBaseTableComponent"
          }
        },
        {
          "name": "filterGlobal",
          "args": [
            {
              "name": "value",
              "type": "",
              "deprecated": false,
              "deprecationMessage": ""
            },
            {
              "name": "matchMode",
              "type": "",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 480,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [123],
          "jsdoctags": [
            {
              "name": "value",
              "type": "",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "matchMode",
              "type": "",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ],
          "inheritance": {
            "file": "ZyfraBaseTableComponent"
          }
        },
        {
          "name": "isSelected",
          "args": [
            {
              "name": "rowData",
              "type": "",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "boolean",
          "typeParameters": [],
          "line": 484,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [123],
          "jsdoctags": [
            {
              "name": "rowData",
              "type": "",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ],
          "inheritance": {
            "file": "ZyfraBaseTableComponent"
          }
        },
        {
          "name": "ngAfterContentInit",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 378,
          "deprecated": false,
          "deprecationMessage": "",
          "inheritance": {
            "file": "ZyfraBaseTableComponent"
          }
        },
        {
          "name": "ngOnChanges",
          "args": [
            {
              "name": "changes",
              "type": "SimpleChanges",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 369,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "changes",
              "type": "SimpleChanges",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ],
          "inheritance": {
            "file": "ZyfraBaseTableComponent"
          }
        },
        {
          "name": "resetScrollTop",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 446,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [123],
          "inheritance": {
            "file": "ZyfraBaseTableComponent"
          }
        },
        {
          "name": "resetSort",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 458,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [123],
          "inheritance": {
            "file": "ZyfraBaseTableComponent"
          }
        },
        {
          "name": "scrollTo",
          "args": [
            {
              "name": "options",
              "type": "any",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 454,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [123],
          "jsdoctags": [
            {
              "name": "options",
              "type": "any",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ],
          "inheritance": {
            "file": "ZyfraBaseTableComponent"
          }
        },
        {
          "name": "scrollToVirtualIndex",
          "args": [
            {
              "name": "index",
              "type": "number",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 450,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [123],
          "jsdoctags": [
            {
              "name": "index",
              "type": "number",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ],
          "inheritance": {
            "file": "ZyfraBaseTableComponent"
          }
        },
        {
          "name": "setValue",
          "args": [
            {
              "name": "value",
              "type": "T[]",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 442,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [123],
          "jsdoctags": [
            {
              "name": "value",
              "type": "T[]",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ],
          "inheritance": {
            "file": "ZyfraBaseTableComponent"
          }
        },
        {
          "name": "updateStyleClasses",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 488,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [122],
          "inheritance": {
            "file": "ZyfraBaseTableComponent"
          }
        }
      ],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import {\r\n  AfterContentInit,\r\n  ChangeDetectionStrategy,\r\n  Component,\r\n  ContentChildren,\r\n  EventEmitter,\r\n  Input,\r\n  OnChanges,\r\n  Output,\r\n  QueryList,\r\n  ViewChild,\r\n} from '@angular/core';\r\nimport { FilterMetadata } from 'primeng/api';\r\nimport { TreeTable, TreeTableService } from 'primeng/treetable';\r\nimport { TargetTableToken, ZyfraBaseTableComponent } from '../@core/base-table';\r\nimport { BaseTableTemplateDirective } from '../@core/base-table/directives/base-table-template.directive';\r\n\r\n@Component({\r\n  selector: 'zyfra-tree-table',\r\n  templateUrl: './tree-table.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  providers: [\r\n    TreeTableService,\r\n    {\r\n      provide: TargetTableToken,\r\n      useFactory: (zyfraTable: ZyfraTreeTableComponent): ZyfraTreeTableComponent => zyfraTable,\r\n      deps: [ZyfraTreeTableComponent],\r\n    },\r\n    {\r\n      provide: TreeTable,\r\n      useFactory: (zyfraTable: ZyfraTreeTableComponent): TreeTable => zyfraTable.table,\r\n      deps: [ZyfraTreeTableComponent],\r\n    },\r\n  ],\r\n})\r\nexport class ZyfraTreeTableComponent<T = unknown>\r\n  extends ZyfraBaseTableComponent<T>\r\n  implements AfterContentInit, OnChanges\r\n{\r\n  @ViewChild('table', { static: true }) table: TreeTable;\r\n  @ContentChildren(BaseTableTemplateDirective) templates: QueryList<BaseTableTemplateDirective>;\r\n\r\n  //region Inputs\r\n  /**\r\n   * An array of FilterMetadata objects to provide external filters\r\n   */\r\n  @Input() filters: { [s: string]: FilterMetadata } = {};\r\n  //endregion\r\n\r\n  //region Outputs\r\n  /**\r\n   * Change active element\r\n   */\r\n  @Output() override activeElementChange: EventEmitter<T> = new EventEmitter<T>();\r\n  /**\r\n   * Callback to invoke when a node is expanded\r\n   */\r\n  @Output() onNodeExpand = new EventEmitter<{ originalEvent: Event; node: unknown }>();\r\n  /**\r\n   * Callback to invoke when a node is collapsed\r\n   */\r\n  @Output() onNodeCollapse = new EventEmitter<{ originalEvent: Event; node: unknown }>();\r\n  /**\r\n   * Callback to invoke when a node is selected\r\n   */\r\n  @Output() onNodeSelect = new EventEmitter<{ originalEvent: Event; node: unknown }>();\r\n  /**\r\n   * Callback to invoke when a node is unselected\r\n   */\r\n  @Output() onNodeUnselect = new EventEmitter<{ originalEvent: Event; node: unknown }>();\r\n  /**\r\n   * Callback to invoke when selection of context menu selection is changed\r\n   */\r\n  @Output() contextMenuSelectionChange = new EventEmitter<unknown>();\r\n\r\n  /**\r\n   * Function to optimize the dom operations by delegating to ngForTrackBy, default algoritm checks for object identity\r\n   */\r\n  @Input() rowTrackBy: <K>(index: number, item: K) => K = (index: number, item: any) => item;\r\n\r\n  //region Base class overrides\r\n  public override getContentTemplate(): QueryList<BaseTableTemplateDirective> {\r\n    return this.templates;\r\n  }\r\n\r\n  public override getTable(): TreeTable {\r\n    return this.table;\r\n  }\r\n\r\n  public override initTemplateByType(item: BaseTableTemplateDirective): void {\r\n    // do nothing\r\n  }\r\n  //endregion\r\n}\r\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "extends": "ZyfraBaseTableComponent",
      "implements": ["AfterContentInit", "OnChanges"],
      "templateData": "<p-treeTable\r\n  #table\r\n  [value]=\"value\"\r\n  [columns]=\"columns\"\r\n  [style]=\"style\"\r\n  [styleClass]=\"styleClasses\"\r\n  [tableStyle]=\"tableStyle\"\r\n  [tableStyleClass]=\"(paginator ? 'zyfra-table_paginator ' : '') + tableStyleClass\"\r\n  [autoLayout]=\"autoLayout\"\r\n  [lazy]=\"lazy\"\r\n  [lazyLoadOnInit]=\"lazyLoadOnInit\"\r\n  [paginator]=\"paginator\"\r\n  [rows]=\"rows\"\r\n  [first]=\"first\"\r\n  [pageLinks]=\"pageLinks\"\r\n  [rowsPerPageOptions]=\"rowsPerPageOptions\"\r\n  [alwaysShowPaginator]=\"alwaysShowPaginator\"\r\n  [paginatorPosition]=\"paginatorPosition\"\r\n  [paginatorDropdownAppendTo]=\"paginatorDropdownAppendTo\"\r\n  [currentPageReportTemplate]=\"currentPageReportTemplate\"\r\n  [showCurrentPageReport]=\"showCurrentPageReport\"\r\n  [showJumpToPageDropdown]=\"showJumpToPageDropdown\"\r\n  [showFirstLastIcon]=\"showFirstLastIcon\"\r\n  [showPageLinks]=\"showPageLinks\"\r\n  [defaultSortOrder]=\"defaultSortOrder\"\r\n  [sortMode]=\"sortMode\"\r\n  [resetPageOnSort]=\"resetPageOnSort\"\r\n  [customSort]=\"customSort\"\r\n  [selectionMode]=\"selectionMode\"\r\n  [contextMenuSelection]=\"contextMenuSelection\"\r\n  [contextMenuSelectionMode]=\"contextMenuSelectionMode\"\r\n  [dataKey]=\"dataKey\"\r\n  [metaKeySelection]=\"metaKeySelection\"\r\n  [compareSelectionBy]=\"compareSelectionBy\"\r\n  [rowHover]=\"rowHover\"\r\n  [loading]=\"loading\"\r\n  [loadingIcon]=\"loadingIcon\"\r\n  [showLoader]=\"showLoader\"\r\n  [scrollable]=\"scrollable\"\r\n  [scrollHeight]=\"scrollHeight\"\r\n  [virtualScroll]=\"virtualScroll\"\r\n  [virtualRowHeight]=\"virtualRowHeight\"\r\n  [minBufferPx]=\"minBufferPx\"\r\n  [maxBufferPx]=\"maxBufferPx\"\r\n  [frozenWidth]=\"frozenWidth\"\r\n  [frozenColumns]=\"frozenColumns\"\r\n  [resizableColumns]=\"resizableColumns\"\r\n  [columnResizeMode]=\"columnResizeMode\"\r\n  [reorderableColumns]=\"reorderableColumns\"\r\n  [contextMenu]=\"contextMenu\"\r\n  [rowTrackBy]=\"rowTrackBy\"\r\n  [filters]=\"filters\"\r\n  [globalFilterFields]=\"globalFilterFields\"\r\n  [filterDelay]=\"filterDelay\"\r\n  [filterMode]=\"filterMode\"\r\n  [filterLocale]=\"filterLocale\"\r\n  [totalRecords]=\"totalRecords\"\r\n  [sortField]=\"sortField\"\r\n  [sortOrder]=\"sortOrder\"\r\n  [multiSortMeta]=\"multiSortMeta\"\r\n  [selection]=\"selection\"\r\n  (onFilter)=\"onFilter.emit($event)\"\r\n  (onNodeExpand)=\"onNodeExpand.emit($event)\"\r\n  (onNodeCollapse)=\"onNodeCollapse.emit($event)\"\r\n  (onPage)=\"page.emit($event)\"\r\n  (onSort)=\"onSort.emit($event)\"\r\n  (onLazyLoad)=\"lazyLoad.emit($event)\"\r\n  (sortFunction)=\"sortFunction.emit($event)\"\r\n  (onColResize)=\"colResize.emit($event)\"\r\n  (onColReorder)=\"colReorder.emit($event)\"\r\n  (onNodeSelect)=\"onNodeSelect.emit($event)\"\r\n  (onNodeUnselect)=\"onNodeUnselect.emit($event)\"\r\n  (onContextMenuSelect)=\"contextMenuSelect.emit($event)\"\r\n  (onHeaderCheckboxToggle)=\"headerCheckboxToggle.emit($event)\"\r\n  (onEditInit)=\"editInit.emit($event)\"\r\n  (onEditComplete)=\"editComplete.emit($event)\"\r\n  (onEditCancel)=\"editCancel.emit($event)\"\r\n  (selectionChange)=\"selectionChange.emit($event)\"\r\n  (contextMenuSelectionChange)=\"contextMenuSelectionChange.emit($event)\"\r\n>\r\n  <ng-template pTemplate=\"caption\" *ngIf=\"captionTemplate || title\">\r\n    <div class=\"zyfra-table-title\" *ngIf=\"title\">{{ title }}</div>\r\n    <ng-container *ngIf=\"captionTemplate\">\r\n      <ng-container *ngTemplateOutlet=\"captionTemplate\"></ng-container>\r\n    </ng-container>\r\n  </ng-template>\r\n\r\n  <ng-template pTemplate=\"header\" let-columns *ngIf=\"headerTemplate\">\r\n    <ng-container\r\n      *ngTemplateOutlet=\"\r\n        headerTemplate;\r\n        context: {\r\n          $implicit: columns\r\n        }\r\n      \"\r\n    ></ng-container>\r\n  </ng-template>\r\n\r\n  <ng-template pTemplate=\"body\" let-rowNode let-rowData=\"rowData\" let-columns=\"columns\" *ngIf=\"bodyTemplate\">\r\n    <ng-container\r\n      *ngTemplateOutlet=\"\r\n        bodyTemplate;\r\n        context: {\r\n          $implicit: rowNode,\r\n          rowData: rowData,\r\n          columns: columns\r\n        }\r\n      \"\r\n    ></ng-container>\r\n  </ng-template>\r\n\r\n  <ng-template pTemplate=\"footer\" let-columns *ngIf=\"footerTemplate\">\r\n    <ng-container\r\n      *ngTemplateOutlet=\"\r\n        footerTemplate;\r\n        context: {\r\n          $implicit: columns\r\n        }\r\n      \"\r\n    ></ng-container>\r\n  </ng-template>\r\n\r\n  <ng-template pTemplate=\"colgroup\" let-columns *ngIf=\"colGroupTemplate\">\r\n    <ng-container\r\n      *ngTemplateOutlet=\"\r\n        colGroupTemplate;\r\n        context: {\r\n          $implicit: columns\r\n        }\r\n      \"\r\n    ></ng-container>\r\n  </ng-template>\r\n\r\n  <ng-template pTemplate=\"summary\" *ngIf=\"summaryTemplate\">\r\n    <ng-container *ngTemplateOutlet=\"summaryTemplate\"></ng-container>\r\n  </ng-template>\r\n\r\n  <ng-template pTemplate=\"paginatorleft\" *ngIf=\"paginatorLeftTemplate\">\r\n    <ng-container *ngTemplateOutlet=\"paginatorLeftTemplate\"></ng-container>\r\n  </ng-template>\r\n\r\n  <ng-template pTemplate=\"paginatorright\" *ngIf=\"paginatorRightTemplate\">\r\n    <ng-container *ngTemplateOutlet=\"paginatorRightTemplate\"></ng-container>\r\n  </ng-template>\r\n\r\n  <ng-template pTemplate=\"paginatordropdownitem\" *ngIf=\"paginatorDropdownItemTemplate\">\r\n    <ng-container *ngTemplateOutlet=\"paginatorDropdownItemTemplate\"></ng-container>\r\n  </ng-template>\r\n</p-treeTable>\r\n"
    },
    {
      "name": "ZyfraTreeTableHeaderCheckboxComponent",
      "id": "component-ZyfraTreeTableHeaderCheckboxComponent-fef9ab847b1162646d03d0c9d7b634c6",
      "file": "libs/components/src/lib/tree-table/tree-table-header-checkbox/tree-table-header-checkbox.component.ts",
      "changeDetection": "ChangeDetectionStrategy.OnPush",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "zyfra-tree-table-header-checkbox",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./tree-table-header-checkbox.component.html"],
      "viewProviders": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [],
      "methodsClass": [],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import { ChangeDetectionStrategy, Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'zyfra-tree-table-header-checkbox',\r\n  templateUrl: './tree-table-header-checkbox.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class ZyfraTreeTableHeaderCheckboxComponent {}\r\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "templateData": "<p-treeTableHeaderCheckbox></p-treeTableHeaderCheckbox>\r\n"
    },
    {
      "name": "ZyfraTreeTableSearchCellComponent",
      "id": "component-ZyfraTreeTableSearchCellComponent-9fce66f5e3b308c82209cdfbeda3bea8",
      "file": "libs/components/src/lib/tree-table/tree-table-search-cell/tree-table-search-cell.component.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "[zyfra-search-cell]",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./tree-table-search-cell.component.html"],
      "viewProviders": [],
      "inputsClass": [
        {
          "name": "field",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 17,
          "type": "string",
          "inheritance": {
            "file": "ZyfraBaseSearchCellComponent"
          }
        },
        {
          "name": "isNativeFiltering",
          "defaultValue": "true",
          "deprecated": false,
          "deprecationMessage": "",
          "rawdescription": "If the value is true, then the native filtering of the table will be used,\r\notherwise the valueChange event will be emitted",
          "description": "<p>If the value is true, then the native filtering of the table will be used,\notherwise the valueChange event will be emitted</p>\n",
          "line": 22,
          "type": "boolean",
          "inheritance": {
            "file": "ZyfraBaseSearchCellComponent"
          }
        },
        {
          "name": "matchMode",
          "defaultValue": "'contains'",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 23,
          "type": "string",
          "inheritance": {
            "file": "ZyfraBaseSearchCellComponent"
          }
        },
        {
          "name": "placeholder",
          "defaultValue": "''",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 16,
          "type": "string",
          "inheritance": {
            "file": "ZyfraBaseSearchCellComponent"
          }
        }
      ],
      "outputsClass": [
        {
          "name": "valueChange",
          "defaultValue": "new EventEmitter<ValueChangeEvent>()",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 25,
          "type": "EventEmitter",
          "inheritance": {
            "file": "ZyfraBaseSearchCellComponent"
          }
        }
      ],
      "propertiesClass": [
        {
          "name": "table",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "ZyfraTreeTableComponent",
          "optional": false,
          "description": "",
          "line": 13,
          "modifierKind": [123, 143],
          "inheritance": {
            "file": "ZyfraBaseSearchCellComponent"
          }
        },
        {
          "name": "hostClass",
          "defaultValue": "'search-cell'",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 27,
          "decorators": [
            {
              "name": "HostBinding",
              "stringifiedArguments": "'class'"
            }
          ],
          "inheritance": {
            "file": "ZyfraBaseSearchCellComponent"
          }
        }
      ],
      "methodsClass": [
        {
          "name": "filter",
          "args": [
            {
              "name": "value",
              "type": "any",
              "deprecated": false,
              "deprecationMessage": ""
            },
            {
              "name": "field",
              "type": "string",
              "deprecated": false,
              "deprecationMessage": ""
            },
            {
              "name": "matchMode",
              "type": "string",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 33,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [123],
          "jsdoctags": [
            {
              "name": "value",
              "type": "any",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "field",
              "type": "string",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "matchMode",
              "type": "string",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ],
          "inheritance": {
            "file": "ZyfraBaseSearchCellComponent"
          }
        }
      ],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [
        {
          "name": "class",
          "defaultValue": "'search-cell'",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 27,
          "type": "string",
          "inheritance": {
            "file": "ZyfraBaseSearchCellComponent"
          }
        }
      ],
      "hostListeners": [],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import { Component } from '@angular/core';\r\nimport { ZyfraBaseSearchCellComponent } from '../../@core/base-table';\r\nimport { ZyfraTreeTableComponent } from '../tree-table.component';\r\n\r\n// eslint-disable-next-line @angular-eslint/prefer-on-push-component-change-detection\r\n@Component({\r\n  // eslint-disable-next-line @angular-eslint/component-selector\r\n  selector: '[zyfra-search-cell]',\r\n  templateUrl: './tree-table-search-cell.component.html',\r\n  // changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class ZyfraTreeTableSearchCellComponent extends ZyfraBaseSearchCellComponent {\r\n  constructor(public readonly table: ZyfraTreeTableComponent) {\r\n    super();\r\n  }\r\n}\r\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "constructorObj": {
        "name": "constructor",
        "description": "",
        "deprecated": false,
        "deprecationMessage": "",
        "args": [
          {
            "name": "table",
            "type": "ZyfraTreeTableComponent",
            "deprecated": false,
            "deprecationMessage": ""
          }
        ],
        "line": 12,
        "jsdoctags": [
          {
            "name": "table",
            "type": "ZyfraTreeTableComponent",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      "extends": "ZyfraBaseSearchCellComponent",
      "templateData": "<input\r\n  class=\"search-cell__input\"\r\n  type=\"text\"\r\n  (input)=\"filter($any($event.target).value, field, matchMode)\"\r\n  [value]=\"$any(table.filters[field])?.value || ''\"\r\n  [placeholder]=\"placeholder\"\r\n>\r\n<i class=\"search-cell__icon pi pi-search\"></i>\r\n"
    },
    {
      "name": "ZyfraTreeTableSortIconComponent",
      "id": "component-ZyfraTreeTableSortIconComponent-2463d85efc25e4361e4d63fae1b42714",
      "file": "libs/components/src/lib/tree-table/tree-table-sort-icon/tree-table-sort-icon.component.ts",
      "changeDetection": "ChangeDetectionStrategy.OnPush",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "zyfra-tree-table-sort-icon",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./tree-table-sort-icon.component.html"],
      "viewProviders": [],
      "inputsClass": [
        {
          "name": "ariaLabelAsc",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 11,
          "type": "string"
        },
        {
          "name": "ariaLabelDesc",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 10,
          "type": "string"
        },
        {
          "name": "field",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 9,
          "type": "string"
        }
      ],
      "outputsClass": [],
      "propertiesClass": [],
      "methodsClass": [],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'zyfra-tree-table-sort-icon',\r\n  templateUrl: './tree-table-sort-icon.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class ZyfraTreeTableSortIconComponent {\r\n  @Input() field: string;\r\n  @Input() ariaLabelDesc: string;\r\n  @Input() ariaLabelAsc: string;\r\n}\r\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "templateData": "<p-treeTableSortIcon\r\n  [field]=\"field\"\r\n  [ariaLabelDesc]=\"ariaLabelDesc\"\r\n  [ariaLabelAsc]=\"ariaLabelAsc\"\r\n></p-treeTableSortIcon>\r\n"
    },
    {
      "name": "ZyfraTreeTableTogglerComponent",
      "id": "component-ZyfraTreeTableTogglerComponent-f673e197a6a10c884c222eeacf8b344b",
      "file": "libs/components/src/lib/tree-table/tree-table-toggler/tree-table-toggler.component.ts",
      "changeDetection": "ChangeDetectionStrategy.OnPush",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "zyfra-tree-table-toggler",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./tree-table-toggler.component.html"],
      "viewProviders": [],
      "inputsClass": [
        {
          "name": "rowNode",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 9,
          "type": "any"
        }
      ],
      "outputsClass": [],
      "propertiesClass": [],
      "methodsClass": [],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'zyfra-tree-table-toggler',\r\n  templateUrl: './tree-table-toggler.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class ZyfraTreeTableTogglerComponent {\r\n  @Input() rowNode: any;\r\n}\r\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "templateData": "<p-treeTableToggler [rowNode]=\"rowNode\"></p-treeTableToggler>\r\n"
    },
    {
      "name": "ZyfraTriCheckboxComponent",
      "id": "component-ZyfraTriCheckboxComponent-47d6cbce4f0f5ea88dd46537666f6f48",
      "file": "libs/components/src/lib/tri-checkbox/zyfra-tri-checkbox.component.ts",
      "changeDetection": "ChangeDetectionStrategy.OnPush",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "zyfra-tri-checkbox",
      "styleUrls": [],
      "styles": [],
      "templateUrl": ["./zyfra-tri-checkbox.component.html"],
      "viewProviders": [],
      "inputsClass": [
        {
          "name": "ariaLabelledBy",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 16,
          "type": "string"
        },
        {
          "name": "checkboxFalseIcon",
          "defaultValue": "'pi pi-times'",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 22,
          "type": "string"
        },
        {
          "name": "checkboxTrueIcon",
          "defaultValue": "'pi pi-check'",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 21,
          "type": "string"
        },
        {
          "name": "disabled",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 13,
          "type": "boolean"
        },
        {
          "name": "inputId",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 15,
          "type": "string"
        },
        {
          "name": "label",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 12,
          "type": "string"
        },
        {
          "name": "model",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 20,
          "type": "boolean | null"
        },
        {
          "name": "name",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 11,
          "type": "string"
        },
        {
          "name": "readonly",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 19,
          "type": "boolean"
        },
        {
          "name": "style",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 17,
          "type": "string"
        },
        {
          "name": "styleClass",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 18,
          "type": "string"
        },
        {
          "name": "tabindex",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 14,
          "type": "number"
        }
      ],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "formControl",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "FormControl",
          "optional": false,
          "description": "",
          "line": 7,
          "modifierKind": [123, 143],
          "inheritance": {
            "file": "WrappedFormComponent"
          }
        },
        {
          "name": "injector",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Injector",
          "optional": false,
          "description": "",
          "line": 9,
          "modifierKind": [123, 143],
          "inheritance": {
            "file": "WrappedFormComponent"
          }
        },
        {
          "name": "ngControl",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "NgControl",
          "optional": false,
          "description": "",
          "line": 9,
          "decorators": [
            {
              "name": "Optional",
              "stringifiedArguments": ""
            },
            {
              "name": "Self",
              "stringifiedArguments": ""
            }
          ],
          "modifierKind": [123, 143],
          "inheritance": {
            "file": "WrappedFormComponent"
          }
        }
      ],
      "methodsClass": [
        {
          "name": "setDisabledState",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 24,
          "deprecated": false,
          "deprecationMessage": "",
          "modifierKind": [123, 157],
          "inheritance": {
            "file": "WrappedFormComponent"
          }
        }
      ],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import { Component, Input, ChangeDetectionStrategy } from '@angular/core';\r\nimport { ControlValueAccessor } from '@angular/forms';\r\nimport { WrappedFormComponent } from '../@core/value-accessor/wrapped-form.component';\r\n\r\n@Component({\r\n  selector: 'zyfra-tri-checkbox',\r\n  templateUrl: './zyfra-tri-checkbox.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class ZyfraTriCheckboxComponent extends WrappedFormComponent implements ControlValueAccessor {\r\n  @Input() name: string;\r\n  @Input() label: string;\r\n  @Input() disabled: boolean; // TODO remove this, use FormControl disable\r\n  @Input() tabindex: number;\r\n  @Input() inputId: string;\r\n  @Input() ariaLabelledBy: string;\r\n  @Input() style: string;\r\n  @Input() styleClass: string;\r\n  @Input() readonly: boolean;\r\n  @Input() model: boolean | null;\r\n  @Input() checkboxTrueIcon: string = 'pi pi-check';\r\n  @Input() checkboxFalseIcon: string = 'pi pi-times';\r\n\r\n  public override setDisabledState(): void {\r\n    // do nothing\r\n  }\r\n}\r\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "extends": "WrappedFormComponent",
      "implements": ["ControlValueAccessor"],
      "templateData": "<p-triStateCheckbox\r\n  [formControl]=\"$any(ngControl.control)\"\r\n  [name]=\"name\"\r\n  [label]=\"label\"\r\n  [zyfraDisableControl]=\"disabled\"\r\n  [tabindex]=\"tabindex\"\r\n  [inputId]=\"inputId\"\r\n  [ariaLabelledBy]=\"ariaLabelledBy\"\r\n  [style]=\"style\"\r\n  [styleClass]=\"styleClass\"\r\n  [readonly]=\"readonly\"\r\n  [checkboxTrueIcon]=\"checkboxTrueIcon\"\r\n  [checkboxFalseIcon]=\"checkboxFalseIcon\"\r\n  (ngModelChange)=\"accessorOnChangeFn($event)\"\r\n></p-triStateCheckbox>\r\n"
    }
  ],
  "modules": [
    {
      "name": "CustomBlockableModule",
      "id": "module-CustomBlockableModule-693fbde65a23f4c30e6bebf5d4d5eb2c",
      "description": "",
      "deprecationMessage": "",
      "deprecated": false,
      "file": "libs/components/src/lib/block-ui/custom-blockable.ts",
      "methods": [],
      "sourceCode": "import { ChangeDetectionStrategy, Component, ElementRef, NgModule, ViewChild } from '@angular/core';\r\nimport { BlockableUI } from 'primeng/api';\r\n\r\n@Component({\r\n  selector: 'zyfra-test-custom-blockable',\r\n  template: `\r\n    <div #blockElement style=\"border: 2px solid #eee; padding: 5px; margin-top: 10px;\">\r\n      <h2>Custom Component</h2>\r\n      <p>\r\n        Lorem ipsum dolor sit amet, consectetur adipiscing elit. Vestibulum non dolor et elit elementum\r\n        pulvinar sit amet at erat. Nam fermentum faucibus diam, et egestas ligula pharetra a. Proin pretium,\r\n        eros id rhoncus imperdiet, neque ex convallis ipsum, ac semper tellus ipsum sit amet elit. Mauris\r\n        finibus fermentum tristique. Vivamus ac orci ut eros vestibulum vulputate. In sodales nisl venenatis\r\n        turpis malesuada, vitae suscipit diam ornare. Nullam lacinia orci posuere est sagittis, quis dictum\r\n        nisi condimentum. Mauris facilisis efficitur condimentum. Mauris lacinia purus eu rutrum elementum.\r\n        Suspendisse aliquam sapien venenatis lectus finibus faucibus. Quisque id congue dui. Aliquam erat\r\n        volutpat. Ut gravida, ante nec porttitor imperdiet, erat orci hendrerit lacus, vitae interdum diam\r\n        magna vitae dui.\r\n      </p>\r\n    </div>\r\n  `,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class CustomBlockableComponent implements BlockableUI {\r\n  @ViewChild('blockElement') blockElement: ElementRef<HTMLDivElement>;\r\n\r\n  public getBlockableElement(): HTMLElement {\r\n    return this.blockElement.nativeElement;\r\n  }\r\n}\r\n\r\n@NgModule({\r\n  declarations: [CustomBlockableComponent],\r\n  exports: [CustomBlockableComponent],\r\n})\r\nexport class CustomBlockableModule {}\r\n",
      "children": [
        {
          "type": "providers",
          "elements": []
        },
        {
          "type": "declarations",
          "elements": [
            {
              "name": "CustomBlockableComponent"
            }
          ]
        },
        {
          "type": "imports",
          "elements": []
        },
        {
          "type": "exports",
          "elements": [
            {
              "name": "CustomBlockableComponent"
            }
          ]
        },
        {
          "type": "bootstrap",
          "elements": []
        },
        {
          "type": "classes",
          "elements": []
        }
      ]
    },
    {
      "name": "SplitterModule",
      "id": "module-SplitterModule-433eb66f91a353615ececa58ccf21d64",
      "description": "",
      "deprecationMessage": "",
      "deprecated": false,
      "file": "libs/components/src/lib/splitter/p-splitter/splitter.module.ts",
      "methods": [],
      "sourceCode": "import { CommonModule } from \"@angular/common\";\r\nimport { NgModule } from \"@angular/core\";\r\nimport { SharedModule } from \"primeng/api\";\r\nimport { SplitterExtended } from \"./splitter\";\r\n\r\n@NgModule({\r\n  imports: [CommonModule],\r\n  exports: [SplitterExtended, SharedModule],\r\n  declarations: [SplitterExtended]\r\n})\r\nexport class SplitterModule { }\r\n",
      "children": [
        {
          "type": "providers",
          "elements": []
        },
        {
          "type": "declarations",
          "elements": [
            {
              "name": "SplitterExtended"
            }
          ]
        },
        {
          "type": "imports",
          "elements": []
        },
        {
          "type": "exports",
          "elements": [
            {
              "name": "SplitterExtended"
            }
          ]
        },
        {
          "type": "bootstrap",
          "elements": []
        },
        {
          "type": "classes",
          "elements": []
        }
      ]
    },
    {
      "name": "ZyfraAccordionModule",
      "id": "module-ZyfraAccordionModule-128e7a8c5a1269464209aeb7a00c50de",
      "description": "",
      "deprecationMessage": "",
      "deprecated": false,
      "file": "libs/components/src/lib/accordion/zyfra-accordion.module.ts",
      "methods": [],
      "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { ZyfraAccordionComponent } from './zyfra-accordion/zyfra-accordion.component';\r\nimport { AccordionModule } from 'primeng/accordion';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ZyfraTemplateModule } from '../@core/shared/zyfra-template.module';\r\nimport { ZyfraAccordionTabComponent } from './zyfra-accordion-tab/zyfra-accordion-tab.component';\r\n\r\n@NgModule({\r\n  declarations: [ZyfraAccordionComponent, ZyfraAccordionTabComponent],\r\n  imports: [AccordionModule, CommonModule, ZyfraTemplateModule],\r\n  exports: [ZyfraAccordionComponent, ZyfraAccordionTabComponent],\r\n})\r\nexport class ZyfraAccordionModule {}\r\n",
      "children": [
        {
          "type": "providers",
          "elements": []
        },
        {
          "type": "declarations",
          "elements": [
            {
              "name": "ZyfraAccordionComponent"
            },
            {
              "name": "ZyfraAccordionTabComponent"
            }
          ]
        },
        {
          "type": "imports",
          "elements": [
            {
              "name": "ZyfraTemplateModule"
            }
          ]
        },
        {
          "type": "exports",
          "elements": [
            {
              "name": "ZyfraAccordionComponent"
            },
            {
              "name": "ZyfraAccordionTabComponent"
            }
          ]
        },
        {
          "type": "bootstrap",
          "elements": []
        },
        {
          "type": "classes",
          "elements": []
        }
      ]
    },
    {
      "name": "ZyfraAutoCompleteModule",
      "id": "module-ZyfraAutoCompleteModule-d54846b424ebac5f2db2dc9af1abf995",
      "description": "",
      "deprecationMessage": "",
      "deprecated": false,
      "file": "libs/components/src/lib/auto-complete/zyfra-auto-complete.module.ts",
      "methods": [],
      "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { ZyfraDisableControlModule } from '../@core/shared/zyfra-disable-control.module';\r\nimport { ZyfraTemplateModule } from '../@core/shared/zyfra-template.module';\r\nimport { ZyfraAutoCompleteComponent } from './zyfra-auto-complete.component';\r\nimport { AutoCompleteModule } from 'primeng/autocomplete';\r\n\r\n@NgModule({\r\n  declarations: [ZyfraAutoCompleteComponent],\r\n  imports: [CommonModule, FormsModule, ReactiveFormsModule, AutoCompleteModule, ZyfraTemplateModule, ZyfraDisableControlModule],\r\n  exports: [ZyfraAutoCompleteComponent],\r\n})\r\nexport class ZyfraAutoCompleteModule {}\r\n",
      "children": [
        {
          "type": "providers",
          "elements": []
        },
        {
          "type": "declarations",
          "elements": [
            {
              "name": "ZyfraAutoCompleteComponent"
            }
          ]
        },
        {
          "type": "imports",
          "elements": [
            {
              "name": "ZyfraDisableControlModule"
            },
            {
              "name": "ZyfraTemplateModule"
            }
          ]
        },
        {
          "type": "exports",
          "elements": [
            {
              "name": "ZyfraAutoCompleteComponent"
            }
          ]
        },
        {
          "type": "bootstrap",
          "elements": []
        },
        {
          "type": "classes",
          "elements": []
        }
      ]
    },
    {
      "name": "ZyfraBlockUiModule",
      "id": "module-ZyfraBlockUiModule-ec452f8452869dde3eaa93f2dff1dbb5",
      "description": "",
      "deprecationMessage": "",
      "deprecated": false,
      "file": "libs/components/src/lib/block-ui/zyfra-block-ui.module.ts",
      "methods": [],
      "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { BlockUIModule } from 'primeng/blockui';\r\nimport { ZyfraBlockUiComponent } from './zyfra-block-ui.component';\r\n\r\n@NgModule({\r\n  declarations: [ZyfraBlockUiComponent],\r\n  imports: [BlockUIModule],\r\n  exports: [ZyfraBlockUiComponent],\r\n})\r\nexport class ZyfraBlockUiModule {}\r\n",
      "children": [
        {
          "type": "providers",
          "elements": []
        },
        {
          "type": "declarations",
          "elements": [
            {
              "name": "ZyfraBlockUiComponent"
            }
          ]
        },
        {
          "type": "imports",
          "elements": []
        },
        {
          "type": "exports",
          "elements": [
            {
              "name": "ZyfraBlockUiComponent"
            }
          ]
        },
        {
          "type": "bootstrap",
          "elements": []
        },
        {
          "type": "classes",
          "elements": []
        }
      ]
    },
    {
      "name": "ZyfraBreadcrumbModule",
      "id": "module-ZyfraBreadcrumbModule-8909ae08f4d9cee63a19c103979e8ef4",
      "description": "",
      "deprecationMessage": "",
      "deprecated": false,
      "file": "libs/components/src/lib/breadcrumb/zyfra-breadcrumb.module.ts",
      "methods": [],
      "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { ZyfraBreadcrumbComponent } from './zyfra-breadcrumb.component';\r\nimport { BreadcrumbModule } from 'primeng/breadcrumb';\r\n\r\n@NgModule({\r\n  declarations: [ZyfraBreadcrumbComponent],\r\n  imports: [BreadcrumbModule],\r\n  exports: [ZyfraBreadcrumbComponent],\r\n})\r\nexport class ZyfraBreadcrumbModule {}\r\n",
      "children": [
        {
          "type": "providers",
          "elements": []
        },
        {
          "type": "declarations",
          "elements": [
            {
              "name": "ZyfraBreadcrumbComponent"
            }
          ]
        },
        {
          "type": "imports",
          "elements": []
        },
        {
          "type": "exports",
          "elements": [
            {
              "name": "ZyfraBreadcrumbComponent"
            }
          ]
        },
        {
          "type": "bootstrap",
          "elements": []
        },
        {
          "type": "classes",
          "elements": []
        }
      ]
    },
    {
      "name": "ZyfraButtonModule",
      "id": "module-ZyfraButtonModule-6d1501e8fb5cacb48c11e0b459b4daea",
      "description": "",
      "deprecationMessage": "",
      "deprecated": false,
      "file": "libs/components/src/lib/button/zyfra-button.module.ts",
      "methods": [],
      "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { ZyfraButtonComponent } from './zyfra-button.component';\r\nimport { ButtonModule } from 'primeng/button';\r\n\r\n@NgModule({\r\n  declarations: [ZyfraButtonComponent],\r\n  imports: [ButtonModule],\r\n  exports: [ZyfraButtonComponent],\r\n})\r\nexport class ZyfraButtonModule {}\r\n",
      "children": [
        {
          "type": "providers",
          "elements": []
        },
        {
          "type": "declarations",
          "elements": [
            {
              "name": "ZyfraButtonComponent"
            }
          ]
        },
        {
          "type": "imports",
          "elements": []
        },
        {
          "type": "exports",
          "elements": [
            {
              "name": "ZyfraButtonComponent"
            }
          ]
        },
        {
          "type": "bootstrap",
          "elements": []
        },
        {
          "type": "classes",
          "elements": []
        }
      ]
    },
    {
      "name": "ZyfraCheckBoxModule",
      "id": "module-ZyfraCheckBoxModule-412e8ff94cb47392e419d40ef7f4c734",
      "description": "",
      "deprecationMessage": "",
      "deprecated": false,
      "file": "libs/components/src/lib/checkbox/zyfra-checkbox.module.ts",
      "methods": [],
      "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { CheckboxModule } from 'primeng/checkbox';\r\nimport { ZyfraCheckboxComponent } from './zyfra-checkbox.component';\r\nimport { ZyfraDisableControlModule } from '../@core/shared/zyfra-disable-control.module';\r\n\r\n@NgModule({\r\n  declarations: [ZyfraCheckboxComponent],\r\n  imports: [CommonModule, FormsModule, ReactiveFormsModule, CheckboxModule, ZyfraDisableControlModule],\r\n  exports: [ZyfraCheckboxComponent],\r\n})\r\nexport class ZyfraCheckBoxModule {}\r\n",
      "children": [
        {
          "type": "providers",
          "elements": []
        },
        {
          "type": "declarations",
          "elements": [
            {
              "name": "ZyfraCheckboxComponent"
            }
          ]
        },
        {
          "type": "imports",
          "elements": [
            {
              "name": "ZyfraDisableControlModule"
            }
          ]
        },
        {
          "type": "exports",
          "elements": [
            {
              "name": "ZyfraCheckboxComponent"
            }
          ]
        },
        {
          "type": "bootstrap",
          "elements": []
        },
        {
          "type": "classes",
          "elements": []
        }
      ]
    },
    {
      "name": "ZyfraChipModule",
      "id": "module-ZyfraChipModule-f78bcef2cc2af418c1b2b916192e707b",
      "description": "",
      "deprecationMessage": "",
      "deprecated": false,
      "file": "libs/components/src/lib/chip/zyfra-chip.module.ts",
      "methods": [],
      "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { ZyfraChipComponent } from './zyfra-chip.component';\r\nimport { ChipModule } from 'primeng/chip';\r\n\r\n@NgModule({\r\n  declarations: [ZyfraChipComponent],\r\n  imports: [ChipModule],\r\n  exports: [ZyfraChipComponent],\r\n})\r\nexport class ZyfraChipModule {}\r\n",
      "children": [
        {
          "type": "providers",
          "elements": []
        },
        {
          "type": "declarations",
          "elements": [
            {
              "name": "ZyfraChipComponent"
            }
          ]
        },
        {
          "type": "imports",
          "elements": []
        },
        {
          "type": "exports",
          "elements": [
            {
              "name": "ZyfraChipComponent"
            }
          ]
        },
        {
          "type": "bootstrap",
          "elements": []
        },
        {
          "type": "classes",
          "elements": []
        }
      ]
    },
    {
      "name": "ZyfraConfirmDialogModule",
      "id": "module-ZyfraConfirmDialogModule-7cf9a38292ac0e2c5fc5ea60333086e7",
      "description": "",
      "deprecationMessage": "",
      "deprecated": false,
      "file": "libs/components/src/lib/confirm-dialog/zyfra-confirm-dialog.module.ts",
      "methods": [],
      "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { ConfirmDialogModule } from 'primeng/confirmdialog';\r\nimport { ToastModule } from 'primeng/toast';\r\nimport { MessagesModule } from 'primeng/messages';\r\nimport { ButtonModule } from 'primeng/button';\r\nimport { ZyfraConfirmDialogComponent } from './zyfra-confirm-dialog.component';\r\n\r\n@NgModule({\r\n  declarations: [ZyfraConfirmDialogComponent],\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    ConfirmDialogModule,\r\n    MessagesModule,\r\n    ToastModule,\r\n    ButtonModule,\r\n  ],\r\n  exports: [ZyfraConfirmDialogComponent],\r\n})\r\nexport class ZyfraConfirmDialogModule {}\r\n",
      "children": [
        {
          "type": "providers",
          "elements": []
        },
        {
          "type": "declarations",
          "elements": [
            {
              "name": "ZyfraConfirmDialogComponent"
            }
          ]
        },
        {
          "type": "imports",
          "elements": []
        },
        {
          "type": "exports",
          "elements": [
            {
              "name": "ZyfraConfirmDialogComponent"
            }
          ]
        },
        {
          "type": "bootstrap",
          "elements": []
        },
        {
          "type": "classes",
          "elements": []
        }
      ]
    },
    {
      "name": "ZyfraDatepickerModule",
      "id": "module-ZyfraDatepickerModule-0ce8e504a1de4b3ab225864cbbecdaff",
      "description": "",
      "deprecationMessage": "",
      "deprecated": false,
      "file": "libs/components/src/lib/datepicker/zyfra-datepicker.module.ts",
      "methods": [],
      "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { CalendarModule } from 'primeng/calendar';\r\nimport { ListboxModule } from 'primeng/listbox';\r\nimport { OverlayPanelModule } from 'primeng/overlaypanel';\r\nimport { ZyfraDropdownModule } from '../dropdown';\r\nimport { ZyfraButtonModule } from '../button';\r\nimport { ZyfraRadioButtonModule } from '../radio-button';\r\nimport { ZyfraInputModule } from '../input';\r\nimport { ZyfraDatepickerModeSelectComponent } from './zyfra-datepicker-mode-select/zyfra-datepicker-mode-select.component';\r\nimport { ZyfraRelativeDatepickerComponent } from './zyfra-relative-datepicker/zyfra-relative-datepicker.component';\r\nimport { ZyfraDatepickerMultiComponent } from './zyfra-datepicker-multi/zyfra-datepicker-multi.component';\r\nimport { ZyfraCalendarComponent } from './calendar/zyfra-calendar.component';\r\nimport { RippleModule } from 'primeng/ripple';\r\nimport { SharedModule } from 'primeng/api';\r\nimport { ButtonModule } from 'primeng/button';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    ZyfraRelativeDatepickerComponent,\r\n    ZyfraDatepickerModeSelectComponent,\r\n    ZyfraDatepickerMultiComponent,\r\n    ZyfraCalendarComponent,\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    CalendarModule,\r\n    ZyfraButtonModule,\r\n    ZyfraRadioButtonModule,\r\n    ZyfraInputModule,\r\n    ZyfraDropdownModule,\r\n    OverlayPanelModule,\r\n    ListboxModule,\r\n    RippleModule,\r\n    SharedModule,\r\n    ButtonModule,\r\n  ],\r\n  exports: [\r\n    ZyfraRelativeDatepickerComponent,\r\n    ZyfraDatepickerModeSelectComponent,\r\n    ZyfraDatepickerMultiComponent,\r\n    ZyfraCalendarComponent,\r\n  ],\r\n})\r\nexport class ZyfraDatepickerModule {}\r\n",
      "children": [
        {
          "type": "providers",
          "elements": []
        },
        {
          "type": "declarations",
          "elements": [
            {
              "name": "ZyfraCalendarComponent"
            },
            {
              "name": "ZyfraDatepickerModeSelectComponent"
            },
            {
              "name": "ZyfraDatepickerMultiComponent"
            },
            {
              "name": "ZyfraRelativeDatepickerComponent"
            }
          ]
        },
        {
          "type": "imports",
          "elements": [
            {
              "name": "ZyfraButtonModule"
            },
            {
              "name": "ZyfraDropdownModule"
            },
            {
              "name": "ZyfraInputModule"
            },
            {
              "name": "ZyfraRadioButtonModule"
            }
          ]
        },
        {
          "type": "exports",
          "elements": [
            {
              "name": "ZyfraCalendarComponent"
            },
            {
              "name": "ZyfraDatepickerModeSelectComponent"
            },
            {
              "name": "ZyfraDatepickerMultiComponent"
            },
            {
              "name": "ZyfraRelativeDatepickerComponent"
            }
          ]
        },
        {
          "type": "bootstrap",
          "elements": []
        },
        {
          "type": "classes",
          "elements": []
        }
      ]
    },
    {
      "name": "ZyfraDialogModule",
      "id": "module-ZyfraDialogModule-808e5696a4e1d02e82123d9a01cef53c",
      "description": "",
      "deprecationMessage": "",
      "deprecated": false,
      "file": "libs/components/src/lib/dialog/zyfra-dialog.module.ts",
      "methods": [],
      "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { DialogModule } from 'primeng/dialog';\r\nimport { ToastModule } from 'primeng/toast';\r\nimport { ZyfraDialogComponent } from './zyfra-dialog.component';\r\n\r\n@NgModule({\r\n  declarations: [ZyfraDialogComponent],\r\n  imports: [CommonModule, DialogModule, ToastModule],\r\n  exports: [ZyfraDialogComponent],\r\n})\r\nexport class ZyfraDialogModule {}\r\n",
      "children": [
        {
          "type": "providers",
          "elements": []
        },
        {
          "type": "declarations",
          "elements": [
            {
              "name": "ZyfraDialogComponent"
            }
          ]
        },
        {
          "type": "imports",
          "elements": []
        },
        {
          "type": "exports",
          "elements": [
            {
              "name": "ZyfraDialogComponent"
            }
          ]
        },
        {
          "type": "bootstrap",
          "elements": []
        },
        {
          "type": "classes",
          "elements": []
        }
      ]
    },
    {
      "name": "ZyfraDisableControlModule",
      "id": "module-ZyfraDisableControlModule-e4f514fe8eae73e177c2e31b4d36e2ad",
      "description": "",
      "deprecationMessage": "",
      "deprecated": false,
      "file": "libs/components/src/lib/@core/shared/zyfra-disable-control.module.ts",
      "methods": [],
      "sourceCode": "import { Directive, Input, NgModule } from '@angular/core';\r\nimport { NgControl } from '@angular/forms';\r\n\r\n@Directive({\r\n  selector: '[zyfraDisableControl]',\r\n})\r\nexport class ZyfraDisableControlDirective {\r\n  @Input() set zyfraDisableControl(condition: boolean) {\r\n    const conditionDisable = condition || this.ngControl.disabled;\r\n    const action = conditionDisable ? 'disable' : 'enable';\r\n    this.ngControl.control[action]();\r\n  }\r\n\r\n  constructor(private ngControl: NgControl) {}\r\n}\r\n\r\n@NgModule({\r\n  declarations: [ZyfraDisableControlDirective],\r\n  exports: [ZyfraDisableControlDirective],\r\n})\r\nexport class ZyfraDisableControlModule {}\r\n",
      "children": [
        {
          "type": "providers",
          "elements": []
        },
        {
          "type": "declarations",
          "elements": [
            {
              "name": "ZyfraDisableControlDirective"
            }
          ]
        },
        {
          "type": "imports",
          "elements": []
        },
        {
          "type": "exports",
          "elements": [
            {
              "name": "ZyfraDisableControlDirective"
            }
          ]
        },
        {
          "type": "bootstrap",
          "elements": []
        },
        {
          "type": "classes",
          "elements": []
        }
      ]
    },
    {
      "name": "ZyfraDropdownModule",
      "id": "module-ZyfraDropdownModule-494d4cb97e7d05b632e7e7cfaf23e8a5",
      "description": "",
      "deprecationMessage": "",
      "deprecated": false,
      "file": "libs/components/src/lib/dropdown/zyfra-dropdown.module.ts",
      "methods": [],
      "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { ZyfraDisableControlModule } from '../@core/shared/zyfra-disable-control.module';\r\nimport { ZyfraTemplateModule } from '../@core/shared/zyfra-template.module';\r\nimport { ZyfraDropdownComponent } from './zyfra-dropdown.component';\r\nimport { DropdownModule } from 'primeng/dropdown';\r\nimport { ZyfraDropdownTemplateDirective } from './zyfra-dropdown-template.directive';\r\n\r\n@NgModule({\r\n  declarations: [ZyfraDropdownComponent, ZyfraDropdownTemplateDirective],\r\n  imports: [CommonModule, FormsModule, ReactiveFormsModule, DropdownModule, ZyfraTemplateModule, ZyfraDisableControlModule],\r\n  exports: [ZyfraDropdownComponent, ZyfraDropdownTemplateDirective],\r\n})\r\nexport class ZyfraDropdownModule {}\r\n",
      "children": [
        {
          "type": "providers",
          "elements": []
        },
        {
          "type": "declarations",
          "elements": [
            {
              "name": "ZyfraDropdownComponent"
            },
            {
              "name": "ZyfraDropdownTemplateDirective"
            }
          ]
        },
        {
          "type": "imports",
          "elements": [
            {
              "name": "ZyfraDisableControlModule"
            },
            {
              "name": "ZyfraTemplateModule"
            }
          ]
        },
        {
          "type": "exports",
          "elements": [
            {
              "name": "ZyfraDropdownComponent"
            },
            {
              "name": "ZyfraDropdownTemplateDirective"
            }
          ]
        },
        {
          "type": "bootstrap",
          "elements": []
        },
        {
          "type": "classes",
          "elements": []
        }
      ]
    },
    {
      "name": "ZyfraDropdownWithContentModule",
      "id": "module-ZyfraDropdownWithContentModule-0a7860cf4574ed24d59312425c63a306",
      "description": "",
      "deprecationMessage": "",
      "deprecated": false,
      "file": "libs/components/src/lib/dropdown-with-content/zyfra-dropdown-with-content.module.ts",
      "methods": [],
      "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { ZyfraDropdownWithContentComponent } from './zyfra-dropdown-with-content.component';\r\nimport { DropdownModule } from 'primeng/dropdown';\r\nimport { ZyfraDropdownModule } from '../dropdown';\r\n\r\n@NgModule({\r\n  declarations: [ZyfraDropdownWithContentComponent],\r\n  imports: [CommonModule, FormsModule, ReactiveFormsModule, DropdownModule, ZyfraDropdownModule],\r\n  exports: [ZyfraDropdownWithContentComponent],\r\n})\r\nexport class ZyfraDropdownWithContentModule {}\r\n",
      "children": [
        {
          "type": "providers",
          "elements": []
        },
        {
          "type": "declarations",
          "elements": [
            {
              "name": "ZyfraDropdownWithContentComponent"
            }
          ]
        },
        {
          "type": "imports",
          "elements": [
            {
              "name": "ZyfraDropdownModule"
            }
          ]
        },
        {
          "type": "exports",
          "elements": [
            {
              "name": "ZyfraDropdownWithContentComponent"
            }
          ]
        },
        {
          "type": "bootstrap",
          "elements": []
        },
        {
          "type": "classes",
          "elements": []
        }
      ]
    },
    {
      "name": "ZyfraDynamicDialogModule",
      "id": "module-ZyfraDynamicDialogModule-d30ea3b5f2daa35a50ef56c789ed6884",
      "description": "",
      "deprecationMessage": "",
      "deprecated": false,
      "file": "libs/components/src/lib/dynamic-dialog/zyfra-dynamic-dialog.module.ts",
      "methods": [],
      "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { DynamicDialogModule } from 'primeng/dynamicdialog';\r\n\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    DynamicDialogModule\r\n  ]\r\n})\r\nexport class ZyfraDynamicDialogModule { }\r\n",
      "children": [
        {
          "type": "providers",
          "elements": []
        },
        {
          "type": "declarations",
          "elements": []
        },
        {
          "type": "imports",
          "elements": []
        },
        {
          "type": "exports",
          "elements": []
        },
        {
          "type": "bootstrap",
          "elements": []
        },
        {
          "type": "classes",
          "elements": []
        }
      ]
    },
    {
      "name": "ZyfraIconButtonModule",
      "id": "module-ZyfraIconButtonModule-0de57db83103113682f8709ac909aa69",
      "description": "",
      "deprecationMessage": "",
      "deprecated": false,
      "file": "libs/components/src/lib/icon-button/zyfra-icon-button.module.ts",
      "methods": [],
      "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ZyfraIconButtonDirective } from './zyfra-icon-button.directive';\r\n\r\n@NgModule({\r\n  declarations: [ZyfraIconButtonDirective],\r\n  exports:[ZyfraIconButtonDirective],\r\n  imports: [CommonModule],\r\n})\r\nexport class ZyfraIconButtonModule {}\r\n",
      "children": [
        {
          "type": "providers",
          "elements": []
        },
        {
          "type": "declarations",
          "elements": [
            {
              "name": "ZyfraIconButtonDirective"
            }
          ]
        },
        {
          "type": "imports",
          "elements": []
        },
        {
          "type": "exports",
          "elements": [
            {
              "name": "ZyfraIconButtonDirective"
            }
          ]
        },
        {
          "type": "bootstrap",
          "elements": []
        },
        {
          "type": "classes",
          "elements": []
        }
      ]
    },
    {
      "name": "ZyfraIconModule",
      "id": "module-ZyfraIconModule-134d57c2cf1fb2618831fcb88d10b5dc",
      "description": "",
      "deprecationMessage": "",
      "deprecated": false,
      "file": "libs/components/src/lib/icon/zyfra-icon.module.ts",
      "methods": [],
      "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ZyfraIconComponent } from './zyfra-icon.component';\r\n\r\n@NgModule({\r\n  declarations: [ZyfraIconComponent],\r\n  imports: [CommonModule],\r\n  exports: [ZyfraIconComponent],\r\n})\r\nexport class ZyfraIconModule {}\r\n",
      "children": [
        {
          "type": "providers",
          "elements": []
        },
        {
          "type": "declarations",
          "elements": [
            {
              "name": "ZyfraIconComponent"
            }
          ]
        },
        {
          "type": "imports",
          "elements": []
        },
        {
          "type": "exports",
          "elements": [
            {
              "name": "ZyfraIconComponent"
            }
          ]
        },
        {
          "type": "bootstrap",
          "elements": []
        },
        {
          "type": "classes",
          "elements": []
        }
      ]
    },
    {
      "name": "ZyfraInputGroupModule",
      "id": "module-ZyfraInputGroupModule-e3d50adbcee6565a36c32abc11fb95df",
      "description": "",
      "deprecationMessage": "",
      "deprecated": false,
      "file": "libs/components/src/lib/input-group/zyfra-input-group.module.ts",
      "methods": [],
      "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ZyfraIconModule } from '../icon';\r\nimport { ZyfraIconButtonModule } from '../icon-button';\r\nimport { ZyfraInputGroupComponent } from './zyfra-input-group/zyfra-input-group.component';\r\nimport { ZyfraInputGroupClearComponent } from './zyfra-input-group-clear/zyfra-input-group-clear.component';\r\n\r\n@NgModule({\r\n  declarations: [ZyfraInputGroupComponent, ZyfraInputGroupClearComponent],\r\n  imports: [CommonModule, ZyfraIconModule, ZyfraIconButtonModule],\r\n  exports: [ZyfraInputGroupComponent, ZyfraInputGroupClearComponent]\r\n})\r\nexport class ZyfraInputGroupModule {}\r\n",
      "children": [
        {
          "type": "providers",
          "elements": []
        },
        {
          "type": "declarations",
          "elements": [
            {
              "name": "ZyfraInputGroupClearComponent"
            },
            {
              "name": "ZyfraInputGroupComponent"
            }
          ]
        },
        {
          "type": "imports",
          "elements": [
            {
              "name": "ZyfraIconButtonModule"
            },
            {
              "name": "ZyfraIconModule"
            }
          ]
        },
        {
          "type": "exports",
          "elements": [
            {
              "name": "ZyfraInputGroupClearComponent"
            },
            {
              "name": "ZyfraInputGroupComponent"
            }
          ]
        },
        {
          "type": "bootstrap",
          "elements": []
        },
        {
          "type": "classes",
          "elements": []
        }
      ]
    },
    {
      "name": "ZyfraInputMaskModule",
      "id": "module-ZyfraInputMaskModule-864853b133d3db30f822dd784cb800b0",
      "description": "",
      "deprecationMessage": "",
      "deprecated": false,
      "file": "libs/components/src/lib/input-mask/zyfra-input-mask.module.ts",
      "methods": [],
      "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { InputMaskModule } from 'primeng/inputmask';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { ZyfraDisableControlModule } from '../@core/shared/zyfra-disable-control.module';\r\nimport { ZyfraInputMaskComponent } from './zyfra-input-mask.component';\r\n\r\n@NgModule({\r\n  declarations: [ZyfraInputMaskComponent],\r\n  imports: [CommonModule, FormsModule, ReactiveFormsModule, InputMaskModule, ZyfraDisableControlModule],\r\n  exports: [ZyfraInputMaskComponent],\r\n})\r\nexport class ZyfraInputMaskModule {}\r\n",
      "children": [
        {
          "type": "providers",
          "elements": []
        },
        {
          "type": "declarations",
          "elements": [
            {
              "name": "ZyfraInputMaskComponent"
            }
          ]
        },
        {
          "type": "imports",
          "elements": [
            {
              "name": "ZyfraDisableControlModule"
            }
          ]
        },
        {
          "type": "exports",
          "elements": [
            {
              "name": "ZyfraInputMaskComponent"
            }
          ]
        },
        {
          "type": "bootstrap",
          "elements": []
        },
        {
          "type": "classes",
          "elements": []
        }
      ]
    },
    {
      "name": "ZyfraInputModule",
      "id": "module-ZyfraInputModule-082c7e0c8a6c011237d4a65b6c247bf9",
      "description": "",
      "deprecationMessage": "",
      "deprecated": false,
      "file": "libs/components/src/lib/input/zyfra-input.module.ts",
      "methods": [],
      "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ZyfraDisableControlModule } from '../@core/shared/zyfra-disable-control.module';\r\nimport { ZyfraInputComponent } from './zyfra-input.component';\r\nimport { InputTextModule } from 'primeng/inputtext';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { TooltipModule } from 'primeng/tooltip';\r\nimport { ZyfraTooltipModule } from '../tooltip';\r\n\r\n@NgModule({\r\n  declarations: [ZyfraInputComponent],\r\n  imports: [\r\n    CommonModule,\r\n    InputTextModule,\r\n    TooltipModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    ZyfraTooltipModule,\r\n    ZyfraDisableControlModule\r\n  ],\r\n  exports: [ZyfraInputComponent],\r\n})\r\nexport class ZyfraInputModule {}\r\n",
      "children": [
        {
          "type": "providers",
          "elements": []
        },
        {
          "type": "declarations",
          "elements": [
            {
              "name": "ZyfraInputComponent"
            }
          ]
        },
        {
          "type": "imports",
          "elements": [
            {
              "name": "ZyfraDisableControlModule"
            },
            {
              "name": "ZyfraTooltipModule"
            }
          ]
        },
        {
          "type": "exports",
          "elements": [
            {
              "name": "ZyfraInputComponent"
            }
          ]
        },
        {
          "type": "bootstrap",
          "elements": []
        },
        {
          "type": "classes",
          "elements": []
        }
      ]
    },
    {
      "name": "ZyfraInputNumberModule",
      "id": "module-ZyfraInputNumberModule-076ff98a892641374396721198cb7949",
      "description": "",
      "deprecationMessage": "",
      "deprecated": false,
      "file": "libs/components/src/lib/input-number/zyfra-input-number.module.ts",
      "methods": [],
      "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { ZyfraDisableControlModule } from '../@core/shared/zyfra-disable-control.module';\r\nimport { ZyfraInputNumberComponent } from './zyfra-input-number.component';\r\nimport { InputNumberModule } from 'primeng/inputnumber';\r\n\r\n@NgModule({\r\n  declarations: [ZyfraInputNumberComponent],\r\n  imports: [CommonModule, FormsModule, ReactiveFormsModule, InputNumberModule, ZyfraDisableControlModule],\r\n  exports: [ZyfraInputNumberComponent],\r\n})\r\nexport class ZyfraInputNumberModule {}\r\n",
      "children": [
        {
          "type": "providers",
          "elements": []
        },
        {
          "type": "declarations",
          "elements": [
            {
              "name": "ZyfraInputNumberComponent"
            }
          ]
        },
        {
          "type": "imports",
          "elements": [
            {
              "name": "ZyfraDisableControlModule"
            }
          ]
        },
        {
          "type": "exports",
          "elements": [
            {
              "name": "ZyfraInputNumberComponent"
            }
          ]
        },
        {
          "type": "bootstrap",
          "elements": []
        },
        {
          "type": "classes",
          "elements": []
        }
      ]
    },
    {
      "name": "ZyfraInputSwitchModule",
      "id": "module-ZyfraInputSwitchModule-213ecfe639f5d218652d92aec4c8f76b",
      "description": "",
      "deprecationMessage": "",
      "deprecated": false,
      "file": "libs/components/src/lib/input-switch/zyfra-input-switch.module.ts",
      "methods": [],
      "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { InputSwitchModule } from 'primeng/inputswitch';\r\nimport { ZyfraDisableControlModule } from '../@core/shared/zyfra-disable-control.module';\r\nimport { ZyfraInputSwitchComponent } from './zyfra-input-switch.component';\r\n\r\n@NgModule({\r\n  declarations: [ZyfraInputSwitchComponent],\r\n  imports: [CommonModule, FormsModule, ReactiveFormsModule, InputSwitchModule, ZyfraDisableControlModule],\r\n  exports: [ZyfraInputSwitchComponent],\r\n})\r\nexport class ZyfraInputSwitchModule {}\r\n",
      "children": [
        {
          "type": "providers",
          "elements": []
        },
        {
          "type": "declarations",
          "elements": [
            {
              "name": "ZyfraInputSwitchComponent"
            }
          ]
        },
        {
          "type": "imports",
          "elements": [
            {
              "name": "ZyfraDisableControlModule"
            }
          ]
        },
        {
          "type": "exports",
          "elements": [
            {
              "name": "ZyfraInputSwitchComponent"
            }
          ]
        },
        {
          "type": "bootstrap",
          "elements": []
        },
        {
          "type": "classes",
          "elements": []
        }
      ]
    },
    {
      "name": "ZyfraInputTextModule",
      "id": "module-ZyfraInputTextModule-7dd8eb8ac243370b58eb2a513d92529b",
      "description": "",
      "deprecationMessage": "",
      "deprecated": false,
      "file": "libs/components/src/lib/input-text/zyfra-input-text.module.ts",
      "methods": [],
      "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { ZyfraInputDirective } from './zyfra-input-text.directive';\r\n\r\n@NgModule({\r\n  declarations: [ZyfraInputDirective],\r\n  imports: [CommonModule, FormsModule, ReactiveFormsModule],\r\n  exports: [ZyfraInputDirective]\r\n})\r\nexport class ZyfraInputTextModule {}\r\n",
      "children": [
        {
          "type": "providers",
          "elements": []
        },
        {
          "type": "declarations",
          "elements": [
            {
              "name": "ZyfraInputDirective"
            }
          ]
        },
        {
          "type": "imports",
          "elements": []
        },
        {
          "type": "exports",
          "elements": [
            {
              "name": "ZyfraInputDirective"
            }
          ]
        },
        {
          "type": "bootstrap",
          "elements": []
        },
        {
          "type": "classes",
          "elements": []
        }
      ]
    },
    {
      "name": "ZyfraMenuApplicationsModule",
      "id": "module-ZyfraMenuApplicationsModule-48ec46b784ff8c604cde631eb726f911",
      "description": "",
      "deprecationMessage": "",
      "deprecated": false,
      "file": "libs/components/src/lib/menu-applications/zyfra-menu-applications.module.ts",
      "methods": [],
      "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { ZyfraIconModule } from '../icon';\r\nimport { ZyfraMenuApplicationsComponent } from './zyfra-menu-applications.component';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ZyfraMenuApplicationsItemComponent } from './zyfra-menu-applications-item/zyfra-menu-applications-item.component';\r\nimport { ZyfraSplitterModule } from '../splitter';\r\nimport { ZyfraTooltipModule } from '../tooltip';\r\n\r\n@NgModule({\r\n  declarations: [ZyfraMenuApplicationsComponent, ZyfraMenuApplicationsItemComponent],\r\n  imports: [CommonModule, ZyfraIconModule, ZyfraSplitterModule, ZyfraTooltipModule],\r\n  exports: [ZyfraMenuApplicationsComponent],\r\n})\r\nexport class ZyfraMenuApplicationsModule {}\r\n",
      "children": [
        {
          "type": "providers",
          "elements": []
        },
        {
          "type": "declarations",
          "elements": [
            {
              "name": "ZyfraMenuApplicationsComponent"
            },
            {
              "name": "ZyfraMenuApplicationsItemComponent"
            }
          ]
        },
        {
          "type": "imports",
          "elements": [
            {
              "name": "ZyfraIconModule"
            },
            {
              "name": "ZyfraSplitterModule"
            },
            {
              "name": "ZyfraTooltipModule"
            }
          ]
        },
        {
          "type": "exports",
          "elements": [
            {
              "name": "ZyfraMenuApplicationsComponent"
            }
          ]
        },
        {
          "type": "bootstrap",
          "elements": []
        },
        {
          "type": "classes",
          "elements": []
        }
      ]
    },
    {
      "name": "ZyfraMessageModule",
      "id": "module-ZyfraMessageModule-6b74f177fb9c5597976a17725995b13a",
      "description": "",
      "deprecationMessage": "",
      "deprecated": false,
      "file": "libs/components/src/lib/message/zyfra-message.module.ts",
      "methods": [],
      "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { MessagesModule } from 'primeng/messages';\r\nimport { MessageModule } from 'primeng/message';\r\nimport { ZyfraMessageComponent } from './zyfra-message.component';\r\n\r\n@NgModule({\r\n  declarations: [ZyfraMessageComponent],\r\n  imports: [MessagesModule, MessageModule],\r\n  exports: [ZyfraMessageComponent],\r\n})\r\nexport class ZyfraMessageModule {}\r\n",
      "children": [
        {
          "type": "providers",
          "elements": []
        },
        {
          "type": "declarations",
          "elements": [
            {
              "name": "ZyfraMessageComponent"
            }
          ]
        },
        {
          "type": "imports",
          "elements": []
        },
        {
          "type": "exports",
          "elements": [
            {
              "name": "ZyfraMessageComponent"
            }
          ]
        },
        {
          "type": "bootstrap",
          "elements": []
        },
        {
          "type": "classes",
          "elements": []
        }
      ]
    },
    {
      "name": "ZyfraNavMenuModule",
      "id": "module-ZyfraNavMenuModule-4646c97f90922c8e88a5cd00a6838aeb",
      "description": "",
      "deprecationMessage": "",
      "deprecated": false,
      "file": "libs/components/src/lib/nav-menu/zyfra-nav-menu.module.ts",
      "methods": [],
      "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { PanelMenuModule } from 'primeng/panelmenu';\r\nimport { MenuModule } from 'primeng/menu';\r\nimport { TreeModule } from 'primeng/tree';\r\nimport { ToggleButtonModule } from 'primeng/togglebutton';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ButtonModule } from 'primeng/button';\r\nimport { RippleModule } from 'primeng/ripple';\r\nimport { InputTextModule } from 'primeng/inputtext';\r\nimport { OverlayPanelModule } from 'primeng/overlaypanel';\r\nimport { RadioButtonModule } from 'primeng/radiobutton';\r\nimport { TooltipModule } from 'primeng/tooltip';\r\nimport { ZyfraNavMenuComponent } from './components/zyfra-nav-menu/zyfra-nav-menu.component';\r\nimport { ZyfraAutofocusDirective } from './directives/zyfra-autofocus.directives';\r\nimport { ZyfraNavMenuGroupDirective } from './directives/nav-menu-group.directive';\r\nimport { NavMenuService } from './service/selection.service';\r\nimport { ZyfraNavMenuItemComponent } from './components/zyfra-menu-item/zyfra-nav-menu-item.component';\r\nimport { ZyfraNavMenuGroupComponent } from './components/zyfra-nav-menu-group/zyfra-nav-menu-group.component';\r\nimport { ZyfraTooltipModule } from '../tooltip/zyfra-tooltip.module';\r\nimport { ZyfraAccordionModule } from '../accordion/zyfra-accordion.module';\r\nimport { ZyfraInputModule } from '../input/zyfra-input.module';\r\nimport { ZyfraButtonModule } from '../button/zyfra-button.module';\r\nimport { ZyfraCheckBoxModule } from '../checkbox/zyfra-checkbox.module';\r\nimport { ZyfraTemplateModule } from '../@core/shared/zyfra-template.module';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    ZyfraNavMenuComponent,\r\n    ZyfraAutofocusDirective,\r\n    ZyfraNavMenuGroupDirective,\r\n    ZyfraNavMenuGroupComponent,\r\n    ZyfraNavMenuItemComponent\r\n  ],\r\n  imports: [\r\n    PanelMenuModule,\r\n    MenuModule,\r\n    TreeModule,\r\n    ToggleButtonModule,\r\n    FormsModule,\r\n    ButtonModule,\r\n    RippleModule,\r\n    CommonModule,\r\n    InputTextModule,\r\n    OverlayPanelModule,\r\n    RadioButtonModule,\r\n    TooltipModule,\r\n    ZyfraCheckBoxModule,\r\n    ZyfraButtonModule,\r\n    ZyfraInputModule,\r\n    ZyfraAccordionModule,\r\n    ZyfraTemplateModule,\r\n    ZyfraTooltipModule\r\n  ],\r\n  providers: [NavMenuService],\r\n  exports: [\r\n    ZyfraNavMenuComponent,\r\n    ZyfraNavMenuGroupDirective\r\n  ]\r\n})\r\nexport class ZyfraNavMenuModule { }\r\n",
      "children": [
        {
          "type": "providers",
          "elements": [
            {
              "name": "NavMenuService"
            }
          ]
        },
        {
          "type": "declarations",
          "elements": [
            {
              "name": "ZyfraAutofocusDirective"
            },
            {
              "name": "ZyfraNavMenuComponent"
            },
            {
              "name": "ZyfraNavMenuGroupComponent"
            },
            {
              "name": "ZyfraNavMenuGroupDirective"
            },
            {
              "name": "ZyfraNavMenuItemComponent"
            }
          ]
        },
        {
          "type": "imports",
          "elements": [
            {
              "name": "ZyfraAccordionModule"
            },
            {
              "name": "ZyfraButtonModule"
            },
            {
              "name": "ZyfraCheckBoxModule"
            },
            {
              "name": "ZyfraInputModule"
            },
            {
              "name": "ZyfraTemplateModule"
            },
            {
              "name": "ZyfraTooltipModule"
            }
          ]
        },
        {
          "type": "exports",
          "elements": [
            {
              "name": "ZyfraNavMenuComponent"
            },
            {
              "name": "ZyfraNavMenuGroupDirective"
            }
          ]
        },
        {
          "type": "bootstrap",
          "elements": []
        },
        {
          "type": "classes",
          "elements": []
        }
      ]
    },
    {
      "name": "ZyfraPaginatorModule",
      "id": "module-ZyfraPaginatorModule-edf367fcd4c72dbb5f9436c5c62d1f49",
      "description": "",
      "deprecationMessage": "",
      "deprecated": false,
      "file": "libs/components/src/lib/paginator/zyfra-paginator.module.ts",
      "methods": [],
      "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { ZyfraPaginatorComponent } from './zyfra-paginator.component';\r\nimport { PaginatorModule } from 'primeng/paginator';\r\n\r\n@NgModule({\r\n  declarations: [ZyfraPaginatorComponent],\r\n  imports: [PaginatorModule],\r\n  exports: [ZyfraPaginatorComponent],\r\n})\r\nexport class ZyfraPaginatorModule {}\r\n",
      "children": [
        {
          "type": "providers",
          "elements": []
        },
        {
          "type": "declarations",
          "elements": [
            {
              "name": "ZyfraPaginatorComponent"
            }
          ]
        },
        {
          "type": "imports",
          "elements": []
        },
        {
          "type": "exports",
          "elements": [
            {
              "name": "ZyfraPaginatorComponent"
            }
          ]
        },
        {
          "type": "bootstrap",
          "elements": []
        },
        {
          "type": "classes",
          "elements": []
        }
      ]
    },
    {
      "name": "ZyfraPasswordModule",
      "id": "module-ZyfraPasswordModule-cfda9c2ac5d468b582c131540eb173b8",
      "description": "",
      "deprecationMessage": "",
      "deprecated": false,
      "file": "libs/components/src/lib/password/zyfra-password.module.ts",
      "methods": [],
      "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { PasswordModule } from 'primeng/password';\r\nimport { ZyfraPasswordComponent } from './zyfra-password.component';\r\n\r\n@NgModule({\r\n  declarations: [ZyfraPasswordComponent],\r\n  imports: [CommonModule, FormsModule, ReactiveFormsModule, PasswordModule],\r\n  exports: [ZyfraPasswordComponent],\r\n})\r\nexport class ZyfraPasswordModule {}\r\n",
      "children": [
        {
          "type": "providers",
          "elements": []
        },
        {
          "type": "declarations",
          "elements": [
            {
              "name": "ZyfraPasswordComponent"
            }
          ]
        },
        {
          "type": "imports",
          "elements": []
        },
        {
          "type": "exports",
          "elements": [
            {
              "name": "ZyfraPasswordComponent"
            }
          ]
        },
        {
          "type": "bootstrap",
          "elements": []
        },
        {
          "type": "classes",
          "elements": []
        }
      ]
    },
    {
      "name": "ZyfraProgressBarModule",
      "id": "module-ZyfraProgressBarModule-b2b1aef750d52dbde632dc162581c6b3",
      "description": "",
      "deprecationMessage": "",
      "deprecated": false,
      "file": "libs/components/src/lib/progress/zyfra-progress-bar.module.ts",
      "methods": [],
      "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { ProgressBarModule } from 'primeng/progressbar';\r\nimport { ZyfraProgressBarComponent } from './zyfra-progress-bar.component';\r\n\r\n@NgModule({\r\n  declarations: [ZyfraProgressBarComponent],\r\n  imports: [ProgressBarModule],\r\n  exports: [ZyfraProgressBarComponent],\r\n})\r\nexport class ZyfraProgressBarModule {}\r\n",
      "children": [
        {
          "type": "providers",
          "elements": []
        },
        {
          "type": "declarations",
          "elements": [
            {
              "name": "ZyfraProgressBarComponent"
            }
          ]
        },
        {
          "type": "imports",
          "elements": []
        },
        {
          "type": "exports",
          "elements": [
            {
              "name": "ZyfraProgressBarComponent"
            }
          ]
        },
        {
          "type": "bootstrap",
          "elements": []
        },
        {
          "type": "classes",
          "elements": []
        }
      ]
    },
    {
      "name": "ZyfraRadioButtonModule",
      "id": "module-ZyfraRadioButtonModule-5ee8ebbdd7217e766c8859ffef5ffb87",
      "description": "",
      "deprecationMessage": "",
      "deprecated": false,
      "file": "libs/components/src/lib/radio-button/zyfra-radio-button.module.ts",
      "methods": [],
      "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { ZyfraDisableControlModule } from '../@core/shared/zyfra-disable-control.module';\r\nimport { ZyfraRadioButtonComponent } from './zyfra-radio-button.component';\r\nimport { RadioButtonModule } from 'primeng/radiobutton';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { CommonModule } from '@angular/common';\r\n\r\n@NgModule({\r\n  declarations: [ZyfraRadioButtonComponent],\r\n  imports: [RadioButtonModule, FormsModule, ReactiveFormsModule, CommonModule, ZyfraDisableControlModule],\r\n  exports: [ZyfraRadioButtonComponent],\r\n})\r\nexport class ZyfraRadioButtonModule {}\r\n",
      "children": [
        {
          "type": "providers",
          "elements": []
        },
        {
          "type": "declarations",
          "elements": [
            {
              "name": "ZyfraRadioButtonComponent"
            }
          ]
        },
        {
          "type": "imports",
          "elements": [
            {
              "name": "ZyfraDisableControlModule"
            }
          ]
        },
        {
          "type": "exports",
          "elements": [
            {
              "name": "ZyfraRadioButtonComponent"
            }
          ]
        },
        {
          "type": "bootstrap",
          "elements": []
        },
        {
          "type": "classes",
          "elements": []
        }
      ]
    },
    {
      "name": "ZyfraSelectButtonModule",
      "id": "module-ZyfraSelectButtonModule-6cb3b475046ffee7b5f3e5f9521731f7",
      "description": "",
      "deprecationMessage": "",
      "deprecated": false,
      "file": "libs/components/src/lib/select-button/zyfra-select-button.module.ts",
      "methods": [],
      "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { ZyfraSelectButtonComponent } from './zyfra-select-button.component';\r\nimport { SelectButtonModule } from 'primeng/selectbutton';\r\n\r\n@NgModule({\r\n  declarations: [ZyfraSelectButtonComponent],\r\n  imports: [SelectButtonModule],\r\n  exports: [ZyfraSelectButtonComponent],\r\n})\r\nexport class ZyfraSelectButtonModule {}\r\n",
      "children": [
        {
          "type": "providers",
          "elements": []
        },
        {
          "type": "declarations",
          "elements": [
            {
              "name": "ZyfraSelectButtonComponent"
            }
          ]
        },
        {
          "type": "imports",
          "elements": []
        },
        {
          "type": "exports",
          "elements": [
            {
              "name": "ZyfraSelectButtonComponent"
            }
          ]
        },
        {
          "type": "bootstrap",
          "elements": []
        },
        {
          "type": "classes",
          "elements": []
        }
      ]
    },
    {
      "name": "ZyfraSliderModule",
      "id": "module-ZyfraSliderModule-5d8738b0317ba096b421f0f10bc3e39d",
      "description": "",
      "deprecationMessage": "",
      "deprecated": false,
      "file": "libs/components/src/lib/slider/zyfra-slider.module.ts",
      "methods": [],
      "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common'; \r\nimport {FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport {SliderModule} from 'primeng/slider';\r\nimport { ZyfraSliderComponent } from './zyfra-slider.component';\r\n\r\n\r\n@NgModule({\r\n  declarations: [ZyfraSliderComponent],\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule, \r\n    ReactiveFormsModule,\r\n    SliderModule,\r\n  ],\r\n  exports: [ZyfraSliderComponent]\r\n})\r\nexport class ZyfraSliderModule { }\r\n",
      "children": [
        {
          "type": "providers",
          "elements": []
        },
        {
          "type": "declarations",
          "elements": [
            {
              "name": "ZyfraSliderComponent"
            }
          ]
        },
        {
          "type": "imports",
          "elements": []
        },
        {
          "type": "exports",
          "elements": [
            {
              "name": "ZyfraSliderComponent"
            }
          ]
        },
        {
          "type": "bootstrap",
          "elements": []
        },
        {
          "type": "classes",
          "elements": []
        }
      ]
    },
    {
      "name": "ZyfraSpinnerModule",
      "id": "module-ZyfraSpinnerModule-c78cce01ff6afe4cf3dfa2cd736a72dd",
      "description": "",
      "deprecationMessage": "",
      "deprecated": false,
      "file": "libs/components/src/lib/spinner/zyfra-spinner.module.ts",
      "methods": [],
      "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { ZyfraSpinnerComponent } from './zyfra-spinner.component';\r\nimport { ProgressSpinnerModule } from 'primeng/progressspinner';\r\n\r\n@NgModule({\r\n  declarations: [ZyfraSpinnerComponent],\r\n  imports: [ProgressSpinnerModule],\r\n  exports: [ZyfraSpinnerComponent],\r\n})\r\nexport class ZyfraSpinnerModule {}\r\n",
      "children": [
        {
          "type": "providers",
          "elements": []
        },
        {
          "type": "declarations",
          "elements": [
            {
              "name": "ZyfraSpinnerComponent"
            }
          ]
        },
        {
          "type": "imports",
          "elements": []
        },
        {
          "type": "exports",
          "elements": [
            {
              "name": "ZyfraSpinnerComponent"
            }
          ]
        },
        {
          "type": "bootstrap",
          "elements": []
        },
        {
          "type": "classes",
          "elements": []
        }
      ]
    },
    {
      "name": "ZyfraSplitButtonModule",
      "id": "module-ZyfraSplitButtonModule-8b30755daf4e361a51389fa4eb8b28fb",
      "description": "",
      "deprecationMessage": "",
      "deprecated": false,
      "file": "libs/components/src/lib/split-button/zyfra-split-button.module.ts",
      "methods": [],
      "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { ZyfraSplitButtonComponent } from './zyfra-split-button.component';\r\nimport { SplitButtonModule } from 'primeng/splitbutton';\r\n\r\n@NgModule({\r\n  declarations: [ZyfraSplitButtonComponent],\r\n  imports: [SplitButtonModule],\r\n  exports: [ZyfraSplitButtonComponent],\r\n})\r\nexport class ZyfraSplitButtonModule {}\r\n",
      "children": [
        {
          "type": "providers",
          "elements": []
        },
        {
          "type": "declarations",
          "elements": [
            {
              "name": "ZyfraSplitButtonComponent"
            }
          ]
        },
        {
          "type": "imports",
          "elements": []
        },
        {
          "type": "exports",
          "elements": [
            {
              "name": "ZyfraSplitButtonComponent"
            }
          ]
        },
        {
          "type": "bootstrap",
          "elements": []
        },
        {
          "type": "classes",
          "elements": []
        }
      ]
    },
    {
      "name": "ZyfraSplitterModule",
      "id": "module-ZyfraSplitterModule-aea9b2133eb95bee526ddacdc531ee60",
      "description": "",
      "deprecationMessage": "",
      "deprecated": false,
      "file": "libs/components/src/lib/splitter/zyfra-splitter.module.ts",
      "methods": [],
      "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { ZyfraSplitterComponent } from './zyfra-splitter.component';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ZyfraSplitterTemplateDirective } from './zyfra-splitter.directives';\r\nimport { SplitterModule } from './p-splitter/splitter.module';\r\n\r\n@NgModule({\r\n  declarations: [ZyfraSplitterTemplateDirective, ZyfraSplitterComponent],\r\n  imports: [CommonModule, SplitterModule],\r\n  exports: [ZyfraSplitterTemplateDirective, ZyfraSplitterComponent],\r\n})\r\nexport class ZyfraSplitterModule {}\r\n",
      "children": [
        {
          "type": "providers",
          "elements": []
        },
        {
          "type": "declarations",
          "elements": [
            {
              "name": "ZyfraSplitterComponent"
            },
            {
              "name": "ZyfraSplitterTemplateDirective"
            }
          ]
        },
        {
          "type": "imports",
          "elements": [
            {
              "name": "SplitterModule"
            }
          ]
        },
        {
          "type": "exports",
          "elements": [
            {
              "name": "ZyfraSplitterComponent"
            },
            {
              "name": "ZyfraSplitterTemplateDirective"
            }
          ]
        },
        {
          "type": "bootstrap",
          "elements": []
        },
        {
          "type": "classes",
          "elements": []
        }
      ]
    },
    {
      "name": "ZyfraTableModule",
      "id": "module-ZyfraTableModule-65112cc99771ae37b8d09040186cd9f5",
      "description": "",
      "deprecationMessage": "",
      "deprecated": false,
      "file": "libs/components/src/lib/table/zyfra-table.module.ts",
      "methods": [],
      "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { TableModule } from 'primeng/table';\r\nimport { ZyfraTableComponent } from './zyfra-table.component';\r\nimport { ZyfraTableHeaderCheckboxComponent } from './table-header-checkbox/table-header-checkbox.component';\r\nimport { ZyfraTableCheckboxComponent } from './table-checkbox/zyfra-table-checkbox.component';\r\nimport { ZyfraSortableColumnDirective } from './directives/sortable-column.directive';\r\nimport { ZyfraSortIconComponent } from './sort-icon/sort-icon.component';\r\nimport { ZyfraTableColumnFilterComponent } from './table-column-filter/table-column-filter.component';\r\nimport { ZyfraEditableColumnDirective } from './directives/editable-column.directive';\r\nimport { ZyfraCellEditorComponent } from './cell-editor/cell-editor.component';\r\nimport { ZyfraEditableRowDirective } from './directives/editable-row.directive';\r\nimport { ZyfraInitEditableRowDirective } from './directives/init-editable-row.directive';\r\nimport { ZyfraSaveEditableRowDirective } from './directives/save-editable-row.directive';\r\nimport { ZyfraCancelEditableRowDirective } from './directives/cancel-editable-row.directive';\r\nimport { ZyfraFrozenColumnDirective } from './directives/frozen-column.directive';\r\nimport { ZyfraResizableColumnDirective } from './directives/resizable-column.directive';\r\nimport { ZyfraReordableRowDirective } from './directives/reordable-row.directive';\r\nimport { ZyfraReordableRowHandlerDirective } from './directives/reordable-row-handler.directive';\r\nimport { ZyfraSelectableRowDirective } from './directives/selectable-row.directive';\r\nimport { ZyfraRowGroupHeaderDirective } from './directives/row-group-header.directive';\r\nimport { ZyfraReordableColumnDirective } from './directives/reordable-column.directive';\r\nimport { ZyfraRowTogglerComponent } from './row-toggler/row-toggler.component';\r\nimport { ZyfraSearchCellComponent } from './search-cell/search-cell.component';\r\nimport { ZyfraTableSharedModule } from '../@core/base-table/base-table.module';\r\nimport { BaseTableTemplateDirective } from '../@core/base-table/directives/base-table-template.directive';\r\nimport { ZyfraBaseTableComponent, ZyfraRowBaseDirective } from '../@core/base-table';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    ZyfraTableComponent,\r\n    ZyfraTableHeaderCheckboxComponent,\r\n    ZyfraTableCheckboxComponent,\r\n    ZyfraSortableColumnDirective,\r\n    ZyfraSortIconComponent,\r\n    ZyfraTableColumnFilterComponent,\r\n    ZyfraEditableColumnDirective,\r\n    ZyfraCellEditorComponent,\r\n    ZyfraEditableRowDirective,\r\n    ZyfraInitEditableRowDirective,\r\n    ZyfraSaveEditableRowDirective,\r\n    ZyfraCancelEditableRowDirective,\r\n    ZyfraFrozenColumnDirective,\r\n    ZyfraResizableColumnDirective,\r\n    ZyfraReordableRowDirective,\r\n    ZyfraReordableRowHandlerDirective,\r\n    ZyfraSelectableRowDirective,\r\n    ZyfraRowGroupHeaderDirective,\r\n    ZyfraReordableColumnDirective,\r\n    ZyfraRowTogglerComponent,\r\n    ZyfraSearchCellComponent,\r\n  ],\r\n  imports: [CommonModule, TableModule, ZyfraTableSharedModule],\r\n  exports: [\r\n    ZyfraTableComponent,\r\n    ZyfraTableHeaderCheckboxComponent,\r\n    ZyfraTableCheckboxComponent,\r\n    ZyfraSortableColumnDirective,\r\n    ZyfraSortIconComponent,\r\n    ZyfraTableColumnFilterComponent,\r\n    ZyfraEditableColumnDirective,\r\n    ZyfraCellEditorComponent,\r\n    ZyfraEditableRowDirective,\r\n    ZyfraInitEditableRowDirective,\r\n    ZyfraSaveEditableRowDirective,\r\n    ZyfraCancelEditableRowDirective,\r\n    ZyfraFrozenColumnDirective,\r\n    ZyfraResizableColumnDirective,\r\n    ZyfraReordableRowDirective,\r\n    ZyfraReordableRowHandlerDirective,\r\n    ZyfraSelectableRowDirective,\r\n    ZyfraReordableColumnDirective,\r\n    ZyfraRowTogglerComponent,\r\n    ZyfraRowGroupHeaderDirective,\r\n    ZyfraSearchCellComponent,\r\n    BaseTableTemplateDirective,\r\n    ZyfraRowBaseDirective,\r\n    ZyfraBaseTableComponent,\r\n  ],\r\n})\r\nexport class ZyfraTableModule {}\r\n",
      "children": [
        {
          "type": "providers",
          "elements": []
        },
        {
          "type": "declarations",
          "elements": [
            {
              "name": "ZyfraCancelEditableRowDirective"
            },
            {
              "name": "ZyfraCellEditorComponent"
            },
            {
              "name": "ZyfraEditableColumnDirective"
            },
            {
              "name": "ZyfraEditableRowDirective"
            },
            {
              "name": "ZyfraFrozenColumnDirective"
            },
            {
              "name": "ZyfraInitEditableRowDirective"
            },
            {
              "name": "ZyfraReordableColumnDirective"
            },
            {
              "name": "ZyfraReordableRowDirective"
            },
            {
              "name": "ZyfraReordableRowHandlerDirective"
            },
            {
              "name": "ZyfraResizableColumnDirective"
            },
            {
              "name": "ZyfraRowGroupHeaderDirective"
            },
            {
              "name": "ZyfraRowTogglerComponent"
            },
            {
              "name": "ZyfraSaveEditableRowDirective"
            },
            {
              "name": "ZyfraSearchCellComponent"
            },
            {
              "name": "ZyfraSelectableRowDirective"
            },
            {
              "name": "ZyfraSortIconComponent"
            },
            {
              "name": "ZyfraSortableColumnDirective"
            },
            {
              "name": "ZyfraTableCheckboxComponent"
            },
            {
              "name": "ZyfraTableColumnFilterComponent"
            },
            {
              "name": "ZyfraTableComponent"
            },
            {
              "name": "ZyfraTableHeaderCheckboxComponent"
            }
          ]
        },
        {
          "type": "imports",
          "elements": [
            {
              "name": "ZyfraTableSharedModule"
            }
          ]
        },
        {
          "type": "exports",
          "elements": [
            {
              "name": "BaseTableTemplateDirective"
            },
            {
              "name": "ZyfraCancelEditableRowDirective"
            },
            {
              "name": "ZyfraCellEditorComponent"
            },
            {
              "name": "ZyfraEditableColumnDirective"
            },
            {
              "name": "ZyfraEditableRowDirective"
            },
            {
              "name": "ZyfraFrozenColumnDirective"
            },
            {
              "name": "ZyfraInitEditableRowDirective"
            },
            {
              "name": "ZyfraReordableColumnDirective"
            },
            {
              "name": "ZyfraReordableRowDirective"
            },
            {
              "name": "ZyfraReordableRowHandlerDirective"
            },
            {
              "name": "ZyfraResizableColumnDirective"
            },
            {
              "name": "ZyfraRowBaseDirective"
            },
            {
              "name": "ZyfraRowGroupHeaderDirective"
            },
            {
              "name": "ZyfraRowTogglerComponent"
            },
            {
              "name": "ZyfraSaveEditableRowDirective"
            },
            {
              "name": "ZyfraSearchCellComponent"
            },
            {
              "name": "ZyfraSelectableRowDirective"
            },
            {
              "name": "ZyfraSortIconComponent"
            },
            {
              "name": "ZyfraSortableColumnDirective"
            },
            {
              "name": "ZyfraTableCheckboxComponent"
            },
            {
              "name": "ZyfraTableColumnFilterComponent"
            },
            {
              "name": "ZyfraTableComponent"
            },
            {
              "name": "ZyfraTableHeaderCheckboxComponent"
            }
          ]
        },
        {
          "type": "bootstrap",
          "elements": []
        },
        {
          "type": "classes",
          "elements": []
        }
      ]
    },
    {
      "name": "ZyfraTableSharedModule",
      "id": "module-ZyfraTableSharedModule-3456143cdb577e43a23c4988c203f26c",
      "description": "",
      "deprecationMessage": "",
      "deprecated": false,
      "file": "libs/components/src/lib/@core/base-table/base-table.module.ts",
      "methods": [],
      "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { BaseTableTemplateDirective } from './directives/base-table-template.directive';\r\nimport { ZyfraRowBaseDirective } from './directives/zyfra-row-base.directive';\r\nimport { ZyfraBaseTableComponent } from './zyfra-base-table.directive';\r\n\r\n@NgModule({\r\n  declarations: [BaseTableTemplateDirective, ZyfraRowBaseDirective, ZyfraBaseTableComponent],\r\n  exports: [BaseTableTemplateDirective, ZyfraRowBaseDirective, ZyfraBaseTableComponent],\r\n})\r\nexport class ZyfraTableSharedModule {}\r\n",
      "children": [
        {
          "type": "providers",
          "elements": []
        },
        {
          "type": "declarations",
          "elements": [
            {
              "name": "BaseTableTemplateDirective"
            },
            {
              "name": "ZyfraBaseTableComponent"
            },
            {
              "name": "ZyfraRowBaseDirective"
            }
          ]
        },
        {
          "type": "imports",
          "elements": []
        },
        {
          "type": "exports",
          "elements": [
            {
              "name": "BaseTableTemplateDirective"
            },
            {
              "name": "ZyfraBaseTableComponent"
            },
            {
              "name": "ZyfraRowBaseDirective"
            }
          ]
        },
        {
          "type": "bootstrap",
          "elements": []
        },
        {
          "type": "classes",
          "elements": []
        }
      ]
    },
    {
      "name": "ZyfraTabMenuModule",
      "id": "module-ZyfraTabMenuModule-4a1cbb4f2c0e4aa985a139788d4c1b53",
      "description": "",
      "deprecationMessage": "",
      "deprecated": false,
      "file": "libs/components/src/lib/tab-menu/zyfra-tab-menu.module.ts",
      "methods": [],
      "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { TooltipModule } from 'primeng/tooltip';\r\nimport { TabMenuModule } from 'primeng/tabmenu';\r\nimport { SlideMenuModule } from 'primeng/slidemenu';\r\nimport { ZyfraTabMenuComponent } from './zyfra-tab-menu.component';\r\nimport { OverlayPanelModule } from 'primeng/overlaypanel';\r\nimport { ZyfraTooltipModule } from '../tooltip';\r\n\r\n@NgModule({\r\n  declarations: [ZyfraTabMenuComponent],\r\n  imports: [CommonModule, TooltipModule, TabMenuModule, OverlayPanelModule, SlideMenuModule, ZyfraTooltipModule],\r\n  exports: [ZyfraTabMenuComponent],\r\n})\r\nexport class ZyfraTabMenuModule {}\r\n",
      "children": [
        {
          "type": "providers",
          "elements": []
        },
        {
          "type": "declarations",
          "elements": [
            {
              "name": "ZyfraTabMenuComponent"
            }
          ]
        },
        {
          "type": "imports",
          "elements": [
            {
              "name": "ZyfraTooltipModule"
            }
          ]
        },
        {
          "type": "exports",
          "elements": [
            {
              "name": "ZyfraTabMenuComponent"
            }
          ]
        },
        {
          "type": "bootstrap",
          "elements": []
        },
        {
          "type": "classes",
          "elements": []
        }
      ]
    },
    {
      "name": "ZyfraTabViewModule",
      "id": "module-ZyfraTabViewModule-99d65f5383342a7d80be1934b5a38bea",
      "description": "",
      "deprecationMessage": "",
      "deprecated": false,
      "file": "libs/components/src/lib/tab-view/zyfra-tab-view.module.ts",
      "methods": [],
      "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { TabViewModule } from 'primeng/tabview';\r\nimport { CommonModule } from '@angular/common';\r\nimport { OverlayPanelModule } from 'primeng/overlaypanel';\r\nimport { TooltipModule } from 'primeng/tooltip';\r\nimport { ZyfraTabViewComponent } from './zyfra-tab-view/zyfra-tab-view.component';\r\nimport { ZyfraTabPanelComponent } from './zyfra-tab-panel/zyfra-tab-panel.component';\r\n\r\n@NgModule({\r\n  declarations: [ZyfraTabViewComponent, ZyfraTabPanelComponent],\r\n  imports: [CommonModule, OverlayPanelModule, TabViewModule, TooltipModule],\r\n  exports: [ZyfraTabViewComponent, ZyfraTabPanelComponent],\r\n})\r\nexport class ZyfraTabViewModule {}\r\n",
      "children": [
        {
          "type": "providers",
          "elements": []
        },
        {
          "type": "declarations",
          "elements": [
            {
              "name": "ZyfraTabPanelComponent"
            },
            {
              "name": "ZyfraTabViewComponent"
            }
          ]
        },
        {
          "type": "imports",
          "elements": []
        },
        {
          "type": "exports",
          "elements": [
            {
              "name": "ZyfraTabPanelComponent"
            },
            {
              "name": "ZyfraTabViewComponent"
            }
          ]
        },
        {
          "type": "bootstrap",
          "elements": []
        },
        {
          "type": "classes",
          "elements": []
        }
      ]
    },
    {
      "name": "ZyfraTemplateModule",
      "id": "module-ZyfraTemplateModule-9c43f4b239a8d08ac5a61a0e6131f02e",
      "description": "",
      "deprecationMessage": "",
      "deprecated": false,
      "file": "libs/components/src/lib/@core/shared/zyfra-template.module.ts",
      "methods": [],
      "sourceCode": "import { NgModule,Directive, Input, TemplateRef  } from '@angular/core';\r\n\r\n@Directive({\r\n  selector: '[zyfraTemplate]',\r\n})\r\nexport class ZyfraTemplateDirective {\r\n  @Input() zyfraTemplate: string;\r\n\r\n  constructor(public templateRef: TemplateRef<unknown>) {}\r\n}\r\n\r\n@NgModule({\r\n  declarations: [ZyfraTemplateDirective],\r\n  exports: [ZyfraTemplateDirective],\r\n})\r\nexport class ZyfraTemplateModule {}\r\n",
      "children": [
        {
          "type": "providers",
          "elements": []
        },
        {
          "type": "declarations",
          "elements": [
            {
              "name": "ZyfraTemplateDirective"
            }
          ]
        },
        {
          "type": "imports",
          "elements": []
        },
        {
          "type": "exports",
          "elements": [
            {
              "name": "ZyfraTemplateDirective"
            }
          ]
        },
        {
          "type": "bootstrap",
          "elements": []
        },
        {
          "type": "classes",
          "elements": []
        }
      ]
    },
    {
      "name": "ZyfraTextareaModule",
      "id": "module-ZyfraTextareaModule-0bbfa0d30bce3ee3cabbb3e13989a1b1",
      "description": "",
      "deprecationMessage": "",
      "deprecated": false,
      "file": "libs/components/src/lib/textarea/zyfra-textarea.module.ts",
      "methods": [],
      "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { InputTextareaModule } from 'primeng/inputtextarea';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { ZyfraDisableControlModule } from '../@core/shared/zyfra-disable-control.module';\r\nimport { ZyfraTextareaComponent } from './zyfra-textarea.component';\r\n\r\n@NgModule({\r\n  declarations: [ZyfraTextareaComponent],\r\n  imports: [CommonModule, FormsModule, ReactiveFormsModule, InputTextareaModule, ZyfraDisableControlModule],\r\n  exports: [ZyfraTextareaComponent],\r\n})\r\nexport class ZyfraTextareaModule {}\r\n",
      "children": [
        {
          "type": "providers",
          "elements": []
        },
        {
          "type": "declarations",
          "elements": [
            {
              "name": "ZyfraTextareaComponent"
            }
          ]
        },
        {
          "type": "imports",
          "elements": [
            {
              "name": "ZyfraDisableControlModule"
            }
          ]
        },
        {
          "type": "exports",
          "elements": [
            {
              "name": "ZyfraTextareaComponent"
            }
          ]
        },
        {
          "type": "bootstrap",
          "elements": []
        },
        {
          "type": "classes",
          "elements": []
        }
      ]
    },
    {
      "name": "ZyfraToastModule",
      "id": "module-ZyfraToastModule-a3d19b5c6a0bdf109226290a75ad9073",
      "description": "",
      "deprecationMessage": "",
      "deprecated": false,
      "file": "libs/components/src/lib/toast/zyfra-toast.module.ts",
      "methods": [],
      "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { MessageService } from 'primeng/api';\r\nimport { ToastModule } from 'primeng/toast';\r\nimport { RippleModule } from 'primeng/ripple';\r\nimport { ZyfraToastComponent } from './zyfra-toast.component';\r\n\r\n@NgModule({\r\n  declarations: [ZyfraToastComponent],\r\n  imports: [CommonModule, ToastModule, RippleModule, FormsModule],\r\n  providers: [MessageService],\r\n  exports: [ZyfraToastComponent],\r\n})\r\nexport class ZyfraToastModule {}\r\n",
      "children": [
        {
          "type": "providers",
          "elements": []
        },
        {
          "type": "declarations",
          "elements": [
            {
              "name": "ZyfraToastComponent"
            }
          ]
        },
        {
          "type": "imports",
          "elements": []
        },
        {
          "type": "exports",
          "elements": [
            {
              "name": "ZyfraToastComponent"
            }
          ]
        },
        {
          "type": "bootstrap",
          "elements": []
        },
        {
          "type": "classes",
          "elements": []
        }
      ]
    },
    {
      "name": "ZyfraToggleButtonModule",
      "id": "module-ZyfraToggleButtonModule-9f92679b3780a424559ee063beb001c0",
      "description": "",
      "deprecationMessage": "",
      "deprecated": false,
      "file": "libs/components/src/lib/toggle-button/zyfra-toggle-button.module.ts",
      "methods": [],
      "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { ZyfraToggleButtonComponent } from './zyfra-toggle-button.component';\r\nimport { ToggleButtonModule } from 'primeng/togglebutton';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\n@NgModule({\r\n  declarations: [ZyfraToggleButtonComponent],\r\n  imports: [FormsModule, CommonModule, ToggleButtonModule],\r\n  exports: [ZyfraToggleButtonComponent],\r\n})\r\nexport class ZyfraToggleButtonModule {}\r\n",
      "children": [
        {
          "type": "providers",
          "elements": []
        },
        {
          "type": "declarations",
          "elements": [
            {
              "name": "ZyfraToggleButtonComponent"
            }
          ]
        },
        {
          "type": "imports",
          "elements": []
        },
        {
          "type": "exports",
          "elements": [
            {
              "name": "ZyfraToggleButtonComponent"
            }
          ]
        },
        {
          "type": "bootstrap",
          "elements": []
        },
        {
          "type": "classes",
          "elements": []
        }
      ]
    },
    {
      "name": "ZyfraTooltipModule",
      "id": "module-ZyfraTooltipModule-3dc7ce7f252b79a169e923fb2147c3fc",
      "description": "",
      "deprecationMessage": "",
      "deprecated": false,
      "file": "libs/components/src/lib/tooltip/zyfra-tooltip.module.ts",
      "methods": [],
      "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { ZyfraTooltipDirective } from './zyfra-tooltip.directive';\r\nimport { ZyfraTooltipComponent } from './zyfra-tooltip.component';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ZyfraTooltipOverlayManager } from './zyfra-tooltip-overlay-manager.service';\r\nimport { CharLimitPipe } from '../@core/utils/chars-limit.pipe';\r\n\r\nconst EXPORTED_DECLARATIONS = [ZyfraTooltipDirective, ZyfraTooltipComponent];\r\n\r\n@NgModule({\r\n  imports: [CommonModule],\r\n  exports: EXPORTED_DECLARATIONS,\r\n  declarations: [\r\n    ...EXPORTED_DECLARATIONS,\r\n    CharLimitPipe\r\n  ],\r\n  providers: [ZyfraTooltipOverlayManager],\r\n  entryComponents: [ZyfraTooltipComponent],\r\n})\r\nexport class ZyfraTooltipModule {}\r\n",
      "children": [
        {
          "type": "providers",
          "elements": [
            {
              "name": "ZyfraTooltipOverlayManager"
            }
          ]
        },
        {
          "type": "declarations",
          "elements": [
            {
              "name": "CharLimitPipe"
            },
            {
              "name": "ZyfraTooltipComponent"
            },
            {
              "name": "ZyfraTooltipDirective"
            }
          ]
        },
        {
          "type": "imports",
          "elements": []
        },
        {
          "type": "exports",
          "elements": [
            {
              "name": "ZyfraTooltipComponent"
            },
            {
              "name": "ZyfraTooltipDirective"
            }
          ]
        },
        {
          "type": "bootstrap",
          "elements": []
        },
        {
          "type": "classes",
          "elements": []
        }
      ]
    },
    {
      "name": "ZyfraTreeModule",
      "id": "module-ZyfraTreeModule-eb85132fff93b2713cf7c175a26d8304",
      "description": "",
      "deprecationMessage": "",
      "deprecated": false,
      "file": "libs/components/src/lib/tree/zyfra-tree.module.ts",
      "methods": [],
      "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { ZyfraTreeComponent } from './zyfra-tree.component';\r\nimport { TreeModule } from 'primeng/tree';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    ZyfraTreeComponent,\r\n  ],\r\n  imports: [\r\n    TreeModule,\r\n  ],\r\n  exports: [\r\n    ZyfraTreeComponent,\r\n  ]\r\n})\r\nexport class ZyfraTreeModule { }\r\n",
      "children": [
        {
          "type": "providers",
          "elements": []
        },
        {
          "type": "declarations",
          "elements": [
            {
              "name": "ZyfraTreeComponent"
            }
          ]
        },
        {
          "type": "imports",
          "elements": []
        },
        {
          "type": "exports",
          "elements": [
            {
              "name": "ZyfraTreeComponent"
            }
          ]
        },
        {
          "type": "bootstrap",
          "elements": []
        },
        {
          "type": "classes",
          "elements": []
        }
      ]
    },
    {
      "name": "ZyfraTreeTableModule",
      "id": "module-ZyfraTreeTableModule-af8b792d884d4659951e695415cb6870",
      "description": "",
      "deprecationMessage": "",
      "deprecated": false,
      "file": "libs/components/src/lib/tree-table/zyfra-tree-table.module.ts",
      "methods": [],
      "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { TreeTableModule } from 'primeng/treetable';\r\n\r\nimport { ZyfraTreeTableComponent } from './tree-table.component';\r\nimport { ZyfraTreeTableSelectableRowDirective } from './directives/tree-table-selectable-row.directive';\r\nimport { ZyfraTreeTableTogglerComponent } from './tree-table-toggler/tree-table-toggler.component';\r\nimport { ZyfraTreeTableCheckboxComponent } from './tree-table-checkbox/tree-table-checkbox.component';\r\nimport { ZyfraTreeTableHeaderCheckboxComponent } from './tree-table-header-checkbox/tree-table-header-checkbox.component';\r\nimport { ZyfraTreeTableSortableColumnDirective } from './directives/tree-table-sortable-column.directive';\r\nimport { ZyfraTreeTableSortIconComponent } from './tree-table-sort-icon/tree-table-sort-icon.component';\r\nimport { ZyfraTreeTableCellEditorComponent } from './tree-table-cell-editor/tree-table-cell-editor.component';\r\nimport { ZyfraTreeTableEditableColumnDirective } from './directives/tree-table-editable-column.directive';\r\nimport { ZyfraTreeTableReorderableColumnDirective } from './directives/tree-table-reorderable-column.directive';\r\nimport { ZyfraTreeTableRowDirective } from './directives/tree-table-row.directive';\r\nimport { ZyfraTreeTableSearchCellComponent } from './tree-table-search-cell/tree-table-search-cell.component';\r\nimport { ZyfraTableSharedModule } from '../@core/base-table/base-table.module';\r\nimport { BaseTableTemplateDirective } from '../@core/base-table/directives/base-table-template.directive';\r\nimport { ZyfraBaseTableComponent, ZyfraRowBaseDirective } from '../@core/base-table';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    ZyfraTreeTableComponent,\r\n    ZyfraTreeTableRowDirective,\r\n    ZyfraTreeTableSelectableRowDirective,\r\n    ZyfraTreeTableTogglerComponent,\r\n    ZyfraTreeTableCheckboxComponent,\r\n    ZyfraTreeTableHeaderCheckboxComponent,\r\n    ZyfraTreeTableSortableColumnDirective,\r\n    ZyfraTreeTableSortIconComponent,\r\n    ZyfraTreeTableCellEditorComponent,\r\n    ZyfraTreeTableEditableColumnDirective,\r\n    ZyfraTreeTableReorderableColumnDirective,\r\n    ZyfraTreeTableSearchCellComponent,\r\n  ],\r\n  imports: [CommonModule, TreeTableModule, ZyfraTableSharedModule],\r\n  exports: [\r\n    ZyfraTreeTableComponent,\r\n    ZyfraTreeTableRowDirective,\r\n    ZyfraTreeTableSelectableRowDirective,\r\n    ZyfraTreeTableTogglerComponent,\r\n    ZyfraTreeTableCheckboxComponent,\r\n    ZyfraTreeTableHeaderCheckboxComponent,\r\n    ZyfraTreeTableSortableColumnDirective,\r\n    ZyfraTreeTableSortIconComponent,\r\n    ZyfraTreeTableCellEditorComponent,\r\n    ZyfraTreeTableEditableColumnDirective,\r\n    ZyfraTreeTableReorderableColumnDirective,\r\n    ZyfraTreeTableSearchCellComponent,\r\n    BaseTableTemplateDirective,\r\n    ZyfraRowBaseDirective,\r\n    ZyfraBaseTableComponent,\r\n  ],\r\n})\r\nexport class ZyfraTreeTableModule {}\r\n",
      "children": [
        {
          "type": "providers",
          "elements": []
        },
        {
          "type": "declarations",
          "elements": [
            {
              "name": "ZyfraTreeTableCellEditorComponent"
            },
            {
              "name": "ZyfraTreeTableCheckboxComponent"
            },
            {
              "name": "ZyfraTreeTableComponent"
            },
            {
              "name": "ZyfraTreeTableEditableColumnDirective"
            },
            {
              "name": "ZyfraTreeTableHeaderCheckboxComponent"
            },
            {
              "name": "ZyfraTreeTableReorderableColumnDirective"
            },
            {
              "name": "ZyfraTreeTableRowDirective"
            },
            {
              "name": "ZyfraTreeTableSearchCellComponent"
            },
            {
              "name": "ZyfraTreeTableSelectableRowDirective"
            },
            {
              "name": "ZyfraTreeTableSortIconComponent"
            },
            {
              "name": "ZyfraTreeTableSortableColumnDirective"
            },
            {
              "name": "ZyfraTreeTableTogglerComponent"
            }
          ]
        },
        {
          "type": "imports",
          "elements": [
            {
              "name": "ZyfraTableSharedModule"
            }
          ]
        },
        {
          "type": "exports",
          "elements": [
            {
              "name": "BaseTableTemplateDirective"
            },
            {
              "name": "ZyfraRowBaseDirective"
            },
            {
              "name": "ZyfraTreeTableCellEditorComponent"
            },
            {
              "name": "ZyfraTreeTableCheckboxComponent"
            },
            {
              "name": "ZyfraTreeTableComponent"
            },
            {
              "name": "ZyfraTreeTableEditableColumnDirective"
            },
            {
              "name": "ZyfraTreeTableHeaderCheckboxComponent"
            },
            {
              "name": "ZyfraTreeTableReorderableColumnDirective"
            },
            {
              "name": "ZyfraTreeTableRowDirective"
            },
            {
              "name": "ZyfraTreeTableSearchCellComponent"
            },
            {
              "name": "ZyfraTreeTableSelectableRowDirective"
            },
            {
              "name": "ZyfraTreeTableSortIconComponent"
            },
            {
              "name": "ZyfraTreeTableSortableColumnDirective"
            },
            {
              "name": "ZyfraTreeTableTogglerComponent"
            }
          ]
        },
        {
          "type": "bootstrap",
          "elements": []
        },
        {
          "type": "classes",
          "elements": []
        }
      ]
    },
    {
      "name": "ZyfraTriCheckBoxModule",
      "id": "module-ZyfraTriCheckBoxModule-d676683a6498b9572689b5ccf509b156",
      "description": "",
      "deprecationMessage": "",
      "deprecated": false,
      "file": "libs/components/src/lib/tri-checkbox/zyfra-tri-checkbox.module.ts",
      "methods": [],
      "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { ZyfraDisableControlModule } from '../@core/shared/zyfra-disable-control.module';\r\nimport { ZyfraTriCheckboxComponent } from './zyfra-tri-checkbox.component';\r\nimport { TriStateCheckboxModule } from 'primeng/tristatecheckbox';\r\n\r\n@NgModule({\r\n  declarations: [ZyfraTriCheckboxComponent],\r\n  imports: [CommonModule, FormsModule, ReactiveFormsModule, TriStateCheckboxModule, ZyfraDisableControlModule],\r\n  exports: [ZyfraTriCheckboxComponent],\r\n})\r\nexport class ZyfraTriCheckBoxModule {}\r\n",
      "children": [
        {
          "type": "providers",
          "elements": []
        },
        {
          "type": "declarations",
          "elements": [
            {
              "name": "ZyfraTriCheckboxComponent"
            }
          ]
        },
        {
          "type": "imports",
          "elements": [
            {
              "name": "ZyfraDisableControlModule"
            }
          ]
        },
        {
          "type": "exports",
          "elements": [
            {
              "name": "ZyfraTriCheckboxComponent"
            }
          ]
        },
        {
          "type": "bootstrap",
          "elements": []
        },
        {
          "type": "classes",
          "elements": []
        }
      ]
    },
    {
      "name": "ZyfraUiRootModule",
      "id": "module-ZyfraUiRootModule-fd551edc5c0b707212fc9d8a33d2ad29",
      "description": "",
      "deprecationMessage": "",
      "deprecated": false,
      "file": "libs/components/src/lib/root/zyfra-ui-root.module.ts",
      "methods": [],
      "sourceCode": "import { NgModule } from \"@angular/core\";\r\n\r\n@NgModule({})\r\nexport class ZyfraUiRootModule {\r\n  // do nothing,\r\n  // override if need root providers for components\r\n}",
      "children": [
        {
          "type": "providers",
          "elements": []
        },
        {
          "type": "declarations",
          "elements": []
        },
        {
          "type": "imports",
          "elements": []
        },
        {
          "type": "exports",
          "elements": []
        },
        {
          "type": "bootstrap",
          "elements": []
        },
        {
          "type": "classes",
          "elements": []
        }
      ]
    }
  ],
  "miscellaneous": {
    "variables": [
      {
        "name": "Absolute",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "libs/components/src/lib/datepicker/zyfra-datepicker.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "",
        "defaultValue": "Template.bind({})"
      },
      {
        "name": "AbsoluteMini",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "libs/components/src/lib/datepicker/zyfra-datepicker.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "",
        "defaultValue": "Template.bind({})"
      },
      {
        "name": "actions",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "libs/components/src/lib/nav-menu/zyfra-nav-menu.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "object",
        "defaultValue": "{\r\n  activeItemChange: action('activeItemChange'),\r\n  homeClick: action('homeClick'),\r\n  selectionChange: action('selectionChange'),\r\n  nodeCollapse: action('nodeCollapse'),\r\n  nodeExpand: action('nodeExpand'),\r\n}"
      },
      {
        "name": "actions",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "libs/components/src/lib/table/_story/stories/expand.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "object",
        "defaultValue": "{\r\n  rowExpand: action('rowExpand'),\r\n  rowCollapse: action('rowCollapse'),\r\n}"
      },
      {
        "name": "actions",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "libs/components/src/lib/table/_story/stories/selection.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "object",
        "defaultValue": "{\r\n  rowSelect: action('rowSelect'),\r\n  rowUnselect: action('rowUnselect'),\r\n  selectionChange: action('selectionChange'),\r\n  headerCheckboxToggle: action('headerCheckboxToggle'),\r\n}"
      },
      {
        "name": "actions",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "libs/components/src/lib/tree-table/_story/stories/basic.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "object",
        "defaultValue": "{\r\n  onNodeExpand: action('onNodeExpand'),\r\n  onNodeCollapse: action('onNodeCollapse'),\r\n  elementChange: action('elementChange'),\r\n}"
      },
      {
        "name": "actions",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "libs/components/src/lib/tree-table/_story/stories/col-group.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "object",
        "defaultValue": "{\r\n  onNodeExpand: action('onNodeExpand'),\r\n  onNodeCollapse: action('onNodeCollapse'),\r\n}"
      },
      {
        "name": "actions",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "libs/components/src/lib/tree-table/_story/stories/edit.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "object",
        "defaultValue": "{\r\n  onNodeExpand: action('onNodeExpand'),\r\n  onNodeCollapse: action('onNodeCollapse'),\r\n}"
      },
      {
        "name": "actions",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "libs/components/src/lib/tree-table/_story/stories/filter.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "object",
        "defaultValue": "{\r\n  onNodeExpand: action('onNodeExpand'),\r\n  onNodeCollapse: action('onNodeCollapse'),\r\n}"
      },
      {
        "name": "actions",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "libs/components/src/lib/tree-table/_story/stories/scroll.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "object",
        "defaultValue": "{\r\n  onNodeExpand: action('onNodeExpand'),\r\n  onNodeCollapse: action('onNodeCollapse'),\r\n}"
      },
      {
        "name": "actions",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "libs/components/src/lib/tree-table/_story/stories/reorder.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "object",
        "defaultValue": "{\r\n  onNodeExpand: action('onNodeExpand'),\r\n  onNodeCollapse: action('onNodeCollapse'),\r\n}"
      },
      {
        "name": "actions",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "libs/components/src/lib/tree-table/_story/stories/selection.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "object",
        "defaultValue": "{\r\n  onNodeSelect: action('onNodeSelect'),\r\n  onNodeUnselect: action('onNodeUnselect'),\r\n  onNodeExpand: action('onNodeExpand'),\r\n  onNodeCollapse: action('onNodeCollapse'),\r\n  onHeaderCheckboxToggle: action('onHeaderCheckboxToggle'),\r\n}"
      },
      {
        "name": "actions",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "libs/components/src/lib/tree-table/_story/stories/sort.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "object",
        "defaultValue": "{\r\n  onNodeExpand: action('onNodeExpand'),\r\n  onNodeCollapse: action('onNodeCollapse'),\r\n}"
      },
      {
        "name": "Animation",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "libs/components/src/lib/message/zyfra-message.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "",
        "defaultValue": "Template.bind({})"
      },
      {
        "name": "Animation",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "libs/components/src/lib/toast/zyfra-toast.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "",
        "defaultValue": "Template.bind({})"
      },
      {
        "name": "AnimationSpeed",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "libs/components/src/lib/split-button/zyfra-split-button.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "",
        "defaultValue": "Template.bind({})"
      },
      {
        "name": "AppendToBody",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "libs/components/src/lib/dropdown/zyfra-dropdown.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "",
        "defaultValue": "Template.bind({})"
      },
      {
        "name": "basic",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "libs/components/src/lib/nav-menu/dataForStories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "ZyfraMenuItem[]",
        "defaultValue": "[\r\n  {label: 'Наименование ячейки 1'},\r\n  {label: 'Наименование ячейки 2',  routerLink: ['/page2']},\r\n  {label: 'Наименование ячейки 3 длиннее остальных'},\r\n  {label: 'Наименование ячейки 4'},\r\n  {label: 'Наименование ячейки 5'},\r\n]"
      },
      {
        "name": "Basic",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "libs/components/src/lib/checkbox/zyfra-checkbox.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "",
        "defaultValue": "Template.bind({})"
      },
      {
        "name": "Basic",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "libs/components/src/lib/input-mask/zyfra-input-mask.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "",
        "defaultValue": "Template.bind({})"
      },
      {
        "name": "Basic",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "libs/components/src/lib/input-number/zyfra-input-number.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "",
        "defaultValue": "Template.bind({})"
      },
      {
        "name": "Basic",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "libs/components/src/lib/input-switch/zyfra-input-switch.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "",
        "defaultValue": "Template.bind({})"
      },
      {
        "name": "Basic",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "libs/components/src/lib/nav-menu/zyfra-nav-menu.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "",
        "defaultValue": "BasicTemplate.bind({})"
      },
      {
        "name": "Basic",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "libs/components/src/lib/paginator/zyfra-paginator.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "",
        "defaultValue": "Template.bind({})"
      },
      {
        "name": "Basic",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "libs/components/src/lib/spinner/zyfra-spinner.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "",
        "defaultValue": "Template.bind({})"
      },
      {
        "name": "Basic",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "libs/components/src/lib/datepicker/calendar/zyfra-calendar.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "",
        "defaultValue": "Template.bind({})"
      },
      {
        "name": "Basic",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "libs/components/src/lib/table/_story/stories/basic.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "",
        "defaultValue": "Template.bind({})"
      },
      {
        "name": "Basic",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "libs/components/src/lib/tree-table/_story/stories/basic.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "",
        "defaultValue": "Template.bind({})"
      },
      {
        "name": "BasicTemplate",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "libs/components/src/lib/nav-menu/zyfra-nav-menu.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "(args) => ({\r\n  template:\r\n      `<wrapper>\r\n          <ng-template zyfraTemplate>\r\n              <zyfra-splitter layout=\"horizontal\" [panelSizes]=\"[25,75]\" [style]=\"{ height: '600px' }\">\r\n                  <ng-template zyfraSplitterTemplate>\r\n                      <zyfra-nav-menu [model]=\"model\"\r\n                                      [menuTitle]=\"menuTitle\"\r\n                                      [headerConfig]=\"headerConfig\"\r\n                                      [settingsConfig]=\"settingsConfig\"\r\n                                      [toolbarConfig]=\"toolbarConfig\"\r\n                                      [emptyMessage]=\"emptyMessage\"\r\n                                      (activeItemChange)=\"activeItemChange($event)\"\r\n                                      (selectionChange)=\"selectionChange($event)\"\r\n                                      (homeClick)=\"homeClick($event)\"\r\n                                      (nodeExpand)=\"nodeExpand($event)\"\r\n                                      (nodeCollapse)=\"nodeCollapse($event)\">\r\n                    </zyfra-nav-menu>\r\n                  </ng-template>\r\n                  <ng-template zyfraSplitterTemplate>\r\n                      <router-outlet></router-outlet>\r\n                  </ng-template>\r\n              </zyfra-splitter>\r\n          </ng-template>\r\n      </wrapper>`,\r\n  props: {\r\n    ...args,\r\n    ...actions\r\n  },\r\n})"
      },
      {
        "name": "basicWithIcons",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "libs/components/src/lib/nav-menu/dataForStories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "ZyfraMenuItem[]",
        "defaultValue": "[\r\n  {label: 'Наименование ячейки 1', icon: 'zyfra-icon files-file'},\r\n  {label: 'Наименование ячейки 2', icon: 'zyfra-icon files-file'},\r\n  {label: 'Наименование ячейки 3 длиннее остальных', icon: 'zyfra-icon files-file',  routerLink: ['/page3']},\r\n  {label: 'Наименование ячейки 4', icon: 'zyfra-icon files-file'},\r\n  {label: 'Наименование ячейки 5', icon: 'zyfra-icon files-file'},\r\n]"
      },
      {
        "name": "BasicWithIcons",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "libs/components/src/lib/nav-menu/zyfra-nav-menu.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "",
        "defaultValue": "BasicTemplate.bind({})"
      },
      {
        "name": "Binary",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "libs/components/src/lib/tri-checkbox/zyfra-tri-checkbox.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "",
        "defaultValue": "Template.bind({})"
      },
      {
        "name": "BlockCustomComponent",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "libs/components/src/lib/block-ui/zyfra-block-ui.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "",
        "defaultValue": "BlockCustomComponentTemplate.bind({})"
      },
      {
        "name": "BlockCustomComponentTemplate",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "libs/components/src/lib/block-ui/zyfra-block-ui.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story<ZyfraBlockUiComponent>",
        "defaultValue": "(args: ZyfraBlockUiComponent) => ({\r\n  template: `\r\n    <div style=\"display: flex; gap: 10px;\">\r\n      <zyfra-button label=\"Заблокировать компонент\" (click)=\"block()\"></zyfra-button>\r\n      <zyfra-button label=\"Разблокировать компонент\" (click)=\"unblock()\"></zyfra-button>\r\n    </div>\r\n\r\n    <zyfra-block-ui [blocked]=\"blockedComponent\" [target]=\"blockableComponent\">\r\n      <i class=\"pi pi-lock\" style=\"font-size: 3rem\"></i>\r\n    </zyfra-block-ui>\r\n    <zyfra-test-custom-blockable #blockableComponent></zyfra-test-custom-blockable>\r\n  `,\r\n  props: {\r\n    ...args,\r\n    block() {\r\n      this.blockedComponent = true;\r\n    },\r\n    unblock() {\r\n      this.blockedComponent = false;\r\n    },\r\n  },\r\n})"
      },
      {
        "name": "BlockDocument",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "libs/components/src/lib/block-ui/zyfra-block-ui.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "",
        "defaultValue": "BlockDocumentTemplate.bind({})"
      },
      {
        "name": "BlockDocumentTemplate",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "libs/components/src/lib/block-ui/zyfra-block-ui.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story<ZyfraBlockUiComponent>",
        "defaultValue": "(args: ZyfraBlockUiComponent) => ({\r\n  template: `\r\n    <zyfra-block-ui [blocked]=\"blockedDocument\"></zyfra-block-ui>\r\n    <zyfra-button label=\"Заблокировать документ на 3 секунды\" (click)=\"block()\"></zyfra-button>\r\n  `,\r\n  props: {\r\n    ...args,\r\n    block() {\r\n      this.blockedDocument = true;\r\n      setTimeout(() => {\r\n        this.blockedDocument = false;\r\n      }, 3000);\r\n    },\r\n  },\r\n})"
      },
      {
        "name": "bottomMenuItems",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "libs/components/src/lib/menu-applications/zyfra-menu-applications.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "ZyfraMenuAppItem[]",
        "defaultValue": "[\r\n  {\r\n    title: 'Избранное',\r\n    icon: 'social-star'\r\n  },\r\n  {\r\n    title: 'Поиск',\r\n    icon: 'sort-zoom-in'\r\n  },\r\n  {\r\n    title: 'Служба техподдежки',\r\n    icon: 'alerts-pulse'\r\n  },\r\n]"
      },
      {
        "name": "ButtonBar",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "libs/components/src/lib/datepicker/calendar/zyfra-calendar.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "",
        "defaultValue": "Template.bind({})"
      },
      {
        "name": "CALENDAR_VALUE_ACCESSOR",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "libs/components/src/lib/datepicker/calendar/zyfra-calendar.component.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "any",
        "defaultValue": "{\r\n  provide: NG_VALUE_ACCESSOR,\r\n  useExisting: forwardRef(() => ZyfraCalendarComponent),\r\n  multi: true,\r\n}"
      },
      {
        "name": "CheckboxMultipleTemplate",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "libs/components/src/lib/checkbox/zyfra-checkbox.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "args => ({\r\n  template: `\r\n  <zyfra-checkbox-multiple></zyfra-checkbox-multiple>\r\n  `,\r\n  props: {\r\n    ...args,\r\n  },\r\n})"
      },
      {
        "name": "CheckboxWithFormControlComponentTemplate",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "libs/components/src/lib/checkbox/zyfra-checkbox.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story<ZyfraCheckboxComponent>",
        "defaultValue": "args => ({\r\n  template: `\r\n    <div><zyfra-checkbox label=\"Чекбокс с FormControl\" [formControl]=\"formControl\"></zyfra-checkbox></div>\r\n    <div style=\"font-family: var(--fontFamily); margin-top: 20px;\">(Значение чекбокса: {{formControl?.value === undefined ? 'undefined' : formControl?.value}})</div>\r\n    <br>\r\n    <br>\r\n    <zyfra-button [style]=\"{ 'margin-right': '5px' }\" label=\"toggle disable/enable\" (click)=\"toggleStatus()\"></zyfra-button>\r\n    <zyfra-button label=\"toggle true/false\" (click)=\"toggleValue()\"></zyfra-button>\r\n  `,\r\n  props: {\r\n    ...args,\r\n    formControl: new FormControl(false),\r\n    toggleStatus(): void {\r\n      if (this.formControl.disabled) {\r\n        this.formControl.enable();\r\n      } else {\r\n        this.formControl.disable();\r\n      }\r\n    },\r\n    toggleValue(): void {\r\n      this.formControl.setValue(!this.formControl.value);\r\n    },\r\n  },\r\n})"
      },
      {
        "name": "cities",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "libs/components/src/lib/select-button/zyfra-select-button.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "StoryCity[]",
        "defaultValue": "[\r\n  { name: 'Russia', code: 'RU' },\r\n  { name: 'Rome', code: 'RM' },\r\n  { name: 'London', code: 'LDN' },\r\n  { name: 'Istanbul', code: 'IST' },\r\n  { name: 'Paris', code: 'PRS' },\r\n]"
      },
      {
        "name": "Closable",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "libs/components/src/lib/tab-view/zyfra-tab-view/zyfra-tab-view.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "",
        "defaultValue": "Template.bind({})"
      },
      {
        "name": "ColGroup",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "libs/components/src/lib/table/_story/stories/col-group.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "",
        "defaultValue": "Template.bind({})"
      },
      {
        "name": "ColGroup",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "libs/components/src/lib/tree-table/_story/stories/col-group.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "",
        "defaultValue": "Template.bind({})"
      },
      {
        "name": "convertToNode",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "libs/components/src/lib/nav-menu/utils/treeNode.functions.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "",
        "defaultValue": "(item: ZyfraMenuItem, parent?: TreeNode): TreeNode => {\r\n  let children;\r\n  const node: TreeNode = {\r\n    label: item.label,\r\n    data: item,\r\n    key: generateKey(),\r\n    parent\r\n  };\r\n  if (item.items) {\r\n    children = item.items.map(childItem => {\r\n      return convertToNode(childItem, node);\r\n    });\r\n  }\r\n  node.children = children;\r\n  return node;\r\n}"
      },
      {
        "name": "Currency",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "libs/components/src/lib/input-number/zyfra-input-number.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "",
        "defaultValue": "Template.bind({})"
      },
      {
        "name": "CustomButtons",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "libs/components/src/lib/datepicker/calendar/zyfra-calendar.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "",
        "defaultValue": "CustomTemplate.bind({})"
      },
      {
        "name": "Customers",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "libs/components/src/lib/table/_story/data.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Customer[]",
        "defaultValue": "[\r\n  {\r\n    id: 1000,\r\n    name: 'James Butt',\r\n    country: {\r\n      name: 'Algeria',\r\n      code: 'dz',\r\n    },\r\n    company: 'Benton, John B Jr',\r\n    date: new Date('2015-09-13'),\r\n    status: 'unqualified',\r\n    verified: true,\r\n    activity: 17,\r\n    representative: {\r\n      name: 'Ioni Bowcher',\r\n      image: 'ionibowcher.png',\r\n    },\r\n    balance: 70663,\r\n  },\r\n  {\r\n    id: 1001,\r\n    name: 'Josephine Darakjy',\r\n    country: {\r\n      name: 'Egypt',\r\n      code: 'eg',\r\n    },\r\n    company: 'Chanay, Jeffrey A Esq',\r\n    date: new Date('2019-02-09'),\r\n    status: 'proposal',\r\n    verified: true,\r\n    activity: 0,\r\n    representative: {\r\n      name: 'Amy Elsner',\r\n      image: 'amyelsner.png',\r\n    },\r\n    balance: 82429,\r\n  },\r\n  {\r\n    id: 1002,\r\n    name: 'Art Venere',\r\n    country: {\r\n      name: 'Panama',\r\n      code: 'pa',\r\n    },\r\n    company: 'Chemel, James L Cpa',\r\n    date: new Date('2017-05-13'),\r\n    status: 'qualified',\r\n    verified: false,\r\n    activity: 63,\r\n    representative: {\r\n      name: 'Asiya Javayant',\r\n      image: 'asiyajavayant.png',\r\n    },\r\n    balance: 28334,\r\n  },\r\n  {\r\n    id: 1003,\r\n    name: 'Lenna Paprocki',\r\n    country: {\r\n      name: 'Slovenia',\r\n      code: 'si',\r\n    },\r\n    company: 'Feltz Printing Service',\r\n    date: new Date('2020-09-15'),\r\n    status: 'new',\r\n    verified: false,\r\n    activity: 37,\r\n    representative: {\r\n      name: 'Xuxue Feng',\r\n      image: 'xuxuefeng.png',\r\n    },\r\n    balance: 88521,\r\n  },\r\n  {\r\n    id: 1004,\r\n    name: 'Donette Foller',\r\n    country: {\r\n      name: 'South Africa',\r\n      code: 'za',\r\n    },\r\n    company: 'Printing Dimensions',\r\n    date: new Date('2016-05-20'),\r\n    status: 'proposal',\r\n    verified: true,\r\n    activity: 33,\r\n    representative: {\r\n      name: 'Asiya Javayant',\r\n      image: 'asiyajavayant.png',\r\n    },\r\n    balance: 93905,\r\n  },\r\n  {\r\n    id: 1005,\r\n    name: 'Simona Morasca',\r\n    country: {\r\n      name: 'Egypt',\r\n      code: 'eg',\r\n    },\r\n    company: 'Chapman, Ross E Esq',\r\n    date: new Date('2018-02-16'),\r\n    status: 'qualified',\r\n    verified: false,\r\n    activity: 68,\r\n    representative: {\r\n      name: 'Ivan Magalhaes',\r\n      image: 'ivanmagalhaes.png',\r\n    },\r\n    balance: 50041,\r\n  },\r\n  {\r\n    id: 1006,\r\n    name: 'Mitsue Tollner',\r\n    country: {\r\n      name: 'Paraguay',\r\n      code: 'py',\r\n    },\r\n    company: 'Morlong Associates',\r\n    date: new Date('2018-02-19'),\r\n    status: 'renewal',\r\n    verified: true,\r\n    activity: 54,\r\n    representative: {\r\n      name: 'Ivan Magalhaes',\r\n      image: 'ivanmagalhaes.png',\r\n    },\r\n    balance: 58706,\r\n  },\r\n  {\r\n    id: 1007,\r\n    name: 'Leota Dilliard',\r\n    country: {\r\n      name: 'Serbia',\r\n      code: 'rs',\r\n    },\r\n    company: 'Commercial Press',\r\n    date: new Date('2019-08-13'),\r\n    status: 'renewal',\r\n    verified: true,\r\n    activity: 69,\r\n    representative: {\r\n      name: 'Onyama Limba',\r\n      image: 'onyamalimba.png',\r\n    },\r\n    balance: 26640,\r\n  },\r\n  {\r\n    id: 1008,\r\n    name: 'Sage Wieser',\r\n    country: {\r\n      name: 'Egypt',\r\n      code: 'eg',\r\n    },\r\n    company: 'Truhlar And Truhlar Attys',\r\n    date: new Date('2018-11-21'),\r\n    status: 'unqualified',\r\n    verified: true,\r\n    activity: 76,\r\n    representative: {\r\n      name: 'Ivan Magalhaes',\r\n      image: 'ivanmagalhaes.png',\r\n    },\r\n    balance: 65369,\r\n  },\r\n  {\r\n    id: 1009,\r\n    name: 'Kris Marrier',\r\n    country: {\r\n      name: 'Mexico',\r\n      code: 'mx',\r\n    },\r\n    company: 'King, Christopher A Esq',\r\n    date: new Date('2015-07-07'),\r\n    status: 'proposal',\r\n    verified: false,\r\n    activity: 3,\r\n    representative: {\r\n      name: 'Onyama Limba',\r\n      image: 'onyamalimba.png',\r\n    },\r\n    balance: 63451,\r\n  },\r\n  {\r\n    id: 1010,\r\n    name: 'Minna Amigon',\r\n    country: {\r\n      name: 'Romania',\r\n      code: 'ro',\r\n    },\r\n    company: 'Dorl, James J Esq',\r\n    date: new Date('2018-11-07'),\r\n    status: 'qualified',\r\n    verified: false,\r\n    activity: 38,\r\n    representative: {\r\n      name: 'Anna Fali',\r\n      image: 'annafali.png',\r\n    },\r\n    balance: 71169,\r\n  },\r\n  {\r\n    id: 1011,\r\n    name: 'Abel Maclead',\r\n    country: {\r\n      name: 'Singapore',\r\n      code: 'sg',\r\n    },\r\n    company: 'Rangoni Of Florence',\r\n    date: new Date('2017-03-11'),\r\n    status: 'qualified',\r\n    verified: true,\r\n    activity: 87,\r\n    representative: {\r\n      name: 'Bernardo Dominic',\r\n      image: 'bernardodominic.png',\r\n    },\r\n    balance: 96842,\r\n  },\r\n  {\r\n    id: 1012,\r\n    name: 'Kiley Caldarera',\r\n    country: {\r\n      name: 'Serbia',\r\n      code: 'rs',\r\n    },\r\n    company: 'Feiner Bros',\r\n    date: new Date('2015-10-20'),\r\n    status: 'unqualified',\r\n    verified: false,\r\n    activity: 80,\r\n    representative: {\r\n      name: 'Onyama Limba',\r\n      image: 'onyamalimba.png',\r\n    },\r\n    balance: 92734,\r\n  },\r\n  {\r\n    id: 1013,\r\n    name: 'Graciela Ruta',\r\n    country: {\r\n      name: 'Chile',\r\n      code: 'cl',\r\n    },\r\n    company: 'Buckley Miller & Wright',\r\n    date: new Date('2016-07-25'),\r\n    status: 'negotiation',\r\n    verified: false,\r\n    activity: 59,\r\n    representative: {\r\n      name: 'Amy Elsner',\r\n      image: 'amyelsner.png',\r\n    },\r\n    balance: 45250,\r\n  },\r\n  {\r\n    id: 1014,\r\n    name: 'Cammy Albares',\r\n    country: {\r\n      name: 'Philippines',\r\n      code: 'ph',\r\n    },\r\n    company: 'Rousseaux, Michael Esq',\r\n    date: new Date('2019-06-25'),\r\n    status: 'new',\r\n    verified: true,\r\n    activity: 90,\r\n    representative: {\r\n      name: 'Asiya Javayant',\r\n      image: 'asiyajavayant.png',\r\n    },\r\n    balance: 30236,\r\n  },\r\n  {\r\n    id: 1015,\r\n    name: 'Mattie Poquette',\r\n    country: {\r\n      name: 'Venezuela',\r\n      code: 've',\r\n    },\r\n    company: 'Century Communications',\r\n    date: new Date('2017-12-12'),\r\n    status: 'negotiation',\r\n    verified: false,\r\n    activity: 52,\r\n    representative: {\r\n      name: 'Anna Fali',\r\n      image: 'annafali.png',\r\n    },\r\n    balance: 64533,\r\n  },\r\n  {\r\n    id: 1016,\r\n    name: 'Meaghan Garufi',\r\n    country: {\r\n      name: 'Malaysia',\r\n      code: 'my',\r\n    },\r\n    company: 'Bolton, Wilbur Esq',\r\n    date: new Date('2018-07-04'),\r\n    status: 'unqualified',\r\n    verified: false,\r\n    activity: 31,\r\n    representative: {\r\n      name: 'Ivan Magalhaes',\r\n      image: 'ivanmagalhaes.png',\r\n    },\r\n    balance: 37279,\r\n  },\r\n  {\r\n    id: 1017,\r\n    name: 'Gladys Rim',\r\n    country: {\r\n      name: 'Netherlands',\r\n      code: 'nl',\r\n    },\r\n    company: 'T M Byxbee Company Pc',\r\n    date: new Date('2020-02-27'),\r\n    status: 'renewal',\r\n    verified: true,\r\n    activity: 48,\r\n    representative: {\r\n      name: 'Stephen Shaw',\r\n      image: 'stephenshaw.png',\r\n    },\r\n    balance: 27381,\r\n  },\r\n  {\r\n    id: 1018,\r\n    name: 'Yuki Whobrey',\r\n    country: {\r\n      name: 'Israel',\r\n      code: 'il',\r\n    },\r\n    company: 'Farmers Insurance Group',\r\n    date: new Date('2017-12-21'),\r\n    status: 'negotiation',\r\n    verified: true,\r\n    activity: 16,\r\n    representative: {\r\n      name: 'Bernardo Dominic',\r\n      image: 'bernardodominic.png',\r\n    },\r\n    balance: 9257,\r\n  },\r\n  {\r\n    id: 1019,\r\n    name: 'Fletcher Flosi',\r\n    country: {\r\n      name: 'Argentina',\r\n      code: 'ar',\r\n    },\r\n    company: 'Post Box Services Plus',\r\n    date: new Date('2016-01-04'),\r\n    status: 'renewal',\r\n    verified: true,\r\n    activity: 19,\r\n    representative: {\r\n      name: 'Xuxue Feng',\r\n      image: 'xuxuefeng.png',\r\n    },\r\n    balance: 67783,\r\n  },\r\n  {\r\n    id: 1020,\r\n    name: 'Bette Nicka',\r\n    country: {\r\n      name: 'Paraguay',\r\n      code: 'py',\r\n    },\r\n    company: 'Sport En Art',\r\n    date: new Date('2016-10-21'),\r\n    status: 'renewal',\r\n    verified: false,\r\n    activity: 100,\r\n    representative: {\r\n      name: 'Onyama Limba',\r\n      image: 'onyamalimba.png',\r\n    },\r\n    balance: 4609,\r\n  },\r\n  {\r\n    id: 1021,\r\n    name: 'Veronika Inouye',\r\n    country: {\r\n      name: 'Ecuador',\r\n      code: 'ec',\r\n    },\r\n    company: 'C 4 Network Inc',\r\n    date: new Date('2017-03-24'),\r\n    status: 'renewal',\r\n    verified: false,\r\n    activity: 72,\r\n    representative: {\r\n      name: 'Ioni Bowcher',\r\n      image: 'ionibowcher.png',\r\n    },\r\n    balance: 26565,\r\n  },\r\n  {\r\n    id: 1022,\r\n    name: 'Willard Kolmetz',\r\n    country: {\r\n      name: 'Tunisia',\r\n      code: 'tn',\r\n    },\r\n    company: 'Ingalls, Donald R Esq',\r\n    date: new Date('2017-04-15'),\r\n    status: 'renewal',\r\n    verified: true,\r\n    activity: 94,\r\n    representative: {\r\n      name: 'Asiya Javayant',\r\n      image: 'asiyajavayant.png',\r\n    },\r\n    balance: 75876,\r\n  },\r\n  {\r\n    id: 1023,\r\n    name: 'Maryann Royster',\r\n    country: {\r\n      name: 'Belarus',\r\n      code: 'by',\r\n    },\r\n    company: 'Franklin, Peter L Esq',\r\n    date: new Date('2017-03-11'),\r\n    status: 'qualified',\r\n    verified: false,\r\n    activity: 56,\r\n    representative: {\r\n      name: 'Elwin Sharvill',\r\n      image: 'elwinsharvill.png',\r\n    },\r\n    balance: 41121,\r\n  },\r\n  {\r\n    id: 1024,\r\n    name: 'Alisha Slusarski',\r\n    country: {\r\n      name: 'Iceland',\r\n      code: 'is',\r\n    },\r\n    company: 'Wtlz Power 107 Fm',\r\n    date: new Date('2018-03-27'),\r\n    status: 'qualified',\r\n    verified: true,\r\n    activity: 7,\r\n    representative: {\r\n      name: 'Stephen Shaw',\r\n      image: 'stephenshaw.png',\r\n    },\r\n    balance: 91691,\r\n  },\r\n  {\r\n    id: 1025,\r\n    name: 'Allene Iturbide',\r\n    country: {\r\n      name: 'Italy',\r\n      code: 'it',\r\n    },\r\n    company: 'Ledecky, David Esq',\r\n    date: new Date('2016-02-20'),\r\n    status: 'qualified',\r\n    verified: true,\r\n    activity: 1,\r\n    representative: {\r\n      name: 'Ivan Magalhaes',\r\n      image: 'ivanmagalhaes.png',\r\n    },\r\n    balance: 40137,\r\n  },\r\n  {\r\n    id: 1026,\r\n    name: 'Chanel Caudy',\r\n    country: {\r\n      name: 'Argentina',\r\n      code: 'ar',\r\n    },\r\n    company: 'Professional Image Inc',\r\n    date: new Date('2018-06-24'),\r\n    status: 'new',\r\n    verified: true,\r\n    activity: 26,\r\n    representative: {\r\n      name: 'Ioni Bowcher',\r\n      image: 'ionibowcher.png',\r\n    },\r\n    balance: 21304,\r\n  },\r\n  {\r\n    id: 1027,\r\n    name: 'Ezekiel Chui',\r\n    country: {\r\n      name: 'Ireland',\r\n      code: 'ie',\r\n    },\r\n    company: 'Sider, Donald C Esq',\r\n    date: new Date('2016-09-24'),\r\n    status: 'new',\r\n    verified: false,\r\n    activity: 76,\r\n    representative: {\r\n      name: 'Amy Elsner',\r\n      image: 'amyelsner.png',\r\n    },\r\n    balance: 60454,\r\n  },\r\n  {\r\n    id: 1028,\r\n    name: 'Willow Kusko',\r\n    country: {\r\n      name: 'Romania',\r\n      code: 'ro',\r\n    },\r\n    company: 'U Pull It',\r\n    date: new Date('2020-04-11'),\r\n    status: 'qualified',\r\n    verified: true,\r\n    activity: 7,\r\n    representative: {\r\n      name: 'Onyama Limba',\r\n      image: 'onyamalimba.png',\r\n    },\r\n    balance: 17565,\r\n  },\r\n  {\r\n    id: 1029,\r\n    name: 'Bernardo Figeroa',\r\n    country: {\r\n      name: 'Israel',\r\n      code: 'il',\r\n    },\r\n    company: 'Clark, Richard Cpa',\r\n    date: new Date('2018-11-04'),\r\n    status: 'renewal',\r\n    verified: true,\r\n    activity: 81,\r\n    representative: {\r\n      name: 'Ioni Bowcher',\r\n      image: 'ionibowcher.png',\r\n    },\r\n    balance: 17774,\r\n  },\r\n  {\r\n    id: 1030,\r\n    name: 'Ammie Corrio',\r\n    country: {\r\n      name: 'Hungary',\r\n      code: 'hu',\r\n    },\r\n    company: 'Moskowitz, Barry S',\r\n    date: new Date('2016-06-11'),\r\n    status: 'negotiation',\r\n    verified: true,\r\n    activity: 56,\r\n    representative: {\r\n      name: 'Asiya Javayant',\r\n      image: 'asiyajavayant.png',\r\n    },\r\n    balance: 49201,\r\n  },\r\n  {\r\n    id: 1031,\r\n    name: 'Francine Vocelka',\r\n    country: {\r\n      name: 'Honduras',\r\n      code: 'hn',\r\n    },\r\n    company: 'Cascade Realty Advisors Inc',\r\n    date: new Date('2017-08-02'),\r\n    status: 'qualified',\r\n    verified: true,\r\n    activity: 94,\r\n    representative: {\r\n      name: 'Ioni Bowcher',\r\n      image: 'ionibowcher.png',\r\n    },\r\n    balance: 67126,\r\n  },\r\n  {\r\n    id: 1032,\r\n    name: 'Ernie Stenseth',\r\n    country: {\r\n      name: 'Australia',\r\n      code: 'au',\r\n    },\r\n    company: 'Knwz Newsradio',\r\n    date: new Date('2018-06-06'),\r\n    status: 'renewal',\r\n    verified: true,\r\n    activity: 68,\r\n    representative: {\r\n      name: 'Xuxue Feng',\r\n      image: 'xuxuefeng.png',\r\n    },\r\n    balance: 76017,\r\n  },\r\n  {\r\n    id: 1033,\r\n    name: 'Albina Glick',\r\n    country: {\r\n      name: 'Ukraine',\r\n      code: 'ua',\r\n    },\r\n    company: 'Giampetro, Anthony D',\r\n    date: new Date('2019-08-08'),\r\n    status: 'proposal',\r\n    verified: true,\r\n    activity: 85,\r\n    representative: {\r\n      name: 'Bernardo Dominic',\r\n      image: 'bernardodominic.png',\r\n    },\r\n    balance: 91201,\r\n  },\r\n  {\r\n    id: 1034,\r\n    name: 'Alishia Sergi',\r\n    country: {\r\n      name: 'Qatar',\r\n      code: 'qa',\r\n    },\r\n    company: 'Milford Enterprises Inc',\r\n    date: new Date('2018-05-19'),\r\n    status: 'negotiation',\r\n    verified: false,\r\n    activity: 46,\r\n    representative: {\r\n      name: 'Ivan Magalhaes',\r\n      image: 'ivanmagalhaes.png',\r\n    },\r\n    balance: 12237,\r\n  },\r\n  {\r\n    id: 1035,\r\n    name: 'Solange Shinko',\r\n    country: {\r\n      name: 'Cameroon',\r\n      code: 'cm',\r\n    },\r\n    company: 'Mosocco, Ronald A',\r\n    date: new Date('2015-02-12'),\r\n    status: 'qualified',\r\n    verified: true,\r\n    activity: 32,\r\n    representative: {\r\n      name: 'Onyama Limba',\r\n      image: 'onyamalimba.png',\r\n    },\r\n    balance: 34072,\r\n  },\r\n  {\r\n    id: 1036,\r\n    name: 'Jose Stockham',\r\n    country: {\r\n      name: 'Italy',\r\n      code: 'it',\r\n    },\r\n    company: 'Tri State Refueler Co',\r\n    date: new Date('2018-04-25'),\r\n    status: 'qualified',\r\n    verified: true,\r\n    activity: 77,\r\n    representative: {\r\n      name: 'Amy Elsner',\r\n      image: 'amyelsner.png',\r\n    },\r\n    balance: 94909,\r\n  },\r\n  {\r\n    id: 1037,\r\n    name: 'Rozella Ostrosky',\r\n    country: {\r\n      name: 'Venezuela',\r\n      code: 've',\r\n    },\r\n    company: 'Parkway Company',\r\n    date: new Date('2016-02-27'),\r\n    status: 'unqualified',\r\n    verified: true,\r\n    activity: 66,\r\n    representative: {\r\n      name: 'Amy Elsner',\r\n      image: 'amyelsner.png',\r\n    },\r\n    balance: 57245,\r\n  },\r\n  {\r\n    id: 1038,\r\n    name: 'Valentine Gillian',\r\n    country: {\r\n      name: 'Paraguay',\r\n      code: 'py',\r\n    },\r\n    company: 'Fbs Business Finance',\r\n    date: new Date('2019-09-17'),\r\n    status: 'qualified',\r\n    verified: true,\r\n    activity: 25,\r\n    representative: {\r\n      name: 'Bernardo Dominic',\r\n      image: 'bernardodominic.png',\r\n    },\r\n    balance: 75502,\r\n  },\r\n  {\r\n    id: 1039,\r\n    name: 'Kati Rulapaugh',\r\n    country: {\r\n      name: 'Puerto Rico',\r\n      code: 'pr',\r\n    },\r\n    company: 'Eder Assocs Consltng Engrs Pc',\r\n    date: new Date('2016-12-03'),\r\n    status: 'renewal',\r\n    verified: false,\r\n    activity: 51,\r\n    representative: {\r\n      name: 'Ioni Bowcher',\r\n      image: 'ionibowcher.png',\r\n    },\r\n    balance: 82075,\r\n  },\r\n  {\r\n    id: 1040,\r\n    name: 'Youlanda Schemmer',\r\n    country: {\r\n      name: 'Bolivia',\r\n      code: 'bo',\r\n    },\r\n    company: 'Tri M Tool Inc',\r\n    date: new Date('2017-12-15'),\r\n    status: 'negotiation',\r\n    verified: true,\r\n    activity: 49,\r\n    representative: {\r\n      name: 'Xuxue Feng',\r\n      image: 'xuxuefeng.png',\r\n    },\r\n    balance: 19208,\r\n  },\r\n  {\r\n    id: 1041,\r\n    name: 'Dyan Oldroyd',\r\n    country: {\r\n      name: 'Argentina',\r\n      code: 'ar',\r\n    },\r\n    company: 'International Eyelets Inc',\r\n    date: new Date('2017-02-02'),\r\n    status: 'qualified',\r\n    verified: false,\r\n    activity: 5,\r\n    representative: {\r\n      name: 'Amy Elsner',\r\n      image: 'amyelsner.png',\r\n    },\r\n    balance: 50194,\r\n  },\r\n  {\r\n    id: 1042,\r\n    name: 'Roxane Campain',\r\n    country: {\r\n      name: 'France',\r\n      code: 'fr',\r\n    },\r\n    company: 'Rapid Trading Intl',\r\n    date: new Date('2018-12-25'),\r\n    status: 'unqualified',\r\n    verified: false,\r\n    activity: 100,\r\n    representative: {\r\n      name: 'Anna Fali',\r\n      image: 'annafali.png',\r\n    },\r\n    balance: 77714,\r\n  },\r\n  {\r\n    id: 1043,\r\n    name: 'Lavera Perin',\r\n    country: {\r\n      name: 'Vietnam',\r\n      code: 'vn',\r\n    },\r\n    company: 'Abc Enterprises Inc',\r\n    date: new Date('2018-04-10'),\r\n    status: 'qualified',\r\n    verified: false,\r\n    activity: 71,\r\n    representative: {\r\n      name: 'Stephen Shaw',\r\n      image: 'stephenshaw.png',\r\n    },\r\n    balance: 35740,\r\n  },\r\n  {\r\n    id: 1044,\r\n    name: 'Erick Ferencz',\r\n    country: {\r\n      name: 'Belgium',\r\n      code: 'be',\r\n    },\r\n    company: 'Cindy Turner Associates',\r\n    date: new Date('2018-05-06'),\r\n    status: 'unqualified',\r\n    verified: true,\r\n    activity: 54,\r\n    representative: {\r\n      name: 'Amy Elsner',\r\n      image: 'amyelsner.png',\r\n    },\r\n    balance: 30790,\r\n  },\r\n  {\r\n    id: 1045,\r\n    name: 'Fatima Saylors',\r\n    country: {\r\n      name: 'Canada',\r\n      code: 'ca',\r\n    },\r\n    company: 'Stanton, James D Esq',\r\n    date: new Date('2019-07-10'),\r\n    status: 'renewal',\r\n    verified: true,\r\n    activity: 93,\r\n    representative: {\r\n      name: 'Onyama Limba',\r\n      image: 'onyamalimba.png',\r\n    },\r\n    balance: 52343,\r\n  },\r\n  {\r\n    id: 1046,\r\n    name: 'Jina Briddick',\r\n    country: {\r\n      name: 'Mexico',\r\n      code: 'mx',\r\n    },\r\n    company: 'Grace Pastries Inc',\r\n    date: new Date('2018-02-19'),\r\n    status: 'unqualified',\r\n    verified: false,\r\n    activity: 97,\r\n    representative: {\r\n      name: 'Xuxue Feng',\r\n      image: 'xuxuefeng.png',\r\n    },\r\n    balance: 53966,\r\n  },\r\n  {\r\n    id: 1047,\r\n    name: 'Kanisha Waycott',\r\n    country: {\r\n      name: 'Ecuador',\r\n      code: 'ec',\r\n    },\r\n    company: 'Schroer, Gene E Esq',\r\n    date: new Date('2019-11-27'),\r\n    status: 'new',\r\n    verified: false,\r\n    activity: 80,\r\n    representative: {\r\n      name: 'Xuxue Feng',\r\n      image: 'xuxuefeng.png',\r\n    },\r\n    balance: 9920,\r\n  },\r\n  {\r\n    id: 1048,\r\n    name: 'Emerson Bowley',\r\n    country: {\r\n      name: 'Finland',\r\n      code: 'fi',\r\n    },\r\n    company: 'Knights Inn',\r\n    date: new Date('2018-11-24'),\r\n    status: 'new',\r\n    verified: false,\r\n    activity: 63,\r\n    representative: {\r\n      name: 'Stephen Shaw',\r\n      image: 'stephenshaw.png',\r\n    },\r\n    balance: 78069,\r\n  },\r\n  {\r\n    id: 1049,\r\n    name: 'Blair Malet',\r\n    country: {\r\n      name: 'Finland',\r\n      code: 'fi',\r\n    },\r\n    company: 'Bollinger Mach Shp & Shipyard',\r\n    date: new Date('2018-04-19'),\r\n    status: 'new',\r\n    verified: true,\r\n    activity: 92,\r\n    representative: {\r\n      name: 'Asiya Javayant',\r\n      image: 'asiyajavayant.png',\r\n    },\r\n    balance: 65005,\r\n  },\r\n]"
      },
      {
        "name": "CustomIcon",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "libs/components/src/lib/checkbox/zyfra-checkbox.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "",
        "defaultValue": "Template.bind({})"
      },
      {
        "name": "CustomTemplate",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "libs/components/src/lib/toast/zyfra-toast.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "",
        "defaultValue": "Template.bind({})"
      },
      {
        "name": "CustomTemplate",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "libs/components/src/lib/datepicker/calendar/zyfra-calendar.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "args => ({\r\n  component: ZyfraCalendarComponent,\r\n  props: args,\r\n  template: `\r\n  <zyfra-custom-calendar [placeholder]='placeholder' [label]='label' [times]='times' [selectedTime]='selectedTime'></zyfra-custom-calendar>\r\n  `,\r\n})"
      },
      {
        "name": "CustomTemplateWithBadge",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "libs/components/src/lib/tab-view/zyfra-tab-view/zyfra-tab-view.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "",
        "defaultValue": "CustomWithBadge.bind({})"
      },
      {
        "name": "CustomTransition",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "libs/components/src/lib/menu-applications/zyfra-menu-applications.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "",
        "defaultValue": "Template.bind({})"
      },
      {
        "name": "CustomWithBadge",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "libs/components/src/lib/tab-view/zyfra-tab-view/zyfra-tab-view.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "(args) => ({\r\n  props: {\r\n    ...args,\r\n  },\r\n  template: `\r\n      <zyfra-tab-view [class]=\"zyfraTabViewTagStyle\"\r\n              [activeIndex]=\"activeIndex\"\r\n              [controlClose]=\"controlClose\"\r\n              [style]=\"style\"\r\n              [styleClass]=\"styleClass\"\r\n              (onChange)=\"onChange($event)\"\r\n              (onClose)=\"onClose($event)\"\r\n              (activeIndexChange)=\"activeIndexChange($event)\">\r\n          <ng-container *ngFor=\"let tab of tabs\">\r\n              <zyfra-tab-panel [header]=\"tab.header\"\r\n                               [selected]=\"tab.selected\"\r\n                               [disabled]=\"tab.disabled\"\r\n                               [closable]=\"tab.closable\"\r\n                               [leftIcon]=\"tab.leftIcon\"\r\n                               [rightIcon]=\"tab.rightIcon\"\r\n                               [headerStyle]=\"tab.headerStyle\"\r\n                               [headerStyleClass]=\"tab.headerStyleClass\"\r\n                               [cache]=\"tab.cache\"\r\n                               [tooltip]=\"tab.tooltip\"\r\n                               [tooltipPosition]=\"tab.tooltipPosition\"\r\n                               [tooltipStyleClass]=\"tab.tooltipStyleClass\">\r\n                  <ng-template #header>\r\n                      <div class=\"p-tabview-title\">{{tab?.header}}</div>\r\n                      <p-badge styleClass=\"p-tabview-right-icon no-active-color\"\r\n                               [value]=\"tab.badgeValue\"\r\n                               [severity]=\"tab.severity\"></p-badge>\r\n                  </ng-template>\r\n\r\n                {{tab.content}}\r\n              </zyfra-tab-panel>\r\n          </ng-container>\r\n      </zyfra-tab-view>`,\r\n})"
      },
      {
        "name": "Danger",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "libs/components/src/lib/button/zyfra-button.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "",
        "defaultValue": "Template.bind({})"
      },
      {
        "name": "Danger",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "libs/components/src/lib/progress/zyfra-progress-bar.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "",
        "defaultValue": "Template.bind({})"
      },
      {
        "name": "Danger",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "libs/components/src/lib/select-button/zyfra-select-button.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "",
        "defaultValue": "Template.bind({})"
      },
      {
        "name": "DangerMini",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "libs/components/src/lib/toggle-button/zyfra-toggle-button.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "",
        "defaultValue": "Template.bind({})"
      },
      {
        "name": "data",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "libs/components/src/lib/checkbox/story/data.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "DataFormControl[]",
        "defaultValue": "[\r\n  {\r\n    text: 'Checkbox',\r\n    options: [\r\n      {\r\n        value: 1,\r\n        label: 'Value 1',\r\n      },\r\n      {\r\n        value: 2,\r\n        label: 'Value 2',\r\n      },\r\n      {\r\n        value: 3,\r\n        label: 'Value 3',\r\n      },\r\n      {\r\n        value: 4,\r\n        label: 'Value 4',\r\n      },\r\n    ],\r\n  },\r\n]"
      },
      {
        "name": "Date",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "libs/components/src/lib/input-mask/zyfra-input-mask.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "",
        "defaultValue": "Template.bind({})"
      },
      {
        "name": "DateFormat",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "libs/components/src/lib/datepicker/calendar/zyfra-calendar.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "",
        "defaultValue": "Template.bind({})"
      },
      {
        "name": "Decimal",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "libs/components/src/lib/input-number/zyfra-input-number.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "",
        "defaultValue": "Template.bind({})"
      },
      {
        "name": "Default",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "libs/components/src/lib/button/zyfra-button.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "",
        "defaultValue": "Template.bind({})"
      },
      {
        "name": "Default",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "libs/components/src/lib/select-button/zyfra-select-button.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "",
        "defaultValue": "Template.bind({})"
      },
      {
        "name": "Default",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "libs/components/src/lib/toggle-button/zyfra-toggle-button.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "",
        "defaultValue": "Template.bind({})"
      },
      {
        "name": "DEFAULT_SETTINGS",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "libs/components/src/lib/nav-menu/model/nav-menu-config.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "SettingsConfig",
        "defaultValue": "{\r\n  singleGroup: false,\r\n  selectionMode: 'single',\r\n  selectedSize: 'standard'\r\n}"
      },
      {
        "name": "DEFAULT_TOOLBAR_CONFIG",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "libs/components/src/lib/nav-menu/model/nav-menu-config.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "ToolbarConfig",
        "defaultValue": "{\r\n  filter: false,\r\n  group: false,\r\n  filesMode: false,\r\n  rubricatorMode: false,\r\n  search: false,\r\n  closeAll: false,\r\n  refresh: false,\r\n}"
      },
      {
        "name": "DefaultDisabled",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "libs/components/src/lib/button/zyfra-button.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "",
        "defaultValue": "Template.bind({})"
      },
      {
        "name": "DefaultMini",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "libs/components/src/lib/button/zyfra-button.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "",
        "defaultValue": "Template.bind({})"
      },
      {
        "name": "DefaultMini",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "libs/components/src/lib/select-button/zyfra-select-button.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "",
        "defaultValue": "Template.bind({})"
      },
      {
        "name": "DefaultRelativeMenuItems",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "libs/components/src/lib/datepicker/zyfra-relative-datepicker/relative-datepicker.models.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "",
        "defaultValue": "{\r\n  time: [\r\n    {\r\n      id: 'current',\r\n      groupId: 'time',\r\n      icon: 'date-asterisk',\r\n      label: 'Текущее время',\r\n    },\r\n    {\r\n      id: 'midnight',\r\n      groupId: 'time',\r\n      icon: 'date-now',\r\n      label: 'Полночь текущих суток',\r\n    },\r\n  ],\r\n\r\n  direction: [\r\n    { id: 'plus', groupId: 'direction', icon: 'add-circle', label: 'Смещение вперед' },\r\n    {\r\n      id: 'minus',\r\n      groupId: 'direction',\r\n      icon: 'delete-minus-circle',\r\n      label: 'Смещение назад',\r\n    },\r\n  ],\r\n\r\n  period: [\r\n    {\r\n      id: 'year',\r\n      groupId: 'period',\r\n      icon: 'date-year',\r\n      label: 'Год',\r\n    },\r\n    {\r\n      id: 'month',\r\n      groupId: 'period',\r\n      icon: 'date-month',\r\n      label: 'Месяц',\r\n    },\r\n    {\r\n      id: 'day',\r\n      groupId: 'period',\r\n      icon: 'date-day',\r\n      label: 'День',\r\n    },\r\n    {\r\n      id: 'hour',\r\n      groupId: 'period',\r\n      icon: 'date-hour',\r\n      label: 'Час',\r\n    },\r\n    {\r\n      id: 'minute',\r\n      groupId: 'period',\r\n      icon: 'date-minute',\r\n      label: 'Минута',\r\n    },\r\n    {\r\n      id: 'second',\r\n      groupId: 'period',\r\n      icon: 'date-second',\r\n      label: 'Секунда',\r\n    },\r\n  ],\r\n} as const"
      },
      {
        "name": "defaultTransition",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "libs/components/src/lib/menu-applications/zyfra-menu-applications.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "object",
        "defaultValue": "{\r\n  open: {\r\n    duration: 300,\r\n    delay: 500,\r\n    timingFunction: 'ease-in',\r\n  },\r\n  close: {\r\n    duration: 300,\r\n    delay: 300,\r\n    timingFunction: 'ease-out',\r\n  }\r\n}"
      },
      {
        "name": "directionMap",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "libs/components/src/lib/datepicker/zyfra-relative-datepicker/relative-datepicker.utils.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "",
        "defaultValue": "new Map<string, RelativeDateDirectionId>([\r\n  ['-', 'minus'],\r\n  ['+', 'plus'],\r\n])"
      },
      {
        "name": "Disabled",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "libs/components/src/lib/split-button/zyfra-split-button.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "",
        "defaultValue": "Template.bind({})"
      },
      {
        "name": "DisabledDays",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "libs/components/src/lib/datepicker/calendar/zyfra-calendar.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "",
        "defaultValue": "Template.bind({})"
      },
      {
        "name": "DisabledRadio",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "libs/components/src/lib/radio-button/zyfra-radio-button.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "",
        "defaultValue": "SimpleTemplate.bind({})"
      },
      {
        "name": "Edit",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "libs/components/src/lib/tree-table/_story/stories/edit.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "",
        "defaultValue": "Template.bind({})"
      },
      {
        "name": "EditCell",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "libs/components/src/lib/table/_story/stories/edit-cell.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "",
        "defaultValue": "Template.bind({})"
      },
      {
        "name": "EditRow",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "libs/components/src/lib/table/_story/stories/edit-row.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "",
        "defaultValue": "Template.bind({})"
      },
      {
        "name": "en",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "libs/components/src/lib/datepicker/i18n/en_US.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "object",
        "defaultValue": "{\r\n  \"dayNames\": [\r\n    \"Sunday\",\r\n    \"Monday\",\r\n    \"Tuesday\",\r\n    \"Wednesday\",\r\n    \"Thursday\",\r\n    \"Friday\",\r\n    \"Saturday\"\r\n  ],\r\n  \"dayNamesShort\": [\r\n    \"Sun\",\r\n    \"Mon\",\r\n    \"Tue\",\r\n    \"Wed\",\r\n    \"Thu\",\r\n    \"Fri\",\r\n    \"Sat\"\r\n  ],\r\n  \"dayNamesMin\": [\r\n    \"Su\",\r\n    \"Mo\",\r\n    \"Tu\",\r\n    \"We\",\r\n    \"Th\",\r\n    \"Fr\",\r\n    \"Sa\"\r\n  ],\r\n  \"monthNames\": [\r\n    \"January\",\r\n    \"February\",\r\n    \"March\",\r\n    \"April\",\r\n    \"May\",\r\n    \"June\",\r\n    \"July\",\r\n    \"August\",\r\n    \"September\",\r\n    \"October\",\r\n    \"November\",\r\n    \"December\"\r\n  ],\r\n  \"monthNamesShort\": [\r\n    \"Jan\",\r\n    \"Feb\",\r\n    \"Mar\",\r\n    \"Apr\",\r\n    \"May\",\r\n    \"Jun\",\r\n    \"Jul\",\r\n    \"Aug\",\r\n    \"Sep\",\r\n    \"Oct\",\r\n    \"Nov\",\r\n    \"Dec\"\r\n  ],\r\n  \"dateFormat\": \"mm/dd/yy\",\r\n  \"today\": \"Today\",\r\n  \"weekHeader\": \"Wk\",\r\n  \"clear\": \"Clear\"\r\n}"
      },
      {
        "name": "EnlargedSize",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "libs/components/src/lib/nav-menu/zyfra-nav-menu.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "",
        "defaultValue": "BasicTemplate.bind({})"
      },
      {
        "name": "Expand",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "libs/components/src/lib/table/_story/stories/expand.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "",
        "defaultValue": "Template.bind({})"
      },
      {
        "name": "EXPORTED_DECLARATIONS",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "libs/components/src/lib/tooltip/zyfra-tooltip.module.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "[]",
        "defaultValue": "[ZyfraTooltipDirective, ZyfraTooltipComponent]"
      },
      {
        "name": "ExtraItemTemplate",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "libs/components/src/lib/nav-menu/zyfra-nav-menu.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "(args) => ({\r\n  template:\r\n      `<wrapper>\r\n          <ng-template zyfraTemplate>\r\n              <zyfra-splitter layout=\"horizontal\" [panelSizes]=\"[25,75]\" [style]=\"{ height: '600px' }\">\r\n                  <ng-template zyfraSplitterTemplate>\r\n                      <zyfra-nav-menu [model]=\"model\"\r\n                                      [menuTitle]=\"menuTitle\"\r\n                                      [emptyMessage]=\"emptyMessage\"\r\n                                      [headerConfig]=\"headerConfig\"\r\n                                      [settingsConfig]=\"settingsConfig\"\r\n                                      [toolbarConfig]=\"toolbarConfig\"\r\n                                      (activeItemChange)=\"activeItemChange($event)\"\r\n                                      (selectionChange)=\"selectionChange($event)\"\r\n                                      (homeClick)=\"homeClick($event)\"\r\n                                      (nodeExpand)=\"nodeExpand($event)\"\r\n                                      (nodeCollapse)=\"nodeCollapse($event)\">\r\n\r\n                           <ng-template let-item zyfraTemplate='menuitem'>\r\n                                  <p-badge *ngIf=\"item?.badge\" styleClass=\"p-badge-dot\" [severity]=\"item.badge\"></p-badge>\r\n                          </ng-template>\r\n\r\n                          <ng-template zyfraTemplate='toolbar'>\r\n                              <i class=\"toolbar-button zyfra-icon files-upload\"></i>\r\n                              <i class=\"toolbar-button zyfra-icon files-download\"></i>\r\n                          </ng-template>\r\n\r\n                          <ng-template zyfraTemplate='header'>\r\n                              <i class=\"toolbar-button zyfra-icon charts-pie\"></i>\r\n                          </ng-template>\r\n                    </zyfra-nav-menu>\r\n                  </ng-template>\r\n                  <ng-template zyfraSplitterTemplate>\r\n                      <router-outlet></router-outlet>\r\n                  </ng-template>\r\n              </zyfra-splitter>\r\n          </ng-template>\r\n      </wrapper>`,\r\n  props: {\r\n    ...args,\r\n    ...actions\r\n  },\r\n})"
      },
      {
        "name": "ExtraTemplates",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "libs/components/src/lib/nav-menu/zyfra-nav-menu.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "",
        "defaultValue": "ExtraItemTemplate.bind({})"
      },
      {
        "name": "FileSystem",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "libs/components/src/lib/tree-table/_story/data.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "[]",
        "defaultValue": "[\r\n  {\r\n    data: {\r\n      name: 'Applications',\r\n      size: '200mb',\r\n      type: 'Folder'\r\n    },\r\n    children: [\r\n      {\r\n        data: {\r\n          name: 'Angular',\r\n          size: '25mb',\r\n          type: 'Folder'\r\n        },\r\n        children: [\r\n          {\r\n            data: {\r\n              name: 'angular.app',\r\n              size: '10mb',\r\n              type: 'Application'\r\n            }\r\n          },\r\n          {\r\n            data: {\r\n              name: 'cli.app',\r\n              size: '10mb',\r\n              type: 'Application'\r\n            }\r\n          },\r\n          {\r\n            data: {\r\n              name: 'mobile.app',\r\n              size: '5mb',\r\n              type: 'Application'\r\n            }\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        data: {\r\n          name: 'editor.app',\r\n          size: '25mb',\r\n          type: 'Application'\r\n        }\r\n      },\r\n      {\r\n        data: {\r\n          name: 'settings.app',\r\n          size: '50mb',\r\n          type: 'Application'\r\n        }\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    data: {\r\n      name: 'Cloud',\r\n      size: '20mb',\r\n      type: 'Folder'\r\n    },\r\n    children: [\r\n      {\r\n        data: {\r\n          name: 'backup-1.zip',\r\n          size: '10mb',\r\n          type: 'Zip'\r\n        }\r\n      },\r\n      {\r\n        data: {\r\n          name: 'backup-2.zip',\r\n          size: '10mb',\r\n          type: 'Zip'\r\n        }\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    data: {\r\n      name: 'Desktop',\r\n      size: '150kb',\r\n      type: 'Folder'\r\n    },\r\n    children: [\r\n      {\r\n        data: {\r\n          name: 'note-meeting.txt',\r\n          size: '50kb',\r\n          type: 'Text'\r\n        }\r\n      },\r\n      {\r\n        data: {\r\n          name: 'note-todo.txt',\r\n          size: '100kb',\r\n          type: 'Text'\r\n        }\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    data: {\r\n      name: 'Documents',\r\n      size: '75kb',\r\n      type: 'Folder'\r\n    },\r\n    children: [\r\n      {\r\n        data: {\r\n          name: 'Work',\r\n          size: '55kb',\r\n          type: 'Folder'\r\n        },\r\n        children: [\r\n          {\r\n            data: {\r\n              name: 'Expenses.doc',\r\n              size: '30kb',\r\n              type: 'Document'\r\n            }\r\n          },\r\n          {\r\n            data: {\r\n              name: 'Resume.doc',\r\n              size: '25kb',\r\n              type: 'Resume'\r\n            }\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        data: {\r\n          name: 'Home',\r\n          size: '20kb',\r\n          type: 'Folder'\r\n        },\r\n        children: [\r\n          {\r\n            data: {\r\n              name: 'Invoices',\r\n              size: '20kb',\r\n              type: 'Text'\r\n            }\r\n          }\r\n        ]\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    data: {\r\n      name: 'Downloads',\r\n      size: '25mb',\r\n      type: 'Folder'\r\n    },\r\n    children: [\r\n      {\r\n        data: {\r\n          name: 'Spanish',\r\n          size: '10mb',\r\n          type: 'Folder'\r\n        },\r\n        children: [\r\n          {\r\n            data: {\r\n              name: 'tutorial-a1.txt',\r\n              size: '5mb',\r\n              type: 'Text'\r\n            }\r\n          },\r\n          {\r\n            data: {\r\n              name: 'tutorial-a2.txt',\r\n              size: '5mb',\r\n              type: 'Text'\r\n            }\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        data: {\r\n          name: 'Travel',\r\n          size: '15mb',\r\n          type: 'Text'\r\n        },\r\n        children: [\r\n          {\r\n            data: {\r\n              name: 'Hotel.pdf',\r\n              size: '10mb',\r\n              type: 'PDF'\r\n            }\r\n          },\r\n          {\r\n            data: {\r\n              name: 'Flight.pdf',\r\n              size: '5mb',\r\n              type: 'PDF'\r\n            }\r\n          }\r\n        ]\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    data: {\r\n      name: 'Main',\r\n      size: '50mb',\r\n      type: 'Folder'\r\n    },\r\n    children: [\r\n      {\r\n        data: {\r\n          name: 'bin',\r\n          size: '50kb',\r\n          type: 'Link'\r\n        }\r\n      },\r\n      {\r\n        data: {\r\n          name: 'etc',\r\n          size: '100kb',\r\n          type: 'Link'\r\n        }\r\n      },\r\n      {\r\n        data: {\r\n          name: 'var',\r\n          size: '100kb',\r\n          type: 'Link'\r\n        }\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    data: {\r\n      name: 'Other',\r\n      size: '5mb',\r\n      type: 'Folder'\r\n    },\r\n    children: [\r\n      {\r\n        data: {\r\n          name: 'todo.txt',\r\n          size: '3mb',\r\n          type: 'Text'\r\n        }\r\n      },\r\n      {\r\n        data: {\r\n          name: 'logo.png',\r\n          size: '2mb',\r\n          type: 'Picture'\r\n        }\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    data: {\r\n      name: 'Pictures',\r\n      size: '150kb',\r\n      type: 'Folder'\r\n    },\r\n    children: [\r\n      {\r\n        data: {\r\n          name: 'barcelona.jpg',\r\n          size: '90kb',\r\n          type: 'Picture'\r\n        }\r\n      },\r\n      {\r\n        data: {\r\n          name: 'primeng.png',\r\n          size: '30kb',\r\n          type: 'Picture'\r\n        }\r\n      },\r\n      {\r\n        data: {\r\n          name: 'prime.jpg',\r\n          size: '30kb',\r\n          type: 'Picture'\r\n        }\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    data: {\r\n      name: 'Videos',\r\n      size: '1500mb',\r\n      type: 'Folder'\r\n    },\r\n    children: [\r\n      {\r\n        data: {\r\n          name: 'primefaces.mkv',\r\n          size: '1000mb',\r\n          type: 'Video'\r\n        }\r\n      },\r\n      {\r\n        data: {\r\n          name: 'intro.avi',\r\n          size: '500mb',\r\n          type: 'Video'\r\n        }\r\n      }\r\n    ]\r\n  }\r\n]"
      },
      {
        "name": "Filter",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "libs/components/src/lib/dropdown/zyfra-dropdown.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "",
        "defaultValue": "Template.bind({})"
      },
      {
        "name": "Filter",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "libs/components/src/lib/table/_story/stories/filter.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "",
        "defaultValue": "Template.bind({})"
      },
      {
        "name": "Filter",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "libs/components/src/lib/tree-table/_story/stories/filter.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "",
        "defaultValue": "Template.bind({})"
      },
      {
        "name": "FilterSortSearch",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "libs/components/src/lib/table/_story/stories/filter-sort-search.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "",
        "defaultValue": "Template.bind({})"
      },
      {
        "name": "flatNodes",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "libs/components/src/lib/nav-menu/utils/treeNode.functions.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "",
        "defaultValue": "(nodes: TreeNode[]): TreeNode[] => {\r\n  return [].concat(...nodes.map(node => node.children ? flatNodes(node.children) : [node]));\r\n}"
      },
      {
        "name": "FolderMode",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "libs/components/src/lib/nav-menu/zyfra-nav-menu.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "",
        "defaultValue": "BasicTemplate.bind({})"
      },
      {
        "name": "FormControlRadio",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "libs/components/src/lib/radio-button/zyfra-radio-button.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "",
        "defaultValue": "FormControlTemplate.bind({})"
      },
      {
        "name": "FormControlTemplate",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "libs/components/src/lib/radio-button/zyfra-radio-button.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story<ZyfraRadioButtonComponent<string>>",
        "defaultValue": "(args) => ({\r\n  template: `\r\n<div class=\"p-radiobutton-group\">\r\n    <ng-container *ngFor=\"let item of items\">\r\n      <zyfra-radio-button\r\n        [name]=\"name\"\r\n        [styleClass]=\"styleClass\"\r\n        [label]=\"item.label\"\r\n        [value]=\"item.value\"\r\n        [disabled]=\"disabled\"\r\n        [formControl]=\"control\"\r\n        (onClick)=\"onClick($event)\"\r\n        (ngModelChange)=\"ngModelChange($event)\"\r\n        (onFocus)=\"onFocus($event)\"\r\n        (onBlur)=\"onBlur($event)\"\r\n      ></zyfra-radio-button>\r\n    <br/>\r\n  </ng-container>\r\n  </div>\r\n  ` + formControlTemplateChunk,\r\n  props: {\r\n    ...args,\r\n    items: items,\r\n    disabledPink: true,\r\n    ngModelChange: () => {},\r\n    control: new FormControl('red', [Validators.required]),\r\n  },\r\n})"
      },
      {
        "name": "formControlTemplateChunk",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "libs/components/src/lib/radio-button/zyfra-radio-button.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "",
        "defaultValue": "`<div style=\"font-family: var(--fontFamily);\">\r\n    (Значение: {{control.value === undefined || control.value === null ? 'null' : control.value}})\r\n    <br>\r\n    {{control?.errors ? 'Есть ошибки валидации' : ''}}\r\n    <br>\r\n    </div>\r\n    <zyfra-button\r\n      label=\"toggle disable/enable\"\r\n      [style]=\"{ 'margin-right': '5px', 'margin-top': '20px' }\"\r\n      (click)=\"control.disabled ? control.enable() : control.disable()\"\r\n    ></zyfra-button>\r\n    <zyfra-button label=\"toggle red/black\" (click)=\"control.setValue(control.value === 'black' ? 'red' : 'black')\"></zyfra-button>\r\n`"
      },
      {
        "name": "fromRubricatorNodes",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "libs/components/src/lib/nav-menu/utils/treeNode.functions.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "",
        "defaultValue": "(nodes: TreeNode[]): TreeNode[] => {\r\n  const sortedNodes = flatNodes(nodes).sort(sortByLabel);\r\n  const letters = new Set(sortedNodes.map(({ label }) => label.charAt(0).toUpperCase()));\r\n  const rubricatorNodes = [];\r\n  letters.forEach(letter => {\r\n    rubricatorNodes.push({\r\n      key: letter,\r\n      label: letter,\r\n      data: { label: letter },\r\n      children: sortedNodes.filter(({ label }) => label.charAt(0).toUpperCase() === letter)\r\n    });\r\n  });\r\n  return rubricatorNodes;\r\n}"
      },
      {
        "name": "FrozenRows",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "libs/components/src/lib/table/_story/stories/frozen-rows.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "",
        "defaultValue": "Template.bind({})"
      },
      {
        "name": "generateKey",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "libs/components/src/lib/nav-menu/utils/generateKey.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "",
        "defaultValue": "(): string => window.crypto.getRandomValues(new Uint32Array(1))[0].toString()"
      },
      {
        "name": "getPath",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "libs/components/src/lib/nav-menu/utils/treeNode.functions.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "",
        "defaultValue": "(node: TreeNode, acc: TreeNode[] = []): TreeNode[] => {\r\n  acc.push(node.parent);\r\n  return node.parent\r\n    ? getPath(node.parent, acc)\r\n    : acc.reverse();\r\n}"
      },
      {
        "name": "Group",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "libs/components/src/lib/dropdown/zyfra-dropdown.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "",
        "defaultValue": "Template.bind({})"
      },
      {
        "name": "GroupPanels",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "libs/components/src/lib/nav-menu/zyfra-nav-menu.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "",
        "defaultValue": "GroupPanelTemplate.bind({})"
      },
      {
        "name": "GroupPanelTemplate",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "libs/components/src/lib/nav-menu/zyfra-nav-menu.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "(args) => ({\r\n  template:\r\n      `<wrapper>\r\n          <ng-template zyfraTemplate>\r\n              <zyfra-splitter layout=\"horizontal\" [panelSizes]=\"[25,75]\" [style]=\"{ height: '600px' }\">\r\n                  <ng-template zyfraSplitterTemplate>\r\n                      <zyfra-nav-menu [menuTitle]=\"menuTitle\"\r\n                                      [emptyMessage]=\"emptyMessage\"\r\n                                      [headerConfig]=\"headerConfig\"\r\n                                      [settingsConfig]=\"settingsConfig\"\r\n                                      [toolbarConfig]=\"toolbarConfig\"\r\n                                      [searchPlaceholder]=\"searchPlaceholder\"\r\n                                      (homeClick)=\"homeClick($event)\"\r\n                                      (activeItemChange)=\"activeItemChange($event)\"\r\n                                      (nodeCollapse)=\"nodeCollapse($event)\"\r\n                                      (nodeExpand)=\"nodeExpand($event)\"\r\n                                      (selectionChange)=\"selectionChange($event)\">\r\n                      <ng-template zyfraNavMenuGroup\r\n                                   [header]=\"header1\"\r\n                                   [items]=\"items1\"></ng-template>\r\n\r\n                      <ng-template zyfraNavMenuGroup\r\n                                   [header]=\"header2\"\r\n                                   [items]=\"items2\"></ng-template>\r\n\r\n                      <ng-template zyfraNavMenuGroup\r\n                                   [header]=\"header3\"\r\n                                   [items]=\"items3\"></ng-template>\r\n                      </zyfra-nav-menu>\r\n                  </ng-template>\r\n                  <ng-template zyfraSplitterTemplate>\r\n                      <router-outlet></router-outlet>\r\n                  </ng-template>\r\n              </zyfra-splitter>\r\n          </ng-template>\r\n      </wrapper>`,\r\n  props: {\r\n    ...args,\r\n    ...actions\r\n  },\r\n})"
      },
      {
        "name": "GroupWithContent",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "libs/components/src/lib/dropdown-with-content/zyfra-dropdown-with-content.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "",
        "defaultValue": "TemplateWithContent.bind({})"
      },
      {
        "name": "Header",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "libs/components/src/lib/tab-menu/zyfra-tab-menu.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "",
        "defaultValue": "Template.bind({})"
      },
      {
        "name": "Icon",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "libs/components/src/lib/button/zyfra-button.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "",
        "defaultValue": "Template.bind({})"
      },
      {
        "name": "Icon",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "libs/components/src/lib/chip/zyfra-chip.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "",
        "defaultValue": "Template.bind({})"
      },
      {
        "name": "Icon",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "libs/components/src/lib/datepicker/calendar/zyfra-calendar.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "",
        "defaultValue": "Template.bind({})"
      },
      {
        "name": "IconDefs",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "libs/components/src/lib/icon/story/icon-definitions.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "[]",
        "defaultValue": "[\r\n    {\r\n        \"dir\": \"account\",\r\n        \"data\": [\r\n            \"account-card-details\",\r\n            \"account-circle\",\r\n            \"account-contact-sync\",\r\n            \"account-done\",\r\n            \"account-down-list-open\",\r\n            \"account-down-list\",\r\n            \"account-edit\",\r\n            \"account-group\",\r\n            \"account-key\",\r\n            \"account-location\",\r\n            \"account-lock\",\r\n            \"account-log-in\",\r\n            \"account-logout\",\r\n            \"account-minus\",\r\n            \"account-multiple-minus\",\r\n            \"account-multiple-plus\",\r\n            \"account-multiple-shield\",\r\n            \"account-plus\",\r\n            \"account-remove\",\r\n            \"account-role\",\r\n            \"account-search\",\r\n            \"account-setting-1\",\r\n            \"account-setting\",\r\n            \"account-shield-1\",\r\n            \"account-shield-alarm\",\r\n            \"account-shield-off\",\r\n            \"account-shield\",\r\n            \"account-switch\",\r\n            \"account-unlock\",\r\n            \"account-worker\",\r\n            \"account\"\r\n        ]\r\n    },\r\n    {\r\n        \"dir\": \"add\",\r\n        \"data\": [\r\n            \"add-alarm\",\r\n            \"add-bell-plus\",\r\n            \"add-bookmark-plus\",\r\n            \"add-cart-plus\",\r\n            \"add-circle-fill\",\r\n            \"add-circle\",\r\n            \"add-file-plus\",\r\n            \"add-folder-plus\",\r\n            \"add-label-add\",\r\n            \"add-language\",\r\n            \"add-library-plus\",\r\n            \"add-line-add\",\r\n            \"add-map-marker-plus\",\r\n            \"add-phone\",\r\n            \"add-plus-box-fill\",\r\n            \"add-plus-box\",\r\n            \"add-plus-circle-multiple\",\r\n            \"add-plus-drop-down-list\",\r\n            \"add-plus\",\r\n            \"add-shape-square-plus\"\r\n        ]\r\n    },\r\n    {\r\n        \"dir\": \"alerts\",\r\n        \"data\": [\r\n            \"alerts-alarm-light\",\r\n            \"alerts-bell-fill\",\r\n            \"alerts-bell-off\",\r\n            \"alerts-bell-ring-fill\",\r\n            \"alerts-bell-ring\",\r\n            \"alerts-bell\",\r\n            \"alerts-box-fill\",\r\n            \"alerts-circle-fill\",\r\n            \"alerts-circle-mini-1\",\r\n            \"alerts-circle-mini\",\r\n            \"alerts-circle\",\r\n            \"alerts-decagram-fill\",\r\n            \"alerts-decagram\",\r\n            \"alerts-false_alerts1\",\r\n            \"alerts-false_alerts2\",\r\n            \"alerts-flag-fill\",\r\n            \"alerts-flag\",\r\n            \"alerts-help-box-fill\",\r\n            \"alerts-help-box\",\r\n            \"alerts-help-circle-outline\",\r\n            \"alerts-info-add-incongruity\",\r\n            \"alerts-info-circle-fill\",\r\n            \"alerts-info-square-fill\",\r\n            \"alerts-info-square\",\r\n            \"alerts-info-triangle-fill\",\r\n            \"alerts-info-triangle\",\r\n            \"alerts-inform-fill-mini\",\r\n            \"alerts-inform-mini\",\r\n            \"alerts-inform\",\r\n            \"alerts-information-variant\",\r\n            \"alerts-mark\",\r\n            \"alerts-octagon-fill\",\r\n            \"alerts-octagon\",\r\n            \"alerts-pulse\",\r\n            \"alerts-question-mark\",\r\n            \"alerts-square\",\r\n            \"alerts-warning\",\r\n            \"alerts\",\r\n            \"success-decagram-fill\"\r\n        ]\r\n    },\r\n    {\r\n        \"dir\": \"arrows\",\r\n        \"data\": [\r\n            \"arrows-all\",\r\n            \"arrows-arrow-circle-down\",\r\n            \"arrows-arrow-circle-left\",\r\n            \"arrows-arrow-circle-right\",\r\n            \"arrows-arrow-circle-up\",\r\n            \"arrows-arrow-expand-horizontal\",\r\n            \"arrows-arrow-expand-vertical\",\r\n            \"arrows-arrow-left\",\r\n            \"arrows-arrow-right\",\r\n            \"arrows-arrow-up-level\",\r\n            \"arrows-autorenew-1\",\r\n            \"arrows-autorenew\",\r\n            \"arrows-back\",\r\n            \"arrows-cached-1\",\r\n            \"arrows-cached\",\r\n            \"arrows-chevron-left\",\r\n            \"arrows-chevron-right\",\r\n            \"arrows-collapse-four-arrows\",\r\n            \"arrows-collapse\",\r\n            \"arrows-compare\",\r\n            \"arrows-corner-chek-in\",\r\n            \"arrows-corner-down-left\",\r\n            \"arrows-corner-down-right\",\r\n            \"arrows-corner-left-down\",\r\n            \"arrows-corner-left-up\",\r\n            \"arrows-corner-right-down\",\r\n            \"arrows-corner-right-up\",\r\n            \"arrows-corner-up-left\",\r\n            \"arrows-corner-up-right\",\r\n            \"arrows-diagonal-arrow-left-down\",\r\n            \"arrows-diagonal-arrow-left-up\",\r\n            \"arrows-diagonal-arrow-right-down\",\r\n            \"arrows-diagonal-arrow-right-up\",\r\n            \"arrows-down-2\",\r\n            \"arrows-down-bold\",\r\n            \"arrows-down-double-2\",\r\n            \"arrows-down-double-top-2\",\r\n            \"arrows-down-limit-1\",\r\n            \"arrows-down-limit-double-1\",\r\n            \"arrows-down\",\r\n            \"arrows-download\",\r\n            \"arrows-expand-all\",\r\n            \"arrows-expand\",\r\n            \"arrows-left-bold\",\r\n            \"arrows-next\",\r\n            \"arrows-refresh\",\r\n            \"arrows-replay\",\r\n            \"arrows-right-bold\",\r\n            \"arrows-shuffle-variant\",\r\n            \"arrows-shuffle\",\r\n            \"arrows-swap-horiz-2\",\r\n            \"arrows-swap-horiz\",\r\n            \"arrows-swap-vert-2\",\r\n            \"arrows-swap-vert\",\r\n            \"arrows-up-2\",\r\n            \"arrows-up-bold\",\r\n            \"arrows-up-double-2\",\r\n            \"arrows-up-double-top-2\",\r\n            \"arrows-up-limit-1\",\r\n            \"arrows-up-limit-double-1\",\r\n            \"arrows-up\"\r\n        ]\r\n    },\r\n    {\r\n        \"dir\": \"audio\",\r\n        \"data\": [\r\n            \"audio-add-library-music\",\r\n            \"audio-artist\",\r\n            \"audio-bookmark-music\",\r\n            \"audio-file-music\",\r\n            \"audio-microphone-off\",\r\n            \"audio-microphone\",\r\n            \"audio-music-box\",\r\n            \"audio-music-circle\",\r\n            \"audio-music-off\",\r\n            \"audio-music\",\r\n            \"audio-volume-high\",\r\n            \"audio-volume-low\",\r\n            \"audio-volume-medium\",\r\n            \"audio-volume-minus\",\r\n            \"audio-volume-mute\",\r\n            \"audio-volume-off\",\r\n            \"audio-volume-plus\"\r\n        ]\r\n    },\r\n    {\r\n        \"dir\": \"badges\",\r\n        \"data\": [\r\n            \"badges-clipboard-tex\",\r\n            \"badges-clipboard\",\r\n            \"badges-code-download\",\r\n            \"badges-code\",\r\n            \"badges-tag-badges-tag-archve\",\r\n            \"badges-tag-fill\",\r\n            \"badges-tag-multiple\",\r\n            \"badges-tag-plus\",\r\n            \"badges-tag-remove\",\r\n            \"badges-tag-search\",\r\n            \"badges-tag-with-an-exclamation-mark\",\r\n            \"badges-tag-with-binding-to-data\",\r\n            \"badges-tag-without-binding-to-data\",\r\n            \"badges-tag\"\r\n        ]\r\n    },\r\n    {\r\n        \"dir\": \"battery\",\r\n        \"data\": [\r\n            \"battery-10\",\r\n            \"battery-30\",\r\n            \"battery-50\",\r\n            \"battery-80\",\r\n            \"battery-alert\",\r\n            \"battery-charging\",\r\n            \"battery-flash-off\",\r\n            \"battery-flash-ok\",\r\n            \"battery-flash\",\r\n            \"battery-minus\",\r\n            \"battery-plus\",\r\n            \"battery\"\r\n        ]\r\n    },\r\n    {\r\n        \"dir\": \"bookmarks\",\r\n        \"data\": [\r\n            \"bookmarks-book-open-page-variant\",\r\n            \"bookmarks-book-open-plus\",\r\n            \"bookmarks-book-open-re-1\",\r\n            \"bookmarks-book-open-re\",\r\n            \"bookmarks-book-open-variant\",\r\n            \"bookmarks-book-open\",\r\n            \"bookmarks-book\",\r\n            \"bookmarks-bookmark-check-fill\",\r\n            \"bookmarks-bookmark-check\",\r\n            \"bookmarks-bookmark-fill\",\r\n            \"bookmarks-bookmark-music-fill\",\r\n            \"bookmarks-bookmark-music\",\r\n            \"bookmarks-bookmark-plus-fill\",\r\n            \"bookmarks-bookmark-plus\",\r\n            \"bookmarks-bookmark-remove-2\",\r\n            \"bookmarks-bookmark-remove-fill\",\r\n            \"bookmarks-bookmark-remove\",\r\n            \"bookmarks-bookmark\"\r\n        ]\r\n    },\r\n    {\r\n        \"dir\": \"camera\",\r\n        \"data\": [\r\n            \"camera-camera\",\r\n            \"camera-clapperboard-close\",\r\n            \"camera-clapperboard\",\r\n            \"camera-close\",\r\n            \"camera-film-close\",\r\n            \"camera-film\",\r\n            \"camera-image\",\r\n            \"camera-video-close\",\r\n            \"camera-video-off\",\r\n            \"camera-video\",\r\n            \"camera\"\r\n        ]\r\n    },\r\n    {\r\n        \"dir\": \"cancel\",\r\n        \"data\": [\r\n            \"cancel-block\",\r\n            \"cancel-close-box-fill\",\r\n            \"cancel-close-box\",\r\n            \"cancel-close-circle-fill\",\r\n            \"cancel-close-circle\",\r\n            \"cancel-close-small\",\r\n            \"cancel-close\",\r\n            \"cancel-delete-line\",\r\n            \"cansel-delete-content\",\r\n            \"cansel-delete-file\"\r\n        ]\r\n    },\r\n    {\r\n        \"dir\": \"charts\",\r\n        \"data\": [\r\n            \"charts-arc-1\",\r\n            \"charts-arc\",\r\n            \"charts-areaspline\",\r\n            \"charts-bar-graph\",\r\n            \"charts-bar-stacked\",\r\n            \"charts-bar\",\r\n            \"charts-bubble-line\",\r\n            \"charts-bubble\",\r\n            \"charts-chart-donut-variant-half\",\r\n            \"charts-chart-donut-variant\",\r\n            \"charts-discharge\",\r\n            \"charts-donut\",\r\n            \"charts-elevation-decline\",\r\n            \"charts-elevation-rise\",\r\n            \"charts-finance\",\r\n            \"charts-gantt\",\r\n            \"charts-google-analytics\",\r\n            \"charts-google-assistant\",\r\n            \"charts-hexagon-multiple\",\r\n            \"charts-histogram-chart-dashed-2\",\r\n            \"charts-histogram-chart-dashed\",\r\n            \"charts-histogram\",\r\n            \"charts-line-variant\",\r\n            \"charts-pie-1\",\r\n            \"charts-pie-2\",\r\n            \"charts-pie\",\r\n            \"charts-poll-box\",\r\n            \"charts-poll\",\r\n            \"charts-scatterplot-hexbin\",\r\n            \"charts-signal\",\r\n            \"charts-smart-trend\",\r\n            \"charts-trending-down\",\r\n            \"charts-trending-up\"\r\n        ]\r\n    },\r\n    {\r\n        \"dir\": \"chevrons\",\r\n        \"data\": [\r\n            \"chevron-middle\",\r\n            \"chevrons-close-all\",\r\n            \"chevrons-double-down\",\r\n            \"chevrons-double-left-mini\",\r\n            \"chevrons-double-left\",\r\n            \"chevrons-double-right-mini\",\r\n            \"chevrons-double-right\",\r\n            \"chevrons-double-up\",\r\n            \"chevrons-down\",\r\n            \"chevrons-dropdown-small\",\r\n            \"chevrons-dropdown\",\r\n            \"chevrons-dropup\",\r\n            \"chevrons-input\",\r\n            \"chevrons-left-mini\",\r\n            \"chevrons-left\",\r\n            \"chevrons-menu-left-small\",\r\n            \"chevrons-menu-left\",\r\n            \"chevrons-menu-right\",\r\n            \"chevrons-open-all\",\r\n            \"chevrons-right-mini\",\r\n            \"chevrons-right\",\r\n            \"chevrons-unfold-less-horizontal\",\r\n            \"chevrons-unfold-less-verica\",\r\n            \"chevrons-unfold-more-horizontal\",\r\n            \"chevrons-unfold-more-vertical\",\r\n            \"chevrons-up\"\r\n        ]\r\n    },\r\n    {\r\n        \"dir\": \"color\",\r\n        \"data\": [\r\n            \"color-China\",\r\n            \"color-Czech-Republic\",\r\n            \"color-France-drop\",\r\n            \"color-France\",\r\n            \"color-German-drop\",\r\n            \"color-German\",\r\n            \"color-Great-Britan-drop\",\r\n            \"color-Great-Britan\",\r\n            \"color-Indian-drop\",\r\n            \"color-Indian\",\r\n            \"color-Japanese\",\r\n            \"color-Romanian\",\r\n            \"color-Russia-drop\",\r\n            \"color-Russia\",\r\n            \"color-Vietnam\"\r\n        ]\r\n    },\r\n    {\r\n        \"dir\": \"date\",\r\n        \"data\": [\r\n            \"date-access-alarm\",\r\n            \"date-asterisk\",\r\n            \"date-calendar-blank\",\r\n            \"date-calendar-check\",\r\n            \"date-calendar-clock\",\r\n            \"date-calendar-plus\",\r\n            \"date-calendar-question\",\r\n            \"date-calendar-range\",\r\n            \"date-calendar-remove\",\r\n            \"date-calendar-text\",\r\n            \"date-calendar-today\",\r\n            \"date-calendar\",\r\n            \"date-clock-alert\",\r\n            \"date-clock-end\",\r\n            \"date-clock-in\",\r\n            \"date-clock-out\",\r\n            \"date-clock-start\",\r\n            \"date-clock\",\r\n            \"date-day\",\r\n            \"date-history\",\r\n            \"date-hour\",\r\n            \"date-inform-add\",\r\n            \"date-inform-delete\",\r\n            \"date-midnight\",\r\n            \"date-minute\",\r\n            \"date-month\",\r\n            \"date-now\",\r\n            \"date-period-dropdown-list-open\",\r\n            \"date-period-dropdown-list\",\r\n            \"date-range\",\r\n            \"date-second\",\r\n            \"date-time-add-2\",\r\n            \"date-time-add\",\r\n            \"date-time-remove-2\",\r\n            \"date-time-remove\",\r\n            \"date-timer-sand-empty\",\r\n            \"date-timer\",\r\n            \"date-update\",\r\n            \"date-year\"\r\n        ]\r\n    },\r\n    {\r\n        \"dir\": \"delete\",\r\n        \"data\": [\r\n            \"delete-do-not-disturb\",\r\n            \"delete-drop\",\r\n            \"delete-empty\",\r\n            \"delete-forever\",\r\n            \"delete-label-delete\",\r\n            \"delete-minus-circle\",\r\n            \"delete-minus-square\",\r\n            \"delete-minus\",\r\n            \"delete-restore\",\r\n            \"delete\"\r\n        ]\r\n    },\r\n    {\r\n        \"dir\": \"devices\",\r\n        \"data\": [\r\n            \"devices-android-debug-bridge\",\r\n            \"devices-android\",\r\n            \"devices-camera-front\",\r\n            \"devices-cellphone-basic\",\r\n            \"devices-cellphone-link-off\",\r\n            \"devices-cellphone-link\",\r\n            \"devices-cellphone-wireless\",\r\n            \"devices-cellphone\",\r\n            \"devices-desktop-tower\",\r\n            \"devices-hard-drive-outline\",\r\n            \"devices-headphones\",\r\n            \"devices-input-device\",\r\n            \"devices-laptop-off-1\",\r\n            \"devices-laptop-off\",\r\n            \"devices-laptop\",\r\n            \"devices-monitor\",\r\n            \"devices-printer-dropdown-list\",\r\n            \"devices-printer\",\r\n            \"devices-sensor\",\r\n            \"devices-speaker\",\r\n            \"devices-tablet\",\r\n            \"devices-touchpad\",\r\n            \"devices-transmitter\",\r\n            \"devices-tv\",\r\n            \"devices-watch-variant\"\r\n        ]\r\n    },\r\n    {\r\n        \"dir\": \"editor\",\r\n        \"data\": [\r\n            \"add-brace-right\",\r\n            \"add-curly-brace-right\",\r\n            \"editor-add-column\",\r\n            \"editor-add-row\",\r\n            \"editor-alfavit\",\r\n            \"editor-attach-2\",\r\n            \"editor-attach-file\",\r\n            \"editor-auto\",\r\n            \"editor-auto1\",\r\n            \"editor-border-all\",\r\n            \"editor-border-bottom\",\r\n            \"editor-border-clear\",\r\n            \"editor-border-color\",\r\n            \"editor-border-horizontal\",\r\n            \"editor-border-inner\",\r\n            \"editor-border-left\",\r\n            \"editor-border-outer\",\r\n            \"editor-border-right\",\r\n            \"editor-border-style\",\r\n            \"editor-border-top\",\r\n            \"editor-border-vertical\",\r\n            \"editor-brace-left\",\r\n            \"editor-copy-column\",\r\n            \"editor-copy-drop\",\r\n            \"editor-copy-row\",\r\n            \"editor-copy\",\r\n            \"editor-crop\",\r\n            \"editor-cross-out\",\r\n            \"editor-curly-brace-left\",\r\n            \"editor-delete-column\",\r\n            \"editor-delete-row\",\r\n            \"editor-disconnect-link\",\r\n            \"editor-discrete-set-1\",\r\n            \"editor-discrete-set\",\r\n            \"editor-division\",\r\n            \"editor-dots\",\r\n            \"editor-down-1\",\r\n            \"editor-down\",\r\n            \"editor-drag-and-drop\",\r\n            \"editor-dropdown-list-open\",\r\n            \"editor-dropdown-list\",\r\n            \"editor-droplet\",\r\n            \"editor-format-align-center\",\r\n            \"editor-format-align-justify\",\r\n            \"editor-format-align-left\",\r\n            \"editor-format-align-right\",\r\n            \"editor-format-bold\",\r\n            \"editor-format-color-fill\",\r\n            \"editor-format-color-reset\",\r\n            \"editor-format-color-text\",\r\n            \"editor-format-indent\",\r\n            \"editor-format-indent1\",\r\n            \"editor-format-italic\",\r\n            \"editor-format-list-bulleted\",\r\n            \"editor-format-list-numbered\",\r\n            \"editor-format-textdirection-l-to-r\",\r\n            \"editor-format-underlined\",\r\n            \"editor-formula\",\r\n            \"editor-functions\",\r\n            \"editor-group-choose\",\r\n            \"editor-group-dropdown\",\r\n            \"editor-group-panel\",\r\n            \"editor-group\",\r\n            \"editor-hash\",\r\n            \"editor-horizontal-align-center-\",\r\n            \"editor-insert-emoticon-sad\",\r\n            \"editor-insert-emoticon\",\r\n            \"editor-insert-link-add\",\r\n            \"editor-insert-link-delete\",\r\n            \"editor-insert-link\",\r\n            \"editor-line-height\",\r\n            \"editor-link\",\r\n            \"editor-list-dushed-2\",\r\n            \"editor-merge-type\",\r\n            \"editor-mini\",\r\n            \"editor-minus\",\r\n            \"editor-mode\",\r\n            \"editor-multiplication\",\r\n            \"editor-panel-left\",\r\n            \"editor-panel-right\",\r\n            \"editor-panel-top\",\r\n            \"editor-percent-1\",\r\n            \"editor-percent\",\r\n            \"editor-plus\",\r\n            \"editor-right-1\",\r\n            \"editor-right\",\r\n            \"editor-screen\",\r\n            \"editor-search-hierarchy\",\r\n            \"editor-search-tags-words\",\r\n            \"editor-sort-asc\",\r\n            \"editor-subskrit-text\",\r\n            \"editor-superskrit-text\",\r\n            \"editor-table-lookup\",\r\n            \"editor-table\",\r\n            \"editor-tag\",\r\n            \"editor-template\",\r\n            \"editor-title\",\r\n            \"editor-transpose-right\",\r\n            \"editor-transpose-top\",\r\n            \"editor-transpose\",\r\n            \"editor-ungroup\",\r\n            \"editor-vertical-align-bottom\",\r\n            \"editor-vertical-align-center 2\",\r\n            \"editor-vertical-align-center\",\r\n            \"editor-vertical-align-top\",\r\n            \"editor-window\",\r\n            \"editor-wrap-text\"\r\n        ]\r\n    },\r\n    {\r\n        \"dir\": \"files\",\r\n        \"data\": [\r\n            \"files-alarm\",\r\n            \"files-archive\",\r\n            \"files-box\",\r\n            \"files-cloud-check\",\r\n            \"files-cloud\",\r\n            \"files-cloup-upload\",\r\n            \"files-collection-2\",\r\n            \"files-confirmation\",\r\n            \"files-correct\",\r\n            \"files-description-properties\",\r\n            \"files-document-image\",\r\n            \"files-document-text\",\r\n            \"files-excel-box\",\r\n            \"files-export-1\",\r\n            \"files-export-arr\",\r\n            \"files-export-csv\",\r\n            \"files-export-pdf\",\r\n            \"files-export-xlsx\",\r\n            \"files-export\",\r\n            \"files-file-close\",\r\n            \"files-file-doc\",\r\n            \"files-file-docx\",\r\n            \"files-file-open\",\r\n            \"files-file-pdf\",\r\n            \"files-file-play\",\r\n            \"files-file-ppt\",\r\n            \"files-file-pptx\",\r\n            \"files-file-remove\",\r\n            \"files-file-txt\",\r\n            \"files-file-video\",\r\n            \"files-file-xls\",\r\n            \"files-file-xlsx\",\r\n            \"files-file\",\r\n            \"files-find-1\",\r\n            \"files-find\",\r\n            \"files-folder-1\",\r\n            \"files-folder-add\",\r\n            \"files-folder-close\",\r\n            \"files-folder-delete\",\r\n            \"files-folder-open-1\",\r\n            \"files-folder-open\",\r\n            \"files-folder-remove\",\r\n            \"files-folder-root-add\",\r\n            \"files-folder-root-remove\",\r\n            \"files-folder\",\r\n            \"files-import-1\",\r\n            \"files-import-arr\",\r\n            \"files-import-csv\",\r\n            \"files-import-pdf\",\r\n            \"files-import-xlsx\",\r\n            \"files-import\",\r\n            \"files-import1с\",\r\n            \"files-in-group\",\r\n            \"files-incorrect\",\r\n            \"files-indicator\",\r\n            \"files-loader\",\r\n            \"files-method\",\r\n            \"files-mnemo\",\r\n            \"files-mode\",\r\n            \"files-multi\",\r\n            \"files-norm\",\r\n            \"files-plus\",\r\n            \"files-powerpoint\",\r\n            \"files-specification\",\r\n            \"files-view-document\",\r\n            \"files-word-box\",\r\n            \"files-просмотр\"\r\n        ]\r\n    },\r\n    {\r\n        \"dir\": \"finance\",\r\n        \"data\": [\r\n            \"finance-barcode\",\r\n            \"finance-calculator-auto\",\r\n            \"finance-calculator\",\r\n            \"finance-credit-card-of\",\r\n            \"finance-credit-card-plus\",\r\n            \"finance-credit-card\",\r\n            \"finance-currency-btc\",\r\n            \"finance-currency-usd-off\",\r\n            \"finance-currency-usd\",\r\n            \"finance-qr-code-auto-1\",\r\n            \"finance-qr-code-auto-2\",\r\n            \"finance-qr-code-auto-3\",\r\n            \"finance-qr-code-search\",\r\n            \"finance-qr-code\",\r\n            \"finance-scanner\",\r\n            \"finance-wallet\"\r\n        ]\r\n    },\r\n    {\r\n        \"dir\": \"location\",\r\n        \"data\": [\r\n            \"location-compass\",\r\n            \"location-crosshairs-gps\",\r\n            \"location-crosshairs\",\r\n            \"location-language\",\r\n            \"location-localization-down-list\",\r\n            \"location-map-2\",\r\n            \"location-map-marker-date-1\",\r\n            \"location-map-marker-date-2\",\r\n            \"location-map-marker-minus\",\r\n            \"location-map-marker-off\",\r\n            \"location-map-marker-plus\",\r\n            \"location-map-marker\",\r\n            \"location-map\",\r\n            \"location-navigation-1\",\r\n            \"location-navigation\",\r\n            \"location-person-pin-circle\",\r\n            \"location-pin-1\",\r\n            \"location-pin-2\",\r\n            \"location-pin\"\r\n        ]\r\n    },\r\n    {\r\n        \"dir\": \"messaging\",\r\n        \"data\": [\r\n            \"editor-add-comment\",\r\n            \"messaging-add-comment\",\r\n            \"messaging-alert\",\r\n            \"messaging-at\",\r\n            \"messaging-emai-down-list\",\r\n            \"messaging-emai\",\r\n            \"messaging-email-open\",\r\n            \"messaging-forward\",\r\n            \"messaging-inbox\",\r\n            \"messaging-message-circle\",\r\n            \"messaging-message-off\",\r\n            \"messaging-message\",\r\n            \"messaging-processing\",\r\n            \"messaging-question-ask\",\r\n            \"messaging-reply\",\r\n            \"messaging-send\",\r\n            \"messaging-text\"\r\n        ]\r\n    },\r\n    {\r\n        \"dir\": \"network\",\r\n        \"data\": [\r\n            \"network-close\",\r\n            \"network-cloud-download\",\r\n            \"network-cloud-upload\",\r\n            \"network-database-administration\",\r\n            \"network-database-delete\",\r\n            \"network-database-json\",\r\n            \"network-database-minus\",\r\n            \"network-database-plus\",\r\n            \"network-database-search\",\r\n            \"network-database-sql\",\r\n            \"network-database\",\r\n            \"network-download\",\r\n            \"network-ethernet-open\",\r\n            \"network-external-link\",\r\n            \"network-lan-connect\",\r\n            \"network-lan-disconnect\",\r\n            \"network-lan-pending\",\r\n            \"network-lan\",\r\n            \"network-layers\",\r\n            \"network-library\",\r\n            \"network-minus\",\r\n            \"network-no-layers\",\r\n            \"network-object\",\r\n            \"network-plus\",\r\n            \"network-scheme-2\",\r\n            \"network-scheme\",\r\n            \"network-security\",\r\n            \"network-server-1\",\r\n            \"network-server-network-off\",\r\n            \"network-server-network\",\r\n            \"network-server-off\",\r\n            \"network-server-security\",\r\n            \"network-server\",\r\n            \"network-upload\"\r\n        ]\r\n    },\r\n    {\r\n        \"dir\": \"phone\",\r\n        \"data\": [\r\n            \"phone-call-missed\",\r\n            \"phone-in-talk\",\r\n            \"phone-minus\",\r\n            \"phone-missed\",\r\n            \"phone-off\",\r\n            \"phone-paused\",\r\n            \"phone-plus\",\r\n            \"phone\"\r\n        ]\r\n    },\r\n    {\r\n        \"dir\": \"player\",\r\n        \"data\": [\r\n            \"player-loop\",\r\n            \"player-pause\",\r\n            \"player-play-back\",\r\n            \"player-play\",\r\n            \"player-skip-backward\",\r\n            \"player-skip-forward\",\r\n            \"player-skip-next-circle-outline\",\r\n            \"player-skip-previous\",\r\n            \"player-stop\",\r\n            \"player-voicemail\"\r\n        ]\r\n    },\r\n    {\r\n        \"dir\": \"poi\",\r\n        \"data\": [\r\n            \"burn\",\r\n            \"cargo-box-2\",\r\n            \"cargo-box\",\r\n            \"cargo-container\",\r\n            \"cargo\",\r\n            \"fire\",\r\n            \"freeze\",\r\n            \"gas\",\r\n            \"loading\",\r\n            \"location-map-marker-minus\",\r\n            \"poi-achive-Mir\",\r\n            \"poi-article-1\",\r\n            \"poi-barley\",\r\n            \"poi-bdrv-administration\",\r\n            \"poi-boiler-hot-water-gas-and-oil\",\r\n            \"poi-coal\",\r\n            \"poi-crane\",\r\n            \"poi-difference\",\r\n            \"poi-early-version\",\r\n            \"poi-ecopost-circle\",\r\n            \"poi-ecopost-rectangle\",\r\n            \"poi-electrics\",\r\n            \"poi-factory pipe\",\r\n            \"poi-factory\",\r\n            \"poi-fan\",\r\n            \"poi-flask-1\",\r\n            \"poi-flask-2\",\r\n            \"poi-flask-3\",\r\n            \"poi-flask-4\",\r\n            \"poi-flask-5\",\r\n            \"poi-fuel-oil-tank\",\r\n            \"poi-fuel\",\r\n            \"poi-gas-monitoring\",\r\n            \"poi-gas-station\",\r\n            \"poi-gear-cooling\",\r\n            \"poi-generator\",\r\n            \"poi-git-lab\",\r\n            \"poi-heat-exchanger\",\r\n            \"poi-heat-recovery-boiler\",\r\n            \"poi-high-speed-reduction-cooling\",\r\n            \"poi-medicine\",\r\n            \"poi-ni-fi\",\r\n            \"poi-nuclear-station\",\r\n            \"poi-oil-factory\",\r\n            \"poi-owl\",\r\n            \"poi-pipe-sensor\",\r\n            \"poi-pipe-valve\",\r\n            \"poi-pipeline\",\r\n            \"poi-plus\",\r\n            \"poi-press\",\r\n            \"poi-pump-drop\",\r\n            \"poi-pump\",\r\n            \"poi-respirator-2.1\",\r\n            \"poi-respirator-2\",\r\n            \"poi-respirator-3\",\r\n            \"poi-respirator-4\",\r\n            \"poi-respirator-5\",\r\n            \"poi-respirator\",\r\n            \"poi-separator\",\r\n            \"poi-steam-boiler\",\r\n            \"poi-steam-turbine\",\r\n            \"poi-steam\",\r\n            \"poi-strit\",\r\n            \"poi-tank\",\r\n            \"poi-water-heater\",\r\n            \"poi-water-pump\",\r\n            \"product-grade-according-to-specification\",\r\n            \"snowflake\"\r\n        ]\r\n    },\r\n    {\r\n        \"dir\": \"selection\",\r\n        \"data\": [\r\n            \"selection-check-all\",\r\n            \"selection-check-simple\",\r\n            \"selection-checkbox-blank-circle\",\r\n            \"selection-checkbox-blank\",\r\n            \"selection-checkbox-marked-circle-chanel\",\r\n            \"selection-checkbox-marked-circle\",\r\n            \"selection-checked-1\",\r\n            \"selection-checked-2\",\r\n            \"selection-checked-empty\",\r\n            \"selection-checked\",\r\n            \"selection-choice\",\r\n            \"selection-halfchoice\",\r\n            \"selection-process\",\r\n            \"selection-radio-off\",\r\n            \"selection-radio-on\",\r\n            \"selection-success\",\r\n            \"selection-toggle-left\",\r\n            \"selection-toggle-right\",\r\n            \"selection-unchoice\"\r\n        ]\r\n    },\r\n    {\r\n        \"dir\": \"settings\",\r\n        \"data\": [\r\n            \"settings-2\",\r\n            \"settings-apps\",\r\n            \"settings-more-horiz\",\r\n            \"settings-more-vert\",\r\n            \"settings-power\",\r\n            \"settings-tune-vertical\",\r\n            \"settings-tune\",\r\n            \"settings\"\r\n        ]\r\n    },\r\n    {\r\n        \"dir\": \"shapes\",\r\n        \"data\": [\r\n            \"shapes-animation\",\r\n            \"shapes-arrange-bring-forward\",\r\n            \"shapes-arrange-send-backward\",\r\n            \"shapes-arrange-send-to-back\",\r\n            \"shapes-box-shadow\",\r\n            \"shapes-checkbox-intermediate\",\r\n            \"shapes-checkerboard\",\r\n            \"shapes-collage\",\r\n            \"shapes-collector\",\r\n            \"shapes-cube-3\",\r\n            \"shapes-cube-outline\",\r\n            \"shapes-cube\",\r\n            \"shapes-drawing-box\",\r\n            \"shapes-drawing-outline\",\r\n            \"shapes-drawing\",\r\n            \"shapes-hexagon-fill\",\r\n            \"shapes-hexagon\",\r\n            \"shapes-Key\",\r\n            \"shapes-layers-off\",\r\n            \"shapes-layers\",\r\n            \"shapes-nest-protec\",\r\n            \"shapes-nut\",\r\n            \"shapes-ontology-2\",\r\n            \"shapes-ontology\",\r\n            \"shapes-pentagon-fill\",\r\n            \"shapes-pentagon\",\r\n            \"shapes-rhombus-fill\",\r\n            \"shapes-rhombus\",\r\n            \"shapes-shape-1-f\",\r\n            \"shapes-shape-1\",\r\n            \"shapes-shape-2-f\",\r\n            \"shapes-shape-2\",\r\n            \"shapes-shape-3-f\",\r\n            \"shapes-shape-3\",\r\n            \"shapes-shape-4-f\",\r\n            \"shapes-shape-4\",\r\n            \"shapes-shape-5-f\",\r\n            \"shapes-shape-5\",\r\n            \"shapes-shape-6\",\r\n            \"shapes-shape-7\",\r\n            \"shapes-shape-fill\",\r\n            \"shapes-shape-plus-1\",\r\n            \"shapes-shape-plus\",\r\n            \"shapes-shape\",\r\n            \"shapes-square-inc\",\r\n            \"shapes-Star\",\r\n            \"shapes-triangle-fill\",\r\n            \"shapes-triangle\"\r\n        ]\r\n    },\r\n    {\r\n        \"dir\": \"shopping\",\r\n        \"data\": [\r\n            \"shopping-box\",\r\n            \"shopping-cart\",\r\n            \"shopping-gift\",\r\n            \"shopping\"\r\n        ]\r\n    },\r\n    {\r\n        \"dir\": \"signal\",\r\n        \"data\": [\r\n            \"signal-access-point\",\r\n            \"signal-bluetooth\",\r\n            \"signal-cast\",\r\n            \"signal-off\",\r\n            \"signal-radio-tower\",\r\n            \"signal-rss-box\",\r\n            \"signal-wifi-off\",\r\n            \"signal-wifi\",\r\n            \"signal\"\r\n        ]\r\n    },\r\n    {\r\n        \"dir\": \"social\",\r\n        \"data\": [\r\n            \"social-browser\",\r\n            \"social-globe-2\",\r\n            \"social-heart-fill\",\r\n            \"social-heart\",\r\n            \"social-home-breadcrumbs\",\r\n            \"social-home\",\r\n            \"social-instagram\",\r\n            \"social-moon\",\r\n            \"social-share\",\r\n            \"social-star-fill\",\r\n            \"social-star-half\",\r\n            \"social-star\",\r\n            \"social-sun\",\r\n            \"social-tab\",\r\n            \"social-telegram\",\r\n            \"social-thumb-down\",\r\n            \"social-thumb-up\"\r\n        ]\r\n    },\r\n    {\r\n        \"dir\": \"sort\",\r\n        \"data\": [\r\n            \"sort-abc-ru-up\",\r\n            \"sort-abc-ru\",\r\n            \"sort-alphabetical-up\",\r\n            \"sort-alphabetical\",\r\n            \"sort-apps\",\r\n            \"sort-asc-arr\",\r\n            \"sort-desc-arr\",\r\n            \"sort-eye-off-2\",\r\n            \"sort-eye-off\",\r\n            \"sort-eye\",\r\n            \"sort-filter-remove\",\r\n            \"sort-filter-setting\",\r\n            \"sort-filter\",\r\n            \"sort-funnel-drop-down-list-open\",\r\n            \"sort-funnel-drop-down-list\",\r\n            \"sort-look-into-the-buffer\",\r\n            \"sort-maximize\",\r\n            \"sort-numeric\",\r\n            \"sort-real-size\",\r\n            \"sort-search-mistake\",\r\n            \"sort-time-down\",\r\n            \"sort-time-up\",\r\n            \"sort-version\",\r\n            \"sort-zoom-in-dropdown\",\r\n            \"sort-zoom-in\",\r\n            \"sort-zoom-out\"\r\n        ]\r\n    },\r\n    {\r\n        \"dir\": \"tools\",\r\n        \"data\": [\r\n            \"tools-auto-fix\",\r\n            \"tools-award\",\r\n            \"tools-briefcase\",\r\n            \"tools-broom\",\r\n            \"tools-brush\",\r\n            \"tools-content-cut\",\r\n            \"tools-content-save-as\",\r\n            \"tools-content-save\",\r\n            \"tools-content-unsave\",\r\n            \"tools-earth-work\",\r\n            \"tools-eraser\",\r\n            \"tools-eyedropper\",\r\n            \"tools-keyboard-close-1\",\r\n            \"tools-keyboard-close\",\r\n            \"tools-keyboard\",\r\n            \"tools-lightbulb\",\r\n            \"tools-npm\",\r\n            \"tools-palette\",\r\n            \"tools-pantone\",\r\n            \"tools-ruler\",\r\n            \"tools-save-all\",\r\n            \"tools-save-back\",\r\n            \"tools-solver\",\r\n            \"tools-thermometer-minus\",\r\n            \"tools-thermometer-plus\",\r\n            \"tools-thermometer\",\r\n            \"tools-umbrella\"\r\n        ]\r\n    },\r\n    {\r\n        \"dir\": \"transport\",\r\n        \"data\": [\r\n            \"transport-airplane\",\r\n            \"transport-ambulance\",\r\n            \"transport-truck-1\",\r\n            \"transport-truck-2\",\r\n            \"transport-truck-3\",\r\n            \"transport-truck-4\",\r\n            \"transport-truck-5\",\r\n            \"transport-truck\"\r\n        ]\r\n    },\r\n    {\r\n        \"dir\": \"vectors\",\r\n        \"data\": [\r\n            \"vectors-arrange-above\",\r\n            \"vectors-arrange-below\",\r\n            \"vectors-circle-variant\",\r\n            \"vectors-circle\",\r\n            \"vectors-combine-1\",\r\n            \"vectors-combine\",\r\n            \"vectors-curve\",\r\n            \"vectors-default-24\",\r\n            \"vectors-difference-ab\",\r\n            \"vectors-difference-ba\",\r\n            \"vectors-difference\",\r\n            \"vectors-ellipse\",\r\n            \"vectors-intersection\",\r\n            \"vectors-line\",\r\n            \"vectors-point\",\r\n            \"vectors-polygon\",\r\n            \"vectors-polyline\",\r\n            \"vectors-radius\",\r\n            \"vectors-rectangle\",\r\n            \"vectors-selection\",\r\n            \"vectors-square\",\r\n            \"vectors-triangle\"\r\n        ]\r\n    },\r\n    {\r\n        \"dir\": \"view\",\r\n        \"data\": [\r\n            \"view-agenda\",\r\n            \"view-array\",\r\n            \"view-carousel\",\r\n            \"view-column\",\r\n            \"view-component\",\r\n            \"view-dashboard-variant\",\r\n            \"view-dashboard\",\r\n            \"view-day\",\r\n            \"view-grid-outline\",\r\n            \"view-grid\",\r\n            \"view-headline\",\r\n            \"view-list\",\r\n            \"view-logo-grey-z\",\r\n            \"view-logo-s.grey\",\r\n            \"view-menu-2\",\r\n            \"view-menu-arrow-down\",\r\n            \"view-menu-arrow-left\",\r\n            \"view-menu-arrow-right\",\r\n            \"view-menu-arrow-up\",\r\n            \"view-menu\",\r\n            \"view-module\",\r\n            \"view-quilt\",\r\n            \"view-sequential\"\r\n        ]\r\n    }\r\n]"
      },
      {
        "name": "IconsSet",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "libs/components/src/lib/icon/zyfra-icon.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "",
        "defaultValue": "Template.bind({})"
      },
      {
        "name": "Indeterminate",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "libs/components/src/lib/progress/zyfra-progress-bar.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "",
        "defaultValue": "Template.bind({})"
      },
      {
        "name": "Info",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "libs/components/src/lib/button/zyfra-button.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "",
        "defaultValue": "Template.bind({})"
      },
      {
        "name": "Info",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "libs/components/src/lib/progress/zyfra-progress-bar.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "",
        "defaultValue": "Template.bind({})"
      },
      {
        "name": "Info",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "libs/components/src/lib/toggle-button/zyfra-toggle-button.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "",
        "defaultValue": "Template.bind({})"
      },
      {
        "name": "InlinePicker",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "libs/components/src/lib/datepicker/calendar/zyfra-calendar.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "",
        "defaultValue": "Template.bind({})"
      },
      {
        "name": "items",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "libs/components/src/lib/breadcrumb/zyfra-breadcrumb.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "MenuItem[]",
        "defaultValue": "[\r\n  { label: 'Начало' },\r\n  { label: 'Название цеха 1' },\r\n  { label: 'Название цеха 2' },\r\n  { label: 'Название цеха 3' },\r\n  { label: 'Название цеха 4' }\r\n]"
      },
      {
        "name": "items",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "libs/components/src/lib/dropdown/zyfra-dropdown.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "SelectItem[]",
        "defaultValue": "[]"
      },
      {
        "name": "items",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "libs/components/src/lib/radio-button/zyfra-radio-button.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "[]",
        "defaultValue": "[\r\n  {\r\n    label: 'red',\r\n    value: 'red',\r\n  },\r\n  {\r\n    label: 'black',\r\n    value: 'black',\r\n  },\r\n  {\r\n    label: 'blue',\r\n    value: 'blue',\r\n  },\r\n  {\r\n    label: 'pink',\r\n    value: 'pink',\r\n  },\r\n  {\r\n    label: 'Не заполнено',\r\n    value: null,\r\n  },\r\n]"
      },
      {
        "name": "items",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "libs/components/src/lib/split-button/zyfra-split-button.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "[]",
        "defaultValue": "[\r\n  { label: 'Item1', icon: 'zyfra-icon arrows-replay' },\r\n  { label: 'Item2', icon: 'zyfra-icon cancel-close' },\r\n  { separator: true },\r\n  { label: 'Item3', icon: 'zyfra-icon cancel-close' },\r\n]"
      },
      {
        "name": "items",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "libs/components/src/lib/tab-menu/zyfra-tab-menu.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "MenuItem[]",
        "defaultValue": "[\r\n  {\r\n    label: 'Наименование вкладки 1',\r\n    icon: 'zyfra-icon files-file',\r\n    items: [{\r\n      label: 'New',\r\n      icon: 'zyfra-icon add-plus',\r\n      items: [\r\n        {\r\n          label: 'Bookmark',\r\n          icon: 'zyfra-icon   bookmarks-bookmark',\r\n          items: [\r\n            {\r\n              label: 'Video',\r\n              icon: 'zyfra-icon camera-video'\r\n            },\r\n            {\r\n              label: 'Bookmark',\r\n              icon: 'zyfra-icon   bookmarks-bookmark',\r\n              items: [\r\n                {\r\n                  label: 'Video',\r\n                  icon: 'zyfra-icon camera-video',\r\n                }\r\n              ]\r\n            }\r\n          ]\r\n        },\r\n        {\r\n          label: 'Video',\r\n          icon: 'zyfra-icon camera-video',\r\n        }\r\n      ]\r\n    },\r\n      {\r\n        label: 'Delete',\r\n        icon: 'zyfra-icon delete',\r\n      },\r\n      {\r\n        label: 'Export',\r\n        icon: 'zyfra-icon network-external-link'\r\n      }\r\n    ]\r\n  },\r\n  { label: 'Наименование вкладки 2',\r\n    icon: 'zyfra-icon settings-power',\r\n    items: [{\r\n      label: 'New',\r\n      icon: 'zyfra-icon add-plus'\r\n    }]\r\n  },\r\n  {\r\n    label: 'Наименование вкладки 3',\r\n    icon: 'zyfra-icon settings-power'\r\n  },\r\n  {\r\n    label: 'Наименование вкладки 4',\r\n    icon: 'zyfra-icon editor-mode',\r\n    items: [\r\n      {\r\n        label: 'Left',\r\n        icon: 'zyfra-icon editor-format-align-left'\r\n      },\r\n      {\r\n        label: 'Right',\r\n        icon: 'zyfra-icon editor-format-align-right'\r\n      },\r\n      {\r\n        label: 'Center',\r\n        icon: 'zyfra-icon editor-format-align-center'\r\n      },\r\n      {\r\n        label: 'Justify',\r\n        icon: 'zyfra-icon editor-format-align-justify'\r\n      }]\r\n  },\r\n  {\r\n    label: 'Наименование вкладки 5',\r\n    icon: 'zyfra-icon settings-power'\r\n  },\r\n  {\r\n    label: 'Наименование вкладки 6',\r\n    icon: 'zyfra-icon settings-power'\r\n  },\r\n  {\r\n    label: 'Наименование вкладки 7',\r\n    icon: 'zyfra-icon settings-power'\r\n  },\r\n  {\r\n    label: 'Наименование вкладки 8',\r\n    icon: 'zyfra-icon settings-power'\r\n  },\r\n  {\r\n    label: 'Наименование вкладки 9',\r\n    icon: 'zyfra-icon account',\r\n    items: [\r\n      {\r\n        label: 'New',\r\n        icon: 'zyfra-icon account-plus',\r\n\r\n      },\r\n      {\r\n        label: 'Delete',\r\n        icon: 'zyfra-icon account-minus',\r\n\r\n      }]\r\n  }\r\n]"
      },
      {
        "name": "items",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "libs/components/src/lib/tree/zyfra-tree.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "[]",
        "defaultValue": "[\r\n  {\r\n    label: 'Documents',\r\n    data: 'Documents Folder',\r\n    expandedIcon: 'zyfra-icon files-folder',\r\n    collapsedIcon: 'zyfra-icon files-folder',\r\n    children: [{\r\n      label: 'Work',\r\n      data: 'Work Folder',\r\n      expandedIcon: 'zyfra-icon files-folder',\r\n      collapsedIcon: 'zyfra-icon files-folder',\r\n      children: [\r\n        { label: 'Expenses.doc', icon: 'zyfra-icon files-file', data: 'Expenses Document' },\r\n        { label: 'Resume.doc', icon: 'zyfra-icon files-file', data: 'Resume Document' }\r\n      ]\r\n    },\r\n      {\r\n        label: 'Home',\r\n        data: 'Home Folder',\r\n        expandedIcon: 'zyfra-icon files-folder',\r\n        collapsedIcon: 'zyfra-icon files-folder',\r\n        children: [{ label: 'Invoices.txt', icon: 'zyfra-icon files-file', data: 'Invoices for this month' }]\r\n      }]\r\n  },\r\n  {\r\n    label: 'Pictures',\r\n    data: 'Pictures Folder',\r\n    expandedIcon: 'zyfra-icon files-folder',\r\n    collapsedIcon: 'zyfra-icon files-folder',\r\n    children: [\r\n      { label: 'barcelona.jpg', icon: 'zyfra-icon files-document-image', data: 'Barcelona Photo' },\r\n      { label: 'logo.jpg', icon: 'zyfra-icon files-document-image', data: 'PrimeFaces Logo' },\r\n      { label: 'primeui.png', icon: 'zyfra-icon files-document-image', data: 'PrimeUI Logo' }]\r\n  },\r\n  {\r\n    label: 'Movies',\r\n    data: 'Movies Folder',\r\n    expandedIcon: 'zyfra-icon files-folder',\r\n    collapsedIcon: 'zyfra-icon files-folder ',\r\n    children: [{\r\n      label: 'Al Pacino',\r\n      data: 'Pacino Movies',\r\n      expandedIcon: 'zyfra-icon files-folder',\r\n    collapsedIcon: 'zyfra-icon files-folder ',\r\n      children: [\r\n        { label: 'Scarface', icon: 'zyfra-icon camera-video', data: 'Scarface Movie' },\r\n        { label: 'Serpico', icon: 'zyfra-icon camera-image', data: 'Serpico Movie' }\r\n      ]\r\n    },\r\n      {\r\n        label: 'Robert De Niro',\r\n        data: 'De Niro Movies',\r\n        expandedIcon: 'zyfra-icon files-folder',\r\n        collapsedIcon: 'zyfra-icon files-folder ',\r\n        children: [\r\n          { label: 'Goodfellas', icon: 'zyfra-icon camera-video', data: 'Goodfellas Movie' },\r\n          { label: 'Untouchables', icon: 'zyfra-icon camera-video', data: 'Untouchables Movie' }\r\n        ]\r\n      }]\r\n  }\r\n]"
      },
      {
        "name": "items",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "libs/components/src/lib/datepicker/calendar/zyfra-calendar.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "",
        "defaultValue": "generateTimeArray('HH:mm:ss')"
      },
      {
        "name": "itemsUrl",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "libs/components/src/lib/breadcrumb/zyfra-breadcrumb.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "MenuItem[]",
        "defaultValue": "[\r\n  { label: 'Начало' },\r\n  { label: 'Название цеха 1', url: '#' },\r\n  { label: 'Название цеха 2', url: '#' },\r\n  { label: 'Название цеха 3', url: '#' },\r\n  { label: 'Название цеха 4', url: '#' }\r\n]"
      },
      {
        "name": "ManyItems",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "libs/components/src/lib/menu-applications/zyfra-menu-applications.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "",
        "defaultValue": "Template.bind({})"
      },
      {
        "name": "MatchPattern",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "libs/components/src/lib/datepicker/zyfra-relative-datepicker/relative-datepicker.utils.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "string",
        "defaultValue": "'(T|\\\\*)?(\\\\+|\\\\-)?(\\\\d+)?(Y|M|d|h|m|s)?'"
      },
      {
        "name": "MenuItems",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "libs/components/src/lib/datepicker/zyfra-relative-datepicker/zyfra-relative-datepicker.component.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "RelativeDateMenuItems",
        "defaultValue": "getDefaultRelativeDateMenuItems()"
      },
      {
        "name": "Mini",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "libs/components/src/lib/progress/zyfra-progress-bar.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "",
        "defaultValue": "Template.bind({})"
      },
      {
        "name": "MiniRadio",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "libs/components/src/lib/radio-button/zyfra-radio-button.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "",
        "defaultValue": "SimpleTemplate.bind({})"
      },
      {
        "name": "MonthPicker",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "libs/components/src/lib/datepicker/calendar/zyfra-calendar.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "",
        "defaultValue": "Template.bind({})"
      },
      {
        "name": "MultiMessages",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "libs/components/src/lib/message/zyfra-message.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "",
        "defaultValue": "Template.bind({})"
      },
      {
        "name": "Multiple",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "libs/components/src/lib/checkbox/zyfra-checkbox.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "",
        "defaultValue": "CheckboxMultipleTemplate.bind({})"
      },
      {
        "name": "Multiple",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "libs/components/src/lib/datepicker/calendar/zyfra-calendar.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "",
        "defaultValue": "Template.bind({})"
      },
      {
        "name": "MultipleSelection",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "libs/components/src/lib/nav-menu/zyfra-nav-menu.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "",
        "defaultValue": "BasicTemplate.bind({})"
      },
      {
        "name": "NoIcons",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "libs/components/src/lib/toast/zyfra-toast.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "",
        "defaultValue": "Template.bind({})"
      },
      {
        "name": "NoValueDisplay",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "libs/components/src/lib/progress/zyfra-progress-bar.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "",
        "defaultValue": "Template.bind({})"
      },
      {
        "name": "OnlyIcon",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "libs/components/src/lib/button/zyfra-button.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "",
        "defaultValue": "Template.bind({})"
      },
      {
        "name": "OnlyIcon",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "libs/components/src/lib/chip/zyfra-chip.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "",
        "defaultValue": "Template.bind({})"
      },
      {
        "name": "OnlyText",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "libs/components/src/lib/chip/zyfra-chip.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "",
        "defaultValue": "Template.bind({})"
      },
      {
        "name": "OnlyTime",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "libs/components/src/lib/datepicker/calendar/zyfra-calendar.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "",
        "defaultValue": "Template.bind({})"
      },
      {
        "name": "OverflowTabs",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "libs/components/src/lib/tab-view/zyfra-tab-view/zyfra-tab-view.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "",
        "defaultValue": "Template.bind({})"
      },
      {
        "name": "Pagination",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "libs/components/src/lib/table/_story/stories/pagination.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "",
        "defaultValue": "PaginationTemplate.bind({})"
      },
      {
        "name": "PaginationTemplate",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "libs/components/src/lib/table/_story/stories/pagination.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story<ZyfraTableComponent>",
        "defaultValue": "args => ({\r\n  template: `\r\n    <zyfra-table\r\n      [title]=\"title\"\r\n      [value]=\"value\"\r\n      [paginator]=\"paginator\"\r\n      [rows]=\"rows\"\r\n      [responsiveLayout]=\"responsiveLayout\"\r\n      [rowsPerPageOptions]=\"rowsPerPageOptions\"\r\n      (page)=\"page($event)\"\r\n    >\r\n      <ng-template zyfraTableTemplate=\"header\">\r\n        <tr>\r\n          <th>Name</th>\r\n          <th>Country</th>\r\n          <th>Company</th>\r\n          <th>Representative</th>\r\n        </tr>\r\n      </ng-template>\r\n\r\n      <ng-template zyfraTableTemplate=\"body\" let-customer>\r\n        <tr [zyfraRow]=\"customer\">\r\n          <td>{{customer.name}}</td>\r\n          <td>{{customer.country.name}}</td>\r\n          <td>{{customer.company}}</td>\r\n          <td>{{customer.representative.name}}</td>\r\n        </tr>\r\n      </ng-template>\r\n    </zyfra-table>\r\n  `,\r\n  props: {\r\n    ...args,\r\n    page: consoleLogAction('page'),\r\n  },\r\n})"
      },
      {
        "name": "periodMap",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "libs/components/src/lib/datepicker/zyfra-relative-datepicker/relative-datepicker.utils.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "",
        "defaultValue": "new Map<string, RelativeDatePeriodId>([\r\n  ['Y', 'year'],\r\n  ['M', 'month'],\r\n  ['d', 'day'],\r\n  ['h', 'hour'],\r\n  ['m', 'minute'],\r\n  ['s', 'second'],\r\n])"
      },
      {
        "name": "Phone",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "libs/components/src/lib/input-mask/zyfra-input-mask.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "",
        "defaultValue": "Template.bind({})"
      },
      {
        "name": "PhoneExt",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "libs/components/src/lib/input-mask/zyfra-input-mask.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "",
        "defaultValue": "Template.bind({})"
      },
      {
        "name": "Position",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "libs/components/src/lib/confirm-dialog/zyfra-confirm-dialog.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "",
        "defaultValue": "Template.bind({})"
      },
      {
        "name": "PositionTop",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "libs/components/src/lib/dialog/zyfra-dialog.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "",
        "defaultValue": "Template.bind({})"
      },
      {
        "name": "Primary",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "libs/components/src/lib/chip/zyfra-chip.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "",
        "defaultValue": "Template.bind({})"
      },
      {
        "name": "Primary",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "libs/components/src/lib/accordion/zyfra-accordion-tab/zyfra-accordion-tab.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "",
        "defaultValue": "Template.bind({})"
      },
      {
        "name": "Primary",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "libs/components/src/lib/datepicker/zyfra-datepicker-multi/zyfra-datepicker-multi.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "",
        "defaultValue": "Template.bind({})"
      },
      {
        "name": "Primary",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "libs/components/src/lib/datepicker/zyfra-relative-datepicker/zyfra-relative-datepicker.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "",
        "defaultValue": "Template.bind({})"
      },
      {
        "name": "Primary",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "libs/components/src/lib/menu-applications/zyfra-menu-applications-item/zyfra-menu-applications-item.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "",
        "defaultValue": "Template.bind({})"
      },
      {
        "name": "Primary",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "libs/components/src/lib/tab-view/zyfra-tab-panel/zyfra-tab-panel.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "",
        "defaultValue": "Template.bind({})"
      },
      {
        "name": "Products",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "libs/components/src/lib/table/_story/data.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Product[]",
        "defaultValue": "[\r\n  {\r\n    id: '1000',\r\n    code: 'f230fh0g3',\r\n    name: 'Bamboo Watch',\r\n    description: 'Product Description',\r\n    image: 'bamboo-watch.jpg',\r\n    price: 65,\r\n    category: 'Accessories',\r\n    quantity: 24,\r\n    inventoryStatus: 'INSTOCK',\r\n    rating: 5,\r\n  },\r\n  {\r\n    id: '1001',\r\n    code: 'nvklal433',\r\n    name: 'Black Watch',\r\n    description: 'Product Description',\r\n    image: 'black-watch.jpg',\r\n    price: 72,\r\n    category: 'Accessories',\r\n    quantity: 61,\r\n    inventoryStatus: 'INSTOCK',\r\n    rating: 4,\r\n  },\r\n  {\r\n    id: '1002',\r\n    code: 'zz21cz3c1',\r\n    name: 'Blue Band',\r\n    description: 'Product Description',\r\n    image: 'blue-band.jpg',\r\n    price: 79,\r\n    category: 'Fitness',\r\n    quantity: 2,\r\n    inventoryStatus: 'LOWSTOCK',\r\n    rating: 3,\r\n  },\r\n  {\r\n    id: '1003',\r\n    code: '244wgerg2',\r\n    name: 'Blue T-Shirt',\r\n    description: 'Product Description',\r\n    image: 'blue-t-shirt.jpg',\r\n    price: 29,\r\n    category: 'Clothing',\r\n    quantity: 25,\r\n    inventoryStatus: 'INSTOCK',\r\n    rating: 5,\r\n  },\r\n  {\r\n    id: '1004',\r\n    code: 'h456wer53',\r\n    name: 'Bracelet',\r\n    description: 'Product Description',\r\n    image: 'bracelet.jpg',\r\n    price: 15,\r\n    category: 'Accessories',\r\n    quantity: 73,\r\n    inventoryStatus: 'INSTOCK',\r\n    rating: 4,\r\n  },\r\n  {\r\n    id: '1005',\r\n    code: 'av2231fwg',\r\n    name: 'Brown Purse',\r\n    description: 'Product Description',\r\n    image: 'brown-purse.jpg',\r\n    price: 120,\r\n    category: 'Accessories',\r\n    quantity: 0,\r\n    inventoryStatus: 'OUTOFSTOCK',\r\n    rating: 4,\r\n  },\r\n  {\r\n    id: '1006',\r\n    code: 'bib36pfvm',\r\n    name: 'Chakra Bracelet',\r\n    description: 'Product Description',\r\n    image: 'chakra-bracelet.jpg',\r\n    price: 32,\r\n    category: 'Accessories',\r\n    quantity: 5,\r\n    inventoryStatus: 'LOWSTOCK',\r\n    rating: 3,\r\n  },\r\n  {\r\n    id: '1007',\r\n    code: 'mbvjkgip5',\r\n    name: 'Galaxy Earrings',\r\n    description: 'Product Description',\r\n    image: 'galaxy-earrings.jpg',\r\n    price: 34,\r\n    category: 'Accessories',\r\n    quantity: 23,\r\n    inventoryStatus: 'INSTOCK',\r\n    rating: 5,\r\n  },\r\n  {\r\n    id: '1008',\r\n    code: 'vbb124btr',\r\n    name: 'Game Controller',\r\n    description: 'Product Description',\r\n    image: 'game-controller.jpg',\r\n    price: 99,\r\n    category: 'Electronics',\r\n    quantity: 2,\r\n    inventoryStatus: 'LOWSTOCK',\r\n    rating: 4,\r\n  },\r\n  {\r\n    id: '1009',\r\n    code: 'cm230f032',\r\n    name: 'Gaming Set',\r\n    description: 'Product Description',\r\n    image: 'gaming-set.jpg',\r\n    price: 299,\r\n    category: 'Electronics',\r\n    quantity: 63,\r\n    inventoryStatus: 'INSTOCK',\r\n    rating: 3,\r\n  },\r\n]"
      },
      {
        "name": "ProductsOrdersSmall",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "libs/components/src/lib/table/_story/data.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "ProductOrder[]",
        "defaultValue": "[\r\n  {\r\n    id: '1000',\r\n    code: 'f230fh0g3',\r\n    name: 'Bamboo Watch',\r\n    description: 'Product Description',\r\n    image: 'bamboo-watch.jpg',\r\n    price: 65,\r\n    category: 'Accessories',\r\n    quantity: 24,\r\n    inventoryStatus: 'INSTOCK',\r\n    rating: 5,\r\n    orders: [\r\n      {\r\n        id: '1000',\r\n        productCode: 'f230fh0g3',\r\n        date: '13.08.2020',\r\n        amount: 65,\r\n        quantity: 1,\r\n        customer: 'David James',\r\n        status: 'PENDING',\r\n      },\r\n      {\r\n        id: '1001',\r\n        productCode: 'f230fh0g3',\r\n        date: '14.05.2020',\r\n        amount: 130,\r\n        quantity: 2,\r\n        customer: 'Leon Rodrigues',\r\n        status: 'DELIVERED',\r\n      },\r\n      {\r\n        id: '1002',\r\n        productCode: 'f230fh0g3',\r\n        date: '04.01.2019',\r\n        amount: 65,\r\n        quantity: 1,\r\n        customer: 'Juan Alejandro',\r\n        status: 'RETURNED',\r\n      },\r\n      {\r\n        id: '1003',\r\n        productCode: 'f230fh0g3',\r\n        date: '13.09.2020',\r\n        amount: 195,\r\n        quantity: 3,\r\n        customer: 'Claire Morrow',\r\n        status: 'CANCELLED',\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    id: '1001',\r\n    code: 'nvklal433',\r\n    name: 'Black Watch',\r\n    description: 'Product Description',\r\n    image: 'black-watch.jpg',\r\n    price: 72,\r\n    category: 'Accessories',\r\n    quantity: 61,\r\n    inventoryStatus: 'INSTOCK',\r\n    rating: 4,\r\n    orders: [\r\n      {\r\n        id: '2000',\r\n        productCode: 'nvklal433',\r\n        date: '14.05.2020',\r\n        amount: 72,\r\n        quantity: 1,\r\n        customer: 'Maisha Jefferson',\r\n        status: 'DELIVERED',\r\n      },\r\n      {\r\n        id: '2001',\r\n        productCode: 'nvklal433',\r\n        date: '28.02.2020',\r\n        amount: 144,\r\n        quantity: 2,\r\n        customer: 'Octavia Murillo',\r\n        status: 'PENDING',\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    id: '1002',\r\n    code: 'zz21cz3c1',\r\n    name: 'Blue Band',\r\n    description: 'Product Description',\r\n    image: 'blue-band.jpg',\r\n    price: 79,\r\n    category: 'Fitness',\r\n    quantity: 2,\r\n    inventoryStatus: 'LOWSTOCK',\r\n    rating: 3,\r\n    orders: [\r\n      {\r\n        id: '3000',\r\n        productCode: 'zz21cz3c1',\r\n        date: '05.07.2020',\r\n        amount: 79,\r\n        quantity: 1,\r\n        customer: 'Stacey Leja',\r\n        status: 'DELIVERED',\r\n      },\r\n      {\r\n        id: '3001',\r\n        productCode: 'zz21cz3c1',\r\n        date: '06.02.2020',\r\n        amount: 79,\r\n        quantity: 1,\r\n        customer: 'Ashley Wickens',\r\n        status: 'DELIVERED',\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    id: '1003',\r\n    code: '244wgerg2',\r\n    name: 'Blue T-Shirt',\r\n    description: 'Product Description',\r\n    image: 'blue-t-shirt.jpg',\r\n    price: 29,\r\n    category: 'Clothing',\r\n    quantity: 25,\r\n    inventoryStatus: 'INSTOCK',\r\n    rating: 5,\r\n    orders: [],\r\n  },\r\n  {\r\n    id: '1004',\r\n    code: 'h456wer53',\r\n    name: 'Bracelet',\r\n    description: 'Product Description',\r\n    image: 'bracelet.jpg',\r\n    price: 15,\r\n    category: 'Accessories',\r\n    quantity: 73,\r\n    inventoryStatus: 'INSTOCK',\r\n    rating: 4,\r\n    orders: [\r\n      {\r\n        id: '5000',\r\n        productCode: 'h456wer53',\r\n        date: '05.09.2020',\r\n        amount: 60,\r\n        quantity: 4,\r\n        customer: 'Mayumi Misaki',\r\n        status: 'PENDING',\r\n      },\r\n      {\r\n        id: '5001',\r\n        productCode: 'h456wer53',\r\n        date: '16.04.2019',\r\n        amount: 2,\r\n        quantity: 30,\r\n        customer: 'Francesco Salvatore',\r\n        status: 'DELIVERED',\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    id: '1005',\r\n    code: 'av2231fwg',\r\n    name: 'Brown Purse',\r\n    description: 'Product Description',\r\n    image: 'brown-purse.jpg',\r\n    price: 120,\r\n    category: 'Accessories',\r\n    quantity: 0,\r\n    inventoryStatus: 'OUTOFSTOCK',\r\n    rating: 4,\r\n    orders: [\r\n      {\r\n        id: '6000',\r\n        productCode: 'av2231fwg',\r\n        date: '25.01.2020',\r\n        amount: 120,\r\n        quantity: 1,\r\n        customer: 'Isabel Sinclair',\r\n        status: 'RETURNED',\r\n      },\r\n      {\r\n        id: '6001',\r\n        productCode: 'av2231fwg',\r\n        date: '12.03.2019',\r\n        amount: 240,\r\n        quantity: 2,\r\n        customer: 'Lionel Clifford',\r\n        status: 'DELIVERED',\r\n      },\r\n      {\r\n        id: '6002',\r\n        productCode: 'av2231fwg',\r\n        date: '05.05.2019',\r\n        amount: 120,\r\n        quantity: 1,\r\n        customer: 'Cody Chavez',\r\n        status: 'DELIVERED',\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    id: '1006',\r\n    code: 'bib36pfvm',\r\n    name: 'Chakra Bracelet',\r\n    description: 'Product Description',\r\n    image: 'chakra-bracelet.jpg',\r\n    price: 32,\r\n    category: 'Accessories',\r\n    quantity: 5,\r\n    inventoryStatus: 'LOWSTOCK',\r\n    rating: 3,\r\n    orders: [\r\n      {\r\n        id: '7000',\r\n        productCode: 'bib36pfvm',\r\n        date: '24.02.2020',\r\n        amount: 32,\r\n        quantity: 1,\r\n        customer: 'Arvin Darci',\r\n        status: 'DELIVERED',\r\n      },\r\n      {\r\n        id: '7001',\r\n        productCode: 'bib36pfvm',\r\n        date: '14.01.2020',\r\n        amount: 64,\r\n        quantity: 2,\r\n        customer: 'Izzy Jones',\r\n        status: 'PENDING',\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    id: '1007',\r\n    code: 'mbvjkgip5',\r\n    name: 'Galaxy Earrings',\r\n    description: 'Product Description',\r\n    image: 'galaxy-earrings.jpg',\r\n    price: 34,\r\n    category: 'Accessories',\r\n    quantity: 23,\r\n    inventoryStatus: 'INSTOCK',\r\n    rating: 5,\r\n    orders: [\r\n      {\r\n        id: '8000',\r\n        productCode: 'mbvjkgip5',\r\n        date: '19.06.2020',\r\n        amount: 34,\r\n        quantity: 1,\r\n        customer: 'Jennifer Smith',\r\n        status: 'DELIVERED',\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    id: '1008',\r\n    code: 'vbb124btr',\r\n    name: 'Game Controller',\r\n    description: 'Product Description',\r\n    image: 'game-controller.jpg',\r\n    price: 99,\r\n    category: 'Electronics',\r\n    quantity: 2,\r\n    inventoryStatus: 'LOWSTOCK',\r\n    rating: 4,\r\n    orders: [\r\n      {\r\n        id: '9000',\r\n        productCode: 'vbb124btr',\r\n        date: '05.01.2020',\r\n        amount: 99,\r\n        quantity: 1,\r\n        customer: 'Jeanfrancois David',\r\n        status: 'DELIVERED',\r\n      },\r\n      {\r\n        id: '9001',\r\n        productCode: 'vbb124btr',\r\n        date: '19.01.2020',\r\n        amount: 198,\r\n        quantity: 2,\r\n        customer: 'Ivar Greenwood',\r\n        status: 'RETURNED',\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    id: '1009',\r\n    code: 'cm230f032',\r\n    name: 'Gaming Set',\r\n    description: 'Product Description',\r\n    image: 'gaming-set.jpg',\r\n    price: 299,\r\n    category: 'Electronics',\r\n    quantity: 63,\r\n    inventoryStatus: 'INSTOCK',\r\n    rating: 3,\r\n    orders: [\r\n      {\r\n        id: '10000',\r\n        productCode: 'cm230f032',\r\n        date: '24.06.2020',\r\n        amount: 299,\r\n        quantity: 1,\r\n        customer: 'Kadeem Mujtaba',\r\n        status: 'PENDING',\r\n      },\r\n      {\r\n        id: '10001',\r\n        productCode: 'cm230f032',\r\n        date: '11.05.2020',\r\n        amount: 299,\r\n        quantity: 1,\r\n        customer: 'Ashley Wickens',\r\n        status: 'DELIVERED',\r\n      },\r\n      {\r\n        id: '10002',\r\n        productCode: 'cm230f032',\r\n        date: '07.02.2019',\r\n        amount: 299,\r\n        quantity: 1,\r\n        customer: 'Julie Johnson',\r\n        status: 'DELIVERED',\r\n      },\r\n      {\r\n        id: '10003',\r\n        productCode: 'cm230f032',\r\n        date: '26.04.2020',\r\n        amount: 299,\r\n        quantity: 1,\r\n        customer: 'Tony Costa',\r\n        status: 'CANCELLED',\r\n      },\r\n    ],\r\n  },\r\n]"
      },
      {
        "name": "ProductsSmall",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "libs/components/src/lib/table/_story/data.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Product[]",
        "defaultValue": "[\r\n  {\r\n    id: '1000',\r\n    code: 'f230fh0g3',\r\n    name: 'Bamboo Watch',\r\n    description: 'Product Description',\r\n    image: 'bamboo-watch.jpg',\r\n    price: 65,\r\n    category: 'Accessories',\r\n    quantity: 24,\r\n    inventoryStatus: 'INSTOCK',\r\n    rating: 5,\r\n  },\r\n  {\r\n    id: '1001',\r\n    code: 'nvklal433',\r\n    name: 'Black Watch',\r\n    description: 'Product Description',\r\n    image: 'black-watch.jpg',\r\n    price: 72,\r\n    category: 'Accessories',\r\n    quantity: 61,\r\n    inventoryStatus: 'INSTOCK',\r\n    rating: 4,\r\n  },\r\n  {\r\n    id: '1002',\r\n    code: 'zz21cz3c1',\r\n    name: 'Blue Band',\r\n    description: 'Product Description',\r\n    image: 'blue-band.jpg',\r\n    price: 79,\r\n    category: 'Fitness',\r\n    quantity: 2,\r\n    inventoryStatus: 'LOWSTOCK',\r\n    rating: 3,\r\n  },\r\n  {\r\n    id: '1003',\r\n    code: '244wgerg2',\r\n    name: 'Blue T-Shirt',\r\n    description: 'Product Description',\r\n    image: 'blue-t-shirt.jpg',\r\n    price: 29,\r\n    category: 'Clothing',\r\n    quantity: 25,\r\n    inventoryStatus: 'INSTOCK',\r\n    rating: 5,\r\n  },\r\n  {\r\n    id: '1004',\r\n    code: 'h456wer53',\r\n    name: 'Bracelet',\r\n    description: 'Product Description',\r\n    image: 'bracelet.jpg',\r\n    price: 15,\r\n    category: 'Accessories',\r\n    quantity: 73,\r\n    inventoryStatus: 'INSTOCK',\r\n    rating: 4,\r\n  },\r\n  {\r\n    id: '1005',\r\n    code: 'av2231fwg',\r\n    name: 'Brown Purse',\r\n    description: 'Product Description',\r\n    image: 'brown-purse.jpg',\r\n    price: 120,\r\n    category: 'Accessories',\r\n    quantity: 0,\r\n    inventoryStatus: 'OUTOFSTOCK',\r\n    rating: 4,\r\n  },\r\n  {\r\n    id: '1006',\r\n    code: 'bib36pfvm',\r\n    name: 'Chakra Bracelet',\r\n    description: 'Product Description',\r\n    image: 'chakra-bracelet.jpg',\r\n    price: 32,\r\n    category: 'Accessories',\r\n    quantity: 5,\r\n    inventoryStatus: 'LOWSTOCK',\r\n    rating: 3,\r\n  },\r\n  {\r\n    id: '1007',\r\n    code: 'mbvjkgip5',\r\n    name: 'Galaxy Earrings',\r\n    description: 'Product Description',\r\n    image: 'galaxy-earrings.jpg',\r\n    price: 34,\r\n    category: 'Accessories',\r\n    quantity: 23,\r\n    inventoryStatus: 'INSTOCK',\r\n    rating: 5,\r\n  },\r\n  {\r\n    id: '1008',\r\n    code: 'vbb124btr',\r\n    name: 'Game Controller',\r\n    description: 'Product Description',\r\n    image: 'game-controller.jpg',\r\n    price: 99,\r\n    category: 'Electronics',\r\n    quantity: 2,\r\n    inventoryStatus: 'LOWSTOCK',\r\n    rating: 4,\r\n  },\r\n  {\r\n    id: '1009',\r\n    code: 'cm230f032',\r\n    name: 'Gaming Set',\r\n    description: 'Product Description',\r\n    image: 'gaming-set.jpg',\r\n    price: 299,\r\n    category: 'Electronics',\r\n    quantity: 63,\r\n    inventoryStatus: 'INSTOCK',\r\n    rating: 3,\r\n  },\r\n]"
      },
      {
        "name": "Range",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "libs/components/src/lib/slider/zyfra-slider.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "",
        "defaultValue": "Template.bind({})"
      },
      {
        "name": "Range",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "libs/components/src/lib/datepicker/calendar/zyfra-calendar.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "",
        "defaultValue": "Template.bind({})"
      },
      {
        "name": "renderDirectionMap",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "libs/components/src/lib/datepicker/zyfra-relative-datepicker/relative-datepicker.utils.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "",
        "defaultValue": "new Map<RelativeDateDirectionId, string>([\r\n  ['minus', '-'],\r\n  ['plus', '+'],\r\n])"
      },
      {
        "name": "renderPeriodMap",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "libs/components/src/lib/datepicker/zyfra-relative-datepicker/relative-datepicker.utils.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "",
        "defaultValue": "new Map<RelativeDatePeriodId, string>([\r\n  ['year', 'Y'],\r\n  ['month', 'M'],\r\n  ['day', 'd'],\r\n  ['hour', 'h'],\r\n  ['minute', 'm'],\r\n  ['second', 's'],\r\n])"
      },
      {
        "name": "renderTimeMap",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "libs/components/src/lib/datepicker/zyfra-relative-datepicker/relative-datepicker.utils.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "",
        "defaultValue": "new Map<RelativeDateTimeId, string>([\r\n  ['current', '*'],\r\n  ['midnight', 'T'],\r\n])"
      },
      {
        "name": "Reorder",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "libs/components/src/lib/table/_story/stories/reorder.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "",
        "defaultValue": "Template.bind({})"
      },
      {
        "name": "Reorder",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "libs/components/src/lib/tree-table/_story/stories/reorder.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "",
        "defaultValue": "Template.bind({})"
      },
      {
        "name": "Resize",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "libs/components/src/lib/table/_story/stories/resize.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "",
        "defaultValue": "Template.bind({})"
      },
      {
        "name": "RowGroup",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "libs/components/src/lib/table/_story/stories/row-group.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "",
        "defaultValue": "Template.bind({})"
      },
      {
        "name": "ru",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "libs/components/src/lib/datepicker/i18n/ru_RU.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "object",
        "defaultValue": "{\r\n  \"dayNames\": [\r\n    \"Воскресенье\",\r\n    \"Понедельник\",\r\n    \"Вторник\",\r\n    \"Среда\",\r\n    \"Четверг\",\r\n    \"Пятница\",\r\n    \"Суббота\"\r\n  ],\r\n  \"dayNamesShort\": [\r\n    \"Вс\",\r\n    \"Пн\",\r\n    \"Вт\",\r\n    \"Ср\",\r\n    \"Чт\",\r\n    \"Пт\",\r\n    \"Сб\"\r\n  ],\r\n  \"dayNamesMin\": [\r\n    \"Вс\",\r\n    \"Пн\",\r\n    \"Вт\",\r\n    \"Ср\",\r\n    \"Чт\",\r\n    \"Пт\",\r\n    \"Сб\"\r\n  ],\r\n  \"monthNames\": [\r\n    \"Январь\",\r\n    \"Февраль\",\r\n    \"Март\",\r\n    \"Апрель\",\r\n    \"Май\",\r\n    \"Июнь\",\r\n    \"Июль\",\r\n    \"Август\",\r\n    \"Сентябрь\",\r\n    \"Октябрь\",\r\n    \"Ноябрь\",\r\n    \"Декабрь\"\r\n  ],\r\n  \"monthNamesShort\": [\r\n    \"Янв\",\r\n    \"Февр\",\r\n    \"Март\",\r\n    \"Апр\",\r\n    \"Май\",\r\n    \"Июнь\",\r\n    \"Июль\",\r\n    \"Авг\",\r\n    \"Сент\",\r\n    \"Окт\",\r\n    \"Ноябрь\",\r\n    \"Дек\"\r\n  ],\r\n  \"dateFormat\": \"dd.mm.yyyy\",\r\n  \"today\": \"Сегодня\",\r\n  \"weekHeader\": \"Нд\",\r\n  \"clear\": \"Очистить\"\r\n}"
      },
      {
        "name": "RubricatorMode",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "libs/components/src/lib/nav-menu/zyfra-nav-menu.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "",
        "defaultValue": "BasicTemplate.bind({})"
      },
      {
        "name": "Sales",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "libs/components/src/lib/table/_story/data.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Sale[]",
        "defaultValue": "[\r\n  {\r\n    product: 'Bamboo Watch',\r\n    lastYearSale: 51,\r\n    thisYearSale: 40,\r\n    lastYearProfit: 54406,\r\n    thisYearProfit: 43342,\r\n  },\r\n  {\r\n    product: 'Black Watch',\r\n    lastYearSale: 83,\r\n    thisYearSale: 9,\r\n    lastYearProfit: 423132,\r\n    thisYearProfit: 312122,\r\n  },\r\n  { product: 'Blue Band', lastYearSale: 38, thisYearSale: 5, lastYearProfit: 12321, thisYearProfit: 8500 },\r\n  {\r\n    product: 'Blue T-Shirt',\r\n    lastYearSale: 49,\r\n    thisYearSale: 22,\r\n    lastYearProfit: 745232,\r\n    thisYearProfit: 65323,\r\n  },\r\n  {\r\n    product: 'Brown Purse',\r\n    lastYearSale: 17,\r\n    thisYearSale: 79,\r\n    lastYearProfit: 643242,\r\n    thisYearProfit: 500332,\r\n  },\r\n  {\r\n    product: 'Chakra Bracelet',\r\n    lastYearSale: 52,\r\n    thisYearSale: 65,\r\n    lastYearProfit: 421132,\r\n    thisYearProfit: 150005,\r\n  },\r\n  {\r\n    product: 'Galaxy Earrings',\r\n    lastYearSale: 82,\r\n    thisYearSale: 12,\r\n    lastYearProfit: 131211,\r\n    thisYearProfit: 100214,\r\n  },\r\n  {\r\n    product: 'Game Controller',\r\n    lastYearSale: 44,\r\n    thisYearSale: 45,\r\n    lastYearProfit: 66442,\r\n    thisYearProfit: 53322,\r\n  },\r\n  {\r\n    product: 'Gaming Set',\r\n    lastYearSale: 90,\r\n    thisYearSale: 56,\r\n    lastYearProfit: 765442,\r\n    thisYearProfit: 296232,\r\n  },\r\n  {\r\n    product: 'Gold Phone Case',\r\n    lastYearSale: 75,\r\n    thisYearSale: 54,\r\n    lastYearProfit: 21212,\r\n    thisYearProfit: 12533,\r\n  },\r\n]"
      },
      {
        "name": "Sales",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "libs/components/src/lib/tree-table/_story/data.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "[]",
        "defaultValue": "[\r\n  {\r\n    data: { brand: 'Bliss', lastYearSale: '51%', thisYearSale: '40%', lastYearProfit: '$54,406.00', thisYearProfit: '$43,342'},\r\n    expanded: true,\r\n    children: [\r\n      {\r\n        data: { brand: 'Product A', lastYearSale: '25%', thisYearSale: '20%', lastYearProfit: '$34,406.00', thisYearProfit: '$23,342' },\r\n        expanded: true,\r\n        children: [\r\n          {\r\n            data: { brand: 'Product A-1', lastYearSale: '20%', thisYearSale: '10%', lastYearProfit: '$24,406.00', thisYearProfit: '$13,342' },\r\n          },\r\n          {\r\n            data: { brand: 'Product A-2', lastYearSale: '5%', thisYearSale: '10%', lastYearProfit: '$10,000.00', thisYearProfit: '$10,000' },\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        data: { brand: 'Product B', lastYearSale: '26%', thisYearSale: '20%', lastYearProfit: '$24,000.00', thisYearProfit: '$23,000' },\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    data: { brand: 'Fate', lastYearSale: '83%', thisYearSale: '96%', lastYearProfit: '$423,132', thisYearProfit: '$312,122' },\r\n    children: [\r\n      {\r\n        data: { brand: 'Product X', lastYearSale: '50%', thisYearSale: '40%', lastYearProfit: '$223,132', thisYearProfit: '$156,061' },\r\n      },\r\n      {\r\n        data: { brand: 'Product Y', lastYearSale: '33%', thisYearSale: '56%', lastYearProfit: '$200,000', thisYearProfit: '$156,061' },\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    data: { brand: 'Ruby', lastYearSale: '38%', thisYearSale: '5%', lastYearProfit: '$12,321', thisYearProfit: '$8,500' },\r\n    children: [\r\n      {\r\n        data: { brand: 'Product M', lastYearSale: '18%', thisYearSale: '2%', lastYearProfit: '$10,300', thisYearProfit: '$5,500' },\r\n      },\r\n      {\r\n        data: { brand: 'Product N', lastYearSale: '20%', thisYearSale: '3%', lastYearProfit: '$2,021', thisYearProfit: '$3,000' },\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    data: { brand: 'Sky', lastYearSale: '49%', thisYearSale: '22%', lastYearProfit: '$745,232', thisYearProfit: '$650,323' },\r\n    children: [\r\n      {\r\n        data: { brand: 'Product P', lastYearSale: '20%', thisYearSale: '16%', lastYearProfit: '$345,232', thisYearProfit: '$350,000' },\r\n      },\r\n      {\r\n        data: { brand: 'Product R', lastYearSale: '29%', thisYearSale: '6%', lastYearProfit: '$400,009', thisYearProfit: '$300,323' },\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    data: { brand: 'Comfort', lastYearSale: '17%', thisYearSale: '79%', lastYearProfit: '$643,242', thisYearProfit: '500,332' },\r\n    children: [\r\n      {\r\n        data: { brand: 'Product S', lastYearSale: '10%', thisYearSale: '40%', lastYearProfit: '$243,242', thisYearProfit: '$100,000' },\r\n      },\r\n      {\r\n        data: { brand: 'Product T', lastYearSale: '7%', thisYearSale: '39%', lastYearProfit: '$400,00', thisYearProfit: '$400,332' },\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    data: { brand: 'Merit', lastYearSale: '52%', thisYearSale: ' 65%', lastYearProfit: '$421,132', thisYearProfit: '$150,005' },\r\n    children: [\r\n      {\r\n        data: { brand: 'Product L', lastYearSale: '20%', thisYearSale: '40%', lastYearProfit: '$121,132', thisYearProfit: '$100,000' },\r\n      },\r\n      {\r\n        data: { brand: 'Product G', lastYearSale: '32%', thisYearSale: '25%', lastYearProfit: '$300,000', thisYearProfit: '$50,005' },\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    data: { brand: 'Violet', lastYearSale: '82%', thisYearSale: '12%', lastYearProfit: '$131,211', thisYearProfit: '$100,214' },\r\n    children: [\r\n      {\r\n        data: { brand: 'Product SH1', lastYearSale: '30%', thisYearSale: '6%', lastYearProfit: '$101,211', thisYearProfit: '$30,214' },\r\n      },\r\n      {\r\n        data: { brand: 'Product SH2', lastYearSale: '52%', thisYearSale: '6%', lastYearProfit: '$30,000', thisYearProfit: '$70,000' },\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    data: { brand: 'Dulce', lastYearSale: '44%', thisYearSale: '45%', lastYearProfit: '$66,442', thisYearProfit: '$53,322' },\r\n    children: [\r\n      {\r\n        data: { brand: 'Product PN1', lastYearSale: '22%', thisYearSale: '25%', lastYearProfit: '$33,221', thisYearProfit: '$20,000' },\r\n      },\r\n      {\r\n        data: { brand: 'Product PN2', lastYearSale: '22%', thisYearSale: '25%', lastYearProfit: '$33,221', thisYearProfit: '$33,322' },\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    data: { brand: 'Solace', lastYearSale: '90%', thisYearSale: '56%', lastYearProfit: '$765,442', thisYearProfit: '$296,232' },\r\n    children: [\r\n      {\r\n        data: { brand: 'Product HT1', lastYearSale: '60%', thisYearSale: '36%', lastYearProfit: '$465,000', thisYearProfit: '$150,653' },\r\n      },\r\n      {\r\n        data: { brand: 'Product HT2', lastYearSale: '30%', thisYearSale: '20%', lastYearProfit: '$300,442', thisYearProfit: '$145,579' },\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    data:  { brand: 'Essence', lastYearSale: '75%', thisYearSale: '54%', lastYearProfit: '$21,212', thisYearProfit: '$12,533' },\r\n    children: [\r\n      {\r\n        data: { brand: 'Product TS1', lastYearSale: '50%', thisYearSale: '34%', lastYearProfit: '$11,000', thisYearProfit: '$8,562' },\r\n      },\r\n      {\r\n        data: { brand: 'Product TS2', lastYearSale: '25%', thisYearSale: '20%', lastYearProfit: '$11,212', thisYearProfit: '$3,971' },\r\n      }\r\n    ]\r\n  }\r\n]"
      },
      {
        "name": "Scroll",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "libs/components/src/lib/tree-table/_story/stories/scroll.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "",
        "defaultValue": "Template.bind({})"
      },
      {
        "name": "ScrollHorizontalAndVertical",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "libs/components/src/lib/table/_story/stories/scroll-horizontal-and-vertical.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "",
        "defaultValue": "Template.bind({})"
      },
      {
        "name": "ScrollVertical",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "libs/components/src/lib/table/_story/stories/scroll-vertical.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "",
        "defaultValue": "Template.bind({})"
      },
      {
        "name": "ScrollVirtual",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "libs/components/src/lib/table/_story/stories/scroll-virtual.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "",
        "defaultValue": "Template.bind({})"
      },
      {
        "name": "Search",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "libs/components/src/lib/nav-menu/zyfra-nav-menu.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "",
        "defaultValue": "BasicTemplate.bind({})"
      },
      {
        "name": "Secondary",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "libs/components/src/lib/button/zyfra-button.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "",
        "defaultValue": "Template.bind({})"
      },
      {
        "name": "Secondary",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "libs/components/src/lib/progress/zyfra-progress-bar.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "",
        "defaultValue": "Template.bind({})"
      },
      {
        "name": "Secondary",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "libs/components/src/lib/tab-menu/zyfra-tab-menu.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "",
        "defaultValue": "Template.bind({})"
      },
      {
        "name": "Selection",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "libs/components/src/lib/table/_story/stories/selection.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "",
        "defaultValue": "SelectionTemplate.bind({})"
      },
      {
        "name": "Selection",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "libs/components/src/lib/tree-table/_story/stories/selection.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "",
        "defaultValue": "Template.bind({})"
      },
      {
        "name": "SelectionTemplate",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "libs/components/src/lib/table/_story/stories/selection.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story<ZyfraTableComponent>",
        "defaultValue": "args => ({\r\n  template: `\r\n    <zyfra-table\r\n      #dt\r\n      [title]=\"title\"\r\n      [value]=\"value\"\r\n      [(selection)]=\"selection\"\r\n      [dataKey]=\"dataKey\"\r\n      [responsiveLayout]=\"responsiveLayout\"\r\n      [selectionMode]=\"selectionMode\"\r\n      [metaKeySelection]=\"metaKeySelection\"\r\n      [stripedMode]=\"stripedMode\"\r\n      (selectionChange)=\"selectionChange($event)\"\r\n      (rowSelect)=\"rowSelect($event)\"\r\n      (rowUnselect)=\"rowUnselect($event)\"\r\n      (headerCheckboxToggle)=\"headerCheckboxToggle($event)\"\r\n    >\r\n      <ng-template zyfraTableTemplate=\"header\">\r\n        <tr>\r\n          <th style=\"width: 32px\">\r\n            <zyfra-table-header-checkbox></zyfra-table-header-checkbox>\r\n          </th>\r\n          <th>Code</th>\r\n          <th>Name</th>\r\n          <th>Category</th>\r\n          <th>Quantity</th>\r\n        </tr>\r\n      </ng-template>\r\n\r\n      <ng-template zyfraTableTemplate=\"body\" let-product let-rowIndex=\"rowIndex\">\r\n        <tr [zyfraRow]=\"product\" [zyfraSelectableRow]=\"product\" [zyfraSelectableRowIndex]=\"rowIndex\">\r\n          <td>\r\n            <zyfra-table-checkbox [value]=\"product\"></zyfra-table-checkbox>\r\n          </td>\r\n          <td>{{ product.code }}</td>\r\n          <td>{{ product.name }}</td>\r\n          <td>{{ product.category }}</td>\r\n          <td style=\"text-align: right;\">{{ product.quantity }}</td>\r\n        </tr>\r\n      </ng-template>\r\n    </zyfra-table>\r\n  `,\r\n  props: {\r\n    ...args,\r\n    selectionChange: consoleLogAction('selectionChange'),\r\n    headerCheckboxToggle: consoleLogAction('headerCheckboxToggle'),\r\n    rowUnselect: (event): void => actions.rowUnselect({ data: event.data, ...event }),\r\n    rowSelect: (event): void => actions.rowSelect({ data: event.data, ...event }),\r\n  },\r\n})"
      },
      {
        "name": "SerialNumber",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "libs/components/src/lib/input-mask/zyfra-input-mask.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "",
        "defaultValue": "Template.bind({})"
      },
      {
        "name": "Simple",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "libs/components/src/lib/auto-complete/zyfra-auto-complete.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "",
        "defaultValue": "Template.bind({})"
      },
      {
        "name": "Simple",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "libs/components/src/lib/confirm-dialog/zyfra-confirm-dialog.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "",
        "defaultValue": "Template.bind({})"
      },
      {
        "name": "Simple",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "libs/components/src/lib/dialog/zyfra-dialog.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "",
        "defaultValue": "Template.bind({})"
      },
      {
        "name": "Simple",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "libs/components/src/lib/dynamic-dialog/zyfra-dynamic-dialog.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "",
        "defaultValue": "Template.bind({})"
      },
      {
        "name": "Simple",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "libs/components/src/lib/dropdown/zyfra-dropdown.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "",
        "defaultValue": "Template.bind({})"
      },
      {
        "name": "Simple",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "libs/components/src/lib/input-group/zyfra-input-group.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "",
        "defaultValue": "Template.bind({})"
      },
      {
        "name": "Simple",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "libs/components/src/lib/input/zyfra-input.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "",
        "defaultValue": "Template.bind({})"
      },
      {
        "name": "Simple",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "libs/components/src/lib/icon-button/zyfra-icon-button.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "",
        "defaultValue": "Template.bind({})"
      },
      {
        "name": "Simple",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "libs/components/src/lib/message/zyfra-message.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "",
        "defaultValue": "Template.bind({})"
      },
      {
        "name": "Simple",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "libs/components/src/lib/password/zyfra-password.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "",
        "defaultValue": "Template.bind({})"
      },
      {
        "name": "Simple",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "libs/components/src/lib/progress/zyfra-progress-bar.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "",
        "defaultValue": "Template.bind({})"
      },
      {
        "name": "Simple",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "libs/components/src/lib/slider/zyfra-slider.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "",
        "defaultValue": "Template.bind({})"
      },
      {
        "name": "Simple",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "libs/components/src/lib/splitter/zyfra-splitter.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "",
        "defaultValue": "Template.bind({})"
      },
      {
        "name": "Simple",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "libs/components/src/lib/split-button/zyfra-split-button.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "",
        "defaultValue": "Template.bind({})"
      },
      {
        "name": "Simple",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "libs/components/src/lib/tab-menu/zyfra-tab-menu.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "",
        "defaultValue": "Template.bind({})"
      },
      {
        "name": "Simple",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "libs/components/src/lib/textarea/zyfra-textarea.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "",
        "defaultValue": "Template.bind({})"
      },
      {
        "name": "Simple",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "libs/components/src/lib/toast/zyfra-toast.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "",
        "defaultValue": "Template.bind({})"
      },
      {
        "name": "Simple",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "libs/components/src/lib/tree/zyfra-tree.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "",
        "defaultValue": "Template.bind({})"
      },
      {
        "name": "Simple",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "libs/components/src/lib/accordion/zyfra-accordion/zyfra-accordion.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "",
        "defaultValue": "Template.bind({})"
      },
      {
        "name": "Simple",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "libs/components/src/lib/tab-view/zyfra-tab-view/zyfra-tab-view.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "",
        "defaultValue": "Template.bind({})"
      },
      {
        "name": "SimpleHeader",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "libs/components/src/lib/tab-view/zyfra-tab-view/zyfra-tab-view.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "",
        "defaultValue": "Template.bind({})"
      },
      {
        "name": "simpleMenuItems",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "libs/components/src/lib/tab-menu/zyfra-tab-menu.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "MenuItem[]",
        "defaultValue": "[\r\n  {\r\n    label: 'Наименование вкладки 1'\r\n  },\r\n  {\r\n    label: 'Наименование вкладки 2'\r\n  },\r\n  {\r\n    label: 'Наименование вкладки 3',\r\n    disabled: true\r\n  },\r\n  {\r\n    label: 'Наименование вкладки 4'\r\n  },\r\n]"
      },
      {
        "name": "simpleMenuItemsWithIcons",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "libs/components/src/lib/tab-menu/zyfra-tab-menu.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "MenuItem[]",
        "defaultValue": "[\r\n  {\r\n    label: 'Наименование вкладки сорок четыре символа + 1',\r\n    icon: 'zyfra-icon files-file',\r\n  },\r\n  {\r\n    label: 'Наименование вкладки 2',\r\n    icon: 'zyfra-icon bookmarks-bookmark',\r\n  },\r\n  {\r\n    label: 'Наименование вкладки 3',\r\n    icon: 'zyfra-icon editor-mode',\r\n    disabled: true\r\n  },\r\n  {\r\n    label: 'Наименование вкладки 4',\r\n    icon: '',\r\n  },\r\n]"
      },
      {
        "name": "SimpleMini",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "libs/components/src/lib/split-button/zyfra-split-button.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "",
        "defaultValue": "Template.bind({})"
      },
      {
        "name": "SimpleRadio",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "libs/components/src/lib/radio-button/zyfra-radio-button.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "",
        "defaultValue": "SimpleTemplate.bind({})"
      },
      {
        "name": "SimpleSecondary",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "libs/components/src/lib/tab-view/zyfra-tab-view/zyfra-tab-view.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "",
        "defaultValue": "Template.bind({})"
      },
      {
        "name": "SimpleTemplate",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "libs/components/src/lib/radio-button/zyfra-radio-button.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story<ZyfraRadioButtonComponent<string>>",
        "defaultValue": "(args) => ({\r\n  template: `\r\n  <div class=\"p-radiobutton-group\">\r\n    <ng-container *ngFor=\"let item of items\">\r\n      <zyfra-radio-button\r\n        [name]=\"name\"\r\n        [styleClass]=\"styleClass\"\r\n        [label]=\"item.label\"\r\n        [value]=\"item.value\"\r\n        [disabled]=\"disabled\"\r\n        [(ngModel)]=\"model\"\r\n        (onClick)=\"onClick($event)\"\r\n        (ngModelChange)=\"ngModelChange($event)\"\r\n        (onFocus)=\"onFocus($event)\"\r\n        (onBlur)=\"onBlur($event)\"\r\n      ></zyfra-radio-button>\r\n    <br/>\r\n  </ng-container>\r\n  </div>\r\n`,\r\n  props: {\r\n    ...args,\r\n    items: items,\r\n    ngModelChange: () => {},\r\n    onClick: action('onClick'),\r\n    onFocus: action('onFocus'),\r\n    onBlur: action('onBlur'),\r\n  },\r\n})"
      },
      {
        "name": "SimpleWithContent",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "libs/components/src/lib/dropdown-with-content/zyfra-dropdown-with-content.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "",
        "defaultValue": "TemplateWithContent.bind({})"
      },
      {
        "name": "SimpleWithIcon",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "libs/components/src/lib/tab-view/zyfra-tab-view/zyfra-tab-view.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "",
        "defaultValue": "Simple.bind({})"
      },
      {
        "name": "SingleGroupPanel",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "libs/components/src/lib/nav-menu/zyfra-nav-menu.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "",
        "defaultValue": "GroupPanelTemplate.bind({})"
      },
      {
        "name": "Size",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "libs/components/src/lib/spinner/zyfra-spinner.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "",
        "defaultValue": "Template.bind({})"
      },
      {
        "name": "Sort",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "libs/components/src/lib/table/_story/stories/sort.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "",
        "defaultValue": "Template.bind({})"
      },
      {
        "name": "Sort",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "libs/components/src/lib/tree-table/_story/stories/sort.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "",
        "defaultValue": "Template.bind({})"
      },
      {
        "name": "sortByLabel",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "libs/components/src/lib/nav-menu/utils/treeNode.functions.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "",
        "defaultValue": "(a: TreeNode, b: TreeNode): number => {\r\n  if (a.label > b.label) {\r\n    return 1;\r\n  }\r\n  if (a.label < b.label) {\r\n    return -1;\r\n  }\r\n  return 0;\r\n}"
      },
      {
        "name": "SortMultiple",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "libs/components/src/lib/table/_story/stories/sort-multiple.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "",
        "defaultValue": "Template.bind({})"
      },
      {
        "name": "SSN",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "libs/components/src/lib/input-mask/zyfra-input-mask.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "",
        "defaultValue": "Template.bind({})"
      },
      {
        "name": "State",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "libs/components/src/lib/table/_story/stories/state.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "",
        "defaultValue": "Template.bind({})"
      },
      {
        "name": "Status",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "libs/components/src/lib/table/_story/stories/status.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "",
        "defaultValue": "Template.bind({})"
      },
      {
        "name": "Style",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "libs/components/src/lib/spinner/zyfra-spinner.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "",
        "defaultValue": "Template.bind({})"
      },
      {
        "name": "subItems",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "libs/components/src/lib/nav-menu/dataForStories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "ZyfraMenuItem[]",
        "defaultValue": "[\r\n  {label: 'Наименование ячейки 1', icon: 'zyfra-icon files-file'},\r\n  {\r\n    label: 'Наименование ячейки 2',\r\n    icon: 'zyfra-icon files-file',\r\n    badge: 'warning',\r\n    badgeStyleClass: 'p-badge-dot',\r\n    items: [\r\n      {\r\n        label: 'Ячейка второго уровня 1 длиннее остальных',\r\n        icon: 'zyfra-icon files-file',\r\n      },\r\n      {\r\n        label: 'Ячейка второго уровня 2',\r\n        icon: 'zyfra-icon files-file',\r\n        items: [\r\n          {\r\n            label: 'Ячейка третьего уровня 1 длиннее остальных',\r\n            icon: 'zyfra-icon files-file',\r\n            badge: 'danger',\r\n            badgeStyleClass: 'p-badge-dot',\r\n            routerLink: ['/page1']\r\n          },\r\n          {\r\n            label: 'Ячейка третьего уровня 2',\r\n            icon: 'zyfra-icon files-file',\r\n            items: [\r\n              {\r\n                label: 'Ячейка четвертого уровня 1',\r\n                icon: 'zyfra-icon files-file',\r\n                items: [\r\n                  {\r\n                    label: 'Ячейка пятого уровня 1',\r\n                    icon: 'zyfra-icon files-file',\r\n                  },\r\n                  {\r\n                    label: 'Ячейка пятого уровня 2 длиннее остальных',\r\n                    icon: 'zyfra-icon files-file',\r\n                  }\r\n                ]\r\n              },\r\n              {\r\n                label: 'Ячейка четвертого уровня 2',\r\n                icon: 'zyfra-icon files-file',\r\n              },\r\n              {\r\n                label: 'Ячейка четвертого уровня 3',\r\n                icon: 'zyfra-icon files-file',\r\n              }\r\n            ]\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        label: 'Ячейка второго уровня 3',\r\n        icon: 'zyfra-icon files-file',\r\n      }\r\n    ]\r\n  },\r\n  {label: 'Наименование ячейки 3', icon: 'zyfra-icon files-file'},\r\n  {\r\n    label: 'Наименование ячейки 4',\r\n    icon: 'zyfra-icon files-file',\r\n    badge: 'info',\r\n    badgeStyleClass: 'p-badge-dot',\r\n    items: [\r\n      {\r\n        label: 'Ячейка второго уровня 1',\r\n        icon: 'zyfra-icon files-file',\r\n      },\r\n      {\r\n        label: 'Ячейка второго уровня 2 длиннее остальных',\r\n        icon: 'zyfra-icon files-file'\r\n      }\r\n    ]\r\n  },\r\n  {label: 'Наименование ячейки 5', icon: 'zyfra-icon files-file'},\r\n]"
      },
      {
        "name": "SubItems",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "libs/components/src/lib/nav-menu/zyfra-nav-menu.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "",
        "defaultValue": "BasicTemplate.bind({})"
      },
      {
        "name": "subItemsRubricator",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "libs/components/src/lib/nav-menu/dataForStories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "ZyfraMenuItem[]",
        "defaultValue": "[\r\n  {label: 'Наименование ячейки 1', icon: 'zyfra-icon files-file'},\r\n  {\r\n    label: 'Наименование ячейки 2',\r\n    icon: 'zyfra-icon files-file',\r\n    items: [\r\n      {\r\n        label: 'A-Ячейка второго уровня 1',\r\n        icon: 'zyfra-icon files-file',\r\n      },\r\n      {\r\n        label: 'Д-Ячейка второго уровня 2',\r\n        icon: 'zyfra-icon files-file',\r\n        items: [\r\n          {\r\n            label: 'Б-Ячейка третьего уровня 1',\r\n            icon: 'zyfra-icon files-file',\r\n          },\r\n          {\r\n            label: 'Ячейка третьего уровня 2',\r\n            icon: 'zyfra-icon files-file',\r\n            items: [\r\n              {\r\n                label: 'В-Ячейка четвертого уровня 1',\r\n                icon: 'zyfra-icon files-file',\r\n                items: [\r\n                  {\r\n                    label: 'Ц-Ячейка пятого уровня 1',\r\n                    icon: 'zyfra-icon files-file',\r\n                  },\r\n                  {\r\n                    label: 'Э-Ячейка пятого уровня 2',\r\n                    icon: 'zyfra-icon files-file',\r\n                  }\r\n                ]\r\n              },\r\n              {\r\n                label: 'Ж-Ячейка четвертого уровня 2',\r\n                icon: 'zyfra-icon files-file',\r\n              },\r\n              {\r\n                label: 'М-Ячейка четвертого уровня 3',\r\n                icon: 'zyfra-icon files-file',\r\n              }\r\n            ]\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        label: 'У-Ячейка второго уровня 3',\r\n        icon: 'zyfra-icon files-file',\r\n      }\r\n    ]\r\n  },\r\n  {label: 'Наименование ячейки 3', icon: 'zyfra-icon files-file'},\r\n  {\r\n    label: 'Наименование ячейки 4',\r\n    icon: 'zyfra-icon files-file',\r\n    items: [\r\n      {\r\n        label: 'Ячейка второго уровня 1',\r\n        icon: 'zyfra-icon files-file',\r\n      },\r\n      {\r\n        label: 'Ячейка второго уровня 2',\r\n        icon: 'zyfra-icon files-file'\r\n      }\r\n    ]\r\n  },\r\n  {label: 'Наименование ячейки 5', icon: 'zyfra-icon files-file'},\r\n]"
      },
      {
        "name": "Success",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "libs/components/src/lib/button/zyfra-button.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "",
        "defaultValue": "Template.bind({})"
      },
      {
        "name": "Success",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "libs/components/src/lib/progress/zyfra-progress-bar.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "",
        "defaultValue": "Template.bind({})"
      },
      {
        "name": "SuccessMini",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "libs/components/src/lib/button/zyfra-button.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "",
        "defaultValue": "Template.bind({})"
      },
      {
        "name": "TargetTableToken",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "libs/components/src/lib/@core/base-table/target-table.token.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "",
        "defaultValue": "new InjectionToken('Target zyfra table component')"
      },
      {
        "name": "Template",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "libs/components/src/lib/auto-complete/zyfra-auto-complete.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story<ZyfraAutoCompleteComponent>",
        "defaultValue": "(args) => ({\r\n  template: `\r\n    <zyfra-auto-complete\r\n      [ngModel]=\"value\"\r\n      [placeholder]=\"placeholder\"\r\n      [label]=\"label\"\r\n      [suggestions]=\"suggestions\"\r\n      [field]=\"field\"\r\n      [scrollHeight]=\"scrollHeight\"\r\n      [dropdown]=\"dropdown\"\r\n      [multiple]=\"multiple\"\r\n      [dropdownIcon]=\"dropdownIcon\"\r\n      [minLength]=\"minLength\"\r\n      [delay]=\"delay\"\r\n      [completeOnFocus]=\"completeOnFocus\"\r\n      [style]=\"style\"\r\n      [inputStyle]=\"inputStyle\"\r\n      [panelStyle]=\"panelStyle\"\r\n      [styleClass]=\"styleClass\"\r\n      [inputStyleClass]=\"inputStyleClass\"\r\n      [panelStyleClass]=\"panelStyleClass\"\r\n      [inputId]=\"inputId\"\r\n      [name]=\"name\"\r\n      [optionGroupLabel]=\"optionGroupLabel\"\r\n      [group]=\"group\"\r\n      [optionGroupChildren]=\"optionGroupChildren\"\r\n      [readonly]=\"readonly\"\r\n      [disabled]=\"disabled\"\r\n      [maxlength]=\"maxlength\"\r\n      [size]=\"size\"\r\n      [appendTo]=\"appendTo\"\r\n      [tabindex]=\"tabindex\"\r\n      [dataKey]=\"dataKey\"\r\n      [autoHighlight]=\"autoHighlight\"\r\n      [type]=\"type\"\r\n      [showEmptyMessage]=\"showEmptyMessage\"\r\n      [emptyMessage]=\"emptyMessage\"\r\n      [required]=\"required\"\r\n      [autofocus]=\"autofocus\"\r\n      [forceSelection]=\"forceSelection\"\r\n      [dropdownMode]=\"dropdownMode\"\r\n      [baseZIndex]=\"baseZIndex\"\r\n      [autoZIndex]=\"autoZIndex\"\r\n      [showTransitionOptions]=\"showTransitionOptions\"\r\n      [hideTransitionOptions]=\"hideTransitionOptions\"\r\n      [ariaLabel]=\"ariaLabel\"\r\n      [ariaLabelledBy]=\"ariaLabelledBy\"\r\n      [unique]=\"unique\"\r\n      [autocomplete]=\"autocomplete\"\r\n      [virtualScroll]=\"virtualScroll\"\r\n      [itemSize]=\"itemSize\"\r\n      (completeMethod)=\"completeMethod($event)\"\r\n      (onFocus)=\"onFocus($event)\"\r\n      (onBlur)=\"onBlur($event)\"\r\n      (onKeyUp)=\"onKeyUp($event)\"\r\n      (onSelect)=\"onSelect($event)\"\r\n      (onUnselect)=\"onUnselect($event)\"\r\n      (onDropdownClick)=\"onDropdownClick($event)\"\r\n      (onClear)=\"onClear($event)\"\r\n      (onShow)=\"onShow($event)\"\r\n      (onHide)=\"onHide($event)\"\r\n    >\r\n      <ng-template zyfraTemplate=\"item\" let-obj>{{ obj.name}} ({{obj.code}})</ng-template>\r\n      <ng-template zyfraTemplate=\"selectedItem\" let-obj>{{ obj.name}} - {{obj.code}}</ng-template>\r\n    </zyfra-auto-complete>\r\n  `,\r\n  props: {\r\n    ...args,\r\n    countries: [\r\n      { name: 'Argentina', code: 'AR' },\r\n      { name: 'Armenia', code: 'AM' },\r\n      { name: 'Aruba', code: 'AW' },\r\n      { name: 'Russia', code: 'RU' },\r\n      { name: 'India', code: 'IN' },\r\n      { name: 'Indonesia', code: 'ID' },\r\n      { name: 'Iran, Islamic Republic Of', code: 'IR' },\r\n      { name: 'Iraq', code: 'IQ' },\r\n      { name: 'Ireland', code: 'IE' },\r\n      { name: 'Isle of Man', code: 'IM' },\r\n      { name: 'Israel', code: 'IL' },\r\n      { name: 'Italy', code: 'IT' },\r\n      { name: 'Zambia', code: 'ZM' },\r\n      { name: 'Zimbabwe', code: 'ZW' },\r\n    ],\r\n    completeMethod(event): void {\r\n      const query = event.query.toLowerCase();\r\n      this.suggestions = this.countries.filter(country => country.name.toLowerCase().indexOf(query) > -1);\r\n      action('completeMethod')(event);\r\n    },\r\n    onFocus: action('onFocus'),\r\n    onBlur: action('onBlur'),\r\n    onKeyUp: action('onKeyUp'),\r\n    onSelect: action('onSelect'),\r\n    onUnselect: action('onUnselect'),\r\n    onDropdownClick: action('onDropdownClick'),\r\n    onClear: action('onClear'),\r\n    onShow: action('onShow'),\r\n    onHide: action('onHide'),\r\n  },\r\n})"
      },
      {
        "name": "Template",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "libs/components/src/lib/breadcrumb/zyfra-breadcrumb.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story<ZyfraBreadcrumbComponent>",
        "defaultValue": "(args: ZyfraBreadcrumbComponent) => ({\r\n  component: ZyfraBreadcrumbComponent,\r\n  props: {\r\n    ...args,\r\n    onItemClick: (event) => action('onItemClick')({ item: event.item, ...event })\r\n  }\r\n})"
      },
      {
        "name": "Template",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "libs/components/src/lib/checkbox/zyfra-checkbox.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story<ZyfraCheckboxComponent>",
        "defaultValue": "args => ({\r\n  template: `<div>\r\n    <zyfra-checkbox\r\n      [formControl]=\"formControl\"\r\n      [name]=\"name\"\r\n      [value]=\"value\"\r\n      [label]=\"label\"\r\n      [disabledControl]=\"disabledControl\"\r\n      [binary]=\"binary\"\r\n      [tabindex]=\"tabindex\"\r\n      [inputId]=\"inputId\"\r\n      [ariaLabelledBy]=\"ariaLabelledBy\"\r\n      [style]=\"style\"\r\n      [styleClass]=\"styleClass\"\r\n      [labelStyleClass]=\"labelStyleClass\"\r\n      [checkboxIcon]=\"checkboxIcon\"\r\n      [readonly]=\"readonly\"\r\n      [required]=\"required\"\r\n      [trueValue]=\"trueValue\"\r\n      [falseValue]=\"falseValue\"\r\n    ></zyfra-checkbox>\r\n    </div>\r\n    <div style=\"font-family: var(--fontFamily); margin-top: 20px;\">(Значение чекбокса: {{formControl?.value === undefined ? 'undefined' : formControl?.value}})</div>\r\n  `,\r\n  props: {\r\n    ...args,\r\n    formControl: new FormControl(true),\r\n  },\r\n})"
      },
      {
        "name": "Template",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "libs/components/src/lib/button/zyfra-button.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story<ZyfraButtonComponent>",
        "defaultValue": "(args) => ({\r\n  component: ZyfraButtonComponent,\r\n  props: args,\r\n})"
      },
      {
        "name": "Template",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "libs/components/src/lib/chip/zyfra-chip.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story<ZyfraChipComponent>",
        "defaultValue": "(args: ZyfraChipComponent) => ({\r\n  component: ZyfraChipComponent,\r\n  props: args,\r\n})"
      },
      {
        "name": "Template",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "libs/components/src/lib/confirm-dialog/zyfra-confirm-dialog.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story<ZyfraConfirmDialogComponent>",
        "defaultValue": "(args) => ({\r\n  template: `\r\n    <zyfra-button\r\n      (click)=\"confirmDialog.onClick($event)\"\r\n      label=\"for dialog\"\r\n      icon=\"zyfra-icon selection-check-simple\"\r\n    ></zyfra-button>\r\n\r\n    <zyfra-confirm-dialog\r\n      #confirmDialog\r\n      [message]=\"message\"\r\n      [icon]=\"icon\"\r\n      [header]=\"header\"\r\n      [acceptLabel]=\"acceptLabel\"\r\n      [rejectLabel]=\"rejectLabel\"\r\n      [acceptButtonStyleClass]=\"acceptButtonStyleClass\"\r\n      [rejectButtonStyleClass]=\"rejectButtonStyleClass\"\r\n      [acceptMessages]=\"acceptMessages\"\r\n      [position]=\"position\"\r\n      [baseZIndex]=\"baseZIndex\"\r\n      (onHide)=\"onHide($event)\"\r\n    ></zyfra-confirm-dialog>\r\n  `,\r\n  props: {\r\n    ...args,\r\n    onHide: action('onHide'),\r\n  },\r\n})"
      },
      {
        "name": "Template",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "libs/components/src/lib/datepicker/zyfra-datepicker.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story<ZyfraDatepickerComponent>",
        "defaultValue": "args => ({\r\n  component: ZyfraDatepickerComponent,\r\n  template: `\r\n  <zyfra-datepicker\r\n  [ngModel]=\"model\"\r\n  (ngModelChange)=\"$event\"\r\n  [dateFormat]=\"dateFormat\"\r\n  [timeFormat]=\"timeFormat\"\r\n  [returnFormatValue]=\"returnFormatValue\"\r\n  [placeholder]=\"placeholder\"\r\n  [disabled]=\"disabled\"\r\n  [required]=\"required\"\r\n  [label]=\"label\"\r\n  [spanClass]=\"spanClass\"\r\n  [locale]=\"locale\"\r\n  [showClear]=\"showClear\"\r\n  [showDate]=\"showDate\"\r\n  [showTime]=\"showTime\"\r\n  [monthNavigator]=\"monthNavigator\"\r\n  [yearNavigator]=\"yearNavigator\"\r\n  [yearRange]=\"yearRange\"\r\n  [showCalendarBtn]=\"showCalendarBtn\"\r\n  [calendarBtnLabel]=\"calendarBtnLabel\"\r\n  [numberOfMonths]=\"numberOfMonths\"\r\n  [selectionMode]=\"selectionMode\"\r\n  [disabledDates]=\"disabledDates\"\r\n  [firstDayOfWeek]=\"firstDayOfWeek\"\r\n  >\r\n  </zyfra-datepicker>\r\n  `,\r\n  props: args,\r\n})"
      },
      {
        "name": "Template",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "libs/components/src/lib/dialog/zyfra-dialog.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story<ZyfraDialogComponent>",
        "defaultValue": "args => ({\r\n  template: `\r\n    <zyfra-button\r\n      (click)=\"visible = !visible\"\r\n      label=\"for dialog\"\r\n      icon=\"zyfra-icon selection-check-simple\"\r\n    ></zyfra-button>\r\n\r\n    <zyfra-dialog\r\n      [(visible)]=\"visible\"\r\n      [header]=\"header\"\r\n      [position]=\"position\"\r\n      (onShow)=\"onShow($event)\"\r\n      (onHide)=\"onHide($event)\"\r\n      (onResizeInit)=\"onResizeInit($event)\"\r\n      (onResizeEnd)=\"onResizeEnd($event)\"\r\n      (onDragEnd)=\"onDragEnd($event)\"\r\n      (onMaximize)=\"onMaximize($event)\"\r\n    >\r\n      <div>\r\n        <p>content</p>\r\n        <ul>\r\n          <li>item 1 (for example)</li>\r\n          <li><b>item 2</b></li>\r\n        </ul>\r\n      </div>\r\n    </zyfra-dialog>\r\n  `,\r\n  props: {\r\n    ...args,\r\n    visible: false,\r\n    onResizeInit: action('onResizeInit'),\r\n    onResizeEnd: action('onResizeEnd'),\r\n    onDragEnd: action('onDragEnd'),\r\n    onMaximize: action('onMaximize'),\r\n    onShow: action('onShow'),\r\n    onHide: action('onHide'),\r\n  },\r\n})"
      },
      {
        "name": "Template",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "libs/components/src/lib/dynamic-dialog/zyfra-dynamic-dialog.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story<ZyfraDynamicDialogComponent>",
        "defaultValue": "(args: ZyfraDynamicDialogComponent) => ({\r\n  component: ZyfraDynamicDialogComponent,\r\n  props: args,\r\n})"
      },
      {
        "name": "Template",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "libs/components/src/lib/dropdown/zyfra-dropdown.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story<ZyfraDropdownComponent>",
        "defaultValue": "args => ({\r\n  component: ZyfraDropdownComponent,\r\n  template: `<div style=\"height: 100px; padding: 1rem;\" [ngStyle]=\"{'border': appendTo && '2px solid red', 'overflow': appendTo && 'hidden'}\">\r\n    <zyfra-dropdown\r\n      [(ngModel)]=\"value\"\r\n      [options]=\"options\"\r\n      [optionLabel]=\"optionLabel\"\r\n      [placeholder]=\"placeholder\"\r\n      [showClear]=\"showClear\"\r\n      [label]=\"label\"\r\n      [style]=\"{ width: '360px' }\"\r\n      [group]=\"group\"\r\n      [appendTo]=\"appendTo\"\r\n      [mini]=\"mini\"\r\n      [virtualScroll]=\"virtualScroll\"\r\n      [itemSize]=\"itemSize\"\r\n      [filter]=\"filter\"\r\n      (onChange)=\"onChange($event)\"\r\n      (onClick)=\"onClick($event)\"\r\n      (onFocus)=\"onFocus($event)\"\r\n      (onBlur)=\"onBlur($event)\"\r\n      (onShow)=\"onShow($event)\"\r\n      (onHide)=\"onHide($event)\"\r\n    ></zyfra-dropdown>\r\n    </div>\r\n    <div style=\"font-family: var(--fontFamily); margin-top: 20px;\">\r\n      <p>Selected value:</p>\r\n      <pre style=\"font-family: var(--fontFamily);\">{{value | json}}</pre>\r\n    </div>\r\n    <div>\r\n      Привязка к body: <b>{{appendTo ? 'Есть' : 'Нет'}}</b><br>\r\n      <i *ngIf='appendTo'>Граница красного цвета, пример родительского контейнера c overflow hidden</i>\r\n    </div>\r\n  `,\r\n  props: {\r\n    ...args,\r\n    onChange: event => action('onChange')({ value: event.value, ...event }),\r\n    onClick: action('onClick'),\r\n    onFocus: action('onFocus'),\r\n    onBlur: action('onBlur'),\r\n    onShow: action('onShow'),\r\n    onHide: action('onHide'),\r\n  },\r\n})"
      },
      {
        "name": "Template",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "libs/components/src/lib/icon/zyfra-icon.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story<IconComponents>",
        "defaultValue": "(args: IconComponents) => ({\r\n  component: IconComponents,\r\n  props: args,\r\n})"
      },
      {
        "name": "Template",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "libs/components/src/lib/input-group/zyfra-input-group.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story<ZyfraInputGroupComponent>",
        "defaultValue": "args => ({\r\n  component: ZyfraInputGroupComponent,\r\n  props: args,\r\n  template: `\r\n  <zyfra-input-group [label]=\"label\">\r\n    <input zyfraInput [placeholder]='placeholder' [ngModel]='model'>\r\n  </zyfra-input-group>\r\n`,\r\n})"
      },
      {
        "name": "Template",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "libs/components/src/lib/input/zyfra-input.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story<ZyfraInputComponent>",
        "defaultValue": "(args) => ({\r\n  component: ZyfraInputComponent,\r\n  props: args,\r\n  template: `\r\n<zyfra-input\r\n  [id]=\"id\"\r\n  [type]=\"type\"\r\n  [(ngModel)]=\"value\"\r\n  [disabled]=\"disabled\"\r\n  [placeholder]=\"placeholder\"\r\n  [tooltip]=\"tooltip\"\r\n  [tooltipPosition]=\"tooltipPosition\"\r\n  [label]=\"label\"\r\n></zyfra-input>\r\n`\r\n})"
      },
      {
        "name": "Template",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "libs/components/src/lib/icon-button/zyfra-icon-button.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story<ZyfraIconButtonDirective>",
        "defaultValue": "args => ({\r\n  component: ZyfraIconButtonDirective,\r\n  props: args,\r\n  template: `\r\n  <button zyfraIconButton [disabled]='disabled'>\r\n    <zyfra-icon [iconClass]='iconClass'></zyfra-icon>\r\n  </button>\r\n`,\r\n})"
      },
      {
        "name": "Template",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "libs/components/src/lib/input-mask/zyfra-input-mask.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story<ZyfraInputMaskComponent>",
        "defaultValue": "(args) => ({\r\n  component: ZyfraInputMaskComponent,\r\n  template: `\r\n  <zyfra-input-mask\r\n    [label]=\"label\"\r\n    [(ngModel)]=\"ngModel\"\r\n    [mask]=\"mask\"\r\n    [slotChar]=\"slotChar\"\r\n    [placeholder]=\"placeholder\"\r\n    (onBlur)=\"onBlur($event)\"\r\n    (onFocus)=\"onFocus($event)\"\r\n    (onComplete)=\"onComplete($event)\"\r\n    (onKeydown)=\"onKeydown($event)\"\r\n    (onInput)=\"onInput($event)\"\r\n></zyfra-input-mask>\r\n  `,\r\n  props: {\r\n    ...args,\r\n    onBlur: action('onBlur'),\r\n    onFocus: action('onFocus'),\r\n    onComplete: action('onComplete'),\r\n    onKeydown: action('onKeydown'),\r\n    onInput: action('onInput'),\r\n  },\r\n})"
      },
      {
        "name": "Template",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "libs/components/src/lib/input-number/zyfra-input-number.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story<ZyfraInputNumberComponent>",
        "defaultValue": "(args) => ({\r\n  component: ZyfraInputNumberComponent,\r\n  template: `\r\n    <zyfra-input-number\r\n      [(ngModel)]=\"value\"\r\n      [showButtons]=\"showButtons\"\r\n      [mode]=\"mode\"\r\n      [currency]=\"currency\"\r\n      [label]=\"label\"\r\n      [placeholder]=\"placeholder\"\r\n      (onFocus)=\"onFocus($event)\"\r\n      (onBlur)=\"onBlur($event)\"\r\n      (onInput)=\"onInput($event)\"\r\n    ></zyfra-input-number>\r\n  `,\r\n  props: {\r\n    ...args,\r\n    onFocus: action('onFocus'),\r\n    onBlur: action('onBlur'),\r\n    onInput: action('onInput'),\r\n  },\r\n})"
      },
      {
        "name": "Template",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "libs/components/src/lib/input-switch/zyfra-input-switch.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story<ZyfraInputSwitchComponent>",
        "defaultValue": "(args) => ({\r\n  component: ZyfraInputSwitchComponent,\r\n  props: args,\r\n  template: `\r\n<zyfra-input-switch [(ngModel)]=\"checked\"></zyfra-input-switch>`,\r\n})"
      },
      {
        "name": "Template",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "libs/components/src/lib/menu-applications/zyfra-menu-applications.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story<ZyfraMenuApplicationsComponent>",
        "defaultValue": "(args) => ({\r\n  template: `\r\n    <div>\r\n      <zyfra-button\r\n        label=\"Toggle\"\r\n        [style]=\"{'margin-right': '10px'}\"\r\n        (onClick)=\"menu.toggle()\"\r\n      ></zyfra-button>\r\n\r\n      <zyfra-button\r\n        label=\"Open\"\r\n        [style]=\"{'margin-right': '10px'}\"\r\n        (onClick)=\"menu.open()\"\r\n      ></zyfra-button>\r\n\r\n      <zyfra-button\r\n        label=\"Close\"\r\n        [style]=\"{'margin-right': '10px'}\"\r\n        (onClick)=\"menu.close()\"\r\n      ></zyfra-button>\r\n    </div>\r\n\r\n    <br>\r\n\r\n    <div style=\"height: 650px; display: flex; position: relative;\">\r\n      <zyfra-menu-applications\r\n        #menu\r\n        [transition]=\"transition\"\r\n        [tooltipDelay]=\"tooltipDelay\"\r\n        [style]=\"layoutShift ? null : { position: 'absolute', top: '0', left: '0', height: '100%' }\"\r\n        [topMenuItems]=\"topMenuItems\"\r\n        [bottomMenuItems]=\"bottomMenuItems\"\r\n        [activeItem]=\"activeItem\"\r\n        (selectItem)=\"selectItem($event);\"\r\n        (toggleState)=\"toggleState($event)\"\r\n      ></zyfra-menu-applications>\r\n\r\n      <div id=\"content\" [style]=\"layoutShift ? { 'padding-left': '10px' } : { 'padding-left': '60px' }\">\r\n        <p>Some content</p>\r\n      </div>\r\n    </div>\r\n  `,\r\n  props: {\r\n    ...args,\r\n    activeItem: null,\r\n    toggleState: value => action('toggleState')({ value }),\r\n    selectItem(item: any): void {\r\n      action('selectItem')(item);\r\n\r\n      const isTopItem = this.topMenuItems.includes(item);\r\n\r\n      if (isTopItem) {\r\n        this.activeItem = item;\r\n      } else {\r\n        alert(JSON.stringify(item, null, 2));\r\n      }\r\n    }\r\n  },\r\n})"
      },
      {
        "name": "Template",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "libs/components/src/lib/paginator/zyfra-paginator.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story<ZyfraPaginatorComponent>",
        "defaultValue": "(args) => ({\r\n  component: ZyfraPaginatorComponent,\r\n  props: args,\r\n})"
      },
      {
        "name": "Template",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "libs/components/src/lib/message/zyfra-message.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story<ZyfraMessageComponent>",
        "defaultValue": "(args) => ({\r\n  component: ZyfraMessageComponent,\r\n  props: args,\r\n})"
      },
      {
        "name": "Template",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "libs/components/src/lib/password/zyfra-password.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story<ZyfraPasswordComponent>",
        "defaultValue": "(args) => ({\r\n  component: ZyfraPasswordComponent,\r\n  template: `\r\n    <zyfra-password\r\n      [(ngModel)]='ngModel'\r\n      [toggleMask]='toggleMask'\r\n      [mediumRegex]='mediumRegex'\r\n      [strongRegex]='strongRegex'\r\n      [weakLabel]='weakLabel'\r\n      [mediumLabel]='mediumLabel'\r\n      [strongLabel]='strongLabel'\r\n      [label]='label'\r\n      [promptLabel]='promptLabel'\r\n      [required]='required'\r\n      [disabled]='disabled'>\r\n      (onBlur)=\"onBlur($event)\"\r\n      (onFocus)=\"onFocus($event)\"\r\n    ></zyfra-password>\r\n  `,\r\n  props: {\r\n    ...args,\r\n    onBlur: action('onBlur'),\r\n    onFocus: action('onFocus'),\r\n  },\r\n})"
      },
      {
        "name": "Template",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "libs/components/src/lib/progress/zyfra-progress-bar.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story<ZyfraProgressBarComponent>",
        "defaultValue": "(args: ZyfraProgressBarComponent) => ({\r\n  props: args,\r\n})"
      },
      {
        "name": "Template",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "libs/components/src/lib/select-button/zyfra-select-button.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story<ZyfraSelectButtonComponent<StoryCity, string>>",
        "defaultValue": "(args) => ({\r\n  component: ZyfraSelectButtonComponent,\r\n  props: args,\r\n})"
      },
      {
        "name": "Template",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "libs/components/src/lib/slider/zyfra-slider.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story<ZyfraSliderComponent>",
        "defaultValue": "(args) => ({\r\n  component: ZyfraSliderComponent,\r\n  template: `\r\n    <zyfra-slider\r\n      [(ngModel)]=\"ngModel\"\r\n      [min]=\"min\"\r\n      [max]=\"max\"\r\n      [step]=\"step\"\r\n      [range]=\"range\"\r\n      [orientation]=\"orientation\"\r\n      (ngModelChange)=\"ngModelChange($event)\"\r\n      (onSlideEnd)=\"onSlideEnd($event)\"\r\n    ></zyfra-slider>\r\n    <br>\r\n    <p style=\"font-size: 14px; font-family: Inter, sans-serif;\">Control value: {{ngModel}}</p>\r\n  `,\r\n  props: {\r\n    ...args,\r\n    ngModelChange: action('ngModelChange'),\r\n    onSlideEnd: action('onSlideEnd'),\r\n  },\r\n})"
      },
      {
        "name": "Template",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "libs/components/src/lib/spinner/zyfra-spinner.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story<ZyfraSpinnerComponent>",
        "defaultValue": "(args) => ({\r\n  component: ZyfraSpinnerComponent,\r\n  props: args,\r\n})"
      },
      {
        "name": "Template",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "libs/components/src/lib/splitter/zyfra-splitter.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story<ZyfraSplitterComponent>",
        "defaultValue": "(args) => ({\r\n  template: `\r\n    <zyfra-splitter\r\n      [panelSizes]=\"panelSizes\"\r\n      [minSizes]=\"minSizes\"\r\n      [style]=\"style\"\r\n      (onResizeStart)=\"onResizeStart($event)\"\r\n      (onResizeEnd)=\"onResizeEnd($event)\"\r\n    >\r\n      <ng-template zyfraSplitterTemplate [visible]=\"visibleFirstTemplate\">\r\n        <div>Panel 1</div>\r\n      </ng-template>\r\n      <ng-template zyfraSplitterTemplate>\r\n        <div>Panel 2</div>\r\n      </ng-template>\r\n    </zyfra-splitter>\r\n  `,\r\n  props: {\r\n    ...args,\r\n  },\r\n})"
      },
      {
        "name": "Template",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "libs/components/src/lib/split-button/zyfra-split-button.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story<ZyfraSplitButtonComponent>",
        "defaultValue": "(args) => ({\r\n  component: ZyfraSplitButtonComponent,\r\n  props: args,\r\n})"
      },
      {
        "name": "Template",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "libs/components/src/lib/tab-menu/zyfra-tab-menu.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story<ZyfraTabMenuComponent>",
        "defaultValue": "(args) => ({\r\n  props: {\r\n    ...args,\r\n  }\r\n})"
      },
      {
        "name": "Template",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "libs/components/src/lib/textarea/zyfra-textarea.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story<ZyfraTextareaComponent>",
        "defaultValue": "(args) => ({\r\n  component: ZyfraTextareaComponent,\r\n  props: args,\r\n  template: `\r\n<zyfra-textarea\r\n  [rows]=\"rows\"\r\n  [cols]=\"cols\"\r\n  [autoResize]=\"autoResize\"\r\n  [(ngModel)]=\"ngModel\"\r\n  [placeholder]=\"placeholder\"\r\n  [class]=\"class\"\r\n  [label]=\"label\"\r\n  [disabled]=\"disabled\"\r\n  [maxlength]=\"maxlength\"\r\n  [minlength]=\"minlength\"\r\n  [name]=\"name\"\r\n></zyfra-textarea>\r\n  `,\r\n})"
      },
      {
        "name": "Template",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "libs/components/src/lib/toast/zyfra-toast.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story<ZyfraToastComponent>",
        "defaultValue": "args => ({\r\n  template: `\r\n  <toast-container\r\n  [key]=\"key\"\r\n  [position]=\"position\"\r\n  [showTransitionOptions]=\"showTransitionOptions\"\r\n  [preventOpenDuplicates]=\"preventOpenDuplicates\"\r\n  [preventDuplicates]=\"preventDuplicates\"\r\n  [useCustomTemplate]=\"useCustomTemplate\"\r\n  ></toast-container>\r\n  `,\r\n  props: {\r\n    ...args,\r\n  },\r\n})"
      },
      {
        "name": "Template",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "libs/components/src/lib/toggle-button/zyfra-toggle-button.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story<ZyfraToggleButtonComponent>",
        "defaultValue": "(args) => ({\r\n  component: ZyfraToggleButtonComponent,\r\n  props: args,\r\n})"
      },
      {
        "name": "Template",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "libs/components/src/lib/tooltip/zyfra-tooltip.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story<ZyfraTooltipDirective>",
        "defaultValue": "(args) => ({\r\n  template: `\r\n    <div\r\n      style=\"height: 100vh;width: 100%;display: flex;justify-content: center;align-items: center;flex-direction: column;\"\r\n    >\r\n      <div *ngIf=\"title !== undefined\">\r\n        <div>\r\n          <ng-template #testTooltip>\r\n            <div class=\"zyfra-tooltip__title\">{{ title }}</div>\r\n            <div>{{ text }}</div>\r\n          </ng-template>\r\n\r\n          <zyfra-button\r\n            [ngStyle]=\"{display: 'block'}\"\r\n            [zyfraTooltip]=\"testTooltip\"\r\n            [zyfraTooltipShow]=\"show\"\r\n            [zyfraTooltipColor]=\"color\"\r\n            [zyfraTooltipDelay]=\"delay\"\r\n            [zyfraTooltipPosition]=\"position\"\r\n            label=\"Button\"\r\n            type=\"button\"\r\n            styleClass=\"btn-default btn-primary\"\r\n          ></zyfra-button>\r\n        </div>\r\n      </div>\r\n      <div *ngIf=\"title == undefined\">\r\n        <div>\r\n          <zyfra-button\r\n            [ngStyle]=\"{display: 'block'}\"\r\n            [zyfraTooltip]=\"text\"\r\n            [zyfraTooltipColor]=\"color\"\r\n            [zyfraTooltipShow]=\"show\"\r\n            [zyfraTooltipDelay]=\"delay\"\r\n            [zyfraTooltipPosition]=\"position\"\r\n            label=\"Button\"\r\n            type=\"button\"\r\n            styleClass=\"btn-default btn-primary\"\r\n          ></zyfra-button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  `,\r\n  props: args,\r\n})"
      },
      {
        "name": "Template",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "libs/components/src/lib/tri-checkbox/zyfra-tri-checkbox.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story<ZyfraTriCheckboxComponent>",
        "defaultValue": "args => ({\r\n  template: `\r\n    <div>\r\n      <h3>Работа через ngModel</h3>\r\n      <zyfra-tri-checkbox\r\n        [label]=\"label\"\r\n        [name]=\"name\"\r\n        [disabled]=\"disabled\"\r\n        [readonly]=\"readonly\"\r\n        [tabindex]=\"tabindex\"\r\n        [inputId]=\"inputId\"\r\n        [ariaLabelledBy]=\"ariaLabelledBy\"\r\n        [style]=\"style\"\r\n        [styleClass]=\"styleClass\"\r\n        [(ngModel)]=\"model\"\r\n        [checkboxTrueIcon]=\"checkboxTrueIcon\"\r\n        [checkboxFalseIcon]=\"checkboxFalseIcon\"\r\n      ></zyfra-tri-checkbox>\r\n      <br>\r\n      <small>(Значение чекбокса: {{model === undefined || model === null ? 'null' : model}})</small>\r\n      <br>\r\n      <br>\r\n      <h3>Работа через formControl</h3>\r\n      <zyfra-tri-checkbox\r\n        [formControl]=\"fControl\"\r\n        [tabindex]=\"tabindex\"\r\n        [inputId]=\"inputId\"\r\n        [ariaLabelledBy]=\"ariaLabelledBy\"\r\n        [style]=\"style\"\r\n        [styleClass]=\"styleClass\"\r\n        label=\"Чекбокс FormControl. Свойства disabled, readonly, name, label не распространяются\"\r\n      ></zyfra-tri-checkbox>\r\n      <br>\r\n      <small>(Значение чекбокса: {{fControl.value === undefined || fControl.value === null ? 'null' : fControl.value}})</small>\r\n      <br>\r\n      <br>\r\n      <zyfra-button\r\n        label=\"toggle disable/enable\"\r\n        [style]=\"{ 'margin-right': '5px' }\"\r\n        (click)=\"this.fControl.disabled ? this.fControl.enable() : this.fControl.disable()\"\r\n      ></zyfra-button>\r\n      <zyfra-button [style]=\"{ 'margin-right': '5px' }\" label=\"toggle true/false\" (click)=\"fControl.setValue(!fControl.value)\"></zyfra-button>\r\n      <zyfra-button label=\"toggle null\" (click)=\"fControl.setValue(null)\"></zyfra-button>\r\n    </div>\r\n    <div>\r\n      <h3>Изменены checkboxTrueIcon zyfra-icon add-plus и checkboxFalseIcon на zyfra-icon delete-minus</h3>\r\n      <zyfra-tri-checkbox\r\n        [label]=\"label\"\r\n        [name]=\"name\"\r\n        [disabled]=\"disabled\"\r\n        [readonly]=\"readonly\"\r\n        [tabindex]=\"tabindex\"\r\n        [inputId]=\"inputId\"\r\n        [ariaLabelledBy]=\"ariaLabelledBy\"\r\n        [style]=\"style\"\r\n        [styleClass]=\"styleClass\"\r\n        [(ngModel)]=\"model\"\r\n        checkboxTrueIcon=\"zyfra-icon add-plus\"\r\n        checkboxFalseIcon=\"zyfra-icon delete-minus\"\r\n      ></zyfra-tri-checkbox>\r\n      <br>\r\n      <small>(Значение чекбокса: {{model === undefined || model === null ? 'null' : model}})</small>\r\n    </div>\r\n  `,\r\n  props: {\r\n    ...args,\r\n    fControl: new FormControl(true),\r\n  },\r\n})"
      },
      {
        "name": "Template",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "libs/components/src/lib/tree/zyfra-tree.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story<ZyfraTreeComponent>",
        "defaultValue": "(args) => ({\r\n  component: ZyfraTreeComponent,\r\n  props: args,\r\n})"
      },
      {
        "name": "Template",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "libs/components/src/lib/accordion/zyfra-accordion-tab/zyfra-accordion-tab.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story<ZyfraAccordionTabComponent>",
        "defaultValue": "(args: ZyfraAccordionTabComponent) => ({\r\n  component: ZyfraAccordionTabComponent,\r\n  props: args,\r\n})"
      },
      {
        "name": "Template",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "libs/components/src/lib/accordion/zyfra-accordion/zyfra-accordion.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story<ZyfraAccordionComponent>",
        "defaultValue": "(args: ZyfraAccordionComponent) => ({\r\n  template: `\r\n  <zyfra-accordion [multiple]=\"multiple\"\r\n                   (mouseover)=\"mouseover()\"\r\n                   (onOpen)=\"onOpen($event)\"\r\n                   (onClose)=\"onClose($event)\"\r\n                   (activeIndexChange)=\"activeIndexChange($event)\">\r\n    <zyfra-accordion-tab header=\"Header 1\" [disabled]=\"disabled\" (selectedChange)=\"selectedChange($event)\">\r\n      Content 1\r\n    </zyfra-accordion-tab>\r\n    <zyfra-accordion-tab [disabled]=\"disabled\" [selected]=\"selectedTwo\" (selectedChange)=\"selectedTwo = $event;selectedChange($event)\">\r\n      <ng-template zyfraTemplate=\"header\">\r\n          {{dynamicString}} header Content 2\r\n      </ng-template>\r\n      <ng-template zyfraTemplate=\"icons\">\r\n          <span class=\"zyfra-icon selection-radio-off\" title=\"{{dynamicString}} title\"></span>\r\n          <span class=\"zyfra-icon selection-radio-off\" title=\"static title\"></span>\r\n      </ng-template>\r\n      <ng-template zyfraTemplate=\"content\">\r\n      {{dynamicString}} body Content 2\r\n      </ng-template>\r\n    </zyfra-accordion-tab>\r\n    <zyfra-accordion-tab *ngIf=\"showThirdForReInitTabTest\" [disabled]=\"disabled\" (selectedChange)=\"selectedChange($event)\" (activeIndexChange)=\"activeIndexChange($event)\">\r\n      <ng-template zyfraTemplate=\"header\">template header content</ng-template>\r\n      <ng-template zyfraTemplate=\"content\">template body content</ng-template>\r\n    </zyfra-accordion-tab>\r\n  </zyfra-accordion>\r\n  `,\r\n  props: {\r\n    ...args,\r\n    selectedChange: action('selectedChange'),\r\n    onOpen: action('onOpen'),\r\n    onClose: action('onClose'),\r\n    activeIndexChange: action('activeIndexChange'),\r\n    mouseover(): void {\r\n      // для теста нормально ли подхватывается новый таб и учавствует модели. метод activeIndexChange должен выдавать правильную модель\r\n      this.showThirdForReInitTabTest = true;\r\n    }\r\n  }\r\n})"
      },
      {
        "name": "Template",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "libs/components/src/lib/datepicker/calendar/zyfra-calendar.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "args => ({\r\n  component: ZyfraCalendarComponent,\r\n  props: args,\r\n  template: `\r\n  <zyfra-calendar\r\n    [label]='label'\r\n    [selectionMode]='selectionMode'\r\n    [placeholder]='placeholder'\r\n    [(ngModel)]='ngModel'\r\n    [dateFormat]='dateFormat'\r\n    [hourFormat]='hourFormat'\r\n    [disabled]='disabled'\r\n    [inline]='inline'\r\n    [showOtherMonths]='showOtherMonths'\r\n    [selectOtherMonths]='selectOtherMonths'\r\n    [showIcon]='showIcon'\r\n    [showOnFocus]='showOnFocus'\r\n    [showWeek]='showWeek'\r\n    [readonlyInput]='readonlyInput'\r\n    [view]='view'\r\n    [appendTo]='appendTo'\r\n    [showTime]='showTime'\r\n    [timeOnly]='timeOnly'\r\n    [required]='required'\r\n    [showButtonBar]='showButtonBar'\r\n    [firstDayOfWeek]='firstDayOfWeek'\r\n    [disabledDays]='disabledDays'\r\n    [minDate]=\"minDate\"\r\n    [maxDate]=\"maxDate\"\r\n  >\r\n  </zyfra-calendar>\r\n\r\n  <br>\r\n  <p>Содежимое ngModel</p>\r\n  <div>{{ngModel | json}}</div>\r\n  `,\r\n})"
      },
      {
        "name": "Template",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "libs/components/src/lib/datepicker/zyfra-datepicker-multi/zyfra-datepicker-multi.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story<ZyfraDatepickerMultiComponent>",
        "defaultValue": "(args: ZyfraDatepickerMultiComponent) => ({\r\n  component: ZyfraDatepickerMultiComponent,\r\n  template: `\r\n  <zyfra-datepicker-multi\r\n    [relativeValue]=\"relativeValue\"\r\n    [absoluteValue]=\"absoluteValue\"\r\n    [label]='label'\r\n    [placeholder]='placeholder'\r\n    [dateFormat]='dateFormat'\r\n    [disabled]='disabled'\r\n    [inline]='inline'\r\n    [showOtherMonths]='showOtherMonths'\r\n    [selectOtherMonths]='selectOtherMonths'\r\n    [showOnFocus]='showOnFocus'\r\n    [showWeek]='showWeek'\r\n    [readonlyInput]='readonlyInput'\r\n    [showTime]='showTime'\r\n    [timeOnly]='timeOnly'\r\n    [required]='required'\r\n    [showButtonBar]='showButtonBar'\r\n    [firstDayOfWeek]='firstDayOfWeek'\r\n    [mode]='mode'\r\n  >\r\n  </zyfra-datepicker-multi>\r\n  `,\r\n  props: args,\r\n})"
      },
      {
        "name": "Template",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "libs/components/src/lib/datepicker/zyfra-relative-datepicker/zyfra-relative-datepicker.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story<ZyfraRelativeDatepickerComponent>",
        "defaultValue": "(args: ZyfraRelativeDatepickerComponent) => ({\r\n  component: ZyfraRelativeDatepickerComponent,\r\n  template: `\r\n  <zyfra-relative-datepicker\r\n    [label]='label'\r\n    [placeholder]='placeholder'\r\n    [disabled]='disabled'\r\n    [showClear]='showClear'\r\n    [(ngModel)]='ngModel'\r\n  >\r\n  </zyfra-relative-datepicker>\r\n  `,\r\n  props: args,\r\n})"
      },
      {
        "name": "Template",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "libs/components/src/lib/menu-applications/zyfra-menu-applications-item/zyfra-menu-applications-item.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story<ZyfraMenuApplicationsItemComponent>",
        "defaultValue": "(args: ZyfraMenuApplicationsItemComponent) => ({\r\n  component: ZyfraMenuApplicationsItemComponent,\r\n  props: args,\r\n})"
      },
      {
        "name": "Template",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "libs/components/src/lib/tab-view/zyfra-tab-panel/zyfra-tab-panel.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story<ZyfraTabPanelComponent>",
        "defaultValue": "(args: ZyfraTabPanelComponent) => ({\r\n  component: ZyfraTabPanelComponent,\r\n  props: args,\r\n})"
      },
      {
        "name": "Template",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "libs/components/src/lib/tab-view/zyfra-tab-view/zyfra-tab-view.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "(args) => ({\r\n  template: `\r\n    <zyfra-tab-view\r\n      [class]=\"zyfraTabViewTagStyle\"\r\n      [activeIndex]=\"activeIndex\"\r\n      [controlClose]=\"controlClose\"\r\n      [style]=\"style\"\r\n      [styleClass]=\"styleClass\"\r\n      (onChange)=\"onChange($event)\"\r\n      (onClose)=\"onClose($event)\"\r\n      (activeIndexChange)=\"activeIndexChange($event)\"\r\n    >\r\n      <ng-container *ngFor=\"let tab of tabs\">\r\n        <zyfra-tab-panel\r\n          [header]=\"tab.header\"\r\n          [selected]=\"tab.selected\"\r\n          [disabled]=\"tab.disabled\"\r\n          [closable]=\"tab.closable\"\r\n          [leftIcon]=\"tab.leftIcon\"\r\n          [rightIcon]=\"tab.rightIcon\"\r\n          [headerStyle]=\"tab.headerStyle\"\r\n          [headerStyleClass]=\"tab.headerStyleClass\"\r\n          [cache]=\"tab.cache\"\r\n          [tooltip]=\"tab.tooltip\"\r\n          [tooltipPosition]=\"tab.tooltipPosition\"\r\n          [tooltipStyleClass]=\"tab.tooltipStyleClass\"\r\n        >\r\n          {{ tab.content }}\r\n        </zyfra-tab-panel>\r\n      </ng-container>\r\n    </zyfra-tab-view>\r\n  `,\r\n  props: {\r\n    ...args,\r\n  },\r\n})"
      },
      {
        "name": "Template",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "libs/components/src/lib/table/_story/stories/basic.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story<ZyfraTableComponent>",
        "defaultValue": "args => ({\r\n  template: `\r\n    <zyfra-table\r\n      [title]=\"title\"\r\n      [value]=\"value\"\r\n      [responsiveLayout]=\"responsiveLayout\"\r\n      [stripedMode]=\"stripedMode\"\r\n      (activeElementChange)=\"activeElementChange($event)\"\r\n    >\r\n      <ng-template zyfraTableTemplate=\"header\">\r\n        <tr>\r\n          <th>Code</th>\r\n          <th>Name</th>\r\n          <th>Category</th>\r\n          <th>Quantity</th>\r\n        </tr>\r\n      </ng-template>\r\n      <ng-template zyfraTableTemplate=\"body\" let-product let-rowIndex=\"rowIndex\">\r\n        <tr [zyfraRow]=\"product\">\r\n          <td>{{product.code}}</td>\r\n          <td>{{product.name}}</td>\r\n          <td>{{product.category}}</td>\r\n          <td style=\"text-align: right;\">{{product.quantity}}</td>\r\n        </tr>\r\n      </ng-template>\r\n    </zyfra-table>\r\n  `,\r\n  props: {\r\n    ...args,\r\n    activeElementChange: action('activeElementChange'),\r\n  },\r\n})"
      },
      {
        "name": "Template",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "libs/components/src/lib/table/_story/stories/edit-cell.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story<ZyfraTableComponent>",
        "defaultValue": "args => ({\r\n  template: `\r\n    <zyfra-table\r\n      [title]=\"title\"\r\n      [value]=\"value\"\r\n      [dataKey]=\"dataKey\"\r\n      [responsiveLayout]=\"responsiveLayout\"\r\n      (editInit)=\"editInit($event)\"\r\n      (editComplete)=\"editComplete($event)\"\r\n      (editCancel)=\"editCancel($event)\"\r\n    >\r\n      <ng-template zyfraTableTemplate=\"header\">\r\n        <tr>\r\n          <th>Code</th>\r\n          <th>Name</th>\r\n          <th>Category</th>\r\n          <th>Quantity</th>\r\n        </tr>\r\n      </ng-template>\r\n\r\n      <ng-template zyfraTableTemplate=\"body\" let-product>\r\n        <tr [zyfraRow]=\"product\">\r\n          <td zyfraEditableColumn>\r\n            <zyfra-cell-editor [(value)]=\"product.code\">\r\n               {{ product.code}}\r\n            </zyfra-cell-editor>\r\n          </td>\r\n\r\n          <td zyfraEditableColumn>\r\n            <zyfra-cell-editor [(value)]=\"product.name\">\r\n              {{product.name}}\r\n            </zyfra-cell-editor>\r\n          </td>\r\n          <td zyfraEditableColumn>\r\n            <zyfra-cell-editor [(value)]=\"product.inventoryStatus\">\r\n              {{product.inventoryStatus}}\r\n            </zyfra-cell-editor>\r\n          </td>\r\n          <td>\r\n            <zyfra-cell-editor [(value)]=\"product.price\">\r\n              {{product.price | currency: 'USD'}}\r\n            </zyfra-cell-editor>\r\n          </td>\r\n        </tr>\r\n      </ng-template>\r\n    </zyfra-table>\r\n  `,\r\n  props: {\r\n    ...args,\r\n    editComplete: consoleLogAction('editComplete'),\r\n    editCancel: consoleLogAction('editCancel'),\r\n    editInit: consoleLogAction('editInit'),\r\n  },\r\n})"
      },
      {
        "name": "Template",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "libs/components/src/lib/table/_story/stories/col-group.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story<ZyfraTableComponent>",
        "defaultValue": "args => ({\r\n  template: `\r\n    <zyfra-table [value]=\"value\" [responsiveLayout]=\"responsiveLayout\" [title]=\"title\">\r\n      <ng-template zyfraTableTemplate=\"header\">\r\n        <tr>\r\n          <th rowspan=\"3\">Product</th>\r\n          <th colspan=\"4\">Sale Rate</th>\r\n        </tr>\r\n        <tr>\r\n          <th colspan=\"2\">Sales</th>\r\n          <th colspan=\"2\">Profits</th>\r\n        </tr>\r\n        <tr>\r\n          <th>Last Year</th>\r\n          <th>This Year</th>\r\n          <th>Last Year</th>\r\n          <th>This Year</th>\r\n        </tr>\r\n      </ng-template>\r\n\r\n      <ng-template zyfraTableTemplate=\"body\" let-sale>\r\n        <tr [zyfraRow]=\"sale\">\r\n          <td>{{sale.product}}</td>\r\n          <td style=\"text-align: right;\">{{sale.lastYearSale}}%</td>\r\n          <td style=\"text-align: right;\">{{sale.thisYearSale}}%</td>\r\n          <td style=\"text-align: right;\">{{sale.lastYearProfit | currency: 'USD'}}</td>\r\n          <td style=\"text-align: right;\">{{sale.thisYearProfit | currency: 'USD'}}</td>\r\n        </tr>\r\n      </ng-template>\r\n\r\n      <ng-template zyfraTableTemplate=\"footer\">\r\n        <tr>\r\n          <td colspan=\"3\">Totals</td>\r\n          <td style=\"text-align: right;\">{{lastYearTotal | currency: 'USD'}}</td>\r\n          <td style=\"text-align: right;\">{{thisYearTotal | currency: 'USD'}}</td>\r\n        </tr>\r\n      </ng-template>\r\n    </zyfra-table>\r\n  `,\r\n  props: {\r\n    ...args,\r\n    lastYearTotal: 3_283_772.0,\r\n    thisYearTotal: 1_541_925.0,\r\n  },\r\n})"
      },
      {
        "name": "Template",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "libs/components/src/lib/table/_story/stories/edit-row.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story<ZyfraTableComponent>",
        "defaultValue": "args => ({\r\n  template: `\r\n    <zyfra-table\r\n      [title]=\"title\"\r\n      [value]=\"value\"\r\n      [dataKey]=\"dataKey\"\r\n      [editMode]=\"editMode\"\r\n      [responsiveLayout]=\"responsiveLayout\"\r\n      (editInit)=\"editInit($event)\"\r\n      (editComplete)=\"editComplete($event)\"\r\n      (editCancel)=\"editCancel($event)\"\r\n      (rowsChange)=\"rowsChange($event)\"\r\n    >\r\n      <ng-template zyfraTableTemplate=\"header\">\r\n        <tr>\r\n          <th>Code</th>\r\n          <th>Name</th>\r\n          <th>Category</th>\r\n          <th>Quantity</th>\r\n          <th style=\"width:8rem\"></th>\r\n        </tr>\r\n      </ng-template>\r\n      <ng-template zyfraTableTemplate=\"body\" let-product let-editing=\"editing\" let-ri=\"rowIndex\">\r\n        <tr [zyfraRow]=\"product\" [zyfraEditableRow]=\"product\">\r\n          <td>\r\n            <zyfra-cell-editor [(value)]=\"product.code\">\r\n              {{product.code}}\r\n            </zyfra-cell-editor>\r\n          </td>\r\n          <td>\r\n            <zyfra-cell-editor [(value)]=\"product.name\">\r\n              {{product.name}}\r\n            </zyfra-cell-editor>\r\n          </td>\r\n          <td>\r\n            <zyfra-cell-editor [(value)]=\"product.inventoryStatus\">\r\n              {{product.inventoryStatus}}\r\n            </zyfra-cell-editor>\r\n          </td>\r\n          <td style=\"text-align: right;\">\r\n            <zyfra-cell-editor [(value)]=\"product.price\">\r\n              <ng-template zyfraTableTemplate=\"input\">\r\n                <input type=\"text\" [(ngModel)]=\"product.price\">\r\n              </ng-template>\r\n              {{product.price | currency: 'USD'}}\r\n            </zyfra-cell-editor>\r\n          </td>\r\n          <td style=\"text-align: center; font-size: 16px;\">\r\n            <button *ngIf=\"!editing\" type=\"button\" zyfraInitEditableRow (click)=\"onRowEditInit(product)\" style=\"background: none; border: none; color: #7887A5; cursor: pointer;\">\r\n              <i class=\"zyfra-icon editor-mode\"></i>\r\n            </button>\r\n            <button *ngIf=\"editing\" type=\"button\" zyfraSaveEditableRow (click)=\"onRowEditSave(product)\" style=\"background: none; border: none; color: #62BC65; cursor: pointer;\">\r\n              <i class=\"pi pi-check\"></i>\r\n            </button>\r\n            <button *ngIf=\"editing\" type=\"button\" zyfraCancelEditableRow (click)=\"onRowEditCancel(product, ri)\" style=\"background: none; border: none; color: #EC5050; cursor: pointer;\">\r\n              <i class=\"pi pi-times\"></i>\r\n            </button>\r\n          </td>\r\n        </tr>\r\n      </ng-template>\r\n    </zyfra-table>\r\n  `,\r\n  props: {\r\n    ...args,\r\n    editComplete: action('editComplete'),\r\n    editCancel: action('editCancel'),\r\n    editInit: action('editInit'),\r\n    statuses: [\r\n      { label: 'In Stock', value: 'INSTOCK' },\r\n      { label: 'Low Stock', value: 'LOWSTOCK' },\r\n      { label: 'Out of Stock', value: 'OUTOFSTOCK' },\r\n    ],\r\n    clonedProducts: {} as { [s: string]: Product },\r\n    onRowEditInit(product: Product): void {\r\n      this.clonedProducts[product.id] = { ...product };\r\n    },\r\n    onRowEditSave(product: Product): void {\r\n      if (product.price > 0) {\r\n        delete this.clonedProducts[product.id];\r\n      }\r\n    },\r\n    onRowEditCancel(product: Product, index: number): void {\r\n      this.value[index] = this.clonedProducts[product.id];\r\n      delete this.clonedProducts[product.id];\r\n    },\r\n  },\r\n})"
      },
      {
        "name": "Template",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "libs/components/src/lib/table/_story/stories/expand.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story<ZyfraTableComponent>",
        "defaultValue": "args => ({\r\n  template: `\r\n    <zyfra-table\r\n      [title]=\"title\"\r\n      [value]=\"value\"\r\n      [dataKey]=\"dataKey\"\r\n      (rowExpand)=\"rowExpand($event)\"\r\n      (rowCollapse)=\"rowCollapse($event)\"\r\n    >\r\n      <ng-template zyfraTableTemplate=\"header\">\r\n        <tr>\r\n          <th style=\"width: 38px\"></th>\r\n          <th zyfraSortableColumn=\"name\">Name <zyfra-sort-icon field=\"name\"></zyfra-sort-icon></th>\r\n          <th>Code</th>\r\n          <th zyfraSortableColumn=\"price\">Price <zyfra-sort-icon field=\"price\"></zyfra-sort-icon></th>\r\n          <th zyfraSortableColumn=\"category\">Category <zyfra-sort-icon field=\"category\"></zyfra-sort-icon></th>\r\n          <th zyfraSortableColumn=\"rating\">Reviews <zyfra-sort-icon field=\"rating\"></zyfra-sort-icon></th>\r\n          <th zyfraSortableColumn=\"inventoryStatus\">Status <zyfra-sort-icon field=\"inventoryStatus\"></zyfra-sort-icon></th>\r\n        </tr>\r\n      </ng-template>\r\n\r\n      <ng-template zyfraTableTemplate=\"body\" let-product let-expanded=\"expanded\">\r\n        <tr [zyfraRow]=\"product\">\r\n          <td>\r\n            <zyfra-row-toggler [data]=\"product\" [expanded]=\"expanded\"></zyfra-row-toggler>\r\n          </td>\r\n          <td>{{product.name}}</td>\r\n          <td>{{product.code}}</td>\r\n          <td style=\"text-align: right;\">{{product.price | currency:'USD'}}</td>\r\n          <td>{{product.category}}</td>\r\n          <td style=\"text-align: right;\">{{product.rating}}</td>\r\n          <td><span [class]=\"'product-badge status-' + product.inventoryStatus.toLowerCase()\">{{product.inventoryStatus}}</span></td>\r\n        </tr>\r\n      </ng-template>\r\n\r\n      <ng-template zyfraTableTemplate=\"rowexpansion\" let-product>\r\n        <tr>\r\n          <td colspan=\"7\">\r\n            <div class=\"p-p-3\">\r\n              <zyfra-table [value]=\"product.orders\" dataKey=\"id\">\r\n                <ng-template zyfraTableTemplate=\"header\">\r\n                  <tr>\r\n                    <th zyfraSortableColumn=\"id\">Id <zyfra-sort-icon field=\"price\"></zyfra-sort-icon></th>\r\n                    <th zyfraSortableColumn=\"customer\">Customer <zyfra-sort-icon field=\"customer\"></zyfra-sort-icon></th>\r\n                    <th zyfraSortableColumn=\"date\">Date <zyfra-sort-icon field=\"date\"></zyfra-sort-icon></th>\r\n                    <th zyfraSortableColumn=\"amount\">Amount <zyfra-sort-icon field=\"amount\"></zyfra-sort-icon></th>\r\n                    <th zyfraSortableColumn=\"status\">Status <zyfra-sort-icon field=\"status\"></zyfra-sort-icon></th>\r\n                  </tr>\r\n                </ng-template>\r\n                <ng-template zyfraTableTemplate=\"body\" let-order>\r\n                  <tr>\r\n                    <td>{{order.id}}</td>\r\n                    <td>{{order.customer}}</td>\r\n                    <td style=\"text-align: right;\">{{order.date}}</td>\r\n                    <td style=\"text-align: right;\">{{order.amount | currency:'USD'}}</td>\r\n                    <td><span [class]=\"'order-badge order-' + order.status.toLowerCase()\">{{order.status}}</span></td>\r\n                  </tr>\r\n                </ng-template>\r\n                <ng-template zyfraTableTemplate=\"emptymessage\">\r\n                  <tr>\r\n                    <td colspan=\"6\">There are no order for this product yet.</td>\r\n                  </tr>\r\n                </ng-template>\r\n              </zyfra-table>\r\n            </div>\r\n          </td>\r\n        </tr>\r\n      </ng-template>\r\n    </zyfra-table>\r\n  `,\r\n  props: {\r\n    ...args,\r\n    rowExpand: (event): void => actions.rowExpand({ data: event.data, ...event }),\r\n    rowCollapse: (event): void => actions.rowCollapse({ data: event.data, ...event }),\r\n  },\r\n})"
      },
      {
        "name": "Template",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "libs/components/src/lib/table/_story/stories/filter-sort-search.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story<ZyfraTableComponent>",
        "defaultValue": "args => ({\r\n  template: `\r\n    <div style=\"font-family: Inter, sans-serif;\">\r\n      <p style=\"font-size: 16px; font-weight: 600; margin: 0;\">Примечание:</p>\r\n      <p style=\"font-size: 14px;\">Фильтрация колонок и поиск по колонке совместно работают некорректно в режиме\r\n      локальной фильтрации из-за особенностей реализации таблиц в primeng. Однако фильтрация в режиме lazy load работает\r\n      корректно, события эмитят все необходимые данные для отправки на backend (см. вкладку \"actions\")</p>\r\n    </div>\r\n\r\n    <zyfra-table\r\n      #dt\r\n      [title]=\"title\"\r\n      [value]=\"value\"\r\n      [dataKey]=\"dataKey\"\r\n      [lazy]=\"true\"\r\n      [rows]=\"rows\"\r\n      [rowsPerPageOptions]=\"rowsPerPageOptions\"\r\n      [paginator]=\"paginator\"\r\n      [globalFilterFields]=\"globalFilterFields\"\r\n      (page)=\"page($event)\"\r\n      (onFilter)=\"onFilter($event)\"\r\n      (onSort)=\"onSort($event)\"\r\n    >\r\n      <ng-template zyfraTableTemplate=\"header\">\r\n        <tr>\r\n          <th zyfraSortableColumn=\"name\">\r\n            <div style=\"display: flex;justify-content: space-between;align-items: center;\">\r\n              Name\r\n              <div style=\"display: flex; align-items: center;\">\r\n                <zyfra-table-column-filter type=\"text\" field=\"name\" display=\"menu\"></zyfra-table-column-filter>\r\n                <zyfra-sort-icon field=\"name\"></zyfra-sort-icon>\r\n              </div>\r\n            </div>\r\n          </th>\r\n          <th zyfraSortableColumn=\"country.name\">\r\n            <div style=\"display: flex;justify-content: space-between;align-items: center;\">\r\n              Country\r\n              <div style=\"display: flex; align-items: center;\">\r\n                <zyfra-table-column-filter type=\"text\" field=\"country.name\" display=\"menu\"></zyfra-table-column-filter>\r\n                <zyfra-sort-icon field=\"country.name\"></zyfra-sort-icon>\r\n              </div>\r\n            </div>\r\n          </th>\r\n          <th zyfraSortableColumn=\"representative.name\">\r\n            <div style=\"display: flex;justify-content: space-between;align-items: center;\">\r\n              Agent\r\n              <div style=\"display: flex; align-items: center;\">\r\n                <zyfra-table-column-filter\r\n                  field=\"representative\"\r\n                  matchMode=\"in\"\r\n                  display=\"menu\"\r\n                  [showMatchModes]=\"false\"\r\n                  [showOperator]=\"false\"\r\n                  [showAddButton]=\"false\"\r\n                >\r\n                  <ng-template zyfraTableTemplate=\"header\">\r\n                    <div class=\"p-px-3 p-pt-3 p-pb-0\">\r\n                      <span class=\"p-text-bold\">Agent Picker</span>\r\n                    </div>\r\n                  </ng-template>\r\n\r\n                  <ng-template zyfraTableTemplate=\"filter\" let-value let-filter=\"filterCallback\">\r\n                     filter testing\r\n                  </ng-template>\r\n                </zyfra-table-column-filter>\r\n                <zyfra-sort-icon field=\"representative.name\"></zyfra-sort-icon>\r\n              </div>\r\n            </div>\r\n          </th>\r\n          <th zyfraSortableColumn=\"date\">\r\n            <div style=\"display: flex;justify-content: space-between;align-items: center;\">\r\n              Date\r\n              <div style=\"display: flex; align-items: center;\">\r\n                <zyfra-table-column-filter type=\"date\" field=\"date\" display=\"menu\"></zyfra-table-column-filter>\r\n                <zyfra-sort-icon field=\"date\"></zyfra-sort-icon>\r\n              </div>\r\n            </div>\r\n          </th>\r\n          <th zyfraSortableColumn=\"balance\">\r\n            <div style=\"display: flex;justify-content: space-between;align-items: center;\">\r\n              Balance\r\n              <div style=\"display: flex; align-items: center;\">\r\n                <zyfra-table-column-filter type=\"numeric\" field=\"balance\" display=\"menu\" currency=\"USD\"></zyfra-table-column-filter>\r\n                <zyfra-sort-icon field=\"balance\"></zyfra-sort-icon>\r\n              </div>\r\n            </div>\r\n          </th>\r\n          <th zyfraSortableColumn=\"status\">\r\n            <div style=\"display: flex;justify-content: space-between;align-items: center;\">\r\n              Status\r\n              <div style=\"display: flex; align-items: center;\">\r\n                <zyfra-table-column-filter field=\"status\" matchMode=\"equals\" display=\"menu\">\r\n                  <ng-template zyfraTableTemplate=\"filter\" let-value let-filter=\"filterCallback\"></ng-template>\r\n                </zyfra-table-column-filter>\r\n                <zyfra-sort-icon field=\"status\"></zyfra-sort-icon>\r\n              </div>\r\n            </div>\r\n          </th>\r\n          <th zyfraSortableColumn=\"activity\">\r\n            <div style=\"display: flex;justify-content: space-between;align-items: center;\">\r\n              Activity\r\n              <zyfra-sort-icon field=\"activity\"></zyfra-sort-icon>\r\n            </div>\r\n          </th>\r\n          <th zyfraSortableColumn=\"verified\" style=\"width: 8rem\">\r\n            <div style=\"display: flex;justify-content: space-between;align-items: center;\">\r\n              Verified\r\n              <div style=\"display: flex; align-items: center;\">\r\n                <zyfra-table-column-filter type=\"boolean\" field=\"verified\" display=\"menu\"></zyfra-table-column-filter>\r\n                <zyfra-sort-icon field=\"verified\"></zyfra-sort-icon>\r\n              </div>\r\n            </div>\r\n          </th>\r\n        </tr>\r\n        <tr>\r\n          <th zyfra-search-cell [isNativeFiltering]=\"false\" (valueChange)=\"valueChange($event)\" field=\"name\"></th>\r\n          <th zyfra-search-cell [isNativeFiltering]=\"false\" (valueChange)=\"valueChange($event)\" field=\"country.name\"></th>\r\n          <th zyfra-search-cell [isNativeFiltering]=\"false\" (valueChange)=\"valueChange($event)\" field=\"representative.name\"></th>\r\n          <th zyfra-search-cell [isNativeFiltering]=\"false\" (valueChange)=\"valueChange($event)\" field=\"date\"></th>\r\n          <th zyfra-search-cell [isNativeFiltering]=\"false\" (valueChange)=\"valueChange($event)\" field=\"balance\"></th>\r\n          <th zyfra-search-cell [isNativeFiltering]=\"false\" (valueChange)=\"valueChange($event)\" field=\"status\"></th>\r\n          <th zyfra-search-cell [isNativeFiltering]=\"false\" (valueChange)=\"valueChange($event)\" field=\"activity\"></th>\r\n          <th zyfra-search-cell [isNativeFiltering]=\"false\" (valueChange)=\"valueChange($event)\" field=\"verified\"></th>\r\n        </tr>\r\n      </ng-template>\r\n\r\n      <ng-template zyfraTableTemplate=\"body\" let-customer>\r\n        <tr [zyfraRow]=\"customer\">\r\n          <td>\r\n            {{customer.name}}\r\n          </td>\r\n          <td>\r\n            <span class=\"image-text\">{{customer.country.name}}</span>\r\n          </td>\r\n          <td>\r\n            <span class=\"image-text\">{{customer.representative.name}}</span>\r\n          </td>\r\n          <td style=\"text-align: right;\">\r\n            {{customer.date | date: 'dd.MM.yyyy'}}\r\n          </td>\r\n          <td style=\"text-align: right;\">\r\n            {{customer.balance | currency:'USD':'symbol'}}\r\n          </td>\r\n          <td>\r\n            <span [class]=\"'customer-badge status-' + customer.status\">{{customer.status}}</span>\r\n          </td>\r\n          <td style=\"text-align: right;\">\r\n            {{customer.activity}}\r\n          </td>\r\n          <td class=\"p-text-center\">\r\n            <i class=\"pi\" [ngClass]=\"{'true-icon pi-check-circle': customer.verified, 'false-icon pi-times-circle': !customer.verified}\"></i>\r\n          </td>\r\n        </tr>\r\n      </ng-template>\r\n\r\n      <ng-template zyfraTableTemplate=\"emptymessage\">\r\n        <tr>\r\n          <td colspan=\"7\">No customers found.</td>\r\n        </tr>\r\n      </ng-template>\r\n    </zyfra-table>\r\n  `,\r\n  props: {\r\n    ...args,\r\n    page: consoleLogAction('page'),\r\n    onFilter: consoleLogAction('onFilter'),\r\n    valueChange: action('valueChange'),\r\n    onSort: consoleLogAction('onSort'),\r\n  },\r\n})"
      },
      {
        "name": "Template",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "libs/components/src/lib/table/_story/stories/filter.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story<ZyfraTableComponent>",
        "defaultValue": "args => ({\r\n  template: `\r\n    <zyfra-table\r\n      #dt\r\n      [title]=\"title\"\r\n      [value]=\"value\"\r\n      [dataKey]=\"dataKey\"\r\n      [rows]=\"rows\"\r\n      [rowsPerPageOptions]=\"rowsPerPageOptions\"\r\n      [paginator]=\"paginator\"\r\n      [globalFilterFields]=\"globalFilterFields\"\r\n      (page)=\"page($event)\"\r\n      (onFilter)=\"onFilter($event)\"\r\n    >\r\n      <ng-template zyfraTableTemplate=\"header\">\r\n        <tr>\r\n          <th>\r\n            <div style=\"display: flex;justify-content: space-between;align-items: center;\">\r\n              Name\r\n              <zyfra-table-column-filter type=\"text\" field=\"name\" display=\"menu\"></zyfra-table-column-filter>\r\n            </div>\r\n          </th>\r\n          <th>\r\n            <div style=\"display: flex;justify-content: space-between;align-items: center;\">\r\n              Country\r\n              <zyfra-table-column-filter type=\"text\" field=\"country.name\" display=\"menu\"></zyfra-table-column-filter>\r\n            </div>\r\n          </th>\r\n          <th>\r\n            <div style=\"display: flex;justify-content: space-between;align-items: center;\">\r\n              Agent\r\n              <zyfra-table-column-filter\r\n                field=\"representative\"\r\n                matchMode=\"in\"\r\n                display=\"menu\"\r\n                [showMatchModes]=\"false\"\r\n                [showOperator]=\"false\"\r\n                [showAddButton]=\"false\"\r\n              >\r\n                <ng-template zyfraTableTemplate=\"header\">\r\n                  <div class=\"p-px-3 p-pt-3 p-pb-0\">\r\n                    <span class=\"p-text-bold\">Agent Picker</span>\r\n                  </div>\r\n                </ng-template>\r\n\r\n                <ng-template zyfraTableTemplate=\"filter\" let-value let-filter=\"filterCallback\">\r\n                   filter testing\r\n                </ng-template>\r\n              </zyfra-table-column-filter>\r\n            </div>\r\n          </th>\r\n          <th>\r\n            <div style=\"display: flex;justify-content: space-between;align-items: center;\">\r\n              Date\r\n              <zyfra-table-column-filter type=\"date\" field=\"date\" display=\"menu\"></zyfra-table-column-filter>\r\n            </div>\r\n          </th>\r\n          <th>\r\n            <div style=\"display: flex;justify-content: space-between;align-items: center;\">\r\n              Balance\r\n              <zyfra-table-column-filter type=\"numeric\" field=\"balance\" display=\"menu\" currency=\"USD\"></zyfra-table-column-filter>\r\n            </div>\r\n          </th>\r\n          <th>\r\n            <div style=\"display: flex;justify-content: space-between;align-items: center;\">\r\n              Status\r\n              <zyfra-table-column-filter field=\"status\" matchMode=\"equals\" display=\"menu\">\r\n                <ng-template zyfraTableTemplate=\"filter\" let-value let-filter=\"filterCallback\"></ng-template>\r\n              </zyfra-table-column-filter>\r\n            </div>\r\n          </th>\r\n          <th>\r\n            <div style=\"display: flex;justify-content: space-between;align-items: center;\">\r\n              Activity\r\n            </div>\r\n          </th>\r\n          <th style=\"width: 8rem\">\r\n            <div style=\"display: flex;justify-content: space-between;align-items: center;\">\r\n              Verified\r\n              <zyfra-table-column-filter type=\"boolean\" field=\"verified\" display=\"menu\"></zyfra-table-column-filter>\r\n            </div>\r\n          </th>\r\n        </tr>\r\n      </ng-template>\r\n\r\n      <ng-template zyfraTableTemplate=\"body\" let-customer>\r\n        <tr [zyfraRow]=\"customer\">\r\n          <td>\r\n            {{customer.name}}\r\n          </td>\r\n          <td>\r\n            <span class=\"image-text\">{{customer.country.name}}</span>\r\n          </td>\r\n          <td>\r\n            <span class=\"image-text\">{{customer.representative.name}}</span>\r\n          </td>\r\n          <td style=\"text-align: right;\">\r\n            {{customer.date | date: 'dd.MM.yyyy'}}\r\n          </td>\r\n          <td style=\"text-align: right;\">\r\n            {{customer.balance | currency:'USD':'symbol'}}\r\n          </td>\r\n          <td>\r\n            <span [class]=\"'customer-badge status-' + customer.status\">{{customer.status}}</span>\r\n          </td>\r\n          <td style=\"text-align: right;\">\r\n            {{customer.activity}}\r\n          </td>\r\n          <td class=\"p-text-center\">\r\n            <i class=\"pi\" [ngClass]=\"{'true-icon pi-check-circle': customer.verified, 'false-icon pi-times-circle': !customer.verified}\"></i>\r\n          </td>\r\n        </tr>\r\n      </ng-template>\r\n\r\n      <ng-template zyfraTableTemplate=\"emptymessage\">\r\n        <tr>\r\n          <td colspan=\"7\">No customers found.</td>\r\n        </tr>\r\n      </ng-template>\r\n    </zyfra-table>\r\n  `,\r\n  props: {\r\n    ...args,\r\n    page: consoleLogAction('page'),\r\n    onFilter: consoleLogAction('onFilter'),\r\n  },\r\n})"
      },
      {
        "name": "Template",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "libs/components/src/lib/table/_story/stories/reorder.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story<ZyfraTableComponent>",
        "defaultValue": "args => ({\r\n  template: `\r\n    <zyfra-table\r\n      [title]=\"title\"\r\n      [value]=\"value\"\r\n      [columns]=\"columns\"\r\n      [reorderableColumns]=\"reorderableColumns\"\r\n      (colReorder)=\"colReorder($event)\"\r\n      (rowReorder)=\"rowReorder($event)\"\r\n    >\r\n      <ng-template zyfraTableTemplate=\"header\" let-columns>\r\n        <tr>\r\n          <th style=\"width: 32px\"></th>\r\n          <th *ngFor=\"let col of columns\" zyfraReordableColumn>{{ col.header }}</th>\r\n        </tr>\r\n      </ng-template>\r\n      <ng-template zyfraTableTemplate=\"body\" let-rowData let-columns=\"columns\" let-index=\"rowIndex\">\r\n        <tr [zyfraRow]=\"rowData\" [zyfraReordableRow]=\"index\">\r\n          <td>\r\n            <span class=\"pi pi-bars\" [zyfraReordableRowHandler]=\"index\"></span>\r\n          </td>\r\n          <td *ngFor=\"let col of columns\" [style]=\"col.field === 'quantity' ? { 'text-align': 'right' } : null\">{{ rowData[col.field] }}</td>\r\n        </tr>\r\n      </ng-template>\r\n    </zyfra-table>\r\n\r\n  `,\r\n  props: {\r\n    ...args,\r\n    colReorder: action('colReorder'),\r\n    rowReorder: action('rowReorder'),\r\n  },\r\n})"
      },
      {
        "name": "Template",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "libs/components/src/lib/table/_story/stories/frozen-rows.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story<ZyfraTableComponent>",
        "defaultValue": "args => ({\r\n  template: `\r\n    <zyfra-table\r\n      [title]=\"title\"\r\n      [value]=\"value\"\r\n      [frozenValue]=\"frozenValue\"\r\n      [scrollable]=\"scrollable\"\r\n      [scrollHeight]=\"scrollHeight\"\r\n    >\r\n      <ng-template zyfraTableTemplate=\"header\">\r\n        <tr>\r\n          <th>Name</th>\r\n          <th>Country</th>\r\n          <th>Company</th>\r\n          <th>Representative</th>\r\n          <th style=\"flex: 0 0 45px\"></th>\r\n        </tr>\r\n      </ng-template>\r\n      <ng-template zyfraTableTemplate=\"frozenbody\" let-customer let-index=\"rowIndex\">\r\n        <tr [zyfraRow]=\"customer\" style=\"font-weight: 600;\">\r\n          <td>{{customer.name}}</td>\r\n          <td>{{customer.country.name}}</td>\r\n          <td>{{customer.company}}</td>\r\n          <td>{{customer.representative.name}}</td>\r\n          <td style=\"flex: 0 0 45px\">\r\n            <button type=\"button\" (click)=\"toggleLock(customer, true, index)\" style=\"background: transparent; border: none; color: #49AB4D;\">\r\n              <i class=\"pi pi-lock-open\"></i>\r\n            </button>\r\n          </td>\r\n        </tr>\r\n      </ng-template>\r\n      <ng-template zyfraTableTemplate=\"body\" let-customer let-index=\"rowIndex\">\r\n        <tr [zyfraRow]=\"customer\">\r\n          <td>{{customer.name}}</td>\r\n          <td>{{customer.country.name}}</td>\r\n          <td>{{customer.company}}</td>\r\n          <td>{{customer.representative.name}}</td>\r\n          <td style=\"flex: 0 0 45px\">\r\n            <button type=\"button\" (click)=\"toggleLock(customer, false, index)\" style=\"background: transparent; border: none; color: #7887A5;\">\r\n              <i class=\"pi pi-lock\"></i>\r\n            </button>\r\n          </td>\r\n        </tr>\r\n      </ng-template>\r\n    </zyfra-table>\r\n  `,\r\n  props: {\r\n    ...args,\r\n    toggleLock(data, frozen, index): void {\r\n      if (frozen) {\r\n        this.frozenValue = this.frozenValue.filter((c, i) => i !== index);\r\n        this.value.push(data);\r\n      } else {\r\n        this.value = this.value.filter((c, i) => i !== index);\r\n        this.frozenValue.push(data);\r\n      }\r\n\r\n      this.value.sort((val1, val2) => {\r\n        return val1.id < val2.id ? -1 : 1;\r\n      });\r\n    },\r\n  },\r\n})"
      },
      {
        "name": "Template",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "libs/components/src/lib/table/_story/stories/scroll-horizontal-and-vertical.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story<ZyfraTableComponent>",
        "defaultValue": "args => ({\r\n  template: `\r\n    <zyfra-table\r\n      [title]=\"title\"\r\n      [value]=\"value\"\r\n      [scrollable]=\"scrollable\"\r\n      [scrollHeight]=\"scrollHeight\"\r\n      [scrollDirection]=\"scrollDirection\"\r\n    >\r\n      <ng-template zyfraTableTemplate=\"header\">\r\n        <tr>\r\n          <th style=\"width:200px\" zyfraFrozenColumn>Name</th>\r\n          <th style=\"width:100px\">Id</th>\r\n          <th style=\"width:200px\">Country</th>\r\n          <th style=\"width:200px\">Date</th>\r\n          <th style=\"width:200px\">Balance</th>\r\n          <th style=\"width:200px\">Company</th>\r\n          <th style=\"width:200px\">Status</th>\r\n          <th style=\"width:200px\">Activity</th>\r\n          <th style=\"width:200px\">Representative</th>\r\n        </tr>\r\n      </ng-template>\r\n      <ng-template zyfraTableTemplate=\"body\" let-customer>\r\n        <tr [zyfraRow]=\"customer\">\r\n          <td style=\"width:200px\" zyfraFrozenColumn>{{customer.name}}</td>\r\n          <td style=\"width:100px\">{{customer.id}}</td>\r\n          <td style=\"width:200px\">{{customer.country.name}}</td>\r\n          <td style=\"width:200px; display: flex; justify-content: end;\">{{customer.date | date: 'dd.MM.yyyy'}}</td>\r\n          <td style=\"width:200px; display: flex; justify-content: end;\">{{formatCurrency(customer.balance)}}</td>\r\n          <td style=\"width:200px\">{{customer.company}}</td>\r\n          <td style=\"width:200px\">{{customer.status}}</td>\r\n          <td style=\"width:200px; display: flex; justify-content: end;\">{{customer.activity}}</td>\r\n          <td style=\"width:200px\">{{customer.representative.name}}</td>\r\n        </tr>\r\n      </ng-template>\r\n    </zyfra-table>\r\n  `,\r\n  props: {\r\n    ...args,\r\n    formatCurrency(value): string {\r\n      return value.toLocaleString('en-US', { style: 'currency', currency: 'USD' });\r\n    },\r\n  },\r\n})"
      },
      {
        "name": "Template",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "libs/components/src/lib/table/_story/stories/row-group.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story<ZyfraTableComponent>",
        "defaultValue": "args => ({\r\n  template: `\r\n    <zyfra-table\r\n      [title]=\"title\"\r\n      [value]=\"value\"\r\n      [sortField]=\"sortField\"\r\n      [sortMode]=\"sortMode\"\r\n      [scrollable]=\"scrollable\"\r\n      [scrollHeight]=\"scrollHeight\"\r\n      [rowGroupMode]=\"rowGroupMode\"\r\n      [groupRowsBy]=\"groupRowsBy\"\r\n      [responsiveLayout]=\"responsiveLayout\"\r\n    >\r\n      <ng-template zyfraTableTemplate=\"header\">\r\n        <tr>\r\n          <th style=\"min-width:200px\">Name</th>\r\n          <th style=\"min-width:200px\">Country</th>\r\n          <th style=\"min-width:200px\">Company</th>\r\n          <th style=\"min-width:200px\">Status</th>\r\n          <th style=\"min-width:200px\">Date</th>\r\n        </tr>\r\n      </ng-template>\r\n      <ng-template zyfraTableTemplate=\"groupheader\" let-customer>\r\n        <tr zyfraRowGroupHeader>\r\n          <td colspan=\"5\">\r\n            <span style=\"font-weight: 600;\">{{customer.representative.name}}</span>\r\n          </td>\r\n        </tr>\r\n      </ng-template>\r\n      <ng-template zyfraTableTemplate=\"groupfooter\" let-customer>\r\n        <tr class=\"p-rowgroup-footer\">\r\n          <td style=\"min-width: 80%\">\r\n            <div style=\"width: 100%\">Total Customers</div>\r\n          </td>\r\n          <td style=\"width: 20%; display: flex; justify-content: end;\">\r\n            {{calculateCustomerTotal(value, customer.representative.name)}}\r\n          </td>\r\n        </tr>\r\n      </ng-template>\r\n      <ng-template zyfraTableTemplate=\"body\" let-customer>\r\n        <tr [zyfraRow]=\"customer\">\r\n          <td style=\"min-width:200px\">\r\n            {{customer.name}}\r\n          </td>\r\n          <td style=\"min-width:200px\">\r\n            <span class=\"image-text\">{{customer.country.name}}</span>\r\n          </td>\r\n          <td style=\"min-width:200px\">\r\n            {{customer.company}}\r\n          </td>\r\n          <td style=\"min-width:200px\">\r\n            <span [class]=\"'customer-badge status-' + customer.status\">{{customer.status}}</span>\r\n          </td>\r\n          <td style=\"min-width:200px; display: flex; justify-content: end;\">\r\n            {{customer.date | date: 'dd.MM.yyyy'}}\r\n          </td>\r\n        </tr>\r\n      </ng-template>\r\n    </zyfra-table>\r\n  `,\r\n  props: {\r\n    ...args,\r\n    calculateCustomerTotal(customers, name): number {\r\n      let total = 0;\r\n\r\n      if (customers) {\r\n        for (const customer of customers) {\r\n          if (customer.representative.name === name) {\r\n            total++;\r\n          }\r\n        }\r\n      }\r\n\r\n      return total;\r\n    },\r\n  },\r\n})"
      },
      {
        "name": "Template",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "libs/components/src/lib/table/_story/stories/resize.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story<ZyfraTableComponent>",
        "defaultValue": "args => ({\r\n  template: `\r\n    <zyfra-table\r\n      [title]=\"title\"\r\n      [value]=\"value\"\r\n      [resizableColumns]=\"resizableColumns\"\r\n      (colResize)=\"colResize($event)\"\r\n    >\r\n      <ng-template zyfraTableTemplate=\"header\">\r\n        <tr>\r\n          <th zyfraResizableColumn>Code</th>\r\n          <th zyfraResizableColumn>Name</th>\r\n          <th zyfraResizableColumn>Category</th>\r\n          <th zyfraResizableColumn>Quantity</th>\r\n        </tr>\r\n      </ng-template>\r\n      <ng-template zyfraTableTemplate=\"body\" let-product>\r\n        <tr [zyfraRow]=\"product\">\r\n          <td>{{ product.code }}</td>\r\n          <td>{{ product.name }}</td>\r\n          <td>{{ product.category }}</td>\r\n          <td style=\"text-align: right;\">{{ product.quantity }}</td>\r\n        </tr>\r\n      </ng-template>\r\n    </zyfra-table>\r\n  `,\r\n  props: {\r\n    ...args,\r\n    colResize: consoleLogAction('colResize'),\r\n  },\r\n})"
      },
      {
        "name": "Template",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "libs/components/src/lib/table/_story/stories/scroll-vertical.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story<ZyfraTableComponent>",
        "defaultValue": "args => ({\r\n  template: `\r\n    <zyfra-table [value]=\"value\" [scrollable]=\"scrollable\" [scrollHeight]=\"scrollHeight\" [title]=\"title\">\r\n      <ng-template zyfraTableTemplate=\"header\">\r\n        <tr>\r\n          <th style=\"min-width:200px\">Name</th>\r\n          <th style=\"min-width:200px\">Country</th>\r\n          <th style=\"min-width:200px\">Company</th>\r\n          <th style=\"min-width:200px\">Representative</th>\r\n        </tr>\r\n      </ng-template>\r\n      <ng-template zyfraTableTemplate=\"body\" let-customer>\r\n        <tr [zyfraRow]=\"customer\">\r\n          <td style=\"min-width:200px\">{{ customer.name }}</td>\r\n          <td style=\"min-width:200px\">{{ customer.country.name }}</td>\r\n          <td style=\"min-width:200px\">{{ customer.company }}</td>\r\n          <td style=\"min-width:200px\">{{ customer.representative.name }}</td>\r\n        </tr>\r\n      </ng-template>\r\n    </zyfra-table>\r\n  `,\r\n  props: args,\r\n})"
      },
      {
        "name": "Template",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "libs/components/src/lib/table/_story/stories/scroll-virtual.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story<ZyfraTableComponent>",
        "defaultValue": "args => ({\r\n  template: `\r\n    <zyfra-table\r\n      [title]=\"title\"\r\n      [columns]=\"columns\"\r\n      [value]=\"value\"\r\n      [scrollable]=\"scrollable\"\r\n      [rows]=\"rows\"\r\n      [scrollHeight]=\"scrollHeight\"\r\n      [virtualScroll]=\"virtualScroll\"\r\n      [virtualRowHeight]=\"virtualRowHeight\"\r\n    >\r\n      <ng-template zyfraTableTemplate=\"header\" let-columns>\r\n        <tr>\r\n          <th *ngFor=\"let col of columns\" [zyfraSortableColumn]=\"col.field\">\r\n            {{col.header}} <zyfra-sort-icon [field]=\"col.field\"></zyfra-sort-icon>\r\n          </th>\r\n        </tr>\r\n      </ng-template>\r\n      <ng-template zyfraTableTemplate=\"body\" let-rowData let-rowIndex=\"rowIndex\" let-columns=\"columns\">\r\n        <tr [zyfraRow]=\"rowIndex\">\r\n          <td *ngFor=\"let col of columns\" [style]=\"col.field === 'year' ? { 'display': 'flex', 'justify-content': 'end' } : null\">\r\n            {{rowData[col.field]}}\r\n          </td>\r\n        </tr>\r\n      </ng-template>\r\n    </zyfra-table>\r\n  `,\r\n  props: args,\r\n})"
      },
      {
        "name": "Template",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "libs/components/src/lib/table/_story/stories/state.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story<ZyfraTableComponent>",
        "defaultValue": "args => ({\r\n  template: `\r\n    <zyfra-table\r\n      #table\r\n      [title]=\"title\"\r\n      [value]=\"value\"\r\n      [selectionMode]=\"selectionMode\"\r\n      [(selection)]=\"selection\"\r\n      [dataKey]=\"dataKey\"\r\n      [responsiveLayout]=\"responsiveLayout\"\r\n      [rows]=\"rows\"\r\n      [paginator]=\"paginator\"\r\n      [stateStorage]=\"stateStorage\"\r\n      [stateKey]=\"stateKey\"\r\n      (stateSave)=\"stateSave($event)\"\r\n      (stateRestore)=\"stateRestore($event)\"\r\n      (selectionChange)=\"selectionChange()\"\r\n    >\r\n      <ng-template zyfraTableTemplate=\"header\">\r\n        <tr>\r\n          <th zyfraSortableColumn=\"name\">Name <zyfra-sort-icon field=\"name\"></zyfra-sort-icon></th>\r\n          <th zyfraSortableColumn=\"country.name\">Country <zyfra-sort-icon field=\"country.name\"></zyfra-sort-icon></th>\r\n          <th zyfraSortableColumn=\"representative.name\">Representative <zyfra-sort-icon field=\"representative.name\"></zyfra-sort-icon></th>\r\n          <th zyfraSortableColumn=\"status\">Status <zyfra-sort-icon field=\"status\"></zyfra-sort-icon></th>\r\n        </tr>\r\n        <tr>\r\n          <th zyfra-search-cell field=\"name\"></th>\r\n          <th zyfra-search-cell field=\"country.name\"></th>\r\n          <th zyfra-search-cell field=\"representative.name\"></th>\r\n          <th zyfra-search-cell field=\"status\"></th>\r\n        </tr>\r\n      </ng-template>\r\n      <ng-template zyfraTableTemplate=\"body\" let-customer>\r\n        <tr [zyfraRow]=\"customer\" [zyfraSelectableRow]=\"customer\">\r\n          <td>\r\n            {{customer.name}}\r\n          </td>\r\n          <td>\r\n            <span>{{customer.country.name}}</span>\r\n          </td>\r\n          <td>\r\n            <span>{{customer.representative.name}}</span>\r\n          </td>\r\n          <td>\r\n            <span [class]=\"'customer-badge status-' + customer.status\">{{customer.status}}</span>\r\n          </td>\r\n        </tr>\r\n      </ng-template>\r\n      <ng-template zyfraTableTemplate=\"emptymessage\">\r\n        <tr>\r\n          <td colspan=\"4\">No customers found.</td>\r\n        </tr>\r\n      </ng-template>\r\n    </zyfra-table>\r\n  `,\r\n  props: {\r\n    ...args,\r\n    selectionChange: consoleLogAction('selectionChange'),\r\n    stateSave: action('stateSave'),\r\n    stateRestore: action('stateRestore'),\r\n  },\r\n})"
      },
      {
        "name": "Template",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "libs/components/src/lib/table/_story/stories/sort.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story<ZyfraTableComponent>",
        "defaultValue": "args => ({\r\n  template: `\r\n    <zyfra-button label=\"Reset sort\" (onClick)=\"table.resetSort()\"></zyfra-button>\r\n\r\n    <br><br>\r\n\r\n    <zyfra-table\r\n      #table\r\n      [title]=\"title\"\r\n      [value]=\"value\"\r\n      (onSort)=\"onSort($event)\"\r\n    >\r\n      <ng-template zyfraTableTemplate=\"header\">\r\n        <tr>\r\n          <th zyfraSortableColumn=\"code\">Code <zyfra-sort-icon field=\"code\"></zyfra-sort-icon></th>\r\n          <th zyfraSortableColumn=\"name\">Name <zyfra-sort-icon field=\"name\"></zyfra-sort-icon></th>\r\n          <th zyfraSortableColumn=\"category\">Category <zyfra-sort-icon field=\"category\"></zyfra-sort-icon></th>\r\n          <th zyfraSortableColumn=\"quantity\">Quantity <zyfra-sort-icon field=\"quantity\"></zyfra-sort-icon></th>\r\n          <th zyfraSortableColumn=\"price\">Price <zyfra-sort-icon field=\"price\"></zyfra-sort-icon></th>\r\n        </tr>\r\n      </ng-template>\r\n\r\n      <ng-template zyfraTableTemplate=\"body\" let-product>\r\n        <tr [zyfraRow]=\"product\">\r\n          <td>{{product.code}}</td>\r\n          <td>{{product.name}}</td>\r\n          <td>{{product.category}}</td>\r\n          <td style=\"text-align: right;\">{{product.quantity}}</td>\r\n          <td style=\"text-align: right;\">{{product.price | currency: 'USD'}}</td>\r\n        </tr>\r\n      </ng-template>\r\n    </zyfra-table>\r\n  `,\r\n  props: {\r\n    value: [...getProducts()],\r\n    title: 'Сортировка по одному столбцу',\r\n    onSort: consoleLogAction('onSort'),\r\n  },\r\n})"
      },
      {
        "name": "Template",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "libs/components/src/lib/table/_story/stories/sort-multiple.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story<ZyfraTableComponent>",
        "defaultValue": "args => ({\r\n  template: `\r\n    <zyfra-table\r\n      [title]=\"title\"\r\n      [value]=\"value\"\r\n      [sortMode]=\"'multiple'\"\r\n      (onSort)=\"onSort($event)\"\r\n    >\r\n      <ng-template zyfraTableTemplate=\"header\">\r\n        <tr>\r\n          <th zyfraSortableColumn=\"code\">Code <zyfra-sort-icon field=\"code\"></zyfra-sort-icon></th>\r\n          <th zyfraSortableColumn=\"name\">Name <zyfra-sort-icon field=\"name\"></zyfra-sort-icon></th>\r\n          <th zyfraSortableColumn=\"category\">Category <zyfra-sort-icon field=\"category\"></zyfra-sort-icon></th>\r\n          <th zyfraSortableColumn=\"quantity\">Quantity <zyfra-sort-icon field=\"quantity\"></zyfra-sort-icon></th>\r\n          <th zyfraSortableColumn=\"price\">Price <zyfra-sort-icon field=\"price\"></zyfra-sort-icon></th>\r\n        </tr>\r\n      </ng-template>\r\n\r\n      <ng-template zyfraTableTemplate=\"body\" let-product>\r\n        <tr [zyfraRow]=\"product\">\r\n          <td>{{product.code}}</td>\r\n          <td>{{product.name}}</td>\r\n          <td>{{product.category}}</td>\r\n          <td style=\"text-align: right;\">{{product.quantity}}</td>\r\n          <td style=\"text-align: right;\">{{product.price | currency: 'USD'}}</td>\r\n        </tr>\r\n      </ng-template>\r\n    </zyfra-table>\r\n  `,\r\n  props: {\r\n    title: 'Сортировка по нескольким столбцам (с зажатым ctrl)',\r\n    value: getProducts(),\r\n    onSort: consoleLogAction('onSort'),\r\n  },\r\n})"
      },
      {
        "name": "Template",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "libs/components/src/lib/table/_story/stories/status.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story<ZyfraTableComponent>",
        "defaultValue": "args => ({\r\n  template: `\r\n    <zyfra-table\r\n      [title]=\"title\"\r\n      [value]=\"value\"\r\n      (activeElementChange)=\"activeElementChange($event)\"\r\n    >\r\n      <ng-template zyfraTableTemplate=\"header\">\r\n        <tr>\r\n          <th>Status</th>\r\n        </tr>\r\n      </ng-template>\r\n      <ng-template zyfraTableTemplate=\"body\" let-item let-rowIndex=\"rowIndex\">\r\n        <tr [zyfraRow]=\"rowIndex\" [zyfraRowStatus]=\"item\">\r\n          <td>{{ item }}</td>\r\n        </tr>\r\n      </ng-template>\r\n    </zyfra-table>\r\n  `,\r\n  props: {\r\n    ...args,\r\n    activeElementChange: action('activeElementChange'),\r\n  },\r\n})"
      },
      {
        "name": "Template",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "libs/components/src/lib/table/_story/stories/text-overflow.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story<ZyfraTableComponent>",
        "defaultValue": "args => ({\r\n  template: `\r\n    <zyfra-table\r\n      class=\"text-overflow\"\r\n      [title]=\"title\"\r\n      [value]=\"value\"\r\n      [responsiveLayout]=\"responsiveLayout\"\r\n      [stripedMode]=\"stripedMode\"\r\n      (activeElementChange)=\"activeElementChange($event)\"\r\n    >\r\n      <ng-template zyfraTableTemplate=\"header\">\r\n        <tr>\r\n          <th>Code</th>\r\n          <th>Name</th>\r\n          <th>Category</th>\r\n          <th>Quantity</th>\r\n        </tr>\r\n      </ng-template>\r\n      <ng-template zyfraTableTemplate=\"body\" let-product let-rowIndex=\"rowIndex\">\r\n        <tr [zyfraRow]=\"product\">\r\n          <td>{{product.code}}</td>\r\n          <td>{{product.name}}</td>\r\n          <td>{{product.category}}</td>\r\n          <td style=\"text-align: right;\">{{product.quantity}}</td>\r\n        </tr>\r\n      </ng-template>\r\n    </zyfra-table>\r\n  `,\r\n  props: {\r\n    ...args,\r\n    activeElementChange: action('activeElementChange'),\r\n  },\r\n})"
      },
      {
        "name": "Template",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "libs/components/src/lib/tree-table/_story/stories/basic.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story<ZyfraTreeTableComponent>",
        "defaultValue": "args => ({\r\n  template: `\r\n    <zyfra-tree-table\r\n      [value]=\"value\"\r\n      [columns]=\"columns\"\r\n      [title]=\"title\"\r\n      [stripedMode]=\"stripedMode\"\r\n      (onNodeExpand)=\"onNodeExpand($event)\"\r\n      (onNodeCollapse)=\"onNodeCollapse($event)\"\r\n      (activeElementChange)=\"activeElementChange($event)\"\r\n    >\r\n      <ng-template zyfraTableTemplate=\"header\" let-columns>\r\n        <tr>\r\n          <th *ngFor=\"let col of columns\">{{ col.header }}</th>\r\n        </tr>\r\n      </ng-template>\r\n\r\n      <ng-template zyfraTableTemplate=\"body\" let-rowNode let-rowData=\"rowData\" let-columns=\"columns\">\r\n        <tr [zyfraRow]=\"rowData\" [zyfraTTRow]=\"rowNode\">\r\n          <td *ngFor=\"let col of columns; let i = index\">\r\n            <zyfra-tree-table-toggler [rowNode]=\"rowNode\" *ngIf=\"i === 0\"></zyfra-tree-table-toggler>\r\n            <ng-container *ngIf=\"i === 0\">\r\n              <span\r\n                class=\"zyfra-icon files-folder\"\r\n                *ngIf=\"rowNode.node.children && rowNode.node.children.length > 0; else docIcon\"\r\n                style=\"margin-right: 10px;\"\r\n              ></span>\r\n            </ng-container>\r\n            <span>{{ rowData[col.field ]}}</span>\r\n          </td>\r\n        </tr>\r\n      </ng-template>\r\n    </zyfra-tree-table>\r\n\r\n    <ng-template #docIcon>\r\n      <span class=\"zyfra-icon files-description-properties\" style=\"margin-right: 10px; font-size: 20px;\"></span>\r\n    </ng-template>\r\n  `,\r\n  props: {\r\n    ...args,\r\n    onNodeExpand: (event): void => actions.onNodeExpand({ node: event.node, ...event }),\r\n    onNodeCollapse: (event): void => actions.onNodeCollapse({ node: event.node, ...event }),\r\n    activeElementChange: actions.elementChange,\r\n  },\r\n})"
      },
      {
        "name": "Template",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "libs/components/src/lib/tree-table/_story/stories/col-group.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story<ZyfraTreeTableComponent>",
        "defaultValue": "args => ({\r\n  template: `\r\n    <zyfra-tree-table\r\n      [title]=\"title\"\r\n      [stripedMode]=\"stripedMode\"\r\n      [value]=\"value\"\r\n      [columns]=\"columns\"\r\n      [paginator]=\"paginator\"\r\n      [rows]=\"7\"\r\n      (onNodeExpand)=\"onNodeExpand($event)\"\r\n      (onNodeCollapse)=\"onNodeCollapse($event)\"\r\n    >\r\n      <ng-template zyfraTableTemplate=\"header\">\r\n        <tr>\r\n          <th rowspan=\"3\">Brand</th>\r\n          <th colspan=\"4\">Sale Rate</th>\r\n        </tr>\r\n        <tr>\r\n          <th colspan=\"2\">Sales</th>\r\n          <th colspan=\"2\">Profits</th>\r\n        </tr>\r\n        <tr>\r\n          <th>Last Year</th>\r\n          <th>This Year</th>\r\n          <th>Last Year</th>\r\n          <th>This Year</th>\r\n        </tr>\r\n      </ng-template>\r\n      <ng-template zyfraTableTemplate=\"body\" let-rowNode let-rowData=\"rowData\">\r\n        <tr [zyfraRow]=\"rowData\" [zyfraTTRow]=\"rowNode\">\r\n          <td>\r\n            <zyfra-tree-table-toggler [rowNode]=\"rowNode\"></zyfra-tree-table-toggler>\r\n            {{rowData.brand}}\r\n          </td>\r\n          <td style=\"text-align: right;\">{{rowData.lastYearSale}}</td>\r\n          <td style=\"text-align: right;\">{{rowData.thisYearSale}}</td>\r\n          <td style=\"text-align: right;\">{{rowData.lastYearProfit}}</td>\r\n          <td style=\"text-align: right;\">{{rowData.thisYearProfit}}</td>\r\n        </tr>\r\n      </ng-template>\r\n      <ng-template zyfraTableTemplate=\"footer\">\r\n        <tr>\r\n          <td colspan=\"3\">Totals</td>\r\n          <td style=\"text-align: right;\">$3,283,772</td>\r\n          <td style=\"text-align: right;\">$2,126,925</td>\r\n        </tr>\r\n      </ng-template>\r\n    </zyfra-tree-table>\r\n  `,\r\n  props: {\r\n    ...args,\r\n    onNodeExpand: (event): void => actions.onNodeExpand({ node: event.node, ...event }),\r\n    onNodeCollapse: (event): void => actions.onNodeCollapse({ node: event.node, ...event }),\r\n  },\r\n})"
      },
      {
        "name": "Template",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "libs/components/src/lib/tree-table/_story/stories/edit.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story<ZyfraTreeTableComponent>",
        "defaultValue": "args => ({\r\n  template: `\r\n    <zyfra-tree-table\r\n      [value]=\"value\"\r\n      [columns]=\"columns\"\r\n      [title]=\"title\"\r\n      (editInit)=\"editInit($event)\"\r\n      (editComplete)=\"onEditComplete($event)\"\r\n      (editCancel)=\"onEditCancel($event)\"\r\n      (onNodeExpand)=\"onNodeExpand($event)\"\r\n      (onNodeCollapse)=\"onNodeCollapse($event)\"\r\n    >\r\n      <ng-template zyfraTableTemplate=\"header\" let-columns>\r\n        <tr>\r\n          <th *ngFor=\"let col of columns\">{{ col.header }}</th>\r\n        </tr>\r\n      </ng-template>\r\n\r\n      <ng-template zyfraTableTemplate=\"body\" let-rowNode let-rowData=\"rowData\" let-columns=\"columns\">\r\n        <tr [zyfraRow]=\"rowData\" [zyfraTTRow]=\"rowNode\">\r\n          <td\r\n            *ngFor=\"let col of columns; let i = index\"\r\n            zyfraTTEditableColumn\r\n          >\r\n            <zyfra-tree-table-toggler [rowNode]=\"rowNode\" *ngIf=\"i === 0\"></zyfra-tree-table-toggler>\r\n\r\n            <zyfra-tree-table-cell-editor [(value)]=\"rowData[col.field]\">\r\n              {{ rowData[col.field] }}\r\n            </zyfra-tree-table-cell-editor>\r\n          </td>\r\n        </tr>\r\n      </ng-template>\r\n    </zyfra-tree-table>\r\n  `,\r\n  props: {\r\n    ...args,\r\n    editInit: consoleLogAction('editInit'),\r\n    editComplete: consoleLogAction('editComplete'),\r\n    editCancel: consoleLogAction('editCancel'),\r\n    onNodeExpand: (event): void => actions.onNodeExpand({ node: event.node, ...event }),\r\n    onNodeCollapse: (event): void => actions.onNodeCollapse({ node: event.node, ...event }),\r\n  },\r\n})"
      },
      {
        "name": "Template",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "libs/components/src/lib/tree-table/_story/stories/filter.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story<ZyfraTreeTableComponent>",
        "defaultValue": "args => ({\r\n  template: `\r\n    <zyfra-tree-table\r\n      #tt\r\n      [title]=\"title\"\r\n      [value]=\"value\"\r\n      [columns]=\"columns\"\r\n      (onFilter)=\"onFilter($event)\"\r\n      (onNodeExpand)=\"onNodeExpand($event)\"\r\n      (onNodeCollapse)=\"onNodeCollapse($event)\"\r\n    >\r\n      <ng-template zyfraTableTemplate=\"header\" let-columns>\r\n        <tr>\r\n          <th *ngFor=\"let col of columns\">\r\n            {{col.header}}\r\n          </th>\r\n        </tr>\r\n        <tr>\r\n          <th *ngFor=\"let col of columns\" zyfra-search-cell [field]=\"col.field\"></th>\r\n        </tr>\r\n      </ng-template>\r\n      <ng-template zyfraTableTemplate=\"body\" let-rowNode let-rowData=\"rowData\">\r\n        <tr [zyfraRow]=\"rowData\" [zyfraTTRow]=\"rowNode\">\r\n          <td *ngFor=\"let col of columns; let i = index\">\r\n            <zyfra-tree-table-toggler [rowNode]=\"rowNode\" *ngIf=\"i == 0\"></zyfra-tree-table-toggler>\r\n            {{rowData[col.field]}}\r\n          </td>\r\n        </tr>\r\n      </ng-template>\r\n      <ng-template zyfraTableTemplate=\"emptymessage\">\r\n        <tr>\r\n          <td [attr.colspan]=\"cols.length\">No data found.</td>\r\n        </tr>\r\n      </ng-template>\r\n    </zyfra-tree-table>\r\n  `,\r\n  props: {\r\n    ...args,\r\n    onFilter: consoleLogAction('onFilter'),\r\n    onNodeExpand: (event): void => actions.onNodeExpand({ node: event.node, ...event }),\r\n    onNodeCollapse: (event): void => actions.onNodeCollapse({ node: event.node, ...event }),\r\n  },\r\n})"
      },
      {
        "name": "Template",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "libs/components/src/lib/tree-table/_story/stories/scroll.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story<ZyfraTreeTableComponent>",
        "defaultValue": "args => ({\r\n  template: `\r\n    <zyfra-tree-table\r\n      [title]=\"title\"\r\n      [value]=\"value\"\r\n      [columns]=\"columns\"\r\n      [scrollable]=\"scrollable\"\r\n      [scrollHeight]=\"scrollHeight\"\r\n      (onNodeExpand)=\"onNodeExpand($event)\"\r\n      (onNodeCollapse)=\"onNodeCollapse($event)\"\r\n    >\r\n      <ng-template zyfraTableTemplate=\"header\" let-columns>\r\n        <tr>\r\n          <th *ngFor=\"let col of columns\">\r\n            {{col.header}}\r\n          </th>\r\n        </tr>\r\n      </ng-template>\r\n      <ng-template zyfraTableTemplate=\"body\" let-rowNode let-rowData=\"rowData\" let-columns=\"columns\">\r\n        <tr [zyfraRow]=\"rowData\" [zyfraTTRow]=\"rowNode\">\r\n          <td *ngFor=\"let col of columns; let i = index\">\r\n            <zyfra-tree-table-toggler [rowNode]=\"rowNode\" *ngIf=\"i == 0\"></zyfra-tree-table-toggler>\r\n            {{rowData[col.field]}}\r\n          </td>\r\n        </tr>\r\n      </ng-template>\r\n    </zyfra-tree-table>\r\n  `,\r\n  props: {\r\n    ...args,\r\n    onNodeExpand: (event): void => actions.onNodeExpand({ node: event.node, ...event }),\r\n    onNodeCollapse: (event): void => actions.onNodeCollapse({ node: event.node, ...event }),\r\n  },\r\n})"
      },
      {
        "name": "Template",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "libs/components/src/lib/tree-table/_story/stories/reorder.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story<ZyfraTreeTableComponent>",
        "defaultValue": "args => ({\r\n  template: `\r\n    <zyfra-tree-table\r\n      [title]=\"title\"\r\n      [value]=\"value\"\r\n      [columns]=\"columns\"\r\n      [reorderableColumns]=\"reorderableColumns\"\r\n      (colReorder)=\"colReorder($event)\"\r\n      (onNodeExpand)=\"onNodeExpand($event)\"\r\n      (onNodeCollapse)=\"onNodeCollapse($event)\"\r\n    >\r\n      <ng-template zyfraTableTemplate=\"header\" let-columns>\r\n        <tr>\r\n          <th *ngFor=\"let col of columns\" zyfraTTReorderableColumn>\r\n            {{col.header}}\r\n          </th>\r\n        </tr>\r\n      </ng-template>\r\n      <ng-template zyfraTableTemplate=\"body\" let-rowNode let-rowData=\"rowData\" let-columns=\"columns\">\r\n        <tr [zyfraRow]=\"rowData\" [zyfraTTRow]=\"rowNode\">\r\n          <td *ngFor=\"let col of columns; let i = index\">\r\n            <zyfra-tree-table-toggler [rowNode]=\"rowNode\" *ngIf=\"i == 0\"></zyfra-tree-table-toggler>\r\n            {{rowData[col.field]}}\r\n          </td>\r\n        </tr>\r\n      </ng-template>\r\n    </zyfra-tree-table>\r\n  `,\r\n  props: {\r\n    ...args,\r\n    colReorder: consoleLogAction('colReorder'),\r\n    onNodeExpand: (event): void => actions.onNodeExpand({ node: event.node, ...event }),\r\n    onNodeCollapse: (event): void => actions.onNodeCollapse({ node: event.node, ...event }),\r\n  },\r\n})"
      },
      {
        "name": "Template",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "libs/components/src/lib/tree-table/_story/stories/selection.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story<ZyfraTreeTableComponent>",
        "defaultValue": "args => ({\r\n  template: `\r\n    <zyfra-tree-table\r\n      #table\r\n      [title]=\"title\"\r\n      [value]=\"value\"\r\n      [columns]=\"columns\"\r\n      [selectionMode]=\"selectionMode\"\r\n      [stripedMode]=\"stripedMode\"\r\n      [(selection)]=\"selection\"\r\n      (onNodeSelect)=\"onNodeSelect($event)\"\r\n      (onNodeUnselect)=\"onNodeUnselect($event)\"\r\n      (selectionChange)=\"selectionChange($event)\"\r\n      (onHeaderCheckboxToggle)=\"onHeaderCheckboxToggle($event)\"\r\n      (onNodeExpand)=\"onNodeExpand($event)\"\r\n      (onNodeCollapse)=\"onNodeCollapse($event)\"\r\n    >\r\n      <ng-template zyfraTableTemplate=\"header\" let-columns>\r\n        <tr>\r\n          <th><zyfra-tree-table-header-checkbox style=\"margin-right: 6px\"></zyfra-tree-table-header-checkbox> Имя</th>\r\n          <th>Размер</th>\r\n          <th>Тип</th>\r\n        </tr>\r\n      </ng-template>\r\n      <ng-template zyfraTableTemplate=\"body\" let-rowNode let-rowData=\"rowData\" let-columns=\"columns\">\r\n        <tr [zyfraRow]=\"rowData\" [zyfraTTRow]=\"rowNode\" [zyfraTTSelectableRow]=\"rowNode\">\r\n          <td *ngFor=\"let col of columns; let i = index\">\r\n            <zyfra-tree-table-toggler [rowNode]=\"rowNode\" *ngIf=\"i == 0\"></zyfra-tree-table-toggler>\r\n            <zyfra-tree-table-checkbox [value]=\"rowNode\" *ngIf=\"i == 0\"></zyfra-tree-table-checkbox>\r\n            <ng-container *ngIf=\"i === 0\">\r\n              <span\r\n                class=\"zyfra-icon files-folder\"\r\n                *ngIf=\"rowNode.node.children && rowNode.node.children.length > 0; else docIcon\"\r\n                style=\"margin-right: 10px;\"\r\n              ></span>\r\n            </ng-container>\r\n            <span>{{ rowData[col.field] }}</span>\r\n          </td>\r\n        </tr>\r\n      </ng-template>\r\n    </zyfra-tree-table>\r\n\r\n    <ng-template #docIcon>\r\n      <span class=\"zyfra-icon files-description-properties\" style=\"margin-right: 10px; font-size: 20px;\"></span>\r\n    </ng-template>\r\n  `,\r\n  props: {\r\n    ...args,\r\n    onNodeSelect: (event): void => actions.onNodeSelect({ node: event.node, ...event }),\r\n    onNodeUnselect: (event): void => actions.onNodeUnselect({ node: event.node, ...event }),\r\n    onNodeExpand: (event): void => actions.onNodeExpand({ node: event.node, ...event }),\r\n    onNodeCollapse: (event): void => actions.onNodeCollapse({ node: event.node, ...event }),\r\n    selectionChange: consoleLogAction('selectionChange'),\r\n    onHeaderCheckboxToggle: actions.onHeaderCheckboxToggle,\r\n  },\r\n})"
      },
      {
        "name": "Template",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "libs/components/src/lib/tree-table/_story/stories/sort.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story<ZyfraTreeTableComponent>",
        "defaultValue": "args => ({\r\n  template: `\r\n    <zyfra-button label=\"Reset sort\" (onClick)=\"table.resetSort()\"></zyfra-button>\r\n\r\n    <br><br>\r\n\r\n    <zyfra-tree-table\r\n      #table\r\n      [title]=\"title\"\r\n      [value]=\"value\"\r\n      [columns]=\"columns\"\r\n      (onSort)=\"onSort($event)\"\r\n      (onNodeExpand)=\"onNodeExpand($event)\"\r\n      (onNodeCollapse)=\"onNodeCollapse($event)\"\r\n    >\r\n      <ng-template zyfraTableTemplate=\"header\" let-columns>\r\n        <tr>\r\n          <th *ngFor=\"let col of columns\" [zyfraTTSortableColumn]=\"col.field\">\r\n            {{col.header}}\r\n            <zyfra-tree-table-sort-icon [field]=\"col.field\"></zyfra-tree-table-sort-icon>\r\n          </th>\r\n        </tr>\r\n      </ng-template>\r\n      <ng-template zyfraTableTemplate=\"body\" let-rowNode let-rowData=\"rowData\" let-columns=\"columns\">\r\n        <tr [zyfraRow]=\"rowData\" [zyfraTTRow]=\"rowNode\">\r\n          <td *ngFor=\"let col of columns; let i = index\">\r\n            <zyfra-tree-table-toggler [rowNode]=\"rowNode\" *ngIf=\"i == 0\"></zyfra-tree-table-toggler>\r\n            <span>{{rowData[col.field]}}</span>\r\n          </td>\r\n        </tr>\r\n      </ng-template>\r\n    </zyfra-tree-table>\r\n  `,\r\n  props: {\r\n    ...args,\r\n    onSort: consoleLogAction('onSort'),\r\n    onNodeExpand: (event): void => actions.onNodeExpand({ node: event.node, ...event }),\r\n    onNodeCollapse: (event): void => actions.onNodeCollapse({ node: event.node, ...event }),\r\n  },\r\n})"
      },
      {
        "name": "TemplateWithContent",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "libs/components/src/lib/dropdown-with-content/zyfra-dropdown-with-content.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story<ZyfraDropdownWithContentComponent>",
        "defaultValue": "args => ({\r\n  component: ZyfraDropdownWithContentComponent,\r\n  template: `\r\n    <div>\r\n       <zyfra-dropdown-with-content\r\n        [(ngModel)]=\"value\"\r\n        [options]=\"options\"\r\n        [optionLabel]=\"optionLabel\"\r\n        [optionValue]=\"optionValue\"\r\n        [placeholder]=\"placeholder\"\r\n        [showClear]=\"showClear\"\r\n        [label]=\"label\"\r\n        [mini]=\"mini\"\r\n        [disabled]=\"disabled\"\r\n        [required]=\"required\"\r\n        [group]=\"group\"\r\n        [virtualScroll]=\"virtualScroll\"\r\n        [itemSize]=\"itemSize\"\r\n        [filter]=\"filter\"\r\n        [style]=\"{ width: '360px' }\"\r\n        (onChange)=\"onChange($event)\"\r\n        (onClick)=\"onClick($event)\"\r\n        (onFocus)=\"onFocus($event)\"\r\n        (onBlur)=\"onBlur($event)\"\r\n        (onShow)=\"onShow($event)\"\r\n        (onHide)=\"onHide($event)\"\r\n      >\r\n        <span left  style=\"width: 15px; height: 15px; background: pink; border-radius: 50%; margin: 5px;\"></span>\r\n        <div right style=\"display: flex; align-items: center;\">\r\n          <span style=\"width: 25px; height: 25px; background: cadetblue; border-radius: 50%;\"></span>\r\n          <span style=\"width: 25px; height: 25px; background: wheat; border-radius: 50%; margin: 5px;\"></span>\r\n        </div>\r\n      </zyfra-dropdown-with-content>\r\n    </div>\r\n    <div style=\"font-family: var(--fontFamily); margin-top: 20px;\">\r\n      <p>Selected value:</p>\r\n      <pre style=\"font-family: var(--fontFamily);\">{{value | json}}</pre>\r\n    </div>\r\n  `,\r\n  props: {\r\n    ...args,\r\n    onChange: event => action('onChange')({ value: event.value, ...event }),\r\n    onClick: action('onClick'),\r\n    onFocus: action('onFocus'),\r\n    onBlur: action('onBlur'),\r\n    onShow: action('onShow'),\r\n    onHide: action('onHide'),\r\n  },\r\n})"
      },
      {
        "name": "Text",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "libs/components/src/lib/breadcrumb/zyfra-breadcrumb.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "",
        "defaultValue": "Template.bind({})"
      },
      {
        "name": "TextOverflow",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "libs/components/src/lib/table/_story/stories/text-overflow.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "",
        "defaultValue": "Template.bind({})"
      },
      {
        "name": "Time",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "libs/components/src/lib/datepicker/calendar/zyfra-calendar.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "",
        "defaultValue": "Template.bind({})"
      },
      {
        "name": "timeMap",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "libs/components/src/lib/datepicker/zyfra-relative-datepicker/relative-datepicker.utils.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "",
        "defaultValue": "new Map<string, RelativeDateTimeId>([\r\n  ['*', 'current'],\r\n  ['T', 'midnight'],\r\n  ['t', 'midnight'], // Can be optional\r\n])"
      },
      {
        "name": "ToggleMask",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "libs/components/src/lib/password/zyfra-password.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "",
        "defaultValue": "Template.bind({})"
      },
      {
        "name": "Tooltip",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "libs/components/src/lib/input/zyfra-input.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "",
        "defaultValue": "Template.bind({})"
      },
      {
        "name": "TooltipWithoutTitle",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "libs/components/src/lib/tooltip/zyfra-tooltip.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "",
        "defaultValue": "Template.bind({})"
      },
      {
        "name": "TooltipWithTitle",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "libs/components/src/lib/tooltip/zyfra-tooltip.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "",
        "defaultValue": "Template.bind({})"
      },
      {
        "name": "topMenuItems",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "libs/components/src/lib/menu-applications/zyfra-menu-applications.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "ZyfraMenuAppItem[]",
        "defaultValue": "[\r\n  {\r\n    title: 'Z-QA — Zyfra Quality Assurance',\r\n    icon: 'shapes-cube',\r\n    description: 'Описание для приложения \"Z-QA — Zyfra Quality Assurance\"'\r\n  },\r\n  {\r\n    title: 'Zyfra Document Explorer',\r\n    icon: 'view-dashboard',\r\n    description: 'Описание для приложения \"Zyfra Document Explorer\"'\r\n  },\r\n  {\r\n    title: 'Z-MEB — Mass & Energy Balance',\r\n    icon: 'charts-bar-stacked',\r\n    description: 'Описание для приложения \"Z-MEB — Mass & Energy Balance\"'\r\n  },\r\n  {\r\n    title: 'Z-PS — Zyfra Production Scheduling',\r\n    icon: 'tools-eyedropper',\r\n    description: 'Описание для приложения \"Z-PS — Zyfra Production Scheduling\"'\r\n  },\r\n  {\r\n    title: 'Z-MEB — Mass & Energy Balance',\r\n    icon: 'vectors-difference-ab',\r\n    description: 'Описание для приложения \"Z-MEB — Mass & Energy Balance\"'\r\n  },\r\n]"
      },
      {
        "name": "Url",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "libs/components/src/lib/breadcrumb/zyfra-breadcrumb.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "",
        "defaultValue": "Template.bind({})"
      },
      {
        "name": "ValidationPattern",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "libs/components/src/lib/datepicker/zyfra-relative-datepicker/zyfra-relative-datepicker.component.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "string",
        "defaultValue": "'(T|\\\\*)((\\\\+|\\\\-)(\\\\d+)(Y|M|d|h|m|s))?'"
      },
      {
        "name": "Vertical",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "libs/components/src/lib/slider/zyfra-slider.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "",
        "defaultValue": "Template.bind({})"
      },
      {
        "name": "VirtualScroll",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "libs/components/src/lib/dropdown/zyfra-dropdown.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "",
        "defaultValue": "Template.bind({})"
      },
      {
        "name": "Warning",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "libs/components/src/lib/button/zyfra-button.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "",
        "defaultValue": "Template.bind({})"
      },
      {
        "name": "Warning",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "libs/components/src/lib/progress/zyfra-progress-bar.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "",
        "defaultValue": "Template.bind({})"
      },
      {
        "name": "WarningWithIcon",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "libs/components/src/lib/split-button/zyfra-split-button.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "",
        "defaultValue": "Template.bind({})"
      },
      {
        "name": "withDropdown",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "libs/components/src/lib/auto-complete/zyfra-auto-complete.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "",
        "defaultValue": "Template.bind({})"
      },
      {
        "name": "WithFormControl",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "libs/components/src/lib/checkbox/zyfra-checkbox.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "",
        "defaultValue": "CheckboxWithFormControlComponentTemplate.bind({})"
      },
      {
        "name": "WithIcon",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "libs/components/src/lib/tab-view/zyfra-tab-view/zyfra-tab-view.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "",
        "defaultValue": "Template.bind({})"
      },
      {
        "name": "WithIcons",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "libs/components/src/lib/tab-menu/zyfra-tab-menu.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "",
        "defaultValue": "Template.bind({})"
      },
      {
        "name": "WithLayoutShift",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "libs/components/src/lib/menu-applications/zyfra-menu-applications.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "",
        "defaultValue": "Template.bind({})"
      },
      {
        "name": "WithoutLayoutShift",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "libs/components/src/lib/menu-applications/zyfra-menu-applications.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "",
        "defaultValue": "Template.bind({})"
      },
      {
        "name": "WithPageOptions",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "libs/components/src/lib/paginator/zyfra-paginator.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "",
        "defaultValue": "Template.bind({})"
      },
      {
        "name": "WithSubMenu",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "libs/components/src/lib/tab-menu/zyfra-tab-menu.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "",
        "defaultValue": "Template.bind({})"
      },
      {
        "name": "YearPicker",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "libs/components/src/lib/datepicker/calendar/zyfra-calendar.component.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "",
        "defaultValue": "Template.bind({})"
      }
    ],
    "functions": [
      {
        "name": "cloneArrayOfObjects",
        "file": "libs/components/src/lib/table/_story/data.ts",
        "ctype": "miscellaneous",
        "subtype": "function",
        "deprecated": false,
        "deprecationMessage": "",
        "description": "",
        "args": [
          {
            "name": "array",
            "deprecated": false,
            "deprecationMessage": ""
          }
        ],
        "returnType": "T[]",
        "jsdoctags": [
          {
            "name": "array",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      {
        "name": "cloneArrayOfObjects",
        "file": "libs/components/src/lib/tree-table/_story/data.ts",
        "ctype": "miscellaneous",
        "subtype": "function",
        "deprecated": false,
        "deprecationMessage": "",
        "description": "",
        "args": [
          {
            "name": "array",
            "deprecated": false,
            "deprecationMessage": ""
          }
        ],
        "returnType": "T[]",
        "jsdoctags": [
          {
            "name": "array",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      {
        "name": "consoleLogAction",
        "file": "libs/components/.storybook/helpers.ts",
        "ctype": "miscellaneous",
        "subtype": "function",
        "deprecated": false,
        "deprecationMessage": "",
        "description": "",
        "args": [
          {
            "name": "name",
            "type": "string",
            "deprecated": false,
            "deprecationMessage": ""
          }
        ],
        "returnType": "literal type",
        "jsdoctags": [
          {
            "name": "name",
            "type": "string",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      {
        "name": "generateCar",
        "file": "libs/components/src/lib/table/_story/stories/scroll-virtual.stories.ts",
        "ctype": "miscellaneous",
        "subtype": "function",
        "deprecated": false,
        "deprecationMessage": "",
        "description": "",
        "args": [],
        "returnType": "literal type"
      },
      {
        "name": "generateTimeArray",
        "file": "libs/components/src/lib/datepicker/utils/generate-time-array.ts",
        "ctype": "miscellaneous",
        "subtype": "function",
        "deprecated": false,
        "deprecationMessage": "",
        "description": "",
        "args": [
          {
            "name": "formatTime",
            "type": "string",
            "deprecated": false,
            "deprecationMessage": ""
          }
        ],
        "returnType": "ZyfraTime[]",
        "jsdoctags": [
          {
            "name": "formatTime",
            "type": "string",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      {
        "name": "getCustomers",
        "file": "libs/components/src/lib/table/_story/data.ts",
        "ctype": "miscellaneous",
        "subtype": "function",
        "deprecated": false,
        "deprecationMessage": "",
        "description": "",
        "args": [],
        "returnType": "Customer[]"
      },
      {
        "name": "getDefaultRelativeDateMenuItems",
        "file": "libs/components/src/lib/datepicker/zyfra-relative-datepicker/relative-datepicker.models.ts",
        "ctype": "miscellaneous",
        "subtype": "function",
        "deprecated": false,
        "deprecationMessage": "",
        "description": "",
        "args": [],
        "returnType": "RelativeDateMenuItems"
      },
      {
        "name": "getFileSystem",
        "file": "libs/components/src/lib/tree-table/_story/data.ts",
        "ctype": "miscellaneous",
        "subtype": "function",
        "deprecated": false,
        "deprecationMessage": "",
        "description": "",
        "args": [],
        "returnType": "any"
      },
      {
        "name": "getProducts",
        "file": "libs/components/src/lib/table/_story/data.ts",
        "ctype": "miscellaneous",
        "subtype": "function",
        "deprecated": false,
        "deprecationMessage": "",
        "description": "",
        "args": [],
        "returnType": "Product[]"
      },
      {
        "name": "getProductsOrdersSmall",
        "file": "libs/components/src/lib/table/_story/data.ts",
        "ctype": "miscellaneous",
        "subtype": "function",
        "deprecated": false,
        "deprecationMessage": "",
        "description": "",
        "args": [],
        "returnType": "ProductOrder[]"
      },
      {
        "name": "getProductsSmall",
        "file": "libs/components/src/lib/table/_story/data.ts",
        "ctype": "miscellaneous",
        "subtype": "function",
        "deprecated": false,
        "deprecationMessage": "",
        "description": "",
        "args": [],
        "returnType": "Product[]"
      },
      {
        "name": "getSales",
        "file": "libs/components/src/lib/tree-table/_story/data.ts",
        "ctype": "miscellaneous",
        "subtype": "function",
        "deprecated": false,
        "deprecationMessage": "",
        "description": "",
        "args": [],
        "returnType": "any"
      },
      {
        "name": "getSalesSmall",
        "file": "libs/components/src/lib/table/_story/data.ts",
        "ctype": "miscellaneous",
        "subtype": "function",
        "deprecated": false,
        "deprecationMessage": "",
        "description": "",
        "args": [],
        "returnType": "Sale[]"
      },
      {
        "name": "isIsoDate",
        "file": "libs/components/src/lib/datepicker/utils/is-iso-date.ts",
        "ctype": "miscellaneous",
        "subtype": "function",
        "deprecated": false,
        "deprecationMessage": "",
        "description": "",
        "args": [
          {
            "name": "str",
            "type": "string",
            "deprecated": false,
            "deprecationMessage": ""
          }
        ],
        "returnType": "boolean",
        "jsdoctags": [
          {
            "name": "str",
            "type": "string",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      {
        "name": "onSortColumnClick",
        "file": "libs/components/src/lib/@core/base-table/directives/sortable-column.directive.ts",
        "ctype": "miscellaneous",
        "subtype": "function",
        "deprecated": false,
        "deprecationMessage": "",
        "description": "",
        "args": [
          {
            "name": "event",
            "type": "MouseEvent",
            "deprecated": false,
            "deprecationMessage": ""
          }
        ],
        "returnType": "void",
        "jsdoctags": [
          {
            "name": "event",
            "type": "MouseEvent",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      {
        "name": "ParseTextInput",
        "file": "libs/components/src/lib/datepicker/zyfra-relative-datepicker/relative-datepicker.utils.ts",
        "ctype": "miscellaneous",
        "subtype": "function",
        "deprecated": false,
        "deprecationMessage": "",
        "description": "<p>Parse input text to model</p>\n",
        "args": [
          {
            "name": "text",
            "type": "string",
            "deprecated": false,
            "deprecationMessage": ""
          }
        ],
        "returnType": "RelativeDateModel",
        "jsdoctags": [
          {
            "name": "text",
            "type": "string",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      {
        "name": "provideValueAccessor",
        "file": "libs/components/src/lib/@core/value-accessor/value-accessor-form-component.directive.ts",
        "ctype": "miscellaneous",
        "subtype": "function",
        "deprecated": false,
        "deprecationMessage": "",
        "description": "",
        "args": [
          {
            "name": "type",
            "type": "Type",
            "deprecated": false,
            "deprecationMessage": ""
          }
        ],
        "returnType": "Provider",
        "jsdoctags": [
          {
            "name": "type",
            "type": "Type",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      {
        "name": "RenderText",
        "file": "libs/components/src/lib/datepicker/zyfra-relative-datepicker/relative-datepicker.utils.ts",
        "ctype": "miscellaneous",
        "subtype": "function",
        "deprecated": false,
        "deprecationMessage": "",
        "description": "<p>Render text from RelativeDateModel</p>\n",
        "args": [
          {
            "name": "model",
            "type": "RelativeDateModel",
            "deprecated": false,
            "deprecationMessage": ""
          }
        ],
        "returnType": "string",
        "jsdoctags": [
          {
            "name": "model",
            "type": "RelativeDateModel",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          }
        ]
      },
      {
        "name": "UpdateActiveItem",
        "file": "libs/components/src/lib/datepicker/zyfra-relative-datepicker/relative-datepicker.utils.ts",
        "ctype": "miscellaneous",
        "subtype": "function",
        "deprecated": false,
        "deprecationMessage": "",
        "description": "<p>Check items as radio button, to active id</p>\n",
        "args": [
          {
            "name": "items",
            "deprecated": false,
            "deprecationMessage": ""
          },
          {
            "name": "id",
            "type": "T",
            "deprecated": false,
            "deprecationMessage": ""
          }
        ],
        "returnType": "RelativeDateMenuItem[]",
        "jsdoctags": [
          {
            "name": "items",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          },
          {
            "name": "id",
            "type": "T",
            "deprecated": false,
            "deprecationMessage": "",
            "tagName": {
              "text": "param"
            }
          }
        ]
      }
    ],
    "typealiases": [
      {
        "name": "CALENDAR_SELECTION_MODE",
        "ctype": "miscellaneous",
        "subtype": "typealias",
        "rawtype": "\"single\" | \"range\" | \"multiple\"",
        "file": "libs/components/src/lib/datepicker/calendar/zyfra-calendar.component.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "description": "",
        "kind": 185
      },
      {
        "name": "DropdownTemplateType",
        "ctype": "miscellaneous",
        "subtype": "typealias",
        "rawtype": "\"item\" | \"group\" | \"selectedItem\" | \"header\" | \"empty\" | \"emptyfilter\" | \"footer\"",
        "file": "libs/components/src/lib/dropdown/zyfra-dropdown-template.directive.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "description": "",
        "kind": 185
      },
      {
        "name": "Filters",
        "ctype": "miscellaneous",
        "subtype": "typealias",
        "rawtype": "Record<string | FilterMetadata | []>",
        "file": "libs/components/src/lib/table/zyfra-table.types.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "description": "",
        "kind": 176
      },
      {
        "name": "HeaderConfig",
        "ctype": "miscellaneous",
        "subtype": "typealias",
        "rawtype": "literal type",
        "file": "libs/components/src/lib/nav-menu/model/nav-menu-config.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "description": "",
        "kind": 180
      },
      {
        "name": "IdByGroup",
        "ctype": "miscellaneous",
        "subtype": "typealias",
        "rawtype": "",
        "file": "libs/components/src/lib/datepicker/zyfra-relative-datepicker/relative-datepicker.models.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "description": "",
        "kind": 192
      },
      {
        "name": "ItemClickEvent",
        "ctype": "miscellaneous",
        "subtype": "typealias",
        "rawtype": "literal type",
        "file": "libs/components/src/lib/breadcrumb/zyfra-breadcrumb.component.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "description": "",
        "kind": 180
      },
      {
        "name": "MenuItemSize",
        "ctype": "miscellaneous",
        "subtype": "typealias",
        "rawtype": "\"standard\" | \"enlarged\"",
        "file": "libs/components/src/lib/nav-menu/model/nav-menu-config.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "description": "",
        "kind": 185
      },
      {
        "name": "OnChangeCallback",
        "ctype": "miscellaneous",
        "subtype": "typealias",
        "rawtype": "function",
        "file": "libs/components/src/lib/datepicker/zyfra-datepicker.component.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "description": "",
        "kind": 177
      },
      {
        "name": "onResizeEvent",
        "ctype": "miscellaneous",
        "subtype": "typealias",
        "rawtype": "literal type",
        "file": "libs/components/src/lib/splitter/zyfra-splitter.component.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "description": "",
        "kind": 180
      },
      {
        "name": "PageOption",
        "ctype": "miscellaneous",
        "subtype": "typealias",
        "rawtype": "number | Record<string | >",
        "file": "libs/components/src/lib/paginator/zyfra-paginator.component.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "description": "",
        "kind": 185
      },
      {
        "name": "RelativeDateDirectionId",
        "ctype": "miscellaneous",
        "subtype": "typealias",
        "rawtype": "",
        "file": "libs/components/src/lib/datepicker/zyfra-relative-datepicker/relative-datepicker.models.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "description": "",
        "kind": 192
      },
      {
        "name": "RelativeDatePeriodId",
        "ctype": "miscellaneous",
        "subtype": "typealias",
        "rawtype": "",
        "file": "libs/components/src/lib/datepicker/zyfra-relative-datepicker/relative-datepicker.models.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "description": "",
        "kind": 192
      },
      {
        "name": "RelativeDateTimeId",
        "ctype": "miscellaneous",
        "subtype": "typealias",
        "rawtype": "",
        "file": "libs/components/src/lib/datepicker/zyfra-relative-datepicker/relative-datepicker.models.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "description": "",
        "kind": 192
      },
      {
        "name": "RowSelectionEvent",
        "ctype": "miscellaneous",
        "subtype": "typealias",
        "rawtype": "literal type",
        "file": "libs/components/src/lib/table/zyfra-table.types.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "description": "",
        "kind": 180
      },
      {
        "name": "SelectionType",
        "ctype": "miscellaneous",
        "subtype": "typealias",
        "rawtype": "\"single\" | \"checkbox\"",
        "file": "libs/components/src/lib/nav-menu/model/nav-menu-config.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "description": "",
        "kind": 185
      },
      {
        "name": "SliderOrientation",
        "ctype": "miscellaneous",
        "subtype": "typealias",
        "rawtype": "\"horizontal\" | \"vertical\"",
        "file": "libs/components/src/lib/slider/zyfra-slider.component.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "description": "",
        "kind": 185
      },
      {
        "name": "SortOrder",
        "ctype": "miscellaneous",
        "subtype": "typealias",
        "rawtype": " | \"1\"",
        "file": "libs/components/src/lib/@core/base-table/shared-table.types.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "description": "",
        "kind": 185
      },
      {
        "name": "SpinnerColor",
        "ctype": "miscellaneous",
        "subtype": "typealias",
        "rawtype": "\"primary\" | \"secondary\" | \"info\" | \"warning\" | \"danger\" | \"success\"",
        "file": "libs/components/src/lib/spinner/zyfra-spinner.component.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "description": "",
        "kind": 185
      },
      {
        "name": "TableSortEvent",
        "ctype": "miscellaneous",
        "subtype": "typealias",
        "rawtype": "SortEvent",
        "file": "libs/components/src/lib/table/zyfra-table.types.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "description": "",
        "kind": 176
      },
      {
        "name": "TableSortMode",
        "ctype": "miscellaneous",
        "subtype": "typealias",
        "rawtype": "\"single\" | \"multiple\"",
        "file": "libs/components/src/lib/tree-table/tree-table.types.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "description": "",
        "kind": 185
      },
      {
        "name": "TableTemplateType",
        "ctype": "miscellaneous",
        "subtype": "typealias",
        "rawtype": "\"caption\" | \"header\" | \"headergrouped\" | \"body\" | \"loadingbody\" | \"footer\" | \"footergrouped\" | \"summary\" | \"colgroup\" | \"rowexpansion\" | \"groupheader\" | \"rowspan\" | \"groupfooter\" | \"frozenrows\" | \"frozenheader\" | \"frozenbody\" | \"frozenfooter\" | \"frozencolgroup\" | \"frozenrowexpansion\" | \"emptymessage\" | \"paginatorleft\" | \"paginatorright\" | \"paginatordropdownitem\" | \"input\" | \"output\" | \"filter\"",
        "file": "libs/components/src/lib/@core/base-table/directives/base-table-template.directive.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "description": "",
        "kind": 185
      },
      {
        "name": "ToastMessage",
        "ctype": "miscellaneous",
        "subtype": "typealias",
        "rawtype": "Message",
        "file": "libs/components/src/lib/toast/toast.service.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "description": "",
        "kind": 176
      },
      {
        "name": "TZyfraButtonIconPosision",
        "ctype": "miscellaneous",
        "subtype": "typealias",
        "rawtype": "\"left\" | \"right\" | \"top\" | \"bottom\"",
        "file": "libs/components/src/lib/button/zyfra-button.component.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "description": "",
        "kind": 185
      },
      {
        "name": "ValueChangeEvent",
        "ctype": "miscellaneous",
        "subtype": "typealias",
        "rawtype": "literal type",
        "file": "libs/components/src/lib/@core/base-table/search-cell/base-search-cell.component.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "description": "",
        "kind": 180
      },
      {
        "name": "ViewMode",
        "ctype": "miscellaneous",
        "subtype": "typealias",
        "rawtype": "\"rubricator\" | \"folder\" | \"hierarchy\"",
        "file": "libs/components/src/lib/nav-menu/model/nav-menu-config.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "description": "",
        "kind": 185
      }
    ],
    "enumerations": [
      {
        "name": "ZyfraDatePickerMode",
        "childs": [
          {
            "name": "absolute",
            "deprecated": false,
            "deprecationMessage": "",
            "value": "absolute"
          },
          {
            "name": "relative",
            "deprecated": false,
            "deprecationMessage": "",
            "value": "relative"
          }
        ],
        "ctype": "miscellaneous",
        "subtype": "enum",
        "deprecated": false,
        "deprecationMessage": "",
        "description": "",
        "file": "libs/components/src/lib/datepicker/model/zyfra-date-picker-mode.enum.ts"
      },
      {
        "name": "ZyfraDatePickerValueType",
        "childs": [
          {
            "name": "date",
            "deprecated": false,
            "deprecationMessage": "",
            "value": "date"
          },
          {
            "name": "string",
            "deprecated": false,
            "deprecationMessage": "",
            "value": "string"
          },
          {
            "name": "isoString",
            "deprecated": false,
            "deprecationMessage": "",
            "value": "isoString"
          },
          {
            "name": "timestamp",
            "deprecated": false,
            "deprecationMessage": "",
            "value": "timestamp"
          },
          {
            "name": "null",
            "deprecated": false,
            "deprecationMessage": "",
            "value": "null"
          }
        ],
        "ctype": "miscellaneous",
        "subtype": "enum",
        "deprecated": false,
        "deprecationMessage": "",
        "description": "",
        "file": "libs/components/src/lib/datepicker/model/zyfra-date-picker-value-type.enum.ts"
      },
      {
        "name": "ZyfraLocale",
        "childs": [
          {
            "name": "ru",
            "deprecated": false,
            "deprecationMessage": "",
            "value": "ru_RU"
          },
          {
            "name": "en",
            "deprecated": false,
            "deprecationMessage": "",
            "value": "en_US"
          }
        ],
        "ctype": "miscellaneous",
        "subtype": "enum",
        "deprecated": false,
        "deprecationMessage": "",
        "description": "",
        "file": "libs/components/src/lib/datepicker/model/zyfra-date-picker-locale.enum.ts"
      }
    ],
    "groupedVariables": {
      "libs/components/src/lib/datepicker/zyfra-datepicker.component.stories.ts": [
        {
          "name": "Absolute",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "libs/components/src/lib/datepicker/zyfra-datepicker.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "defaultValue": "Template.bind({})"
        },
        {
          "name": "AbsoluteMini",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "libs/components/src/lib/datepicker/zyfra-datepicker.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "defaultValue": "Template.bind({})"
        },
        {
          "name": "Template",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "libs/components/src/lib/datepicker/zyfra-datepicker.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story<ZyfraDatepickerComponent>",
          "defaultValue": "args => ({\r\n  component: ZyfraDatepickerComponent,\r\n  template: `\r\n  <zyfra-datepicker\r\n  [ngModel]=\"model\"\r\n  (ngModelChange)=\"$event\"\r\n  [dateFormat]=\"dateFormat\"\r\n  [timeFormat]=\"timeFormat\"\r\n  [returnFormatValue]=\"returnFormatValue\"\r\n  [placeholder]=\"placeholder\"\r\n  [disabled]=\"disabled\"\r\n  [required]=\"required\"\r\n  [label]=\"label\"\r\n  [spanClass]=\"spanClass\"\r\n  [locale]=\"locale\"\r\n  [showClear]=\"showClear\"\r\n  [showDate]=\"showDate\"\r\n  [showTime]=\"showTime\"\r\n  [monthNavigator]=\"monthNavigator\"\r\n  [yearNavigator]=\"yearNavigator\"\r\n  [yearRange]=\"yearRange\"\r\n  [showCalendarBtn]=\"showCalendarBtn\"\r\n  [calendarBtnLabel]=\"calendarBtnLabel\"\r\n  [numberOfMonths]=\"numberOfMonths\"\r\n  [selectionMode]=\"selectionMode\"\r\n  [disabledDates]=\"disabledDates\"\r\n  [firstDayOfWeek]=\"firstDayOfWeek\"\r\n  >\r\n  </zyfra-datepicker>\r\n  `,\r\n  props: args,\r\n})"
        }
      ],
      "libs/components/src/lib/nav-menu/zyfra-nav-menu.component.stories.ts": [
        {
          "name": "actions",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "libs/components/src/lib/nav-menu/zyfra-nav-menu.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "object",
          "defaultValue": "{\r\n  activeItemChange: action('activeItemChange'),\r\n  homeClick: action('homeClick'),\r\n  selectionChange: action('selectionChange'),\r\n  nodeCollapse: action('nodeCollapse'),\r\n  nodeExpand: action('nodeExpand'),\r\n}"
        },
        {
          "name": "Basic",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "libs/components/src/lib/nav-menu/zyfra-nav-menu.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "defaultValue": "BasicTemplate.bind({})"
        },
        {
          "name": "BasicTemplate",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "libs/components/src/lib/nav-menu/zyfra-nav-menu.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "(args) => ({\r\n  template:\r\n      `<wrapper>\r\n          <ng-template zyfraTemplate>\r\n              <zyfra-splitter layout=\"horizontal\" [panelSizes]=\"[25,75]\" [style]=\"{ height: '600px' }\">\r\n                  <ng-template zyfraSplitterTemplate>\r\n                      <zyfra-nav-menu [model]=\"model\"\r\n                                      [menuTitle]=\"menuTitle\"\r\n                                      [headerConfig]=\"headerConfig\"\r\n                                      [settingsConfig]=\"settingsConfig\"\r\n                                      [toolbarConfig]=\"toolbarConfig\"\r\n                                      [emptyMessage]=\"emptyMessage\"\r\n                                      (activeItemChange)=\"activeItemChange($event)\"\r\n                                      (selectionChange)=\"selectionChange($event)\"\r\n                                      (homeClick)=\"homeClick($event)\"\r\n                                      (nodeExpand)=\"nodeExpand($event)\"\r\n                                      (nodeCollapse)=\"nodeCollapse($event)\">\r\n                    </zyfra-nav-menu>\r\n                  </ng-template>\r\n                  <ng-template zyfraSplitterTemplate>\r\n                      <router-outlet></router-outlet>\r\n                  </ng-template>\r\n              </zyfra-splitter>\r\n          </ng-template>\r\n      </wrapper>`,\r\n  props: {\r\n    ...args,\r\n    ...actions\r\n  },\r\n})"
        },
        {
          "name": "BasicWithIcons",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "libs/components/src/lib/nav-menu/zyfra-nav-menu.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "defaultValue": "BasicTemplate.bind({})"
        },
        {
          "name": "EnlargedSize",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "libs/components/src/lib/nav-menu/zyfra-nav-menu.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "defaultValue": "BasicTemplate.bind({})"
        },
        {
          "name": "ExtraItemTemplate",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "libs/components/src/lib/nav-menu/zyfra-nav-menu.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "(args) => ({\r\n  template:\r\n      `<wrapper>\r\n          <ng-template zyfraTemplate>\r\n              <zyfra-splitter layout=\"horizontal\" [panelSizes]=\"[25,75]\" [style]=\"{ height: '600px' }\">\r\n                  <ng-template zyfraSplitterTemplate>\r\n                      <zyfra-nav-menu [model]=\"model\"\r\n                                      [menuTitle]=\"menuTitle\"\r\n                                      [emptyMessage]=\"emptyMessage\"\r\n                                      [headerConfig]=\"headerConfig\"\r\n                                      [settingsConfig]=\"settingsConfig\"\r\n                                      [toolbarConfig]=\"toolbarConfig\"\r\n                                      (activeItemChange)=\"activeItemChange($event)\"\r\n                                      (selectionChange)=\"selectionChange($event)\"\r\n                                      (homeClick)=\"homeClick($event)\"\r\n                                      (nodeExpand)=\"nodeExpand($event)\"\r\n                                      (nodeCollapse)=\"nodeCollapse($event)\">\r\n\r\n                           <ng-template let-item zyfraTemplate='menuitem'>\r\n                                  <p-badge *ngIf=\"item?.badge\" styleClass=\"p-badge-dot\" [severity]=\"item.badge\"></p-badge>\r\n                          </ng-template>\r\n\r\n                          <ng-template zyfraTemplate='toolbar'>\r\n                              <i class=\"toolbar-button zyfra-icon files-upload\"></i>\r\n                              <i class=\"toolbar-button zyfra-icon files-download\"></i>\r\n                          </ng-template>\r\n\r\n                          <ng-template zyfraTemplate='header'>\r\n                              <i class=\"toolbar-button zyfra-icon charts-pie\"></i>\r\n                          </ng-template>\r\n                    </zyfra-nav-menu>\r\n                  </ng-template>\r\n                  <ng-template zyfraSplitterTemplate>\r\n                      <router-outlet></router-outlet>\r\n                  </ng-template>\r\n              </zyfra-splitter>\r\n          </ng-template>\r\n      </wrapper>`,\r\n  props: {\r\n    ...args,\r\n    ...actions\r\n  },\r\n})"
        },
        {
          "name": "ExtraTemplates",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "libs/components/src/lib/nav-menu/zyfra-nav-menu.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "defaultValue": "ExtraItemTemplate.bind({})"
        },
        {
          "name": "FolderMode",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "libs/components/src/lib/nav-menu/zyfra-nav-menu.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "defaultValue": "BasicTemplate.bind({})"
        },
        {
          "name": "GroupPanels",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "libs/components/src/lib/nav-menu/zyfra-nav-menu.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "defaultValue": "GroupPanelTemplate.bind({})"
        },
        {
          "name": "GroupPanelTemplate",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "libs/components/src/lib/nav-menu/zyfra-nav-menu.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "(args) => ({\r\n  template:\r\n      `<wrapper>\r\n          <ng-template zyfraTemplate>\r\n              <zyfra-splitter layout=\"horizontal\" [panelSizes]=\"[25,75]\" [style]=\"{ height: '600px' }\">\r\n                  <ng-template zyfraSplitterTemplate>\r\n                      <zyfra-nav-menu [menuTitle]=\"menuTitle\"\r\n                                      [emptyMessage]=\"emptyMessage\"\r\n                                      [headerConfig]=\"headerConfig\"\r\n                                      [settingsConfig]=\"settingsConfig\"\r\n                                      [toolbarConfig]=\"toolbarConfig\"\r\n                                      [searchPlaceholder]=\"searchPlaceholder\"\r\n                                      (homeClick)=\"homeClick($event)\"\r\n                                      (activeItemChange)=\"activeItemChange($event)\"\r\n                                      (nodeCollapse)=\"nodeCollapse($event)\"\r\n                                      (nodeExpand)=\"nodeExpand($event)\"\r\n                                      (selectionChange)=\"selectionChange($event)\">\r\n                      <ng-template zyfraNavMenuGroup\r\n                                   [header]=\"header1\"\r\n                                   [items]=\"items1\"></ng-template>\r\n\r\n                      <ng-template zyfraNavMenuGroup\r\n                                   [header]=\"header2\"\r\n                                   [items]=\"items2\"></ng-template>\r\n\r\n                      <ng-template zyfraNavMenuGroup\r\n                                   [header]=\"header3\"\r\n                                   [items]=\"items3\"></ng-template>\r\n                      </zyfra-nav-menu>\r\n                  </ng-template>\r\n                  <ng-template zyfraSplitterTemplate>\r\n                      <router-outlet></router-outlet>\r\n                  </ng-template>\r\n              </zyfra-splitter>\r\n          </ng-template>\r\n      </wrapper>`,\r\n  props: {\r\n    ...args,\r\n    ...actions\r\n  },\r\n})"
        },
        {
          "name": "MultipleSelection",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "libs/components/src/lib/nav-menu/zyfra-nav-menu.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "defaultValue": "BasicTemplate.bind({})"
        },
        {
          "name": "RubricatorMode",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "libs/components/src/lib/nav-menu/zyfra-nav-menu.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "defaultValue": "BasicTemplate.bind({})"
        },
        {
          "name": "Search",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "libs/components/src/lib/nav-menu/zyfra-nav-menu.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "defaultValue": "BasicTemplate.bind({})"
        },
        {
          "name": "SingleGroupPanel",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "libs/components/src/lib/nav-menu/zyfra-nav-menu.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "defaultValue": "GroupPanelTemplate.bind({})"
        },
        {
          "name": "SubItems",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "libs/components/src/lib/nav-menu/zyfra-nav-menu.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "defaultValue": "BasicTemplate.bind({})"
        }
      ],
      "libs/components/src/lib/table/_story/stories/expand.stories.ts": [
        {
          "name": "actions",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "libs/components/src/lib/table/_story/stories/expand.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "object",
          "defaultValue": "{\r\n  rowExpand: action('rowExpand'),\r\n  rowCollapse: action('rowCollapse'),\r\n}"
        },
        {
          "name": "Expand",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "libs/components/src/lib/table/_story/stories/expand.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "defaultValue": "Template.bind({})"
        },
        {
          "name": "Template",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "libs/components/src/lib/table/_story/stories/expand.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story<ZyfraTableComponent>",
          "defaultValue": "args => ({\r\n  template: `\r\n    <zyfra-table\r\n      [title]=\"title\"\r\n      [value]=\"value\"\r\n      [dataKey]=\"dataKey\"\r\n      (rowExpand)=\"rowExpand($event)\"\r\n      (rowCollapse)=\"rowCollapse($event)\"\r\n    >\r\n      <ng-template zyfraTableTemplate=\"header\">\r\n        <tr>\r\n          <th style=\"width: 38px\"></th>\r\n          <th zyfraSortableColumn=\"name\">Name <zyfra-sort-icon field=\"name\"></zyfra-sort-icon></th>\r\n          <th>Code</th>\r\n          <th zyfraSortableColumn=\"price\">Price <zyfra-sort-icon field=\"price\"></zyfra-sort-icon></th>\r\n          <th zyfraSortableColumn=\"category\">Category <zyfra-sort-icon field=\"category\"></zyfra-sort-icon></th>\r\n          <th zyfraSortableColumn=\"rating\">Reviews <zyfra-sort-icon field=\"rating\"></zyfra-sort-icon></th>\r\n          <th zyfraSortableColumn=\"inventoryStatus\">Status <zyfra-sort-icon field=\"inventoryStatus\"></zyfra-sort-icon></th>\r\n        </tr>\r\n      </ng-template>\r\n\r\n      <ng-template zyfraTableTemplate=\"body\" let-product let-expanded=\"expanded\">\r\n        <tr [zyfraRow]=\"product\">\r\n          <td>\r\n            <zyfra-row-toggler [data]=\"product\" [expanded]=\"expanded\"></zyfra-row-toggler>\r\n          </td>\r\n          <td>{{product.name}}</td>\r\n          <td>{{product.code}}</td>\r\n          <td style=\"text-align: right;\">{{product.price | currency:'USD'}}</td>\r\n          <td>{{product.category}}</td>\r\n          <td style=\"text-align: right;\">{{product.rating}}</td>\r\n          <td><span [class]=\"'product-badge status-' + product.inventoryStatus.toLowerCase()\">{{product.inventoryStatus}}</span></td>\r\n        </tr>\r\n      </ng-template>\r\n\r\n      <ng-template zyfraTableTemplate=\"rowexpansion\" let-product>\r\n        <tr>\r\n          <td colspan=\"7\">\r\n            <div class=\"p-p-3\">\r\n              <zyfra-table [value]=\"product.orders\" dataKey=\"id\">\r\n                <ng-template zyfraTableTemplate=\"header\">\r\n                  <tr>\r\n                    <th zyfraSortableColumn=\"id\">Id <zyfra-sort-icon field=\"price\"></zyfra-sort-icon></th>\r\n                    <th zyfraSortableColumn=\"customer\">Customer <zyfra-sort-icon field=\"customer\"></zyfra-sort-icon></th>\r\n                    <th zyfraSortableColumn=\"date\">Date <zyfra-sort-icon field=\"date\"></zyfra-sort-icon></th>\r\n                    <th zyfraSortableColumn=\"amount\">Amount <zyfra-sort-icon field=\"amount\"></zyfra-sort-icon></th>\r\n                    <th zyfraSortableColumn=\"status\">Status <zyfra-sort-icon field=\"status\"></zyfra-sort-icon></th>\r\n                  </tr>\r\n                </ng-template>\r\n                <ng-template zyfraTableTemplate=\"body\" let-order>\r\n                  <tr>\r\n                    <td>{{order.id}}</td>\r\n                    <td>{{order.customer}}</td>\r\n                    <td style=\"text-align: right;\">{{order.date}}</td>\r\n                    <td style=\"text-align: right;\">{{order.amount | currency:'USD'}}</td>\r\n                    <td><span [class]=\"'order-badge order-' + order.status.toLowerCase()\">{{order.status}}</span></td>\r\n                  </tr>\r\n                </ng-template>\r\n                <ng-template zyfraTableTemplate=\"emptymessage\">\r\n                  <tr>\r\n                    <td colspan=\"6\">There are no order for this product yet.</td>\r\n                  </tr>\r\n                </ng-template>\r\n              </zyfra-table>\r\n            </div>\r\n          </td>\r\n        </tr>\r\n      </ng-template>\r\n    </zyfra-table>\r\n  `,\r\n  props: {\r\n    ...args,\r\n    rowExpand: (event): void => actions.rowExpand({ data: event.data, ...event }),\r\n    rowCollapse: (event): void => actions.rowCollapse({ data: event.data, ...event }),\r\n  },\r\n})"
        }
      ],
      "libs/components/src/lib/table/_story/stories/selection.stories.ts": [
        {
          "name": "actions",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "libs/components/src/lib/table/_story/stories/selection.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "object",
          "defaultValue": "{\r\n  rowSelect: action('rowSelect'),\r\n  rowUnselect: action('rowUnselect'),\r\n  selectionChange: action('selectionChange'),\r\n  headerCheckboxToggle: action('headerCheckboxToggle'),\r\n}"
        },
        {
          "name": "Selection",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "libs/components/src/lib/table/_story/stories/selection.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "defaultValue": "SelectionTemplate.bind({})"
        },
        {
          "name": "SelectionTemplate",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "libs/components/src/lib/table/_story/stories/selection.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story<ZyfraTableComponent>",
          "defaultValue": "args => ({\r\n  template: `\r\n    <zyfra-table\r\n      #dt\r\n      [title]=\"title\"\r\n      [value]=\"value\"\r\n      [(selection)]=\"selection\"\r\n      [dataKey]=\"dataKey\"\r\n      [responsiveLayout]=\"responsiveLayout\"\r\n      [selectionMode]=\"selectionMode\"\r\n      [metaKeySelection]=\"metaKeySelection\"\r\n      [stripedMode]=\"stripedMode\"\r\n      (selectionChange)=\"selectionChange($event)\"\r\n      (rowSelect)=\"rowSelect($event)\"\r\n      (rowUnselect)=\"rowUnselect($event)\"\r\n      (headerCheckboxToggle)=\"headerCheckboxToggle($event)\"\r\n    >\r\n      <ng-template zyfraTableTemplate=\"header\">\r\n        <tr>\r\n          <th style=\"width: 32px\">\r\n            <zyfra-table-header-checkbox></zyfra-table-header-checkbox>\r\n          </th>\r\n          <th>Code</th>\r\n          <th>Name</th>\r\n          <th>Category</th>\r\n          <th>Quantity</th>\r\n        </tr>\r\n      </ng-template>\r\n\r\n      <ng-template zyfraTableTemplate=\"body\" let-product let-rowIndex=\"rowIndex\">\r\n        <tr [zyfraRow]=\"product\" [zyfraSelectableRow]=\"product\" [zyfraSelectableRowIndex]=\"rowIndex\">\r\n          <td>\r\n            <zyfra-table-checkbox [value]=\"product\"></zyfra-table-checkbox>\r\n          </td>\r\n          <td>{{ product.code }}</td>\r\n          <td>{{ product.name }}</td>\r\n          <td>{{ product.category }}</td>\r\n          <td style=\"text-align: right;\">{{ product.quantity }}</td>\r\n        </tr>\r\n      </ng-template>\r\n    </zyfra-table>\r\n  `,\r\n  props: {\r\n    ...args,\r\n    selectionChange: consoleLogAction('selectionChange'),\r\n    headerCheckboxToggle: consoleLogAction('headerCheckboxToggle'),\r\n    rowUnselect: (event): void => actions.rowUnselect({ data: event.data, ...event }),\r\n    rowSelect: (event): void => actions.rowSelect({ data: event.data, ...event }),\r\n  },\r\n})"
        }
      ],
      "libs/components/src/lib/tree-table/_story/stories/basic.stories.ts": [
        {
          "name": "actions",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "libs/components/src/lib/tree-table/_story/stories/basic.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "object",
          "defaultValue": "{\r\n  onNodeExpand: action('onNodeExpand'),\r\n  onNodeCollapse: action('onNodeCollapse'),\r\n  elementChange: action('elementChange'),\r\n}"
        },
        {
          "name": "Basic",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "libs/components/src/lib/tree-table/_story/stories/basic.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "defaultValue": "Template.bind({})"
        },
        {
          "name": "Template",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "libs/components/src/lib/tree-table/_story/stories/basic.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story<ZyfraTreeTableComponent>",
          "defaultValue": "args => ({\r\n  template: `\r\n    <zyfra-tree-table\r\n      [value]=\"value\"\r\n      [columns]=\"columns\"\r\n      [title]=\"title\"\r\n      [stripedMode]=\"stripedMode\"\r\n      (onNodeExpand)=\"onNodeExpand($event)\"\r\n      (onNodeCollapse)=\"onNodeCollapse($event)\"\r\n      (activeElementChange)=\"activeElementChange($event)\"\r\n    >\r\n      <ng-template zyfraTableTemplate=\"header\" let-columns>\r\n        <tr>\r\n          <th *ngFor=\"let col of columns\">{{ col.header }}</th>\r\n        </tr>\r\n      </ng-template>\r\n\r\n      <ng-template zyfraTableTemplate=\"body\" let-rowNode let-rowData=\"rowData\" let-columns=\"columns\">\r\n        <tr [zyfraRow]=\"rowData\" [zyfraTTRow]=\"rowNode\">\r\n          <td *ngFor=\"let col of columns; let i = index\">\r\n            <zyfra-tree-table-toggler [rowNode]=\"rowNode\" *ngIf=\"i === 0\"></zyfra-tree-table-toggler>\r\n            <ng-container *ngIf=\"i === 0\">\r\n              <span\r\n                class=\"zyfra-icon files-folder\"\r\n                *ngIf=\"rowNode.node.children && rowNode.node.children.length > 0; else docIcon\"\r\n                style=\"margin-right: 10px;\"\r\n              ></span>\r\n            </ng-container>\r\n            <span>{{ rowData[col.field ]}}</span>\r\n          </td>\r\n        </tr>\r\n      </ng-template>\r\n    </zyfra-tree-table>\r\n\r\n    <ng-template #docIcon>\r\n      <span class=\"zyfra-icon files-description-properties\" style=\"margin-right: 10px; font-size: 20px;\"></span>\r\n    </ng-template>\r\n  `,\r\n  props: {\r\n    ...args,\r\n    onNodeExpand: (event): void => actions.onNodeExpand({ node: event.node, ...event }),\r\n    onNodeCollapse: (event): void => actions.onNodeCollapse({ node: event.node, ...event }),\r\n    activeElementChange: actions.elementChange,\r\n  },\r\n})"
        }
      ],
      "libs/components/src/lib/tree-table/_story/stories/col-group.stories.ts": [
        {
          "name": "actions",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "libs/components/src/lib/tree-table/_story/stories/col-group.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "object",
          "defaultValue": "{\r\n  onNodeExpand: action('onNodeExpand'),\r\n  onNodeCollapse: action('onNodeCollapse'),\r\n}"
        },
        {
          "name": "ColGroup",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "libs/components/src/lib/tree-table/_story/stories/col-group.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "defaultValue": "Template.bind({})"
        },
        {
          "name": "Template",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "libs/components/src/lib/tree-table/_story/stories/col-group.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story<ZyfraTreeTableComponent>",
          "defaultValue": "args => ({\r\n  template: `\r\n    <zyfra-tree-table\r\n      [title]=\"title\"\r\n      [stripedMode]=\"stripedMode\"\r\n      [value]=\"value\"\r\n      [columns]=\"columns\"\r\n      [paginator]=\"paginator\"\r\n      [rows]=\"7\"\r\n      (onNodeExpand)=\"onNodeExpand($event)\"\r\n      (onNodeCollapse)=\"onNodeCollapse($event)\"\r\n    >\r\n      <ng-template zyfraTableTemplate=\"header\">\r\n        <tr>\r\n          <th rowspan=\"3\">Brand</th>\r\n          <th colspan=\"4\">Sale Rate</th>\r\n        </tr>\r\n        <tr>\r\n          <th colspan=\"2\">Sales</th>\r\n          <th colspan=\"2\">Profits</th>\r\n        </tr>\r\n        <tr>\r\n          <th>Last Year</th>\r\n          <th>This Year</th>\r\n          <th>Last Year</th>\r\n          <th>This Year</th>\r\n        </tr>\r\n      </ng-template>\r\n      <ng-template zyfraTableTemplate=\"body\" let-rowNode let-rowData=\"rowData\">\r\n        <tr [zyfraRow]=\"rowData\" [zyfraTTRow]=\"rowNode\">\r\n          <td>\r\n            <zyfra-tree-table-toggler [rowNode]=\"rowNode\"></zyfra-tree-table-toggler>\r\n            {{rowData.brand}}\r\n          </td>\r\n          <td style=\"text-align: right;\">{{rowData.lastYearSale}}</td>\r\n          <td style=\"text-align: right;\">{{rowData.thisYearSale}}</td>\r\n          <td style=\"text-align: right;\">{{rowData.lastYearProfit}}</td>\r\n          <td style=\"text-align: right;\">{{rowData.thisYearProfit}}</td>\r\n        </tr>\r\n      </ng-template>\r\n      <ng-template zyfraTableTemplate=\"footer\">\r\n        <tr>\r\n          <td colspan=\"3\">Totals</td>\r\n          <td style=\"text-align: right;\">$3,283,772</td>\r\n          <td style=\"text-align: right;\">$2,126,925</td>\r\n        </tr>\r\n      </ng-template>\r\n    </zyfra-tree-table>\r\n  `,\r\n  props: {\r\n    ...args,\r\n    onNodeExpand: (event): void => actions.onNodeExpand({ node: event.node, ...event }),\r\n    onNodeCollapse: (event): void => actions.onNodeCollapse({ node: event.node, ...event }),\r\n  },\r\n})"
        }
      ],
      "libs/components/src/lib/tree-table/_story/stories/edit.stories.ts": [
        {
          "name": "actions",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "libs/components/src/lib/tree-table/_story/stories/edit.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "object",
          "defaultValue": "{\r\n  onNodeExpand: action('onNodeExpand'),\r\n  onNodeCollapse: action('onNodeCollapse'),\r\n}"
        },
        {
          "name": "Edit",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "libs/components/src/lib/tree-table/_story/stories/edit.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "defaultValue": "Template.bind({})"
        },
        {
          "name": "Template",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "libs/components/src/lib/tree-table/_story/stories/edit.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story<ZyfraTreeTableComponent>",
          "defaultValue": "args => ({\r\n  template: `\r\n    <zyfra-tree-table\r\n      [value]=\"value\"\r\n      [columns]=\"columns\"\r\n      [title]=\"title\"\r\n      (editInit)=\"editInit($event)\"\r\n      (editComplete)=\"onEditComplete($event)\"\r\n      (editCancel)=\"onEditCancel($event)\"\r\n      (onNodeExpand)=\"onNodeExpand($event)\"\r\n      (onNodeCollapse)=\"onNodeCollapse($event)\"\r\n    >\r\n      <ng-template zyfraTableTemplate=\"header\" let-columns>\r\n        <tr>\r\n          <th *ngFor=\"let col of columns\">{{ col.header }}</th>\r\n        </tr>\r\n      </ng-template>\r\n\r\n      <ng-template zyfraTableTemplate=\"body\" let-rowNode let-rowData=\"rowData\" let-columns=\"columns\">\r\n        <tr [zyfraRow]=\"rowData\" [zyfraTTRow]=\"rowNode\">\r\n          <td\r\n            *ngFor=\"let col of columns; let i = index\"\r\n            zyfraTTEditableColumn\r\n          >\r\n            <zyfra-tree-table-toggler [rowNode]=\"rowNode\" *ngIf=\"i === 0\"></zyfra-tree-table-toggler>\r\n\r\n            <zyfra-tree-table-cell-editor [(value)]=\"rowData[col.field]\">\r\n              {{ rowData[col.field] }}\r\n            </zyfra-tree-table-cell-editor>\r\n          </td>\r\n        </tr>\r\n      </ng-template>\r\n    </zyfra-tree-table>\r\n  `,\r\n  props: {\r\n    ...args,\r\n    editInit: consoleLogAction('editInit'),\r\n    editComplete: consoleLogAction('editComplete'),\r\n    editCancel: consoleLogAction('editCancel'),\r\n    onNodeExpand: (event): void => actions.onNodeExpand({ node: event.node, ...event }),\r\n    onNodeCollapse: (event): void => actions.onNodeCollapse({ node: event.node, ...event }),\r\n  },\r\n})"
        }
      ],
      "libs/components/src/lib/tree-table/_story/stories/filter.stories.ts": [
        {
          "name": "actions",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "libs/components/src/lib/tree-table/_story/stories/filter.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "object",
          "defaultValue": "{\r\n  onNodeExpand: action('onNodeExpand'),\r\n  onNodeCollapse: action('onNodeCollapse'),\r\n}"
        },
        {
          "name": "Filter",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "libs/components/src/lib/tree-table/_story/stories/filter.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "defaultValue": "Template.bind({})"
        },
        {
          "name": "Template",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "libs/components/src/lib/tree-table/_story/stories/filter.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story<ZyfraTreeTableComponent>",
          "defaultValue": "args => ({\r\n  template: `\r\n    <zyfra-tree-table\r\n      #tt\r\n      [title]=\"title\"\r\n      [value]=\"value\"\r\n      [columns]=\"columns\"\r\n      (onFilter)=\"onFilter($event)\"\r\n      (onNodeExpand)=\"onNodeExpand($event)\"\r\n      (onNodeCollapse)=\"onNodeCollapse($event)\"\r\n    >\r\n      <ng-template zyfraTableTemplate=\"header\" let-columns>\r\n        <tr>\r\n          <th *ngFor=\"let col of columns\">\r\n            {{col.header}}\r\n          </th>\r\n        </tr>\r\n        <tr>\r\n          <th *ngFor=\"let col of columns\" zyfra-search-cell [field]=\"col.field\"></th>\r\n        </tr>\r\n      </ng-template>\r\n      <ng-template zyfraTableTemplate=\"body\" let-rowNode let-rowData=\"rowData\">\r\n        <tr [zyfraRow]=\"rowData\" [zyfraTTRow]=\"rowNode\">\r\n          <td *ngFor=\"let col of columns; let i = index\">\r\n            <zyfra-tree-table-toggler [rowNode]=\"rowNode\" *ngIf=\"i == 0\"></zyfra-tree-table-toggler>\r\n            {{rowData[col.field]}}\r\n          </td>\r\n        </tr>\r\n      </ng-template>\r\n      <ng-template zyfraTableTemplate=\"emptymessage\">\r\n        <tr>\r\n          <td [attr.colspan]=\"cols.length\">No data found.</td>\r\n        </tr>\r\n      </ng-template>\r\n    </zyfra-tree-table>\r\n  `,\r\n  props: {\r\n    ...args,\r\n    onFilter: consoleLogAction('onFilter'),\r\n    onNodeExpand: (event): void => actions.onNodeExpand({ node: event.node, ...event }),\r\n    onNodeCollapse: (event): void => actions.onNodeCollapse({ node: event.node, ...event }),\r\n  },\r\n})"
        }
      ],
      "libs/components/src/lib/tree-table/_story/stories/scroll.stories.ts": [
        {
          "name": "actions",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "libs/components/src/lib/tree-table/_story/stories/scroll.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "object",
          "defaultValue": "{\r\n  onNodeExpand: action('onNodeExpand'),\r\n  onNodeCollapse: action('onNodeCollapse'),\r\n}"
        },
        {
          "name": "Scroll",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "libs/components/src/lib/tree-table/_story/stories/scroll.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "defaultValue": "Template.bind({})"
        },
        {
          "name": "Template",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "libs/components/src/lib/tree-table/_story/stories/scroll.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story<ZyfraTreeTableComponent>",
          "defaultValue": "args => ({\r\n  template: `\r\n    <zyfra-tree-table\r\n      [title]=\"title\"\r\n      [value]=\"value\"\r\n      [columns]=\"columns\"\r\n      [scrollable]=\"scrollable\"\r\n      [scrollHeight]=\"scrollHeight\"\r\n      (onNodeExpand)=\"onNodeExpand($event)\"\r\n      (onNodeCollapse)=\"onNodeCollapse($event)\"\r\n    >\r\n      <ng-template zyfraTableTemplate=\"header\" let-columns>\r\n        <tr>\r\n          <th *ngFor=\"let col of columns\">\r\n            {{col.header}}\r\n          </th>\r\n        </tr>\r\n      </ng-template>\r\n      <ng-template zyfraTableTemplate=\"body\" let-rowNode let-rowData=\"rowData\" let-columns=\"columns\">\r\n        <tr [zyfraRow]=\"rowData\" [zyfraTTRow]=\"rowNode\">\r\n          <td *ngFor=\"let col of columns; let i = index\">\r\n            <zyfra-tree-table-toggler [rowNode]=\"rowNode\" *ngIf=\"i == 0\"></zyfra-tree-table-toggler>\r\n            {{rowData[col.field]}}\r\n          </td>\r\n        </tr>\r\n      </ng-template>\r\n    </zyfra-tree-table>\r\n  `,\r\n  props: {\r\n    ...args,\r\n    onNodeExpand: (event): void => actions.onNodeExpand({ node: event.node, ...event }),\r\n    onNodeCollapse: (event): void => actions.onNodeCollapse({ node: event.node, ...event }),\r\n  },\r\n})"
        }
      ],
      "libs/components/src/lib/tree-table/_story/stories/reorder.stories.ts": [
        {
          "name": "actions",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "libs/components/src/lib/tree-table/_story/stories/reorder.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "object",
          "defaultValue": "{\r\n  onNodeExpand: action('onNodeExpand'),\r\n  onNodeCollapse: action('onNodeCollapse'),\r\n}"
        },
        {
          "name": "Reorder",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "libs/components/src/lib/tree-table/_story/stories/reorder.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "defaultValue": "Template.bind({})"
        },
        {
          "name": "Template",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "libs/components/src/lib/tree-table/_story/stories/reorder.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story<ZyfraTreeTableComponent>",
          "defaultValue": "args => ({\r\n  template: `\r\n    <zyfra-tree-table\r\n      [title]=\"title\"\r\n      [value]=\"value\"\r\n      [columns]=\"columns\"\r\n      [reorderableColumns]=\"reorderableColumns\"\r\n      (colReorder)=\"colReorder($event)\"\r\n      (onNodeExpand)=\"onNodeExpand($event)\"\r\n      (onNodeCollapse)=\"onNodeCollapse($event)\"\r\n    >\r\n      <ng-template zyfraTableTemplate=\"header\" let-columns>\r\n        <tr>\r\n          <th *ngFor=\"let col of columns\" zyfraTTReorderableColumn>\r\n            {{col.header}}\r\n          </th>\r\n        </tr>\r\n      </ng-template>\r\n      <ng-template zyfraTableTemplate=\"body\" let-rowNode let-rowData=\"rowData\" let-columns=\"columns\">\r\n        <tr [zyfraRow]=\"rowData\" [zyfraTTRow]=\"rowNode\">\r\n          <td *ngFor=\"let col of columns; let i = index\">\r\n            <zyfra-tree-table-toggler [rowNode]=\"rowNode\" *ngIf=\"i == 0\"></zyfra-tree-table-toggler>\r\n            {{rowData[col.field]}}\r\n          </td>\r\n        </tr>\r\n      </ng-template>\r\n    </zyfra-tree-table>\r\n  `,\r\n  props: {\r\n    ...args,\r\n    colReorder: consoleLogAction('colReorder'),\r\n    onNodeExpand: (event): void => actions.onNodeExpand({ node: event.node, ...event }),\r\n    onNodeCollapse: (event): void => actions.onNodeCollapse({ node: event.node, ...event }),\r\n  },\r\n})"
        }
      ],
      "libs/components/src/lib/tree-table/_story/stories/selection.stories.ts": [
        {
          "name": "actions",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "libs/components/src/lib/tree-table/_story/stories/selection.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "object",
          "defaultValue": "{\r\n  onNodeSelect: action('onNodeSelect'),\r\n  onNodeUnselect: action('onNodeUnselect'),\r\n  onNodeExpand: action('onNodeExpand'),\r\n  onNodeCollapse: action('onNodeCollapse'),\r\n  onHeaderCheckboxToggle: action('onHeaderCheckboxToggle'),\r\n}"
        },
        {
          "name": "Selection",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "libs/components/src/lib/tree-table/_story/stories/selection.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "defaultValue": "Template.bind({})"
        },
        {
          "name": "Template",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "libs/components/src/lib/tree-table/_story/stories/selection.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story<ZyfraTreeTableComponent>",
          "defaultValue": "args => ({\r\n  template: `\r\n    <zyfra-tree-table\r\n      #table\r\n      [title]=\"title\"\r\n      [value]=\"value\"\r\n      [columns]=\"columns\"\r\n      [selectionMode]=\"selectionMode\"\r\n      [stripedMode]=\"stripedMode\"\r\n      [(selection)]=\"selection\"\r\n      (onNodeSelect)=\"onNodeSelect($event)\"\r\n      (onNodeUnselect)=\"onNodeUnselect($event)\"\r\n      (selectionChange)=\"selectionChange($event)\"\r\n      (onHeaderCheckboxToggle)=\"onHeaderCheckboxToggle($event)\"\r\n      (onNodeExpand)=\"onNodeExpand($event)\"\r\n      (onNodeCollapse)=\"onNodeCollapse($event)\"\r\n    >\r\n      <ng-template zyfraTableTemplate=\"header\" let-columns>\r\n        <tr>\r\n          <th><zyfra-tree-table-header-checkbox style=\"margin-right: 6px\"></zyfra-tree-table-header-checkbox> Имя</th>\r\n          <th>Размер</th>\r\n          <th>Тип</th>\r\n        </tr>\r\n      </ng-template>\r\n      <ng-template zyfraTableTemplate=\"body\" let-rowNode let-rowData=\"rowData\" let-columns=\"columns\">\r\n        <tr [zyfraRow]=\"rowData\" [zyfraTTRow]=\"rowNode\" [zyfraTTSelectableRow]=\"rowNode\">\r\n          <td *ngFor=\"let col of columns; let i = index\">\r\n            <zyfra-tree-table-toggler [rowNode]=\"rowNode\" *ngIf=\"i == 0\"></zyfra-tree-table-toggler>\r\n            <zyfra-tree-table-checkbox [value]=\"rowNode\" *ngIf=\"i == 0\"></zyfra-tree-table-checkbox>\r\n            <ng-container *ngIf=\"i === 0\">\r\n              <span\r\n                class=\"zyfra-icon files-folder\"\r\n                *ngIf=\"rowNode.node.children && rowNode.node.children.length > 0; else docIcon\"\r\n                style=\"margin-right: 10px;\"\r\n              ></span>\r\n            </ng-container>\r\n            <span>{{ rowData[col.field] }}</span>\r\n          </td>\r\n        </tr>\r\n      </ng-template>\r\n    </zyfra-tree-table>\r\n\r\n    <ng-template #docIcon>\r\n      <span class=\"zyfra-icon files-description-properties\" style=\"margin-right: 10px; font-size: 20px;\"></span>\r\n    </ng-template>\r\n  `,\r\n  props: {\r\n    ...args,\r\n    onNodeSelect: (event): void => actions.onNodeSelect({ node: event.node, ...event }),\r\n    onNodeUnselect: (event): void => actions.onNodeUnselect({ node: event.node, ...event }),\r\n    onNodeExpand: (event): void => actions.onNodeExpand({ node: event.node, ...event }),\r\n    onNodeCollapse: (event): void => actions.onNodeCollapse({ node: event.node, ...event }),\r\n    selectionChange: consoleLogAction('selectionChange'),\r\n    onHeaderCheckboxToggle: actions.onHeaderCheckboxToggle,\r\n  },\r\n})"
        }
      ],
      "libs/components/src/lib/tree-table/_story/stories/sort.stories.ts": [
        {
          "name": "actions",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "libs/components/src/lib/tree-table/_story/stories/sort.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "object",
          "defaultValue": "{\r\n  onNodeExpand: action('onNodeExpand'),\r\n  onNodeCollapse: action('onNodeCollapse'),\r\n}"
        },
        {
          "name": "Sort",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "libs/components/src/lib/tree-table/_story/stories/sort.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "defaultValue": "Template.bind({})"
        },
        {
          "name": "Template",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "libs/components/src/lib/tree-table/_story/stories/sort.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story<ZyfraTreeTableComponent>",
          "defaultValue": "args => ({\r\n  template: `\r\n    <zyfra-button label=\"Reset sort\" (onClick)=\"table.resetSort()\"></zyfra-button>\r\n\r\n    <br><br>\r\n\r\n    <zyfra-tree-table\r\n      #table\r\n      [title]=\"title\"\r\n      [value]=\"value\"\r\n      [columns]=\"columns\"\r\n      (onSort)=\"onSort($event)\"\r\n      (onNodeExpand)=\"onNodeExpand($event)\"\r\n      (onNodeCollapse)=\"onNodeCollapse($event)\"\r\n    >\r\n      <ng-template zyfraTableTemplate=\"header\" let-columns>\r\n        <tr>\r\n          <th *ngFor=\"let col of columns\" [zyfraTTSortableColumn]=\"col.field\">\r\n            {{col.header}}\r\n            <zyfra-tree-table-sort-icon [field]=\"col.field\"></zyfra-tree-table-sort-icon>\r\n          </th>\r\n        </tr>\r\n      </ng-template>\r\n      <ng-template zyfraTableTemplate=\"body\" let-rowNode let-rowData=\"rowData\" let-columns=\"columns\">\r\n        <tr [zyfraRow]=\"rowData\" [zyfraTTRow]=\"rowNode\">\r\n          <td *ngFor=\"let col of columns; let i = index\">\r\n            <zyfra-tree-table-toggler [rowNode]=\"rowNode\" *ngIf=\"i == 0\"></zyfra-tree-table-toggler>\r\n            <span>{{rowData[col.field]}}</span>\r\n          </td>\r\n        </tr>\r\n      </ng-template>\r\n    </zyfra-tree-table>\r\n  `,\r\n  props: {\r\n    ...args,\r\n    onSort: consoleLogAction('onSort'),\r\n    onNodeExpand: (event): void => actions.onNodeExpand({ node: event.node, ...event }),\r\n    onNodeCollapse: (event): void => actions.onNodeCollapse({ node: event.node, ...event }),\r\n  },\r\n})"
        }
      ],
      "libs/components/src/lib/message/zyfra-message.component.stories.ts": [
        {
          "name": "Animation",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "libs/components/src/lib/message/zyfra-message.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "defaultValue": "Template.bind({})"
        },
        {
          "name": "MultiMessages",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "libs/components/src/lib/message/zyfra-message.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "defaultValue": "Template.bind({})"
        },
        {
          "name": "Simple",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "libs/components/src/lib/message/zyfra-message.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "defaultValue": "Template.bind({})"
        },
        {
          "name": "Template",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "libs/components/src/lib/message/zyfra-message.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story<ZyfraMessageComponent>",
          "defaultValue": "(args) => ({\r\n  component: ZyfraMessageComponent,\r\n  props: args,\r\n})"
        }
      ],
      "libs/components/src/lib/toast/zyfra-toast.component.stories.ts": [
        {
          "name": "Animation",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "libs/components/src/lib/toast/zyfra-toast.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "defaultValue": "Template.bind({})"
        },
        {
          "name": "CustomTemplate",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "libs/components/src/lib/toast/zyfra-toast.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "defaultValue": "Template.bind({})"
        },
        {
          "name": "NoIcons",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "libs/components/src/lib/toast/zyfra-toast.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "defaultValue": "Template.bind({})"
        },
        {
          "name": "Simple",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "libs/components/src/lib/toast/zyfra-toast.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "defaultValue": "Template.bind({})"
        },
        {
          "name": "Template",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "libs/components/src/lib/toast/zyfra-toast.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story<ZyfraToastComponent>",
          "defaultValue": "args => ({\r\n  template: `\r\n  <toast-container\r\n  [key]=\"key\"\r\n  [position]=\"position\"\r\n  [showTransitionOptions]=\"showTransitionOptions\"\r\n  [preventOpenDuplicates]=\"preventOpenDuplicates\"\r\n  [preventDuplicates]=\"preventDuplicates\"\r\n  [useCustomTemplate]=\"useCustomTemplate\"\r\n  ></toast-container>\r\n  `,\r\n  props: {\r\n    ...args,\r\n  },\r\n})"
        }
      ],
      "libs/components/src/lib/split-button/zyfra-split-button.component.stories.ts": [
        {
          "name": "AnimationSpeed",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "libs/components/src/lib/split-button/zyfra-split-button.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "defaultValue": "Template.bind({})"
        },
        {
          "name": "Disabled",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "libs/components/src/lib/split-button/zyfra-split-button.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "defaultValue": "Template.bind({})"
        },
        {
          "name": "items",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "libs/components/src/lib/split-button/zyfra-split-button.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "[]",
          "defaultValue": "[\r\n  { label: 'Item1', icon: 'zyfra-icon arrows-replay' },\r\n  { label: 'Item2', icon: 'zyfra-icon cancel-close' },\r\n  { separator: true },\r\n  { label: 'Item3', icon: 'zyfra-icon cancel-close' },\r\n]"
        },
        {
          "name": "Simple",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "libs/components/src/lib/split-button/zyfra-split-button.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "defaultValue": "Template.bind({})"
        },
        {
          "name": "SimpleMini",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "libs/components/src/lib/split-button/zyfra-split-button.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "defaultValue": "Template.bind({})"
        },
        {
          "name": "Template",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "libs/components/src/lib/split-button/zyfra-split-button.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story<ZyfraSplitButtonComponent>",
          "defaultValue": "(args) => ({\r\n  component: ZyfraSplitButtonComponent,\r\n  props: args,\r\n})"
        },
        {
          "name": "WarningWithIcon",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "libs/components/src/lib/split-button/zyfra-split-button.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "defaultValue": "Template.bind({})"
        }
      ],
      "libs/components/src/lib/dropdown/zyfra-dropdown.component.stories.ts": [
        {
          "name": "AppendToBody",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "libs/components/src/lib/dropdown/zyfra-dropdown.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "defaultValue": "Template.bind({})"
        },
        {
          "name": "Filter",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "libs/components/src/lib/dropdown/zyfra-dropdown.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "defaultValue": "Template.bind({})"
        },
        {
          "name": "Group",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "libs/components/src/lib/dropdown/zyfra-dropdown.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "defaultValue": "Template.bind({})"
        },
        {
          "name": "items",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "libs/components/src/lib/dropdown/zyfra-dropdown.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "SelectItem[]",
          "defaultValue": "[]"
        },
        {
          "name": "Simple",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "libs/components/src/lib/dropdown/zyfra-dropdown.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "defaultValue": "Template.bind({})"
        },
        {
          "name": "Template",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "libs/components/src/lib/dropdown/zyfra-dropdown.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story<ZyfraDropdownComponent>",
          "defaultValue": "args => ({\r\n  component: ZyfraDropdownComponent,\r\n  template: `<div style=\"height: 100px; padding: 1rem;\" [ngStyle]=\"{'border': appendTo && '2px solid red', 'overflow': appendTo && 'hidden'}\">\r\n    <zyfra-dropdown\r\n      [(ngModel)]=\"value\"\r\n      [options]=\"options\"\r\n      [optionLabel]=\"optionLabel\"\r\n      [placeholder]=\"placeholder\"\r\n      [showClear]=\"showClear\"\r\n      [label]=\"label\"\r\n      [style]=\"{ width: '360px' }\"\r\n      [group]=\"group\"\r\n      [appendTo]=\"appendTo\"\r\n      [mini]=\"mini\"\r\n      [virtualScroll]=\"virtualScroll\"\r\n      [itemSize]=\"itemSize\"\r\n      [filter]=\"filter\"\r\n      (onChange)=\"onChange($event)\"\r\n      (onClick)=\"onClick($event)\"\r\n      (onFocus)=\"onFocus($event)\"\r\n      (onBlur)=\"onBlur($event)\"\r\n      (onShow)=\"onShow($event)\"\r\n      (onHide)=\"onHide($event)\"\r\n    ></zyfra-dropdown>\r\n    </div>\r\n    <div style=\"font-family: var(--fontFamily); margin-top: 20px;\">\r\n      <p>Selected value:</p>\r\n      <pre style=\"font-family: var(--fontFamily);\">{{value | json}}</pre>\r\n    </div>\r\n    <div>\r\n      Привязка к body: <b>{{appendTo ? 'Есть' : 'Нет'}}</b><br>\r\n      <i *ngIf='appendTo'>Граница красного цвета, пример родительского контейнера c overflow hidden</i>\r\n    </div>\r\n  `,\r\n  props: {\r\n    ...args,\r\n    onChange: event => action('onChange')({ value: event.value, ...event }),\r\n    onClick: action('onClick'),\r\n    onFocus: action('onFocus'),\r\n    onBlur: action('onBlur'),\r\n    onShow: action('onShow'),\r\n    onHide: action('onHide'),\r\n  },\r\n})"
        },
        {
          "name": "VirtualScroll",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "libs/components/src/lib/dropdown/zyfra-dropdown.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "defaultValue": "Template.bind({})"
        }
      ],
      "libs/components/src/lib/nav-menu/dataForStories.ts": [
        {
          "name": "basic",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "libs/components/src/lib/nav-menu/dataForStories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "ZyfraMenuItem[]",
          "defaultValue": "[\r\n  {label: 'Наименование ячейки 1'},\r\n  {label: 'Наименование ячейки 2',  routerLink: ['/page2']},\r\n  {label: 'Наименование ячейки 3 длиннее остальных'},\r\n  {label: 'Наименование ячейки 4'},\r\n  {label: 'Наименование ячейки 5'},\r\n]"
        },
        {
          "name": "basicWithIcons",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "libs/components/src/lib/nav-menu/dataForStories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "ZyfraMenuItem[]",
          "defaultValue": "[\r\n  {label: 'Наименование ячейки 1', icon: 'zyfra-icon files-file'},\r\n  {label: 'Наименование ячейки 2', icon: 'zyfra-icon files-file'},\r\n  {label: 'Наименование ячейки 3 длиннее остальных', icon: 'zyfra-icon files-file',  routerLink: ['/page3']},\r\n  {label: 'Наименование ячейки 4', icon: 'zyfra-icon files-file'},\r\n  {label: 'Наименование ячейки 5', icon: 'zyfra-icon files-file'},\r\n]"
        },
        {
          "name": "subItems",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "libs/components/src/lib/nav-menu/dataForStories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "ZyfraMenuItem[]",
          "defaultValue": "[\r\n  {label: 'Наименование ячейки 1', icon: 'zyfra-icon files-file'},\r\n  {\r\n    label: 'Наименование ячейки 2',\r\n    icon: 'zyfra-icon files-file',\r\n    badge: 'warning',\r\n    badgeStyleClass: 'p-badge-dot',\r\n    items: [\r\n      {\r\n        label: 'Ячейка второго уровня 1 длиннее остальных',\r\n        icon: 'zyfra-icon files-file',\r\n      },\r\n      {\r\n        label: 'Ячейка второго уровня 2',\r\n        icon: 'zyfra-icon files-file',\r\n        items: [\r\n          {\r\n            label: 'Ячейка третьего уровня 1 длиннее остальных',\r\n            icon: 'zyfra-icon files-file',\r\n            badge: 'danger',\r\n            badgeStyleClass: 'p-badge-dot',\r\n            routerLink: ['/page1']\r\n          },\r\n          {\r\n            label: 'Ячейка третьего уровня 2',\r\n            icon: 'zyfra-icon files-file',\r\n            items: [\r\n              {\r\n                label: 'Ячейка четвертого уровня 1',\r\n                icon: 'zyfra-icon files-file',\r\n                items: [\r\n                  {\r\n                    label: 'Ячейка пятого уровня 1',\r\n                    icon: 'zyfra-icon files-file',\r\n                  },\r\n                  {\r\n                    label: 'Ячейка пятого уровня 2 длиннее остальных',\r\n                    icon: 'zyfra-icon files-file',\r\n                  }\r\n                ]\r\n              },\r\n              {\r\n                label: 'Ячейка четвертого уровня 2',\r\n                icon: 'zyfra-icon files-file',\r\n              },\r\n              {\r\n                label: 'Ячейка четвертого уровня 3',\r\n                icon: 'zyfra-icon files-file',\r\n              }\r\n            ]\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        label: 'Ячейка второго уровня 3',\r\n        icon: 'zyfra-icon files-file',\r\n      }\r\n    ]\r\n  },\r\n  {label: 'Наименование ячейки 3', icon: 'zyfra-icon files-file'},\r\n  {\r\n    label: 'Наименование ячейки 4',\r\n    icon: 'zyfra-icon files-file',\r\n    badge: 'info',\r\n    badgeStyleClass: 'p-badge-dot',\r\n    items: [\r\n      {\r\n        label: 'Ячейка второго уровня 1',\r\n        icon: 'zyfra-icon files-file',\r\n      },\r\n      {\r\n        label: 'Ячейка второго уровня 2 длиннее остальных',\r\n        icon: 'zyfra-icon files-file'\r\n      }\r\n    ]\r\n  },\r\n  {label: 'Наименование ячейки 5', icon: 'zyfra-icon files-file'},\r\n]"
        },
        {
          "name": "subItemsRubricator",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "libs/components/src/lib/nav-menu/dataForStories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "ZyfraMenuItem[]",
          "defaultValue": "[\r\n  {label: 'Наименование ячейки 1', icon: 'zyfra-icon files-file'},\r\n  {\r\n    label: 'Наименование ячейки 2',\r\n    icon: 'zyfra-icon files-file',\r\n    items: [\r\n      {\r\n        label: 'A-Ячейка второго уровня 1',\r\n        icon: 'zyfra-icon files-file',\r\n      },\r\n      {\r\n        label: 'Д-Ячейка второго уровня 2',\r\n        icon: 'zyfra-icon files-file',\r\n        items: [\r\n          {\r\n            label: 'Б-Ячейка третьего уровня 1',\r\n            icon: 'zyfra-icon files-file',\r\n          },\r\n          {\r\n            label: 'Ячейка третьего уровня 2',\r\n            icon: 'zyfra-icon files-file',\r\n            items: [\r\n              {\r\n                label: 'В-Ячейка четвертого уровня 1',\r\n                icon: 'zyfra-icon files-file',\r\n                items: [\r\n                  {\r\n                    label: 'Ц-Ячейка пятого уровня 1',\r\n                    icon: 'zyfra-icon files-file',\r\n                  },\r\n                  {\r\n                    label: 'Э-Ячейка пятого уровня 2',\r\n                    icon: 'zyfra-icon files-file',\r\n                  }\r\n                ]\r\n              },\r\n              {\r\n                label: 'Ж-Ячейка четвертого уровня 2',\r\n                icon: 'zyfra-icon files-file',\r\n              },\r\n              {\r\n                label: 'М-Ячейка четвертого уровня 3',\r\n                icon: 'zyfra-icon files-file',\r\n              }\r\n            ]\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        label: 'У-Ячейка второго уровня 3',\r\n        icon: 'zyfra-icon files-file',\r\n      }\r\n    ]\r\n  },\r\n  {label: 'Наименование ячейки 3', icon: 'zyfra-icon files-file'},\r\n  {\r\n    label: 'Наименование ячейки 4',\r\n    icon: 'zyfra-icon files-file',\r\n    items: [\r\n      {\r\n        label: 'Ячейка второго уровня 1',\r\n        icon: 'zyfra-icon files-file',\r\n      },\r\n      {\r\n        label: 'Ячейка второго уровня 2',\r\n        icon: 'zyfra-icon files-file'\r\n      }\r\n    ]\r\n  },\r\n  {label: 'Наименование ячейки 5', icon: 'zyfra-icon files-file'},\r\n]"
        }
      ],
      "libs/components/src/lib/checkbox/zyfra-checkbox.component.stories.ts": [
        {
          "name": "Basic",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "libs/components/src/lib/checkbox/zyfra-checkbox.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "defaultValue": "Template.bind({})"
        },
        {
          "name": "CheckboxMultipleTemplate",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "libs/components/src/lib/checkbox/zyfra-checkbox.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "args => ({\r\n  template: `\r\n  <zyfra-checkbox-multiple></zyfra-checkbox-multiple>\r\n  `,\r\n  props: {\r\n    ...args,\r\n  },\r\n})"
        },
        {
          "name": "CheckboxWithFormControlComponentTemplate",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "libs/components/src/lib/checkbox/zyfra-checkbox.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story<ZyfraCheckboxComponent>",
          "defaultValue": "args => ({\r\n  template: `\r\n    <div><zyfra-checkbox label=\"Чекбокс с FormControl\" [formControl]=\"formControl\"></zyfra-checkbox></div>\r\n    <div style=\"font-family: var(--fontFamily); margin-top: 20px;\">(Значение чекбокса: {{formControl?.value === undefined ? 'undefined' : formControl?.value}})</div>\r\n    <br>\r\n    <br>\r\n    <zyfra-button [style]=\"{ 'margin-right': '5px' }\" label=\"toggle disable/enable\" (click)=\"toggleStatus()\"></zyfra-button>\r\n    <zyfra-button label=\"toggle true/false\" (click)=\"toggleValue()\"></zyfra-button>\r\n  `,\r\n  props: {\r\n    ...args,\r\n    formControl: new FormControl(false),\r\n    toggleStatus(): void {\r\n      if (this.formControl.disabled) {\r\n        this.formControl.enable();\r\n      } else {\r\n        this.formControl.disable();\r\n      }\r\n    },\r\n    toggleValue(): void {\r\n      this.formControl.setValue(!this.formControl.value);\r\n    },\r\n  },\r\n})"
        },
        {
          "name": "CustomIcon",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "libs/components/src/lib/checkbox/zyfra-checkbox.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "defaultValue": "Template.bind({})"
        },
        {
          "name": "Multiple",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "libs/components/src/lib/checkbox/zyfra-checkbox.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "defaultValue": "CheckboxMultipleTemplate.bind({})"
        },
        {
          "name": "Template",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "libs/components/src/lib/checkbox/zyfra-checkbox.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story<ZyfraCheckboxComponent>",
          "defaultValue": "args => ({\r\n  template: `<div>\r\n    <zyfra-checkbox\r\n      [formControl]=\"formControl\"\r\n      [name]=\"name\"\r\n      [value]=\"value\"\r\n      [label]=\"label\"\r\n      [disabledControl]=\"disabledControl\"\r\n      [binary]=\"binary\"\r\n      [tabindex]=\"tabindex\"\r\n      [inputId]=\"inputId\"\r\n      [ariaLabelledBy]=\"ariaLabelledBy\"\r\n      [style]=\"style\"\r\n      [styleClass]=\"styleClass\"\r\n      [labelStyleClass]=\"labelStyleClass\"\r\n      [checkboxIcon]=\"checkboxIcon\"\r\n      [readonly]=\"readonly\"\r\n      [required]=\"required\"\r\n      [trueValue]=\"trueValue\"\r\n      [falseValue]=\"falseValue\"\r\n    ></zyfra-checkbox>\r\n    </div>\r\n    <div style=\"font-family: var(--fontFamily); margin-top: 20px;\">(Значение чекбокса: {{formControl?.value === undefined ? 'undefined' : formControl?.value}})</div>\r\n  `,\r\n  props: {\r\n    ...args,\r\n    formControl: new FormControl(true),\r\n  },\r\n})"
        },
        {
          "name": "WithFormControl",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "libs/components/src/lib/checkbox/zyfra-checkbox.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "defaultValue": "CheckboxWithFormControlComponentTemplate.bind({})"
        }
      ],
      "libs/components/src/lib/input-mask/zyfra-input-mask.component.stories.ts": [
        {
          "name": "Basic",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "libs/components/src/lib/input-mask/zyfra-input-mask.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "defaultValue": "Template.bind({})"
        },
        {
          "name": "Date",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "libs/components/src/lib/input-mask/zyfra-input-mask.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "defaultValue": "Template.bind({})"
        },
        {
          "name": "Phone",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "libs/components/src/lib/input-mask/zyfra-input-mask.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "defaultValue": "Template.bind({})"
        },
        {
          "name": "PhoneExt",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "libs/components/src/lib/input-mask/zyfra-input-mask.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "defaultValue": "Template.bind({})"
        },
        {
          "name": "SerialNumber",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "libs/components/src/lib/input-mask/zyfra-input-mask.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "defaultValue": "Template.bind({})"
        },
        {
          "name": "SSN",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "libs/components/src/lib/input-mask/zyfra-input-mask.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "defaultValue": "Template.bind({})"
        },
        {
          "name": "Template",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "libs/components/src/lib/input-mask/zyfra-input-mask.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story<ZyfraInputMaskComponent>",
          "defaultValue": "(args) => ({\r\n  component: ZyfraInputMaskComponent,\r\n  template: `\r\n  <zyfra-input-mask\r\n    [label]=\"label\"\r\n    [(ngModel)]=\"ngModel\"\r\n    [mask]=\"mask\"\r\n    [slotChar]=\"slotChar\"\r\n    [placeholder]=\"placeholder\"\r\n    (onBlur)=\"onBlur($event)\"\r\n    (onFocus)=\"onFocus($event)\"\r\n    (onComplete)=\"onComplete($event)\"\r\n    (onKeydown)=\"onKeydown($event)\"\r\n    (onInput)=\"onInput($event)\"\r\n></zyfra-input-mask>\r\n  `,\r\n  props: {\r\n    ...args,\r\n    onBlur: action('onBlur'),\r\n    onFocus: action('onFocus'),\r\n    onComplete: action('onComplete'),\r\n    onKeydown: action('onKeydown'),\r\n    onInput: action('onInput'),\r\n  },\r\n})"
        }
      ],
      "libs/components/src/lib/input-number/zyfra-input-number.component.stories.ts": [
        {
          "name": "Basic",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "libs/components/src/lib/input-number/zyfra-input-number.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "defaultValue": "Template.bind({})"
        },
        {
          "name": "Currency",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "libs/components/src/lib/input-number/zyfra-input-number.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "defaultValue": "Template.bind({})"
        },
        {
          "name": "Decimal",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "libs/components/src/lib/input-number/zyfra-input-number.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "defaultValue": "Template.bind({})"
        },
        {
          "name": "Template",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "libs/components/src/lib/input-number/zyfra-input-number.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story<ZyfraInputNumberComponent>",
          "defaultValue": "(args) => ({\r\n  component: ZyfraInputNumberComponent,\r\n  template: `\r\n    <zyfra-input-number\r\n      [(ngModel)]=\"value\"\r\n      [showButtons]=\"showButtons\"\r\n      [mode]=\"mode\"\r\n      [currency]=\"currency\"\r\n      [label]=\"label\"\r\n      [placeholder]=\"placeholder\"\r\n      (onFocus)=\"onFocus($event)\"\r\n      (onBlur)=\"onBlur($event)\"\r\n      (onInput)=\"onInput($event)\"\r\n    ></zyfra-input-number>\r\n  `,\r\n  props: {\r\n    ...args,\r\n    onFocus: action('onFocus'),\r\n    onBlur: action('onBlur'),\r\n    onInput: action('onInput'),\r\n  },\r\n})"
        }
      ],
      "libs/components/src/lib/input-switch/zyfra-input-switch.component.stories.ts": [
        {
          "name": "Basic",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "libs/components/src/lib/input-switch/zyfra-input-switch.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "defaultValue": "Template.bind({})"
        },
        {
          "name": "Template",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "libs/components/src/lib/input-switch/zyfra-input-switch.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story<ZyfraInputSwitchComponent>",
          "defaultValue": "(args) => ({\r\n  component: ZyfraInputSwitchComponent,\r\n  props: args,\r\n  template: `\r\n<zyfra-input-switch [(ngModel)]=\"checked\"></zyfra-input-switch>`,\r\n})"
        }
      ],
      "libs/components/src/lib/paginator/zyfra-paginator.component.stories.ts": [
        {
          "name": "Basic",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "libs/components/src/lib/paginator/zyfra-paginator.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "defaultValue": "Template.bind({})"
        },
        {
          "name": "Template",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "libs/components/src/lib/paginator/zyfra-paginator.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story<ZyfraPaginatorComponent>",
          "defaultValue": "(args) => ({\r\n  component: ZyfraPaginatorComponent,\r\n  props: args,\r\n})"
        },
        {
          "name": "WithPageOptions",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "libs/components/src/lib/paginator/zyfra-paginator.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "defaultValue": "Template.bind({})"
        }
      ],
      "libs/components/src/lib/spinner/zyfra-spinner.component.stories.ts": [
        {
          "name": "Basic",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "libs/components/src/lib/spinner/zyfra-spinner.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "defaultValue": "Template.bind({})"
        },
        {
          "name": "Size",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "libs/components/src/lib/spinner/zyfra-spinner.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "defaultValue": "Template.bind({})"
        },
        {
          "name": "Style",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "libs/components/src/lib/spinner/zyfra-spinner.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "defaultValue": "Template.bind({})"
        },
        {
          "name": "Template",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "libs/components/src/lib/spinner/zyfra-spinner.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story<ZyfraSpinnerComponent>",
          "defaultValue": "(args) => ({\r\n  component: ZyfraSpinnerComponent,\r\n  props: args,\r\n})"
        }
      ],
      "libs/components/src/lib/datepicker/calendar/zyfra-calendar.component.stories.ts": [
        {
          "name": "Basic",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "libs/components/src/lib/datepicker/calendar/zyfra-calendar.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "defaultValue": "Template.bind({})"
        },
        {
          "name": "ButtonBar",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "libs/components/src/lib/datepicker/calendar/zyfra-calendar.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "defaultValue": "Template.bind({})"
        },
        {
          "name": "CustomButtons",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "libs/components/src/lib/datepicker/calendar/zyfra-calendar.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "defaultValue": "CustomTemplate.bind({})"
        },
        {
          "name": "CustomTemplate",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "libs/components/src/lib/datepicker/calendar/zyfra-calendar.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "args => ({\r\n  component: ZyfraCalendarComponent,\r\n  props: args,\r\n  template: `\r\n  <zyfra-custom-calendar [placeholder]='placeholder' [label]='label' [times]='times' [selectedTime]='selectedTime'></zyfra-custom-calendar>\r\n  `,\r\n})"
        },
        {
          "name": "DateFormat",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "libs/components/src/lib/datepicker/calendar/zyfra-calendar.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "defaultValue": "Template.bind({})"
        },
        {
          "name": "DisabledDays",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "libs/components/src/lib/datepicker/calendar/zyfra-calendar.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "defaultValue": "Template.bind({})"
        },
        {
          "name": "Icon",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "libs/components/src/lib/datepicker/calendar/zyfra-calendar.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "defaultValue": "Template.bind({})"
        },
        {
          "name": "InlinePicker",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "libs/components/src/lib/datepicker/calendar/zyfra-calendar.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "defaultValue": "Template.bind({})"
        },
        {
          "name": "items",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "libs/components/src/lib/datepicker/calendar/zyfra-calendar.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "defaultValue": "generateTimeArray('HH:mm:ss')"
        },
        {
          "name": "MonthPicker",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "libs/components/src/lib/datepicker/calendar/zyfra-calendar.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "defaultValue": "Template.bind({})"
        },
        {
          "name": "Multiple",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "libs/components/src/lib/datepicker/calendar/zyfra-calendar.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "defaultValue": "Template.bind({})"
        },
        {
          "name": "OnlyTime",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "libs/components/src/lib/datepicker/calendar/zyfra-calendar.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "defaultValue": "Template.bind({})"
        },
        {
          "name": "Range",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "libs/components/src/lib/datepicker/calendar/zyfra-calendar.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "defaultValue": "Template.bind({})"
        },
        {
          "name": "Template",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "libs/components/src/lib/datepicker/calendar/zyfra-calendar.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "args => ({\r\n  component: ZyfraCalendarComponent,\r\n  props: args,\r\n  template: `\r\n  <zyfra-calendar\r\n    [label]='label'\r\n    [selectionMode]='selectionMode'\r\n    [placeholder]='placeholder'\r\n    [(ngModel)]='ngModel'\r\n    [dateFormat]='dateFormat'\r\n    [hourFormat]='hourFormat'\r\n    [disabled]='disabled'\r\n    [inline]='inline'\r\n    [showOtherMonths]='showOtherMonths'\r\n    [selectOtherMonths]='selectOtherMonths'\r\n    [showIcon]='showIcon'\r\n    [showOnFocus]='showOnFocus'\r\n    [showWeek]='showWeek'\r\n    [readonlyInput]='readonlyInput'\r\n    [view]='view'\r\n    [appendTo]='appendTo'\r\n    [showTime]='showTime'\r\n    [timeOnly]='timeOnly'\r\n    [required]='required'\r\n    [showButtonBar]='showButtonBar'\r\n    [firstDayOfWeek]='firstDayOfWeek'\r\n    [disabledDays]='disabledDays'\r\n    [minDate]=\"minDate\"\r\n    [maxDate]=\"maxDate\"\r\n  >\r\n  </zyfra-calendar>\r\n\r\n  <br>\r\n  <p>Содежимое ngModel</p>\r\n  <div>{{ngModel | json}}</div>\r\n  `,\r\n})"
        },
        {
          "name": "Time",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "libs/components/src/lib/datepicker/calendar/zyfra-calendar.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "defaultValue": "Template.bind({})"
        },
        {
          "name": "YearPicker",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "libs/components/src/lib/datepicker/calendar/zyfra-calendar.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "defaultValue": "Template.bind({})"
        }
      ],
      "libs/components/src/lib/table/_story/stories/basic.stories.ts": [
        {
          "name": "Basic",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "libs/components/src/lib/table/_story/stories/basic.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "defaultValue": "Template.bind({})"
        },
        {
          "name": "Template",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "libs/components/src/lib/table/_story/stories/basic.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story<ZyfraTableComponent>",
          "defaultValue": "args => ({\r\n  template: `\r\n    <zyfra-table\r\n      [title]=\"title\"\r\n      [value]=\"value\"\r\n      [responsiveLayout]=\"responsiveLayout\"\r\n      [stripedMode]=\"stripedMode\"\r\n      (activeElementChange)=\"activeElementChange($event)\"\r\n    >\r\n      <ng-template zyfraTableTemplate=\"header\">\r\n        <tr>\r\n          <th>Code</th>\r\n          <th>Name</th>\r\n          <th>Category</th>\r\n          <th>Quantity</th>\r\n        </tr>\r\n      </ng-template>\r\n      <ng-template zyfraTableTemplate=\"body\" let-product let-rowIndex=\"rowIndex\">\r\n        <tr [zyfraRow]=\"product\">\r\n          <td>{{product.code}}</td>\r\n          <td>{{product.name}}</td>\r\n          <td>{{product.category}}</td>\r\n          <td style=\"text-align: right;\">{{product.quantity}}</td>\r\n        </tr>\r\n      </ng-template>\r\n    </zyfra-table>\r\n  `,\r\n  props: {\r\n    ...args,\r\n    activeElementChange: action('activeElementChange'),\r\n  },\r\n})"
        }
      ],
      "libs/components/src/lib/tri-checkbox/zyfra-tri-checkbox.component.stories.ts": [
        {
          "name": "Binary",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "libs/components/src/lib/tri-checkbox/zyfra-tri-checkbox.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "defaultValue": "Template.bind({})"
        },
        {
          "name": "Template",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "libs/components/src/lib/tri-checkbox/zyfra-tri-checkbox.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story<ZyfraTriCheckboxComponent>",
          "defaultValue": "args => ({\r\n  template: `\r\n    <div>\r\n      <h3>Работа через ngModel</h3>\r\n      <zyfra-tri-checkbox\r\n        [label]=\"label\"\r\n        [name]=\"name\"\r\n        [disabled]=\"disabled\"\r\n        [readonly]=\"readonly\"\r\n        [tabindex]=\"tabindex\"\r\n        [inputId]=\"inputId\"\r\n        [ariaLabelledBy]=\"ariaLabelledBy\"\r\n        [style]=\"style\"\r\n        [styleClass]=\"styleClass\"\r\n        [(ngModel)]=\"model\"\r\n        [checkboxTrueIcon]=\"checkboxTrueIcon\"\r\n        [checkboxFalseIcon]=\"checkboxFalseIcon\"\r\n      ></zyfra-tri-checkbox>\r\n      <br>\r\n      <small>(Значение чекбокса: {{model === undefined || model === null ? 'null' : model}})</small>\r\n      <br>\r\n      <br>\r\n      <h3>Работа через formControl</h3>\r\n      <zyfra-tri-checkbox\r\n        [formControl]=\"fControl\"\r\n        [tabindex]=\"tabindex\"\r\n        [inputId]=\"inputId\"\r\n        [ariaLabelledBy]=\"ariaLabelledBy\"\r\n        [style]=\"style\"\r\n        [styleClass]=\"styleClass\"\r\n        label=\"Чекбокс FormControl. Свойства disabled, readonly, name, label не распространяются\"\r\n      ></zyfra-tri-checkbox>\r\n      <br>\r\n      <small>(Значение чекбокса: {{fControl.value === undefined || fControl.value === null ? 'null' : fControl.value}})</small>\r\n      <br>\r\n      <br>\r\n      <zyfra-button\r\n        label=\"toggle disable/enable\"\r\n        [style]=\"{ 'margin-right': '5px' }\"\r\n        (click)=\"this.fControl.disabled ? this.fControl.enable() : this.fControl.disable()\"\r\n      ></zyfra-button>\r\n      <zyfra-button [style]=\"{ 'margin-right': '5px' }\" label=\"toggle true/false\" (click)=\"fControl.setValue(!fControl.value)\"></zyfra-button>\r\n      <zyfra-button label=\"toggle null\" (click)=\"fControl.setValue(null)\"></zyfra-button>\r\n    </div>\r\n    <div>\r\n      <h3>Изменены checkboxTrueIcon zyfra-icon add-plus и checkboxFalseIcon на zyfra-icon delete-minus</h3>\r\n      <zyfra-tri-checkbox\r\n        [label]=\"label\"\r\n        [name]=\"name\"\r\n        [disabled]=\"disabled\"\r\n        [readonly]=\"readonly\"\r\n        [tabindex]=\"tabindex\"\r\n        [inputId]=\"inputId\"\r\n        [ariaLabelledBy]=\"ariaLabelledBy\"\r\n        [style]=\"style\"\r\n        [styleClass]=\"styleClass\"\r\n        [(ngModel)]=\"model\"\r\n        checkboxTrueIcon=\"zyfra-icon add-plus\"\r\n        checkboxFalseIcon=\"zyfra-icon delete-minus\"\r\n      ></zyfra-tri-checkbox>\r\n      <br>\r\n      <small>(Значение чекбокса: {{model === undefined || model === null ? 'null' : model}})</small>\r\n    </div>\r\n  `,\r\n  props: {\r\n    ...args,\r\n    fControl: new FormControl(true),\r\n  },\r\n})"
        }
      ],
      "libs/components/src/lib/block-ui/zyfra-block-ui.component.stories.ts": [
        {
          "name": "BlockCustomComponent",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "libs/components/src/lib/block-ui/zyfra-block-ui.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "defaultValue": "BlockCustomComponentTemplate.bind({})"
        },
        {
          "name": "BlockCustomComponentTemplate",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "libs/components/src/lib/block-ui/zyfra-block-ui.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story<ZyfraBlockUiComponent>",
          "defaultValue": "(args: ZyfraBlockUiComponent) => ({\r\n  template: `\r\n    <div style=\"display: flex; gap: 10px;\">\r\n      <zyfra-button label=\"Заблокировать компонент\" (click)=\"block()\"></zyfra-button>\r\n      <zyfra-button label=\"Разблокировать компонент\" (click)=\"unblock()\"></zyfra-button>\r\n    </div>\r\n\r\n    <zyfra-block-ui [blocked]=\"blockedComponent\" [target]=\"blockableComponent\">\r\n      <i class=\"pi pi-lock\" style=\"font-size: 3rem\"></i>\r\n    </zyfra-block-ui>\r\n    <zyfra-test-custom-blockable #blockableComponent></zyfra-test-custom-blockable>\r\n  `,\r\n  props: {\r\n    ...args,\r\n    block() {\r\n      this.blockedComponent = true;\r\n    },\r\n    unblock() {\r\n      this.blockedComponent = false;\r\n    },\r\n  },\r\n})"
        },
        {
          "name": "BlockDocument",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "libs/components/src/lib/block-ui/zyfra-block-ui.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "defaultValue": "BlockDocumentTemplate.bind({})"
        },
        {
          "name": "BlockDocumentTemplate",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "libs/components/src/lib/block-ui/zyfra-block-ui.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story<ZyfraBlockUiComponent>",
          "defaultValue": "(args: ZyfraBlockUiComponent) => ({\r\n  template: `\r\n    <zyfra-block-ui [blocked]=\"blockedDocument\"></zyfra-block-ui>\r\n    <zyfra-button label=\"Заблокировать документ на 3 секунды\" (click)=\"block()\"></zyfra-button>\r\n  `,\r\n  props: {\r\n    ...args,\r\n    block() {\r\n      this.blockedDocument = true;\r\n      setTimeout(() => {\r\n        this.blockedDocument = false;\r\n      }, 3000);\r\n    },\r\n  },\r\n})"
        }
      ],
      "libs/components/src/lib/menu-applications/zyfra-menu-applications.component.stories.ts": [
        {
          "name": "bottomMenuItems",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "libs/components/src/lib/menu-applications/zyfra-menu-applications.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "ZyfraMenuAppItem[]",
          "defaultValue": "[\r\n  {\r\n    title: 'Избранное',\r\n    icon: 'social-star'\r\n  },\r\n  {\r\n    title: 'Поиск',\r\n    icon: 'sort-zoom-in'\r\n  },\r\n  {\r\n    title: 'Служба техподдежки',\r\n    icon: 'alerts-pulse'\r\n  },\r\n]"
        },
        {
          "name": "CustomTransition",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "libs/components/src/lib/menu-applications/zyfra-menu-applications.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "defaultValue": "Template.bind({})"
        },
        {
          "name": "defaultTransition",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "libs/components/src/lib/menu-applications/zyfra-menu-applications.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "object",
          "defaultValue": "{\r\n  open: {\r\n    duration: 300,\r\n    delay: 500,\r\n    timingFunction: 'ease-in',\r\n  },\r\n  close: {\r\n    duration: 300,\r\n    delay: 300,\r\n    timingFunction: 'ease-out',\r\n  }\r\n}"
        },
        {
          "name": "ManyItems",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "libs/components/src/lib/menu-applications/zyfra-menu-applications.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "defaultValue": "Template.bind({})"
        },
        {
          "name": "Template",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "libs/components/src/lib/menu-applications/zyfra-menu-applications.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story<ZyfraMenuApplicationsComponent>",
          "defaultValue": "(args) => ({\r\n  template: `\r\n    <div>\r\n      <zyfra-button\r\n        label=\"Toggle\"\r\n        [style]=\"{'margin-right': '10px'}\"\r\n        (onClick)=\"menu.toggle()\"\r\n      ></zyfra-button>\r\n\r\n      <zyfra-button\r\n        label=\"Open\"\r\n        [style]=\"{'margin-right': '10px'}\"\r\n        (onClick)=\"menu.open()\"\r\n      ></zyfra-button>\r\n\r\n      <zyfra-button\r\n        label=\"Close\"\r\n        [style]=\"{'margin-right': '10px'}\"\r\n        (onClick)=\"menu.close()\"\r\n      ></zyfra-button>\r\n    </div>\r\n\r\n    <br>\r\n\r\n    <div style=\"height: 650px; display: flex; position: relative;\">\r\n      <zyfra-menu-applications\r\n        #menu\r\n        [transition]=\"transition\"\r\n        [tooltipDelay]=\"tooltipDelay\"\r\n        [style]=\"layoutShift ? null : { position: 'absolute', top: '0', left: '0', height: '100%' }\"\r\n        [topMenuItems]=\"topMenuItems\"\r\n        [bottomMenuItems]=\"bottomMenuItems\"\r\n        [activeItem]=\"activeItem\"\r\n        (selectItem)=\"selectItem($event);\"\r\n        (toggleState)=\"toggleState($event)\"\r\n      ></zyfra-menu-applications>\r\n\r\n      <div id=\"content\" [style]=\"layoutShift ? { 'padding-left': '10px' } : { 'padding-left': '60px' }\">\r\n        <p>Some content</p>\r\n      </div>\r\n    </div>\r\n  `,\r\n  props: {\r\n    ...args,\r\n    activeItem: null,\r\n    toggleState: value => action('toggleState')({ value }),\r\n    selectItem(item: any): void {\r\n      action('selectItem')(item);\r\n\r\n      const isTopItem = this.topMenuItems.includes(item);\r\n\r\n      if (isTopItem) {\r\n        this.activeItem = item;\r\n      } else {\r\n        alert(JSON.stringify(item, null, 2));\r\n      }\r\n    }\r\n  },\r\n})"
        },
        {
          "name": "topMenuItems",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "libs/components/src/lib/menu-applications/zyfra-menu-applications.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "ZyfraMenuAppItem[]",
          "defaultValue": "[\r\n  {\r\n    title: 'Z-QA — Zyfra Quality Assurance',\r\n    icon: 'shapes-cube',\r\n    description: 'Описание для приложения \"Z-QA — Zyfra Quality Assurance\"'\r\n  },\r\n  {\r\n    title: 'Zyfra Document Explorer',\r\n    icon: 'view-dashboard',\r\n    description: 'Описание для приложения \"Zyfra Document Explorer\"'\r\n  },\r\n  {\r\n    title: 'Z-MEB — Mass & Energy Balance',\r\n    icon: 'charts-bar-stacked',\r\n    description: 'Описание для приложения \"Z-MEB — Mass & Energy Balance\"'\r\n  },\r\n  {\r\n    title: 'Z-PS — Zyfra Production Scheduling',\r\n    icon: 'tools-eyedropper',\r\n    description: 'Описание для приложения \"Z-PS — Zyfra Production Scheduling\"'\r\n  },\r\n  {\r\n    title: 'Z-MEB — Mass & Energy Balance',\r\n    icon: 'vectors-difference-ab',\r\n    description: 'Описание для приложения \"Z-MEB — Mass & Energy Balance\"'\r\n  },\r\n]"
        },
        {
          "name": "WithLayoutShift",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "libs/components/src/lib/menu-applications/zyfra-menu-applications.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "defaultValue": "Template.bind({})"
        },
        {
          "name": "WithoutLayoutShift",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "libs/components/src/lib/menu-applications/zyfra-menu-applications.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "defaultValue": "Template.bind({})"
        }
      ],
      "libs/components/src/lib/datepicker/calendar/zyfra-calendar.component.ts": [
        {
          "name": "CALENDAR_VALUE_ACCESSOR",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "libs/components/src/lib/datepicker/calendar/zyfra-calendar.component.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "any",
          "defaultValue": "{\r\n  provide: NG_VALUE_ACCESSOR,\r\n  useExisting: forwardRef(() => ZyfraCalendarComponent),\r\n  multi: true,\r\n}"
        }
      ],
      "libs/components/src/lib/select-button/zyfra-select-button.component.stories.ts": [
        {
          "name": "cities",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "libs/components/src/lib/select-button/zyfra-select-button.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "StoryCity[]",
          "defaultValue": "[\r\n  { name: 'Russia', code: 'RU' },\r\n  { name: 'Rome', code: 'RM' },\r\n  { name: 'London', code: 'LDN' },\r\n  { name: 'Istanbul', code: 'IST' },\r\n  { name: 'Paris', code: 'PRS' },\r\n]"
        },
        {
          "name": "Danger",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "libs/components/src/lib/select-button/zyfra-select-button.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "defaultValue": "Template.bind({})"
        },
        {
          "name": "Default",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "libs/components/src/lib/select-button/zyfra-select-button.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "defaultValue": "Template.bind({})"
        },
        {
          "name": "DefaultMini",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "libs/components/src/lib/select-button/zyfra-select-button.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "defaultValue": "Template.bind({})"
        },
        {
          "name": "Template",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "libs/components/src/lib/select-button/zyfra-select-button.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story<ZyfraSelectButtonComponent<StoryCity, string>>",
          "defaultValue": "(args) => ({\r\n  component: ZyfraSelectButtonComponent,\r\n  props: args,\r\n})"
        }
      ],
      "libs/components/src/lib/tab-view/zyfra-tab-view/zyfra-tab-view.component.stories.ts": [
        {
          "name": "Closable",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "libs/components/src/lib/tab-view/zyfra-tab-view/zyfra-tab-view.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "defaultValue": "Template.bind({})"
        },
        {
          "name": "CustomTemplateWithBadge",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "libs/components/src/lib/tab-view/zyfra-tab-view/zyfra-tab-view.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "defaultValue": "CustomWithBadge.bind({})"
        },
        {
          "name": "CustomWithBadge",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "libs/components/src/lib/tab-view/zyfra-tab-view/zyfra-tab-view.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "(args) => ({\r\n  props: {\r\n    ...args,\r\n  },\r\n  template: `\r\n      <zyfra-tab-view [class]=\"zyfraTabViewTagStyle\"\r\n              [activeIndex]=\"activeIndex\"\r\n              [controlClose]=\"controlClose\"\r\n              [style]=\"style\"\r\n              [styleClass]=\"styleClass\"\r\n              (onChange)=\"onChange($event)\"\r\n              (onClose)=\"onClose($event)\"\r\n              (activeIndexChange)=\"activeIndexChange($event)\">\r\n          <ng-container *ngFor=\"let tab of tabs\">\r\n              <zyfra-tab-panel [header]=\"tab.header\"\r\n                               [selected]=\"tab.selected\"\r\n                               [disabled]=\"tab.disabled\"\r\n                               [closable]=\"tab.closable\"\r\n                               [leftIcon]=\"tab.leftIcon\"\r\n                               [rightIcon]=\"tab.rightIcon\"\r\n                               [headerStyle]=\"tab.headerStyle\"\r\n                               [headerStyleClass]=\"tab.headerStyleClass\"\r\n                               [cache]=\"tab.cache\"\r\n                               [tooltip]=\"tab.tooltip\"\r\n                               [tooltipPosition]=\"tab.tooltipPosition\"\r\n                               [tooltipStyleClass]=\"tab.tooltipStyleClass\">\r\n                  <ng-template #header>\r\n                      <div class=\"p-tabview-title\">{{tab?.header}}</div>\r\n                      <p-badge styleClass=\"p-tabview-right-icon no-active-color\"\r\n                               [value]=\"tab.badgeValue\"\r\n                               [severity]=\"tab.severity\"></p-badge>\r\n                  </ng-template>\r\n\r\n                {{tab.content}}\r\n              </zyfra-tab-panel>\r\n          </ng-container>\r\n      </zyfra-tab-view>`,\r\n})"
        },
        {
          "name": "OverflowTabs",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "libs/components/src/lib/tab-view/zyfra-tab-view/zyfra-tab-view.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "defaultValue": "Template.bind({})"
        },
        {
          "name": "Simple",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "libs/components/src/lib/tab-view/zyfra-tab-view/zyfra-tab-view.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "defaultValue": "Template.bind({})"
        },
        {
          "name": "SimpleHeader",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "libs/components/src/lib/tab-view/zyfra-tab-view/zyfra-tab-view.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "defaultValue": "Template.bind({})"
        },
        {
          "name": "SimpleSecondary",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "libs/components/src/lib/tab-view/zyfra-tab-view/zyfra-tab-view.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "defaultValue": "Template.bind({})"
        },
        {
          "name": "SimpleWithIcon",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "libs/components/src/lib/tab-view/zyfra-tab-view/zyfra-tab-view.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "defaultValue": "Simple.bind({})"
        },
        {
          "name": "Template",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "libs/components/src/lib/tab-view/zyfra-tab-view/zyfra-tab-view.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "(args) => ({\r\n  template: `\r\n    <zyfra-tab-view\r\n      [class]=\"zyfraTabViewTagStyle\"\r\n      [activeIndex]=\"activeIndex\"\r\n      [controlClose]=\"controlClose\"\r\n      [style]=\"style\"\r\n      [styleClass]=\"styleClass\"\r\n      (onChange)=\"onChange($event)\"\r\n      (onClose)=\"onClose($event)\"\r\n      (activeIndexChange)=\"activeIndexChange($event)\"\r\n    >\r\n      <ng-container *ngFor=\"let tab of tabs\">\r\n        <zyfra-tab-panel\r\n          [header]=\"tab.header\"\r\n          [selected]=\"tab.selected\"\r\n          [disabled]=\"tab.disabled\"\r\n          [closable]=\"tab.closable\"\r\n          [leftIcon]=\"tab.leftIcon\"\r\n          [rightIcon]=\"tab.rightIcon\"\r\n          [headerStyle]=\"tab.headerStyle\"\r\n          [headerStyleClass]=\"tab.headerStyleClass\"\r\n          [cache]=\"tab.cache\"\r\n          [tooltip]=\"tab.tooltip\"\r\n          [tooltipPosition]=\"tab.tooltipPosition\"\r\n          [tooltipStyleClass]=\"tab.tooltipStyleClass\"\r\n        >\r\n          {{ tab.content }}\r\n        </zyfra-tab-panel>\r\n      </ng-container>\r\n    </zyfra-tab-view>\r\n  `,\r\n  props: {\r\n    ...args,\r\n  },\r\n})"
        },
        {
          "name": "WithIcon",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "libs/components/src/lib/tab-view/zyfra-tab-view/zyfra-tab-view.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "defaultValue": "Template.bind({})"
        }
      ],
      "libs/components/src/lib/table/_story/stories/col-group.stories.ts": [
        {
          "name": "ColGroup",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "libs/components/src/lib/table/_story/stories/col-group.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "defaultValue": "Template.bind({})"
        },
        {
          "name": "Template",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "libs/components/src/lib/table/_story/stories/col-group.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story<ZyfraTableComponent>",
          "defaultValue": "args => ({\r\n  template: `\r\n    <zyfra-table [value]=\"value\" [responsiveLayout]=\"responsiveLayout\" [title]=\"title\">\r\n      <ng-template zyfraTableTemplate=\"header\">\r\n        <tr>\r\n          <th rowspan=\"3\">Product</th>\r\n          <th colspan=\"4\">Sale Rate</th>\r\n        </tr>\r\n        <tr>\r\n          <th colspan=\"2\">Sales</th>\r\n          <th colspan=\"2\">Profits</th>\r\n        </tr>\r\n        <tr>\r\n          <th>Last Year</th>\r\n          <th>This Year</th>\r\n          <th>Last Year</th>\r\n          <th>This Year</th>\r\n        </tr>\r\n      </ng-template>\r\n\r\n      <ng-template zyfraTableTemplate=\"body\" let-sale>\r\n        <tr [zyfraRow]=\"sale\">\r\n          <td>{{sale.product}}</td>\r\n          <td style=\"text-align: right;\">{{sale.lastYearSale}}%</td>\r\n          <td style=\"text-align: right;\">{{sale.thisYearSale}}%</td>\r\n          <td style=\"text-align: right;\">{{sale.lastYearProfit | currency: 'USD'}}</td>\r\n          <td style=\"text-align: right;\">{{sale.thisYearProfit | currency: 'USD'}}</td>\r\n        </tr>\r\n      </ng-template>\r\n\r\n      <ng-template zyfraTableTemplate=\"footer\">\r\n        <tr>\r\n          <td colspan=\"3\">Totals</td>\r\n          <td style=\"text-align: right;\">{{lastYearTotal | currency: 'USD'}}</td>\r\n          <td style=\"text-align: right;\">{{thisYearTotal | currency: 'USD'}}</td>\r\n        </tr>\r\n      </ng-template>\r\n    </zyfra-table>\r\n  `,\r\n  props: {\r\n    ...args,\r\n    lastYearTotal: 3_283_772.0,\r\n    thisYearTotal: 1_541_925.0,\r\n  },\r\n})"
        }
      ],
      "libs/components/src/lib/nav-menu/utils/treeNode.functions.ts": [
        {
          "name": "convertToNode",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "libs/components/src/lib/nav-menu/utils/treeNode.functions.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "defaultValue": "(item: ZyfraMenuItem, parent?: TreeNode): TreeNode => {\r\n  let children;\r\n  const node: TreeNode = {\r\n    label: item.label,\r\n    data: item,\r\n    key: generateKey(),\r\n    parent\r\n  };\r\n  if (item.items) {\r\n    children = item.items.map(childItem => {\r\n      return convertToNode(childItem, node);\r\n    });\r\n  }\r\n  node.children = children;\r\n  return node;\r\n}"
        },
        {
          "name": "flatNodes",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "libs/components/src/lib/nav-menu/utils/treeNode.functions.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "defaultValue": "(nodes: TreeNode[]): TreeNode[] => {\r\n  return [].concat(...nodes.map(node => node.children ? flatNodes(node.children) : [node]));\r\n}"
        },
        {
          "name": "fromRubricatorNodes",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "libs/components/src/lib/nav-menu/utils/treeNode.functions.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "defaultValue": "(nodes: TreeNode[]): TreeNode[] => {\r\n  const sortedNodes = flatNodes(nodes).sort(sortByLabel);\r\n  const letters = new Set(sortedNodes.map(({ label }) => label.charAt(0).toUpperCase()));\r\n  const rubricatorNodes = [];\r\n  letters.forEach(letter => {\r\n    rubricatorNodes.push({\r\n      key: letter,\r\n      label: letter,\r\n      data: { label: letter },\r\n      children: sortedNodes.filter(({ label }) => label.charAt(0).toUpperCase() === letter)\r\n    });\r\n  });\r\n  return rubricatorNodes;\r\n}"
        },
        {
          "name": "getPath",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "libs/components/src/lib/nav-menu/utils/treeNode.functions.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "defaultValue": "(node: TreeNode, acc: TreeNode[] = []): TreeNode[] => {\r\n  acc.push(node.parent);\r\n  return node.parent\r\n    ? getPath(node.parent, acc)\r\n    : acc.reverse();\r\n}"
        },
        {
          "name": "sortByLabel",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "libs/components/src/lib/nav-menu/utils/treeNode.functions.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "defaultValue": "(a: TreeNode, b: TreeNode): number => {\r\n  if (a.label > b.label) {\r\n    return 1;\r\n  }\r\n  if (a.label < b.label) {\r\n    return -1;\r\n  }\r\n  return 0;\r\n}"
        }
      ],
      "libs/components/src/lib/table/_story/data.ts": [
        {
          "name": "Customers",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "libs/components/src/lib/table/_story/data.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Customer[]",
          "defaultValue": "[\r\n  {\r\n    id: 1000,\r\n    name: 'James Butt',\r\n    country: {\r\n      name: 'Algeria',\r\n      code: 'dz',\r\n    },\r\n    company: 'Benton, John B Jr',\r\n    date: new Date('2015-09-13'),\r\n    status: 'unqualified',\r\n    verified: true,\r\n    activity: 17,\r\n    representative: {\r\n      name: 'Ioni Bowcher',\r\n      image: 'ionibowcher.png',\r\n    },\r\n    balance: 70663,\r\n  },\r\n  {\r\n    id: 1001,\r\n    name: 'Josephine Darakjy',\r\n    country: {\r\n      name: 'Egypt',\r\n      code: 'eg',\r\n    },\r\n    company: 'Chanay, Jeffrey A Esq',\r\n    date: new Date('2019-02-09'),\r\n    status: 'proposal',\r\n    verified: true,\r\n    activity: 0,\r\n    representative: {\r\n      name: 'Amy Elsner',\r\n      image: 'amyelsner.png',\r\n    },\r\n    balance: 82429,\r\n  },\r\n  {\r\n    id: 1002,\r\n    name: 'Art Venere',\r\n    country: {\r\n      name: 'Panama',\r\n      code: 'pa',\r\n    },\r\n    company: 'Chemel, James L Cpa',\r\n    date: new Date('2017-05-13'),\r\n    status: 'qualified',\r\n    verified: false,\r\n    activity: 63,\r\n    representative: {\r\n      name: 'Asiya Javayant',\r\n      image: 'asiyajavayant.png',\r\n    },\r\n    balance: 28334,\r\n  },\r\n  {\r\n    id: 1003,\r\n    name: 'Lenna Paprocki',\r\n    country: {\r\n      name: 'Slovenia',\r\n      code: 'si',\r\n    },\r\n    company: 'Feltz Printing Service',\r\n    date: new Date('2020-09-15'),\r\n    status: 'new',\r\n    verified: false,\r\n    activity: 37,\r\n    representative: {\r\n      name: 'Xuxue Feng',\r\n      image: 'xuxuefeng.png',\r\n    },\r\n    balance: 88521,\r\n  },\r\n  {\r\n    id: 1004,\r\n    name: 'Donette Foller',\r\n    country: {\r\n      name: 'South Africa',\r\n      code: 'za',\r\n    },\r\n    company: 'Printing Dimensions',\r\n    date: new Date('2016-05-20'),\r\n    status: 'proposal',\r\n    verified: true,\r\n    activity: 33,\r\n    representative: {\r\n      name: 'Asiya Javayant',\r\n      image: 'asiyajavayant.png',\r\n    },\r\n    balance: 93905,\r\n  },\r\n  {\r\n    id: 1005,\r\n    name: 'Simona Morasca',\r\n    country: {\r\n      name: 'Egypt',\r\n      code: 'eg',\r\n    },\r\n    company: 'Chapman, Ross E Esq',\r\n    date: new Date('2018-02-16'),\r\n    status: 'qualified',\r\n    verified: false,\r\n    activity: 68,\r\n    representative: {\r\n      name: 'Ivan Magalhaes',\r\n      image: 'ivanmagalhaes.png',\r\n    },\r\n    balance: 50041,\r\n  },\r\n  {\r\n    id: 1006,\r\n    name: 'Mitsue Tollner',\r\n    country: {\r\n      name: 'Paraguay',\r\n      code: 'py',\r\n    },\r\n    company: 'Morlong Associates',\r\n    date: new Date('2018-02-19'),\r\n    status: 'renewal',\r\n    verified: true,\r\n    activity: 54,\r\n    representative: {\r\n      name: 'Ivan Magalhaes',\r\n      image: 'ivanmagalhaes.png',\r\n    },\r\n    balance: 58706,\r\n  },\r\n  {\r\n    id: 1007,\r\n    name: 'Leota Dilliard',\r\n    country: {\r\n      name: 'Serbia',\r\n      code: 'rs',\r\n    },\r\n    company: 'Commercial Press',\r\n    date: new Date('2019-08-13'),\r\n    status: 'renewal',\r\n    verified: true,\r\n    activity: 69,\r\n    representative: {\r\n      name: 'Onyama Limba',\r\n      image: 'onyamalimba.png',\r\n    },\r\n    balance: 26640,\r\n  },\r\n  {\r\n    id: 1008,\r\n    name: 'Sage Wieser',\r\n    country: {\r\n      name: 'Egypt',\r\n      code: 'eg',\r\n    },\r\n    company: 'Truhlar And Truhlar Attys',\r\n    date: new Date('2018-11-21'),\r\n    status: 'unqualified',\r\n    verified: true,\r\n    activity: 76,\r\n    representative: {\r\n      name: 'Ivan Magalhaes',\r\n      image: 'ivanmagalhaes.png',\r\n    },\r\n    balance: 65369,\r\n  },\r\n  {\r\n    id: 1009,\r\n    name: 'Kris Marrier',\r\n    country: {\r\n      name: 'Mexico',\r\n      code: 'mx',\r\n    },\r\n    company: 'King, Christopher A Esq',\r\n    date: new Date('2015-07-07'),\r\n    status: 'proposal',\r\n    verified: false,\r\n    activity: 3,\r\n    representative: {\r\n      name: 'Onyama Limba',\r\n      image: 'onyamalimba.png',\r\n    },\r\n    balance: 63451,\r\n  },\r\n  {\r\n    id: 1010,\r\n    name: 'Minna Amigon',\r\n    country: {\r\n      name: 'Romania',\r\n      code: 'ro',\r\n    },\r\n    company: 'Dorl, James J Esq',\r\n    date: new Date('2018-11-07'),\r\n    status: 'qualified',\r\n    verified: false,\r\n    activity: 38,\r\n    representative: {\r\n      name: 'Anna Fali',\r\n      image: 'annafali.png',\r\n    },\r\n    balance: 71169,\r\n  },\r\n  {\r\n    id: 1011,\r\n    name: 'Abel Maclead',\r\n    country: {\r\n      name: 'Singapore',\r\n      code: 'sg',\r\n    },\r\n    company: 'Rangoni Of Florence',\r\n    date: new Date('2017-03-11'),\r\n    status: 'qualified',\r\n    verified: true,\r\n    activity: 87,\r\n    representative: {\r\n      name: 'Bernardo Dominic',\r\n      image: 'bernardodominic.png',\r\n    },\r\n    balance: 96842,\r\n  },\r\n  {\r\n    id: 1012,\r\n    name: 'Kiley Caldarera',\r\n    country: {\r\n      name: 'Serbia',\r\n      code: 'rs',\r\n    },\r\n    company: 'Feiner Bros',\r\n    date: new Date('2015-10-20'),\r\n    status: 'unqualified',\r\n    verified: false,\r\n    activity: 80,\r\n    representative: {\r\n      name: 'Onyama Limba',\r\n      image: 'onyamalimba.png',\r\n    },\r\n    balance: 92734,\r\n  },\r\n  {\r\n    id: 1013,\r\n    name: 'Graciela Ruta',\r\n    country: {\r\n      name: 'Chile',\r\n      code: 'cl',\r\n    },\r\n    company: 'Buckley Miller & Wright',\r\n    date: new Date('2016-07-25'),\r\n    status: 'negotiation',\r\n    verified: false,\r\n    activity: 59,\r\n    representative: {\r\n      name: 'Amy Elsner',\r\n      image: 'amyelsner.png',\r\n    },\r\n    balance: 45250,\r\n  },\r\n  {\r\n    id: 1014,\r\n    name: 'Cammy Albares',\r\n    country: {\r\n      name: 'Philippines',\r\n      code: 'ph',\r\n    },\r\n    company: 'Rousseaux, Michael Esq',\r\n    date: new Date('2019-06-25'),\r\n    status: 'new',\r\n    verified: true,\r\n    activity: 90,\r\n    representative: {\r\n      name: 'Asiya Javayant',\r\n      image: 'asiyajavayant.png',\r\n    },\r\n    balance: 30236,\r\n  },\r\n  {\r\n    id: 1015,\r\n    name: 'Mattie Poquette',\r\n    country: {\r\n      name: 'Venezuela',\r\n      code: 've',\r\n    },\r\n    company: 'Century Communications',\r\n    date: new Date('2017-12-12'),\r\n    status: 'negotiation',\r\n    verified: false,\r\n    activity: 52,\r\n    representative: {\r\n      name: 'Anna Fali',\r\n      image: 'annafali.png',\r\n    },\r\n    balance: 64533,\r\n  },\r\n  {\r\n    id: 1016,\r\n    name: 'Meaghan Garufi',\r\n    country: {\r\n      name: 'Malaysia',\r\n      code: 'my',\r\n    },\r\n    company: 'Bolton, Wilbur Esq',\r\n    date: new Date('2018-07-04'),\r\n    status: 'unqualified',\r\n    verified: false,\r\n    activity: 31,\r\n    representative: {\r\n      name: 'Ivan Magalhaes',\r\n      image: 'ivanmagalhaes.png',\r\n    },\r\n    balance: 37279,\r\n  },\r\n  {\r\n    id: 1017,\r\n    name: 'Gladys Rim',\r\n    country: {\r\n      name: 'Netherlands',\r\n      code: 'nl',\r\n    },\r\n    company: 'T M Byxbee Company Pc',\r\n    date: new Date('2020-02-27'),\r\n    status: 'renewal',\r\n    verified: true,\r\n    activity: 48,\r\n    representative: {\r\n      name: 'Stephen Shaw',\r\n      image: 'stephenshaw.png',\r\n    },\r\n    balance: 27381,\r\n  },\r\n  {\r\n    id: 1018,\r\n    name: 'Yuki Whobrey',\r\n    country: {\r\n      name: 'Israel',\r\n      code: 'il',\r\n    },\r\n    company: 'Farmers Insurance Group',\r\n    date: new Date('2017-12-21'),\r\n    status: 'negotiation',\r\n    verified: true,\r\n    activity: 16,\r\n    representative: {\r\n      name: 'Bernardo Dominic',\r\n      image: 'bernardodominic.png',\r\n    },\r\n    balance: 9257,\r\n  },\r\n  {\r\n    id: 1019,\r\n    name: 'Fletcher Flosi',\r\n    country: {\r\n      name: 'Argentina',\r\n      code: 'ar',\r\n    },\r\n    company: 'Post Box Services Plus',\r\n    date: new Date('2016-01-04'),\r\n    status: 'renewal',\r\n    verified: true,\r\n    activity: 19,\r\n    representative: {\r\n      name: 'Xuxue Feng',\r\n      image: 'xuxuefeng.png',\r\n    },\r\n    balance: 67783,\r\n  },\r\n  {\r\n    id: 1020,\r\n    name: 'Bette Nicka',\r\n    country: {\r\n      name: 'Paraguay',\r\n      code: 'py',\r\n    },\r\n    company: 'Sport En Art',\r\n    date: new Date('2016-10-21'),\r\n    status: 'renewal',\r\n    verified: false,\r\n    activity: 100,\r\n    representative: {\r\n      name: 'Onyama Limba',\r\n      image: 'onyamalimba.png',\r\n    },\r\n    balance: 4609,\r\n  },\r\n  {\r\n    id: 1021,\r\n    name: 'Veronika Inouye',\r\n    country: {\r\n      name: 'Ecuador',\r\n      code: 'ec',\r\n    },\r\n    company: 'C 4 Network Inc',\r\n    date: new Date('2017-03-24'),\r\n    status: 'renewal',\r\n    verified: false,\r\n    activity: 72,\r\n    representative: {\r\n      name: 'Ioni Bowcher',\r\n      image: 'ionibowcher.png',\r\n    },\r\n    balance: 26565,\r\n  },\r\n  {\r\n    id: 1022,\r\n    name: 'Willard Kolmetz',\r\n    country: {\r\n      name: 'Tunisia',\r\n      code: 'tn',\r\n    },\r\n    company: 'Ingalls, Donald R Esq',\r\n    date: new Date('2017-04-15'),\r\n    status: 'renewal',\r\n    verified: true,\r\n    activity: 94,\r\n    representative: {\r\n      name: 'Asiya Javayant',\r\n      image: 'asiyajavayant.png',\r\n    },\r\n    balance: 75876,\r\n  },\r\n  {\r\n    id: 1023,\r\n    name: 'Maryann Royster',\r\n    country: {\r\n      name: 'Belarus',\r\n      code: 'by',\r\n    },\r\n    company: 'Franklin, Peter L Esq',\r\n    date: new Date('2017-03-11'),\r\n    status: 'qualified',\r\n    verified: false,\r\n    activity: 56,\r\n    representative: {\r\n      name: 'Elwin Sharvill',\r\n      image: 'elwinsharvill.png',\r\n    },\r\n    balance: 41121,\r\n  },\r\n  {\r\n    id: 1024,\r\n    name: 'Alisha Slusarski',\r\n    country: {\r\n      name: 'Iceland',\r\n      code: 'is',\r\n    },\r\n    company: 'Wtlz Power 107 Fm',\r\n    date: new Date('2018-03-27'),\r\n    status: 'qualified',\r\n    verified: true,\r\n    activity: 7,\r\n    representative: {\r\n      name: 'Stephen Shaw',\r\n      image: 'stephenshaw.png',\r\n    },\r\n    balance: 91691,\r\n  },\r\n  {\r\n    id: 1025,\r\n    name: 'Allene Iturbide',\r\n    country: {\r\n      name: 'Italy',\r\n      code: 'it',\r\n    },\r\n    company: 'Ledecky, David Esq',\r\n    date: new Date('2016-02-20'),\r\n    status: 'qualified',\r\n    verified: true,\r\n    activity: 1,\r\n    representative: {\r\n      name: 'Ivan Magalhaes',\r\n      image: 'ivanmagalhaes.png',\r\n    },\r\n    balance: 40137,\r\n  },\r\n  {\r\n    id: 1026,\r\n    name: 'Chanel Caudy',\r\n    country: {\r\n      name: 'Argentina',\r\n      code: 'ar',\r\n    },\r\n    company: 'Professional Image Inc',\r\n    date: new Date('2018-06-24'),\r\n    status: 'new',\r\n    verified: true,\r\n    activity: 26,\r\n    representative: {\r\n      name: 'Ioni Bowcher',\r\n      image: 'ionibowcher.png',\r\n    },\r\n    balance: 21304,\r\n  },\r\n  {\r\n    id: 1027,\r\n    name: 'Ezekiel Chui',\r\n    country: {\r\n      name: 'Ireland',\r\n      code: 'ie',\r\n    },\r\n    company: 'Sider, Donald C Esq',\r\n    date: new Date('2016-09-24'),\r\n    status: 'new',\r\n    verified: false,\r\n    activity: 76,\r\n    representative: {\r\n      name: 'Amy Elsner',\r\n      image: 'amyelsner.png',\r\n    },\r\n    balance: 60454,\r\n  },\r\n  {\r\n    id: 1028,\r\n    name: 'Willow Kusko',\r\n    country: {\r\n      name: 'Romania',\r\n      code: 'ro',\r\n    },\r\n    company: 'U Pull It',\r\n    date: new Date('2020-04-11'),\r\n    status: 'qualified',\r\n    verified: true,\r\n    activity: 7,\r\n    representative: {\r\n      name: 'Onyama Limba',\r\n      image: 'onyamalimba.png',\r\n    },\r\n    balance: 17565,\r\n  },\r\n  {\r\n    id: 1029,\r\n    name: 'Bernardo Figeroa',\r\n    country: {\r\n      name: 'Israel',\r\n      code: 'il',\r\n    },\r\n    company: 'Clark, Richard Cpa',\r\n    date: new Date('2018-11-04'),\r\n    status: 'renewal',\r\n    verified: true,\r\n    activity: 81,\r\n    representative: {\r\n      name: 'Ioni Bowcher',\r\n      image: 'ionibowcher.png',\r\n    },\r\n    balance: 17774,\r\n  },\r\n  {\r\n    id: 1030,\r\n    name: 'Ammie Corrio',\r\n    country: {\r\n      name: 'Hungary',\r\n      code: 'hu',\r\n    },\r\n    company: 'Moskowitz, Barry S',\r\n    date: new Date('2016-06-11'),\r\n    status: 'negotiation',\r\n    verified: true,\r\n    activity: 56,\r\n    representative: {\r\n      name: 'Asiya Javayant',\r\n      image: 'asiyajavayant.png',\r\n    },\r\n    balance: 49201,\r\n  },\r\n  {\r\n    id: 1031,\r\n    name: 'Francine Vocelka',\r\n    country: {\r\n      name: 'Honduras',\r\n      code: 'hn',\r\n    },\r\n    company: 'Cascade Realty Advisors Inc',\r\n    date: new Date('2017-08-02'),\r\n    status: 'qualified',\r\n    verified: true,\r\n    activity: 94,\r\n    representative: {\r\n      name: 'Ioni Bowcher',\r\n      image: 'ionibowcher.png',\r\n    },\r\n    balance: 67126,\r\n  },\r\n  {\r\n    id: 1032,\r\n    name: 'Ernie Stenseth',\r\n    country: {\r\n      name: 'Australia',\r\n      code: 'au',\r\n    },\r\n    company: 'Knwz Newsradio',\r\n    date: new Date('2018-06-06'),\r\n    status: 'renewal',\r\n    verified: true,\r\n    activity: 68,\r\n    representative: {\r\n      name: 'Xuxue Feng',\r\n      image: 'xuxuefeng.png',\r\n    },\r\n    balance: 76017,\r\n  },\r\n  {\r\n    id: 1033,\r\n    name: 'Albina Glick',\r\n    country: {\r\n      name: 'Ukraine',\r\n      code: 'ua',\r\n    },\r\n    company: 'Giampetro, Anthony D',\r\n    date: new Date('2019-08-08'),\r\n    status: 'proposal',\r\n    verified: true,\r\n    activity: 85,\r\n    representative: {\r\n      name: 'Bernardo Dominic',\r\n      image: 'bernardodominic.png',\r\n    },\r\n    balance: 91201,\r\n  },\r\n  {\r\n    id: 1034,\r\n    name: 'Alishia Sergi',\r\n    country: {\r\n      name: 'Qatar',\r\n      code: 'qa',\r\n    },\r\n    company: 'Milford Enterprises Inc',\r\n    date: new Date('2018-05-19'),\r\n    status: 'negotiation',\r\n    verified: false,\r\n    activity: 46,\r\n    representative: {\r\n      name: 'Ivan Magalhaes',\r\n      image: 'ivanmagalhaes.png',\r\n    },\r\n    balance: 12237,\r\n  },\r\n  {\r\n    id: 1035,\r\n    name: 'Solange Shinko',\r\n    country: {\r\n      name: 'Cameroon',\r\n      code: 'cm',\r\n    },\r\n    company: 'Mosocco, Ronald A',\r\n    date: new Date('2015-02-12'),\r\n    status: 'qualified',\r\n    verified: true,\r\n    activity: 32,\r\n    representative: {\r\n      name: 'Onyama Limba',\r\n      image: 'onyamalimba.png',\r\n    },\r\n    balance: 34072,\r\n  },\r\n  {\r\n    id: 1036,\r\n    name: 'Jose Stockham',\r\n    country: {\r\n      name: 'Italy',\r\n      code: 'it',\r\n    },\r\n    company: 'Tri State Refueler Co',\r\n    date: new Date('2018-04-25'),\r\n    status: 'qualified',\r\n    verified: true,\r\n    activity: 77,\r\n    representative: {\r\n      name: 'Amy Elsner',\r\n      image: 'amyelsner.png',\r\n    },\r\n    balance: 94909,\r\n  },\r\n  {\r\n    id: 1037,\r\n    name: 'Rozella Ostrosky',\r\n    country: {\r\n      name: 'Venezuela',\r\n      code: 've',\r\n    },\r\n    company: 'Parkway Company',\r\n    date: new Date('2016-02-27'),\r\n    status: 'unqualified',\r\n    verified: true,\r\n    activity: 66,\r\n    representative: {\r\n      name: 'Amy Elsner',\r\n      image: 'amyelsner.png',\r\n    },\r\n    balance: 57245,\r\n  },\r\n  {\r\n    id: 1038,\r\n    name: 'Valentine Gillian',\r\n    country: {\r\n      name: 'Paraguay',\r\n      code: 'py',\r\n    },\r\n    company: 'Fbs Business Finance',\r\n    date: new Date('2019-09-17'),\r\n    status: 'qualified',\r\n    verified: true,\r\n    activity: 25,\r\n    representative: {\r\n      name: 'Bernardo Dominic',\r\n      image: 'bernardodominic.png',\r\n    },\r\n    balance: 75502,\r\n  },\r\n  {\r\n    id: 1039,\r\n    name: 'Kati Rulapaugh',\r\n    country: {\r\n      name: 'Puerto Rico',\r\n      code: 'pr',\r\n    },\r\n    company: 'Eder Assocs Consltng Engrs Pc',\r\n    date: new Date('2016-12-03'),\r\n    status: 'renewal',\r\n    verified: false,\r\n    activity: 51,\r\n    representative: {\r\n      name: 'Ioni Bowcher',\r\n      image: 'ionibowcher.png',\r\n    },\r\n    balance: 82075,\r\n  },\r\n  {\r\n    id: 1040,\r\n    name: 'Youlanda Schemmer',\r\n    country: {\r\n      name: 'Bolivia',\r\n      code: 'bo',\r\n    },\r\n    company: 'Tri M Tool Inc',\r\n    date: new Date('2017-12-15'),\r\n    status: 'negotiation',\r\n    verified: true,\r\n    activity: 49,\r\n    representative: {\r\n      name: 'Xuxue Feng',\r\n      image: 'xuxuefeng.png',\r\n    },\r\n    balance: 19208,\r\n  },\r\n  {\r\n    id: 1041,\r\n    name: 'Dyan Oldroyd',\r\n    country: {\r\n      name: 'Argentina',\r\n      code: 'ar',\r\n    },\r\n    company: 'International Eyelets Inc',\r\n    date: new Date('2017-02-02'),\r\n    status: 'qualified',\r\n    verified: false,\r\n    activity: 5,\r\n    representative: {\r\n      name: 'Amy Elsner',\r\n      image: 'amyelsner.png',\r\n    },\r\n    balance: 50194,\r\n  },\r\n  {\r\n    id: 1042,\r\n    name: 'Roxane Campain',\r\n    country: {\r\n      name: 'France',\r\n      code: 'fr',\r\n    },\r\n    company: 'Rapid Trading Intl',\r\n    date: new Date('2018-12-25'),\r\n    status: 'unqualified',\r\n    verified: false,\r\n    activity: 100,\r\n    representative: {\r\n      name: 'Anna Fali',\r\n      image: 'annafali.png',\r\n    },\r\n    balance: 77714,\r\n  },\r\n  {\r\n    id: 1043,\r\n    name: 'Lavera Perin',\r\n    country: {\r\n      name: 'Vietnam',\r\n      code: 'vn',\r\n    },\r\n    company: 'Abc Enterprises Inc',\r\n    date: new Date('2018-04-10'),\r\n    status: 'qualified',\r\n    verified: false,\r\n    activity: 71,\r\n    representative: {\r\n      name: 'Stephen Shaw',\r\n      image: 'stephenshaw.png',\r\n    },\r\n    balance: 35740,\r\n  },\r\n  {\r\n    id: 1044,\r\n    name: 'Erick Ferencz',\r\n    country: {\r\n      name: 'Belgium',\r\n      code: 'be',\r\n    },\r\n    company: 'Cindy Turner Associates',\r\n    date: new Date('2018-05-06'),\r\n    status: 'unqualified',\r\n    verified: true,\r\n    activity: 54,\r\n    representative: {\r\n      name: 'Amy Elsner',\r\n      image: 'amyelsner.png',\r\n    },\r\n    balance: 30790,\r\n  },\r\n  {\r\n    id: 1045,\r\n    name: 'Fatima Saylors',\r\n    country: {\r\n      name: 'Canada',\r\n      code: 'ca',\r\n    },\r\n    company: 'Stanton, James D Esq',\r\n    date: new Date('2019-07-10'),\r\n    status: 'renewal',\r\n    verified: true,\r\n    activity: 93,\r\n    representative: {\r\n      name: 'Onyama Limba',\r\n      image: 'onyamalimba.png',\r\n    },\r\n    balance: 52343,\r\n  },\r\n  {\r\n    id: 1046,\r\n    name: 'Jina Briddick',\r\n    country: {\r\n      name: 'Mexico',\r\n      code: 'mx',\r\n    },\r\n    company: 'Grace Pastries Inc',\r\n    date: new Date('2018-02-19'),\r\n    status: 'unqualified',\r\n    verified: false,\r\n    activity: 97,\r\n    representative: {\r\n      name: 'Xuxue Feng',\r\n      image: 'xuxuefeng.png',\r\n    },\r\n    balance: 53966,\r\n  },\r\n  {\r\n    id: 1047,\r\n    name: 'Kanisha Waycott',\r\n    country: {\r\n      name: 'Ecuador',\r\n      code: 'ec',\r\n    },\r\n    company: 'Schroer, Gene E Esq',\r\n    date: new Date('2019-11-27'),\r\n    status: 'new',\r\n    verified: false,\r\n    activity: 80,\r\n    representative: {\r\n      name: 'Xuxue Feng',\r\n      image: 'xuxuefeng.png',\r\n    },\r\n    balance: 9920,\r\n  },\r\n  {\r\n    id: 1048,\r\n    name: 'Emerson Bowley',\r\n    country: {\r\n      name: 'Finland',\r\n      code: 'fi',\r\n    },\r\n    company: 'Knights Inn',\r\n    date: new Date('2018-11-24'),\r\n    status: 'new',\r\n    verified: false,\r\n    activity: 63,\r\n    representative: {\r\n      name: 'Stephen Shaw',\r\n      image: 'stephenshaw.png',\r\n    },\r\n    balance: 78069,\r\n  },\r\n  {\r\n    id: 1049,\r\n    name: 'Blair Malet',\r\n    country: {\r\n      name: 'Finland',\r\n      code: 'fi',\r\n    },\r\n    company: 'Bollinger Mach Shp & Shipyard',\r\n    date: new Date('2018-04-19'),\r\n    status: 'new',\r\n    verified: true,\r\n    activity: 92,\r\n    representative: {\r\n      name: 'Asiya Javayant',\r\n      image: 'asiyajavayant.png',\r\n    },\r\n    balance: 65005,\r\n  },\r\n]"
        },
        {
          "name": "Products",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "libs/components/src/lib/table/_story/data.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Product[]",
          "defaultValue": "[\r\n  {\r\n    id: '1000',\r\n    code: 'f230fh0g3',\r\n    name: 'Bamboo Watch',\r\n    description: 'Product Description',\r\n    image: 'bamboo-watch.jpg',\r\n    price: 65,\r\n    category: 'Accessories',\r\n    quantity: 24,\r\n    inventoryStatus: 'INSTOCK',\r\n    rating: 5,\r\n  },\r\n  {\r\n    id: '1001',\r\n    code: 'nvklal433',\r\n    name: 'Black Watch',\r\n    description: 'Product Description',\r\n    image: 'black-watch.jpg',\r\n    price: 72,\r\n    category: 'Accessories',\r\n    quantity: 61,\r\n    inventoryStatus: 'INSTOCK',\r\n    rating: 4,\r\n  },\r\n  {\r\n    id: '1002',\r\n    code: 'zz21cz3c1',\r\n    name: 'Blue Band',\r\n    description: 'Product Description',\r\n    image: 'blue-band.jpg',\r\n    price: 79,\r\n    category: 'Fitness',\r\n    quantity: 2,\r\n    inventoryStatus: 'LOWSTOCK',\r\n    rating: 3,\r\n  },\r\n  {\r\n    id: '1003',\r\n    code: '244wgerg2',\r\n    name: 'Blue T-Shirt',\r\n    description: 'Product Description',\r\n    image: 'blue-t-shirt.jpg',\r\n    price: 29,\r\n    category: 'Clothing',\r\n    quantity: 25,\r\n    inventoryStatus: 'INSTOCK',\r\n    rating: 5,\r\n  },\r\n  {\r\n    id: '1004',\r\n    code: 'h456wer53',\r\n    name: 'Bracelet',\r\n    description: 'Product Description',\r\n    image: 'bracelet.jpg',\r\n    price: 15,\r\n    category: 'Accessories',\r\n    quantity: 73,\r\n    inventoryStatus: 'INSTOCK',\r\n    rating: 4,\r\n  },\r\n  {\r\n    id: '1005',\r\n    code: 'av2231fwg',\r\n    name: 'Brown Purse',\r\n    description: 'Product Description',\r\n    image: 'brown-purse.jpg',\r\n    price: 120,\r\n    category: 'Accessories',\r\n    quantity: 0,\r\n    inventoryStatus: 'OUTOFSTOCK',\r\n    rating: 4,\r\n  },\r\n  {\r\n    id: '1006',\r\n    code: 'bib36pfvm',\r\n    name: 'Chakra Bracelet',\r\n    description: 'Product Description',\r\n    image: 'chakra-bracelet.jpg',\r\n    price: 32,\r\n    category: 'Accessories',\r\n    quantity: 5,\r\n    inventoryStatus: 'LOWSTOCK',\r\n    rating: 3,\r\n  },\r\n  {\r\n    id: '1007',\r\n    code: 'mbvjkgip5',\r\n    name: 'Galaxy Earrings',\r\n    description: 'Product Description',\r\n    image: 'galaxy-earrings.jpg',\r\n    price: 34,\r\n    category: 'Accessories',\r\n    quantity: 23,\r\n    inventoryStatus: 'INSTOCK',\r\n    rating: 5,\r\n  },\r\n  {\r\n    id: '1008',\r\n    code: 'vbb124btr',\r\n    name: 'Game Controller',\r\n    description: 'Product Description',\r\n    image: 'game-controller.jpg',\r\n    price: 99,\r\n    category: 'Electronics',\r\n    quantity: 2,\r\n    inventoryStatus: 'LOWSTOCK',\r\n    rating: 4,\r\n  },\r\n  {\r\n    id: '1009',\r\n    code: 'cm230f032',\r\n    name: 'Gaming Set',\r\n    description: 'Product Description',\r\n    image: 'gaming-set.jpg',\r\n    price: 299,\r\n    category: 'Electronics',\r\n    quantity: 63,\r\n    inventoryStatus: 'INSTOCK',\r\n    rating: 3,\r\n  },\r\n]"
        },
        {
          "name": "ProductsOrdersSmall",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "libs/components/src/lib/table/_story/data.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "ProductOrder[]",
          "defaultValue": "[\r\n  {\r\n    id: '1000',\r\n    code: 'f230fh0g3',\r\n    name: 'Bamboo Watch',\r\n    description: 'Product Description',\r\n    image: 'bamboo-watch.jpg',\r\n    price: 65,\r\n    category: 'Accessories',\r\n    quantity: 24,\r\n    inventoryStatus: 'INSTOCK',\r\n    rating: 5,\r\n    orders: [\r\n      {\r\n        id: '1000',\r\n        productCode: 'f230fh0g3',\r\n        date: '13.08.2020',\r\n        amount: 65,\r\n        quantity: 1,\r\n        customer: 'David James',\r\n        status: 'PENDING',\r\n      },\r\n      {\r\n        id: '1001',\r\n        productCode: 'f230fh0g3',\r\n        date: '14.05.2020',\r\n        amount: 130,\r\n        quantity: 2,\r\n        customer: 'Leon Rodrigues',\r\n        status: 'DELIVERED',\r\n      },\r\n      {\r\n        id: '1002',\r\n        productCode: 'f230fh0g3',\r\n        date: '04.01.2019',\r\n        amount: 65,\r\n        quantity: 1,\r\n        customer: 'Juan Alejandro',\r\n        status: 'RETURNED',\r\n      },\r\n      {\r\n        id: '1003',\r\n        productCode: 'f230fh0g3',\r\n        date: '13.09.2020',\r\n        amount: 195,\r\n        quantity: 3,\r\n        customer: 'Claire Morrow',\r\n        status: 'CANCELLED',\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    id: '1001',\r\n    code: 'nvklal433',\r\n    name: 'Black Watch',\r\n    description: 'Product Description',\r\n    image: 'black-watch.jpg',\r\n    price: 72,\r\n    category: 'Accessories',\r\n    quantity: 61,\r\n    inventoryStatus: 'INSTOCK',\r\n    rating: 4,\r\n    orders: [\r\n      {\r\n        id: '2000',\r\n        productCode: 'nvklal433',\r\n        date: '14.05.2020',\r\n        amount: 72,\r\n        quantity: 1,\r\n        customer: 'Maisha Jefferson',\r\n        status: 'DELIVERED',\r\n      },\r\n      {\r\n        id: '2001',\r\n        productCode: 'nvklal433',\r\n        date: '28.02.2020',\r\n        amount: 144,\r\n        quantity: 2,\r\n        customer: 'Octavia Murillo',\r\n        status: 'PENDING',\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    id: '1002',\r\n    code: 'zz21cz3c1',\r\n    name: 'Blue Band',\r\n    description: 'Product Description',\r\n    image: 'blue-band.jpg',\r\n    price: 79,\r\n    category: 'Fitness',\r\n    quantity: 2,\r\n    inventoryStatus: 'LOWSTOCK',\r\n    rating: 3,\r\n    orders: [\r\n      {\r\n        id: '3000',\r\n        productCode: 'zz21cz3c1',\r\n        date: '05.07.2020',\r\n        amount: 79,\r\n        quantity: 1,\r\n        customer: 'Stacey Leja',\r\n        status: 'DELIVERED',\r\n      },\r\n      {\r\n        id: '3001',\r\n        productCode: 'zz21cz3c1',\r\n        date: '06.02.2020',\r\n        amount: 79,\r\n        quantity: 1,\r\n        customer: 'Ashley Wickens',\r\n        status: 'DELIVERED',\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    id: '1003',\r\n    code: '244wgerg2',\r\n    name: 'Blue T-Shirt',\r\n    description: 'Product Description',\r\n    image: 'blue-t-shirt.jpg',\r\n    price: 29,\r\n    category: 'Clothing',\r\n    quantity: 25,\r\n    inventoryStatus: 'INSTOCK',\r\n    rating: 5,\r\n    orders: [],\r\n  },\r\n  {\r\n    id: '1004',\r\n    code: 'h456wer53',\r\n    name: 'Bracelet',\r\n    description: 'Product Description',\r\n    image: 'bracelet.jpg',\r\n    price: 15,\r\n    category: 'Accessories',\r\n    quantity: 73,\r\n    inventoryStatus: 'INSTOCK',\r\n    rating: 4,\r\n    orders: [\r\n      {\r\n        id: '5000',\r\n        productCode: 'h456wer53',\r\n        date: '05.09.2020',\r\n        amount: 60,\r\n        quantity: 4,\r\n        customer: 'Mayumi Misaki',\r\n        status: 'PENDING',\r\n      },\r\n      {\r\n        id: '5001',\r\n        productCode: 'h456wer53',\r\n        date: '16.04.2019',\r\n        amount: 2,\r\n        quantity: 30,\r\n        customer: 'Francesco Salvatore',\r\n        status: 'DELIVERED',\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    id: '1005',\r\n    code: 'av2231fwg',\r\n    name: 'Brown Purse',\r\n    description: 'Product Description',\r\n    image: 'brown-purse.jpg',\r\n    price: 120,\r\n    category: 'Accessories',\r\n    quantity: 0,\r\n    inventoryStatus: 'OUTOFSTOCK',\r\n    rating: 4,\r\n    orders: [\r\n      {\r\n        id: '6000',\r\n        productCode: 'av2231fwg',\r\n        date: '25.01.2020',\r\n        amount: 120,\r\n        quantity: 1,\r\n        customer: 'Isabel Sinclair',\r\n        status: 'RETURNED',\r\n      },\r\n      {\r\n        id: '6001',\r\n        productCode: 'av2231fwg',\r\n        date: '12.03.2019',\r\n        amount: 240,\r\n        quantity: 2,\r\n        customer: 'Lionel Clifford',\r\n        status: 'DELIVERED',\r\n      },\r\n      {\r\n        id: '6002',\r\n        productCode: 'av2231fwg',\r\n        date: '05.05.2019',\r\n        amount: 120,\r\n        quantity: 1,\r\n        customer: 'Cody Chavez',\r\n        status: 'DELIVERED',\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    id: '1006',\r\n    code: 'bib36pfvm',\r\n    name: 'Chakra Bracelet',\r\n    description: 'Product Description',\r\n    image: 'chakra-bracelet.jpg',\r\n    price: 32,\r\n    category: 'Accessories',\r\n    quantity: 5,\r\n    inventoryStatus: 'LOWSTOCK',\r\n    rating: 3,\r\n    orders: [\r\n      {\r\n        id: '7000',\r\n        productCode: 'bib36pfvm',\r\n        date: '24.02.2020',\r\n        amount: 32,\r\n        quantity: 1,\r\n        customer: 'Arvin Darci',\r\n        status: 'DELIVERED',\r\n      },\r\n      {\r\n        id: '7001',\r\n        productCode: 'bib36pfvm',\r\n        date: '14.01.2020',\r\n        amount: 64,\r\n        quantity: 2,\r\n        customer: 'Izzy Jones',\r\n        status: 'PENDING',\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    id: '1007',\r\n    code: 'mbvjkgip5',\r\n    name: 'Galaxy Earrings',\r\n    description: 'Product Description',\r\n    image: 'galaxy-earrings.jpg',\r\n    price: 34,\r\n    category: 'Accessories',\r\n    quantity: 23,\r\n    inventoryStatus: 'INSTOCK',\r\n    rating: 5,\r\n    orders: [\r\n      {\r\n        id: '8000',\r\n        productCode: 'mbvjkgip5',\r\n        date: '19.06.2020',\r\n        amount: 34,\r\n        quantity: 1,\r\n        customer: 'Jennifer Smith',\r\n        status: 'DELIVERED',\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    id: '1008',\r\n    code: 'vbb124btr',\r\n    name: 'Game Controller',\r\n    description: 'Product Description',\r\n    image: 'game-controller.jpg',\r\n    price: 99,\r\n    category: 'Electronics',\r\n    quantity: 2,\r\n    inventoryStatus: 'LOWSTOCK',\r\n    rating: 4,\r\n    orders: [\r\n      {\r\n        id: '9000',\r\n        productCode: 'vbb124btr',\r\n        date: '05.01.2020',\r\n        amount: 99,\r\n        quantity: 1,\r\n        customer: 'Jeanfrancois David',\r\n        status: 'DELIVERED',\r\n      },\r\n      {\r\n        id: '9001',\r\n        productCode: 'vbb124btr',\r\n        date: '19.01.2020',\r\n        amount: 198,\r\n        quantity: 2,\r\n        customer: 'Ivar Greenwood',\r\n        status: 'RETURNED',\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    id: '1009',\r\n    code: 'cm230f032',\r\n    name: 'Gaming Set',\r\n    description: 'Product Description',\r\n    image: 'gaming-set.jpg',\r\n    price: 299,\r\n    category: 'Electronics',\r\n    quantity: 63,\r\n    inventoryStatus: 'INSTOCK',\r\n    rating: 3,\r\n    orders: [\r\n      {\r\n        id: '10000',\r\n        productCode: 'cm230f032',\r\n        date: '24.06.2020',\r\n        amount: 299,\r\n        quantity: 1,\r\n        customer: 'Kadeem Mujtaba',\r\n        status: 'PENDING',\r\n      },\r\n      {\r\n        id: '10001',\r\n        productCode: 'cm230f032',\r\n        date: '11.05.2020',\r\n        amount: 299,\r\n        quantity: 1,\r\n        customer: 'Ashley Wickens',\r\n        status: 'DELIVERED',\r\n      },\r\n      {\r\n        id: '10002',\r\n        productCode: 'cm230f032',\r\n        date: '07.02.2019',\r\n        amount: 299,\r\n        quantity: 1,\r\n        customer: 'Julie Johnson',\r\n        status: 'DELIVERED',\r\n      },\r\n      {\r\n        id: '10003',\r\n        productCode: 'cm230f032',\r\n        date: '26.04.2020',\r\n        amount: 299,\r\n        quantity: 1,\r\n        customer: 'Tony Costa',\r\n        status: 'CANCELLED',\r\n      },\r\n    ],\r\n  },\r\n]"
        },
        {
          "name": "ProductsSmall",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "libs/components/src/lib/table/_story/data.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Product[]",
          "defaultValue": "[\r\n  {\r\n    id: '1000',\r\n    code: 'f230fh0g3',\r\n    name: 'Bamboo Watch',\r\n    description: 'Product Description',\r\n    image: 'bamboo-watch.jpg',\r\n    price: 65,\r\n    category: 'Accessories',\r\n    quantity: 24,\r\n    inventoryStatus: 'INSTOCK',\r\n    rating: 5,\r\n  },\r\n  {\r\n    id: '1001',\r\n    code: 'nvklal433',\r\n    name: 'Black Watch',\r\n    description: 'Product Description',\r\n    image: 'black-watch.jpg',\r\n    price: 72,\r\n    category: 'Accessories',\r\n    quantity: 61,\r\n    inventoryStatus: 'INSTOCK',\r\n    rating: 4,\r\n  },\r\n  {\r\n    id: '1002',\r\n    code: 'zz21cz3c1',\r\n    name: 'Blue Band',\r\n    description: 'Product Description',\r\n    image: 'blue-band.jpg',\r\n    price: 79,\r\n    category: 'Fitness',\r\n    quantity: 2,\r\n    inventoryStatus: 'LOWSTOCK',\r\n    rating: 3,\r\n  },\r\n  {\r\n    id: '1003',\r\n    code: '244wgerg2',\r\n    name: 'Blue T-Shirt',\r\n    description: 'Product Description',\r\n    image: 'blue-t-shirt.jpg',\r\n    price: 29,\r\n    category: 'Clothing',\r\n    quantity: 25,\r\n    inventoryStatus: 'INSTOCK',\r\n    rating: 5,\r\n  },\r\n  {\r\n    id: '1004',\r\n    code: 'h456wer53',\r\n    name: 'Bracelet',\r\n    description: 'Product Description',\r\n    image: 'bracelet.jpg',\r\n    price: 15,\r\n    category: 'Accessories',\r\n    quantity: 73,\r\n    inventoryStatus: 'INSTOCK',\r\n    rating: 4,\r\n  },\r\n  {\r\n    id: '1005',\r\n    code: 'av2231fwg',\r\n    name: 'Brown Purse',\r\n    description: 'Product Description',\r\n    image: 'brown-purse.jpg',\r\n    price: 120,\r\n    category: 'Accessories',\r\n    quantity: 0,\r\n    inventoryStatus: 'OUTOFSTOCK',\r\n    rating: 4,\r\n  },\r\n  {\r\n    id: '1006',\r\n    code: 'bib36pfvm',\r\n    name: 'Chakra Bracelet',\r\n    description: 'Product Description',\r\n    image: 'chakra-bracelet.jpg',\r\n    price: 32,\r\n    category: 'Accessories',\r\n    quantity: 5,\r\n    inventoryStatus: 'LOWSTOCK',\r\n    rating: 3,\r\n  },\r\n  {\r\n    id: '1007',\r\n    code: 'mbvjkgip5',\r\n    name: 'Galaxy Earrings',\r\n    description: 'Product Description',\r\n    image: 'galaxy-earrings.jpg',\r\n    price: 34,\r\n    category: 'Accessories',\r\n    quantity: 23,\r\n    inventoryStatus: 'INSTOCK',\r\n    rating: 5,\r\n  },\r\n  {\r\n    id: '1008',\r\n    code: 'vbb124btr',\r\n    name: 'Game Controller',\r\n    description: 'Product Description',\r\n    image: 'game-controller.jpg',\r\n    price: 99,\r\n    category: 'Electronics',\r\n    quantity: 2,\r\n    inventoryStatus: 'LOWSTOCK',\r\n    rating: 4,\r\n  },\r\n  {\r\n    id: '1009',\r\n    code: 'cm230f032',\r\n    name: 'Gaming Set',\r\n    description: 'Product Description',\r\n    image: 'gaming-set.jpg',\r\n    price: 299,\r\n    category: 'Electronics',\r\n    quantity: 63,\r\n    inventoryStatus: 'INSTOCK',\r\n    rating: 3,\r\n  },\r\n]"
        },
        {
          "name": "Sales",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "libs/components/src/lib/table/_story/data.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Sale[]",
          "defaultValue": "[\r\n  {\r\n    product: 'Bamboo Watch',\r\n    lastYearSale: 51,\r\n    thisYearSale: 40,\r\n    lastYearProfit: 54406,\r\n    thisYearProfit: 43342,\r\n  },\r\n  {\r\n    product: 'Black Watch',\r\n    lastYearSale: 83,\r\n    thisYearSale: 9,\r\n    lastYearProfit: 423132,\r\n    thisYearProfit: 312122,\r\n  },\r\n  { product: 'Blue Band', lastYearSale: 38, thisYearSale: 5, lastYearProfit: 12321, thisYearProfit: 8500 },\r\n  {\r\n    product: 'Blue T-Shirt',\r\n    lastYearSale: 49,\r\n    thisYearSale: 22,\r\n    lastYearProfit: 745232,\r\n    thisYearProfit: 65323,\r\n  },\r\n  {\r\n    product: 'Brown Purse',\r\n    lastYearSale: 17,\r\n    thisYearSale: 79,\r\n    lastYearProfit: 643242,\r\n    thisYearProfit: 500332,\r\n  },\r\n  {\r\n    product: 'Chakra Bracelet',\r\n    lastYearSale: 52,\r\n    thisYearSale: 65,\r\n    lastYearProfit: 421132,\r\n    thisYearProfit: 150005,\r\n  },\r\n  {\r\n    product: 'Galaxy Earrings',\r\n    lastYearSale: 82,\r\n    thisYearSale: 12,\r\n    lastYearProfit: 131211,\r\n    thisYearProfit: 100214,\r\n  },\r\n  {\r\n    product: 'Game Controller',\r\n    lastYearSale: 44,\r\n    thisYearSale: 45,\r\n    lastYearProfit: 66442,\r\n    thisYearProfit: 53322,\r\n  },\r\n  {\r\n    product: 'Gaming Set',\r\n    lastYearSale: 90,\r\n    thisYearSale: 56,\r\n    lastYearProfit: 765442,\r\n    thisYearProfit: 296232,\r\n  },\r\n  {\r\n    product: 'Gold Phone Case',\r\n    lastYearSale: 75,\r\n    thisYearSale: 54,\r\n    lastYearProfit: 21212,\r\n    thisYearProfit: 12533,\r\n  },\r\n]"
        }
      ],
      "libs/components/src/lib/button/zyfra-button.component.stories.ts": [
        {
          "name": "Danger",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "libs/components/src/lib/button/zyfra-button.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "defaultValue": "Template.bind({})"
        },
        {
          "name": "Default",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "libs/components/src/lib/button/zyfra-button.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "defaultValue": "Template.bind({})"
        },
        {
          "name": "DefaultDisabled",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "libs/components/src/lib/button/zyfra-button.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "defaultValue": "Template.bind({})"
        },
        {
          "name": "DefaultMini",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "libs/components/src/lib/button/zyfra-button.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "defaultValue": "Template.bind({})"
        },
        {
          "name": "Icon",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "libs/components/src/lib/button/zyfra-button.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "defaultValue": "Template.bind({})"
        },
        {
          "name": "Info",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "libs/components/src/lib/button/zyfra-button.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "defaultValue": "Template.bind({})"
        },
        {
          "name": "OnlyIcon",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "libs/components/src/lib/button/zyfra-button.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "defaultValue": "Template.bind({})"
        },
        {
          "name": "Secondary",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "libs/components/src/lib/button/zyfra-button.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "defaultValue": "Template.bind({})"
        },
        {
          "name": "Success",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "libs/components/src/lib/button/zyfra-button.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "defaultValue": "Template.bind({})"
        },
        {
          "name": "SuccessMini",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "libs/components/src/lib/button/zyfra-button.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "defaultValue": "Template.bind({})"
        },
        {
          "name": "Template",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "libs/components/src/lib/button/zyfra-button.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story<ZyfraButtonComponent>",
          "defaultValue": "(args) => ({\r\n  component: ZyfraButtonComponent,\r\n  props: args,\r\n})"
        },
        {
          "name": "Warning",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "libs/components/src/lib/button/zyfra-button.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "defaultValue": "Template.bind({})"
        }
      ],
      "libs/components/src/lib/progress/zyfra-progress-bar.component.stories.ts": [
        {
          "name": "Danger",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "libs/components/src/lib/progress/zyfra-progress-bar.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "defaultValue": "Template.bind({})"
        },
        {
          "name": "Indeterminate",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "libs/components/src/lib/progress/zyfra-progress-bar.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "defaultValue": "Template.bind({})"
        },
        {
          "name": "Info",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "libs/components/src/lib/progress/zyfra-progress-bar.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "defaultValue": "Template.bind({})"
        },
        {
          "name": "Mini",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "libs/components/src/lib/progress/zyfra-progress-bar.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "defaultValue": "Template.bind({})"
        },
        {
          "name": "NoValueDisplay",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "libs/components/src/lib/progress/zyfra-progress-bar.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "defaultValue": "Template.bind({})"
        },
        {
          "name": "Secondary",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "libs/components/src/lib/progress/zyfra-progress-bar.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "defaultValue": "Template.bind({})"
        },
        {
          "name": "Simple",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "libs/components/src/lib/progress/zyfra-progress-bar.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "defaultValue": "Template.bind({})"
        },
        {
          "name": "Success",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "libs/components/src/lib/progress/zyfra-progress-bar.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "defaultValue": "Template.bind({})"
        },
        {
          "name": "Template",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "libs/components/src/lib/progress/zyfra-progress-bar.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story<ZyfraProgressBarComponent>",
          "defaultValue": "(args: ZyfraProgressBarComponent) => ({\r\n  props: args,\r\n})"
        },
        {
          "name": "Warning",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "libs/components/src/lib/progress/zyfra-progress-bar.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "defaultValue": "Template.bind({})"
        }
      ],
      "libs/components/src/lib/toggle-button/zyfra-toggle-button.component.stories.ts": [
        {
          "name": "DangerMini",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "libs/components/src/lib/toggle-button/zyfra-toggle-button.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "defaultValue": "Template.bind({})"
        },
        {
          "name": "Default",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "libs/components/src/lib/toggle-button/zyfra-toggle-button.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "defaultValue": "Template.bind({})"
        },
        {
          "name": "Info",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "libs/components/src/lib/toggle-button/zyfra-toggle-button.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "defaultValue": "Template.bind({})"
        },
        {
          "name": "Template",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "libs/components/src/lib/toggle-button/zyfra-toggle-button.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story<ZyfraToggleButtonComponent>",
          "defaultValue": "(args) => ({\r\n  component: ZyfraToggleButtonComponent,\r\n  props: args,\r\n})"
        }
      ],
      "libs/components/src/lib/checkbox/story/data.ts": [
        {
          "name": "data",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "libs/components/src/lib/checkbox/story/data.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "DataFormControl[]",
          "defaultValue": "[\r\n  {\r\n    text: 'Checkbox',\r\n    options: [\r\n      {\r\n        value: 1,\r\n        label: 'Value 1',\r\n      },\r\n      {\r\n        value: 2,\r\n        label: 'Value 2',\r\n      },\r\n      {\r\n        value: 3,\r\n        label: 'Value 3',\r\n      },\r\n      {\r\n        value: 4,\r\n        label: 'Value 4',\r\n      },\r\n    ],\r\n  },\r\n]"
        }
      ],
      "libs/components/src/lib/nav-menu/model/nav-menu-config.ts": [
        {
          "name": "DEFAULT_SETTINGS",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "libs/components/src/lib/nav-menu/model/nav-menu-config.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "SettingsConfig",
          "defaultValue": "{\r\n  singleGroup: false,\r\n  selectionMode: 'single',\r\n  selectedSize: 'standard'\r\n}"
        },
        {
          "name": "DEFAULT_TOOLBAR_CONFIG",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "libs/components/src/lib/nav-menu/model/nav-menu-config.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "ToolbarConfig",
          "defaultValue": "{\r\n  filter: false,\r\n  group: false,\r\n  filesMode: false,\r\n  rubricatorMode: false,\r\n  search: false,\r\n  closeAll: false,\r\n  refresh: false,\r\n}"
        }
      ],
      "libs/components/src/lib/datepicker/zyfra-relative-datepicker/relative-datepicker.models.ts": [
        {
          "name": "DefaultRelativeMenuItems",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "libs/components/src/lib/datepicker/zyfra-relative-datepicker/relative-datepicker.models.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "defaultValue": "{\r\n  time: [\r\n    {\r\n      id: 'current',\r\n      groupId: 'time',\r\n      icon: 'date-asterisk',\r\n      label: 'Текущее время',\r\n    },\r\n    {\r\n      id: 'midnight',\r\n      groupId: 'time',\r\n      icon: 'date-now',\r\n      label: 'Полночь текущих суток',\r\n    },\r\n  ],\r\n\r\n  direction: [\r\n    { id: 'plus', groupId: 'direction', icon: 'add-circle', label: 'Смещение вперед' },\r\n    {\r\n      id: 'minus',\r\n      groupId: 'direction',\r\n      icon: 'delete-minus-circle',\r\n      label: 'Смещение назад',\r\n    },\r\n  ],\r\n\r\n  period: [\r\n    {\r\n      id: 'year',\r\n      groupId: 'period',\r\n      icon: 'date-year',\r\n      label: 'Год',\r\n    },\r\n    {\r\n      id: 'month',\r\n      groupId: 'period',\r\n      icon: 'date-month',\r\n      label: 'Месяц',\r\n    },\r\n    {\r\n      id: 'day',\r\n      groupId: 'period',\r\n      icon: 'date-day',\r\n      label: 'День',\r\n    },\r\n    {\r\n      id: 'hour',\r\n      groupId: 'period',\r\n      icon: 'date-hour',\r\n      label: 'Час',\r\n    },\r\n    {\r\n      id: 'minute',\r\n      groupId: 'period',\r\n      icon: 'date-minute',\r\n      label: 'Минута',\r\n    },\r\n    {\r\n      id: 'second',\r\n      groupId: 'period',\r\n      icon: 'date-second',\r\n      label: 'Секунда',\r\n    },\r\n  ],\r\n} as const"
        }
      ],
      "libs/components/src/lib/datepicker/zyfra-relative-datepicker/relative-datepicker.utils.ts": [
        {
          "name": "directionMap",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "libs/components/src/lib/datepicker/zyfra-relative-datepicker/relative-datepicker.utils.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "defaultValue": "new Map<string, RelativeDateDirectionId>([\r\n  ['-', 'minus'],\r\n  ['+', 'plus'],\r\n])"
        },
        {
          "name": "MatchPattern",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "libs/components/src/lib/datepicker/zyfra-relative-datepicker/relative-datepicker.utils.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "string",
          "defaultValue": "'(T|\\\\*)?(\\\\+|\\\\-)?(\\\\d+)?(Y|M|d|h|m|s)?'"
        },
        {
          "name": "periodMap",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "libs/components/src/lib/datepicker/zyfra-relative-datepicker/relative-datepicker.utils.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "defaultValue": "new Map<string, RelativeDatePeriodId>([\r\n  ['Y', 'year'],\r\n  ['M', 'month'],\r\n  ['d', 'day'],\r\n  ['h', 'hour'],\r\n  ['m', 'minute'],\r\n  ['s', 'second'],\r\n])"
        },
        {
          "name": "renderDirectionMap",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "libs/components/src/lib/datepicker/zyfra-relative-datepicker/relative-datepicker.utils.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "defaultValue": "new Map<RelativeDateDirectionId, string>([\r\n  ['minus', '-'],\r\n  ['plus', '+'],\r\n])"
        },
        {
          "name": "renderPeriodMap",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "libs/components/src/lib/datepicker/zyfra-relative-datepicker/relative-datepicker.utils.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "defaultValue": "new Map<RelativeDatePeriodId, string>([\r\n  ['year', 'Y'],\r\n  ['month', 'M'],\r\n  ['day', 'd'],\r\n  ['hour', 'h'],\r\n  ['minute', 'm'],\r\n  ['second', 's'],\r\n])"
        },
        {
          "name": "renderTimeMap",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "libs/components/src/lib/datepicker/zyfra-relative-datepicker/relative-datepicker.utils.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "defaultValue": "new Map<RelativeDateTimeId, string>([\r\n  ['current', '*'],\r\n  ['midnight', 'T'],\r\n])"
        },
        {
          "name": "timeMap",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "libs/components/src/lib/datepicker/zyfra-relative-datepicker/relative-datepicker.utils.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "defaultValue": "new Map<string, RelativeDateTimeId>([\r\n  ['*', 'current'],\r\n  ['T', 'midnight'],\r\n  ['t', 'midnight'], // Can be optional\r\n])"
        }
      ],
      "libs/components/src/lib/radio-button/zyfra-radio-button.component.stories.ts": [
        {
          "name": "DisabledRadio",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "libs/components/src/lib/radio-button/zyfra-radio-button.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "defaultValue": "SimpleTemplate.bind({})"
        },
        {
          "name": "FormControlRadio",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "libs/components/src/lib/radio-button/zyfra-radio-button.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "defaultValue": "FormControlTemplate.bind({})"
        },
        {
          "name": "FormControlTemplate",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "libs/components/src/lib/radio-button/zyfra-radio-button.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story<ZyfraRadioButtonComponent<string>>",
          "defaultValue": "(args) => ({\r\n  template: `\r\n<div class=\"p-radiobutton-group\">\r\n    <ng-container *ngFor=\"let item of items\">\r\n      <zyfra-radio-button\r\n        [name]=\"name\"\r\n        [styleClass]=\"styleClass\"\r\n        [label]=\"item.label\"\r\n        [value]=\"item.value\"\r\n        [disabled]=\"disabled\"\r\n        [formControl]=\"control\"\r\n        (onClick)=\"onClick($event)\"\r\n        (ngModelChange)=\"ngModelChange($event)\"\r\n        (onFocus)=\"onFocus($event)\"\r\n        (onBlur)=\"onBlur($event)\"\r\n      ></zyfra-radio-button>\r\n    <br/>\r\n  </ng-container>\r\n  </div>\r\n  ` + formControlTemplateChunk,\r\n  props: {\r\n    ...args,\r\n    items: items,\r\n    disabledPink: true,\r\n    ngModelChange: () => {},\r\n    control: new FormControl('red', [Validators.required]),\r\n  },\r\n})"
        },
        {
          "name": "formControlTemplateChunk",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "libs/components/src/lib/radio-button/zyfra-radio-button.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "defaultValue": "`<div style=\"font-family: var(--fontFamily);\">\r\n    (Значение: {{control.value === undefined || control.value === null ? 'null' : control.value}})\r\n    <br>\r\n    {{control?.errors ? 'Есть ошибки валидации' : ''}}\r\n    <br>\r\n    </div>\r\n    <zyfra-button\r\n      label=\"toggle disable/enable\"\r\n      [style]=\"{ 'margin-right': '5px', 'margin-top': '20px' }\"\r\n      (click)=\"control.disabled ? control.enable() : control.disable()\"\r\n    ></zyfra-button>\r\n    <zyfra-button label=\"toggle red/black\" (click)=\"control.setValue(control.value === 'black' ? 'red' : 'black')\"></zyfra-button>\r\n`"
        },
        {
          "name": "items",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "libs/components/src/lib/radio-button/zyfra-radio-button.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "[]",
          "defaultValue": "[\r\n  {\r\n    label: 'red',\r\n    value: 'red',\r\n  },\r\n  {\r\n    label: 'black',\r\n    value: 'black',\r\n  },\r\n  {\r\n    label: 'blue',\r\n    value: 'blue',\r\n  },\r\n  {\r\n    label: 'pink',\r\n    value: 'pink',\r\n  },\r\n  {\r\n    label: 'Не заполнено',\r\n    value: null,\r\n  },\r\n]"
        },
        {
          "name": "MiniRadio",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "libs/components/src/lib/radio-button/zyfra-radio-button.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "defaultValue": "SimpleTemplate.bind({})"
        },
        {
          "name": "SimpleRadio",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "libs/components/src/lib/radio-button/zyfra-radio-button.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "defaultValue": "SimpleTemplate.bind({})"
        },
        {
          "name": "SimpleTemplate",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "libs/components/src/lib/radio-button/zyfra-radio-button.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story<ZyfraRadioButtonComponent<string>>",
          "defaultValue": "(args) => ({\r\n  template: `\r\n  <div class=\"p-radiobutton-group\">\r\n    <ng-container *ngFor=\"let item of items\">\r\n      <zyfra-radio-button\r\n        [name]=\"name\"\r\n        [styleClass]=\"styleClass\"\r\n        [label]=\"item.label\"\r\n        [value]=\"item.value\"\r\n        [disabled]=\"disabled\"\r\n        [(ngModel)]=\"model\"\r\n        (onClick)=\"onClick($event)\"\r\n        (ngModelChange)=\"ngModelChange($event)\"\r\n        (onFocus)=\"onFocus($event)\"\r\n        (onBlur)=\"onBlur($event)\"\r\n      ></zyfra-radio-button>\r\n    <br/>\r\n  </ng-container>\r\n  </div>\r\n`,\r\n  props: {\r\n    ...args,\r\n    items: items,\r\n    ngModelChange: () => {},\r\n    onClick: action('onClick'),\r\n    onFocus: action('onFocus'),\r\n    onBlur: action('onBlur'),\r\n  },\r\n})"
        }
      ],
      "libs/components/src/lib/table/_story/stories/edit-cell.stories.ts": [
        {
          "name": "EditCell",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "libs/components/src/lib/table/_story/stories/edit-cell.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "defaultValue": "Template.bind({})"
        },
        {
          "name": "Template",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "libs/components/src/lib/table/_story/stories/edit-cell.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story<ZyfraTableComponent>",
          "defaultValue": "args => ({\r\n  template: `\r\n    <zyfra-table\r\n      [title]=\"title\"\r\n      [value]=\"value\"\r\n      [dataKey]=\"dataKey\"\r\n      [responsiveLayout]=\"responsiveLayout\"\r\n      (editInit)=\"editInit($event)\"\r\n      (editComplete)=\"editComplete($event)\"\r\n      (editCancel)=\"editCancel($event)\"\r\n    >\r\n      <ng-template zyfraTableTemplate=\"header\">\r\n        <tr>\r\n          <th>Code</th>\r\n          <th>Name</th>\r\n          <th>Category</th>\r\n          <th>Quantity</th>\r\n        </tr>\r\n      </ng-template>\r\n\r\n      <ng-template zyfraTableTemplate=\"body\" let-product>\r\n        <tr [zyfraRow]=\"product\">\r\n          <td zyfraEditableColumn>\r\n            <zyfra-cell-editor [(value)]=\"product.code\">\r\n               {{ product.code}}\r\n            </zyfra-cell-editor>\r\n          </td>\r\n\r\n          <td zyfraEditableColumn>\r\n            <zyfra-cell-editor [(value)]=\"product.name\">\r\n              {{product.name}}\r\n            </zyfra-cell-editor>\r\n          </td>\r\n          <td zyfraEditableColumn>\r\n            <zyfra-cell-editor [(value)]=\"product.inventoryStatus\">\r\n              {{product.inventoryStatus}}\r\n            </zyfra-cell-editor>\r\n          </td>\r\n          <td>\r\n            <zyfra-cell-editor [(value)]=\"product.price\">\r\n              {{product.price | currency: 'USD'}}\r\n            </zyfra-cell-editor>\r\n          </td>\r\n        </tr>\r\n      </ng-template>\r\n    </zyfra-table>\r\n  `,\r\n  props: {\r\n    ...args,\r\n    editComplete: consoleLogAction('editComplete'),\r\n    editCancel: consoleLogAction('editCancel'),\r\n    editInit: consoleLogAction('editInit'),\r\n  },\r\n})"
        }
      ],
      "libs/components/src/lib/table/_story/stories/edit-row.stories.ts": [
        {
          "name": "EditRow",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "libs/components/src/lib/table/_story/stories/edit-row.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "defaultValue": "Template.bind({})"
        },
        {
          "name": "Template",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "libs/components/src/lib/table/_story/stories/edit-row.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story<ZyfraTableComponent>",
          "defaultValue": "args => ({\r\n  template: `\r\n    <zyfra-table\r\n      [title]=\"title\"\r\n      [value]=\"value\"\r\n      [dataKey]=\"dataKey\"\r\n      [editMode]=\"editMode\"\r\n      [responsiveLayout]=\"responsiveLayout\"\r\n      (editInit)=\"editInit($event)\"\r\n      (editComplete)=\"editComplete($event)\"\r\n      (editCancel)=\"editCancel($event)\"\r\n      (rowsChange)=\"rowsChange($event)\"\r\n    >\r\n      <ng-template zyfraTableTemplate=\"header\">\r\n        <tr>\r\n          <th>Code</th>\r\n          <th>Name</th>\r\n          <th>Category</th>\r\n          <th>Quantity</th>\r\n          <th style=\"width:8rem\"></th>\r\n        </tr>\r\n      </ng-template>\r\n      <ng-template zyfraTableTemplate=\"body\" let-product let-editing=\"editing\" let-ri=\"rowIndex\">\r\n        <tr [zyfraRow]=\"product\" [zyfraEditableRow]=\"product\">\r\n          <td>\r\n            <zyfra-cell-editor [(value)]=\"product.code\">\r\n              {{product.code}}\r\n            </zyfra-cell-editor>\r\n          </td>\r\n          <td>\r\n            <zyfra-cell-editor [(value)]=\"product.name\">\r\n              {{product.name}}\r\n            </zyfra-cell-editor>\r\n          </td>\r\n          <td>\r\n            <zyfra-cell-editor [(value)]=\"product.inventoryStatus\">\r\n              {{product.inventoryStatus}}\r\n            </zyfra-cell-editor>\r\n          </td>\r\n          <td style=\"text-align: right;\">\r\n            <zyfra-cell-editor [(value)]=\"product.price\">\r\n              <ng-template zyfraTableTemplate=\"input\">\r\n                <input type=\"text\" [(ngModel)]=\"product.price\">\r\n              </ng-template>\r\n              {{product.price | currency: 'USD'}}\r\n            </zyfra-cell-editor>\r\n          </td>\r\n          <td style=\"text-align: center; font-size: 16px;\">\r\n            <button *ngIf=\"!editing\" type=\"button\" zyfraInitEditableRow (click)=\"onRowEditInit(product)\" style=\"background: none; border: none; color: #7887A5; cursor: pointer;\">\r\n              <i class=\"zyfra-icon editor-mode\"></i>\r\n            </button>\r\n            <button *ngIf=\"editing\" type=\"button\" zyfraSaveEditableRow (click)=\"onRowEditSave(product)\" style=\"background: none; border: none; color: #62BC65; cursor: pointer;\">\r\n              <i class=\"pi pi-check\"></i>\r\n            </button>\r\n            <button *ngIf=\"editing\" type=\"button\" zyfraCancelEditableRow (click)=\"onRowEditCancel(product, ri)\" style=\"background: none; border: none; color: #EC5050; cursor: pointer;\">\r\n              <i class=\"pi pi-times\"></i>\r\n            </button>\r\n          </td>\r\n        </tr>\r\n      </ng-template>\r\n    </zyfra-table>\r\n  `,\r\n  props: {\r\n    ...args,\r\n    editComplete: action('editComplete'),\r\n    editCancel: action('editCancel'),\r\n    editInit: action('editInit'),\r\n    statuses: [\r\n      { label: 'In Stock', value: 'INSTOCK' },\r\n      { label: 'Low Stock', value: 'LOWSTOCK' },\r\n      { label: 'Out of Stock', value: 'OUTOFSTOCK' },\r\n    ],\r\n    clonedProducts: {} as { [s: string]: Product },\r\n    onRowEditInit(product: Product): void {\r\n      this.clonedProducts[product.id] = { ...product };\r\n    },\r\n    onRowEditSave(product: Product): void {\r\n      if (product.price > 0) {\r\n        delete this.clonedProducts[product.id];\r\n      }\r\n    },\r\n    onRowEditCancel(product: Product, index: number): void {\r\n      this.value[index] = this.clonedProducts[product.id];\r\n      delete this.clonedProducts[product.id];\r\n    },\r\n  },\r\n})"
        }
      ],
      "libs/components/src/lib/datepicker/i18n/en_US.ts": [
        {
          "name": "en",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "libs/components/src/lib/datepicker/i18n/en_US.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "object",
          "defaultValue": "{\r\n  \"dayNames\": [\r\n    \"Sunday\",\r\n    \"Monday\",\r\n    \"Tuesday\",\r\n    \"Wednesday\",\r\n    \"Thursday\",\r\n    \"Friday\",\r\n    \"Saturday\"\r\n  ],\r\n  \"dayNamesShort\": [\r\n    \"Sun\",\r\n    \"Mon\",\r\n    \"Tue\",\r\n    \"Wed\",\r\n    \"Thu\",\r\n    \"Fri\",\r\n    \"Sat\"\r\n  ],\r\n  \"dayNamesMin\": [\r\n    \"Su\",\r\n    \"Mo\",\r\n    \"Tu\",\r\n    \"We\",\r\n    \"Th\",\r\n    \"Fr\",\r\n    \"Sa\"\r\n  ],\r\n  \"monthNames\": [\r\n    \"January\",\r\n    \"February\",\r\n    \"March\",\r\n    \"April\",\r\n    \"May\",\r\n    \"June\",\r\n    \"July\",\r\n    \"August\",\r\n    \"September\",\r\n    \"October\",\r\n    \"November\",\r\n    \"December\"\r\n  ],\r\n  \"monthNamesShort\": [\r\n    \"Jan\",\r\n    \"Feb\",\r\n    \"Mar\",\r\n    \"Apr\",\r\n    \"May\",\r\n    \"Jun\",\r\n    \"Jul\",\r\n    \"Aug\",\r\n    \"Sep\",\r\n    \"Oct\",\r\n    \"Nov\",\r\n    \"Dec\"\r\n  ],\r\n  \"dateFormat\": \"mm/dd/yy\",\r\n  \"today\": \"Today\",\r\n  \"weekHeader\": \"Wk\",\r\n  \"clear\": \"Clear\"\r\n}"
        }
      ],
      "libs/components/src/lib/tooltip/zyfra-tooltip.module.ts": [
        {
          "name": "EXPORTED_DECLARATIONS",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "libs/components/src/lib/tooltip/zyfra-tooltip.module.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "[]",
          "defaultValue": "[ZyfraTooltipDirective, ZyfraTooltipComponent]"
        }
      ],
      "libs/components/src/lib/tree-table/_story/data.ts": [
        {
          "name": "FileSystem",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "libs/components/src/lib/tree-table/_story/data.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "[]",
          "defaultValue": "[\r\n  {\r\n    data: {\r\n      name: 'Applications',\r\n      size: '200mb',\r\n      type: 'Folder'\r\n    },\r\n    children: [\r\n      {\r\n        data: {\r\n          name: 'Angular',\r\n          size: '25mb',\r\n          type: 'Folder'\r\n        },\r\n        children: [\r\n          {\r\n            data: {\r\n              name: 'angular.app',\r\n              size: '10mb',\r\n              type: 'Application'\r\n            }\r\n          },\r\n          {\r\n            data: {\r\n              name: 'cli.app',\r\n              size: '10mb',\r\n              type: 'Application'\r\n            }\r\n          },\r\n          {\r\n            data: {\r\n              name: 'mobile.app',\r\n              size: '5mb',\r\n              type: 'Application'\r\n            }\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        data: {\r\n          name: 'editor.app',\r\n          size: '25mb',\r\n          type: 'Application'\r\n        }\r\n      },\r\n      {\r\n        data: {\r\n          name: 'settings.app',\r\n          size: '50mb',\r\n          type: 'Application'\r\n        }\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    data: {\r\n      name: 'Cloud',\r\n      size: '20mb',\r\n      type: 'Folder'\r\n    },\r\n    children: [\r\n      {\r\n        data: {\r\n          name: 'backup-1.zip',\r\n          size: '10mb',\r\n          type: 'Zip'\r\n        }\r\n      },\r\n      {\r\n        data: {\r\n          name: 'backup-2.zip',\r\n          size: '10mb',\r\n          type: 'Zip'\r\n        }\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    data: {\r\n      name: 'Desktop',\r\n      size: '150kb',\r\n      type: 'Folder'\r\n    },\r\n    children: [\r\n      {\r\n        data: {\r\n          name: 'note-meeting.txt',\r\n          size: '50kb',\r\n          type: 'Text'\r\n        }\r\n      },\r\n      {\r\n        data: {\r\n          name: 'note-todo.txt',\r\n          size: '100kb',\r\n          type: 'Text'\r\n        }\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    data: {\r\n      name: 'Documents',\r\n      size: '75kb',\r\n      type: 'Folder'\r\n    },\r\n    children: [\r\n      {\r\n        data: {\r\n          name: 'Work',\r\n          size: '55kb',\r\n          type: 'Folder'\r\n        },\r\n        children: [\r\n          {\r\n            data: {\r\n              name: 'Expenses.doc',\r\n              size: '30kb',\r\n              type: 'Document'\r\n            }\r\n          },\r\n          {\r\n            data: {\r\n              name: 'Resume.doc',\r\n              size: '25kb',\r\n              type: 'Resume'\r\n            }\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        data: {\r\n          name: 'Home',\r\n          size: '20kb',\r\n          type: 'Folder'\r\n        },\r\n        children: [\r\n          {\r\n            data: {\r\n              name: 'Invoices',\r\n              size: '20kb',\r\n              type: 'Text'\r\n            }\r\n          }\r\n        ]\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    data: {\r\n      name: 'Downloads',\r\n      size: '25mb',\r\n      type: 'Folder'\r\n    },\r\n    children: [\r\n      {\r\n        data: {\r\n          name: 'Spanish',\r\n          size: '10mb',\r\n          type: 'Folder'\r\n        },\r\n        children: [\r\n          {\r\n            data: {\r\n              name: 'tutorial-a1.txt',\r\n              size: '5mb',\r\n              type: 'Text'\r\n            }\r\n          },\r\n          {\r\n            data: {\r\n              name: 'tutorial-a2.txt',\r\n              size: '5mb',\r\n              type: 'Text'\r\n            }\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        data: {\r\n          name: 'Travel',\r\n          size: '15mb',\r\n          type: 'Text'\r\n        },\r\n        children: [\r\n          {\r\n            data: {\r\n              name: 'Hotel.pdf',\r\n              size: '10mb',\r\n              type: 'PDF'\r\n            }\r\n          },\r\n          {\r\n            data: {\r\n              name: 'Flight.pdf',\r\n              size: '5mb',\r\n              type: 'PDF'\r\n            }\r\n          }\r\n        ]\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    data: {\r\n      name: 'Main',\r\n      size: '50mb',\r\n      type: 'Folder'\r\n    },\r\n    children: [\r\n      {\r\n        data: {\r\n          name: 'bin',\r\n          size: '50kb',\r\n          type: 'Link'\r\n        }\r\n      },\r\n      {\r\n        data: {\r\n          name: 'etc',\r\n          size: '100kb',\r\n          type: 'Link'\r\n        }\r\n      },\r\n      {\r\n        data: {\r\n          name: 'var',\r\n          size: '100kb',\r\n          type: 'Link'\r\n        }\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    data: {\r\n      name: 'Other',\r\n      size: '5mb',\r\n      type: 'Folder'\r\n    },\r\n    children: [\r\n      {\r\n        data: {\r\n          name: 'todo.txt',\r\n          size: '3mb',\r\n          type: 'Text'\r\n        }\r\n      },\r\n      {\r\n        data: {\r\n          name: 'logo.png',\r\n          size: '2mb',\r\n          type: 'Picture'\r\n        }\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    data: {\r\n      name: 'Pictures',\r\n      size: '150kb',\r\n      type: 'Folder'\r\n    },\r\n    children: [\r\n      {\r\n        data: {\r\n          name: 'barcelona.jpg',\r\n          size: '90kb',\r\n          type: 'Picture'\r\n        }\r\n      },\r\n      {\r\n        data: {\r\n          name: 'primeng.png',\r\n          size: '30kb',\r\n          type: 'Picture'\r\n        }\r\n      },\r\n      {\r\n        data: {\r\n          name: 'prime.jpg',\r\n          size: '30kb',\r\n          type: 'Picture'\r\n        }\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    data: {\r\n      name: 'Videos',\r\n      size: '1500mb',\r\n      type: 'Folder'\r\n    },\r\n    children: [\r\n      {\r\n        data: {\r\n          name: 'primefaces.mkv',\r\n          size: '1000mb',\r\n          type: 'Video'\r\n        }\r\n      },\r\n      {\r\n        data: {\r\n          name: 'intro.avi',\r\n          size: '500mb',\r\n          type: 'Video'\r\n        }\r\n      }\r\n    ]\r\n  }\r\n]"
        },
        {
          "name": "Sales",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "libs/components/src/lib/tree-table/_story/data.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "[]",
          "defaultValue": "[\r\n  {\r\n    data: { brand: 'Bliss', lastYearSale: '51%', thisYearSale: '40%', lastYearProfit: '$54,406.00', thisYearProfit: '$43,342'},\r\n    expanded: true,\r\n    children: [\r\n      {\r\n        data: { brand: 'Product A', lastYearSale: '25%', thisYearSale: '20%', lastYearProfit: '$34,406.00', thisYearProfit: '$23,342' },\r\n        expanded: true,\r\n        children: [\r\n          {\r\n            data: { brand: 'Product A-1', lastYearSale: '20%', thisYearSale: '10%', lastYearProfit: '$24,406.00', thisYearProfit: '$13,342' },\r\n          },\r\n          {\r\n            data: { brand: 'Product A-2', lastYearSale: '5%', thisYearSale: '10%', lastYearProfit: '$10,000.00', thisYearProfit: '$10,000' },\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        data: { brand: 'Product B', lastYearSale: '26%', thisYearSale: '20%', lastYearProfit: '$24,000.00', thisYearProfit: '$23,000' },\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    data: { brand: 'Fate', lastYearSale: '83%', thisYearSale: '96%', lastYearProfit: '$423,132', thisYearProfit: '$312,122' },\r\n    children: [\r\n      {\r\n        data: { brand: 'Product X', lastYearSale: '50%', thisYearSale: '40%', lastYearProfit: '$223,132', thisYearProfit: '$156,061' },\r\n      },\r\n      {\r\n        data: { brand: 'Product Y', lastYearSale: '33%', thisYearSale: '56%', lastYearProfit: '$200,000', thisYearProfit: '$156,061' },\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    data: { brand: 'Ruby', lastYearSale: '38%', thisYearSale: '5%', lastYearProfit: '$12,321', thisYearProfit: '$8,500' },\r\n    children: [\r\n      {\r\n        data: { brand: 'Product M', lastYearSale: '18%', thisYearSale: '2%', lastYearProfit: '$10,300', thisYearProfit: '$5,500' },\r\n      },\r\n      {\r\n        data: { brand: 'Product N', lastYearSale: '20%', thisYearSale: '3%', lastYearProfit: '$2,021', thisYearProfit: '$3,000' },\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    data: { brand: 'Sky', lastYearSale: '49%', thisYearSale: '22%', lastYearProfit: '$745,232', thisYearProfit: '$650,323' },\r\n    children: [\r\n      {\r\n        data: { brand: 'Product P', lastYearSale: '20%', thisYearSale: '16%', lastYearProfit: '$345,232', thisYearProfit: '$350,000' },\r\n      },\r\n      {\r\n        data: { brand: 'Product R', lastYearSale: '29%', thisYearSale: '6%', lastYearProfit: '$400,009', thisYearProfit: '$300,323' },\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    data: { brand: 'Comfort', lastYearSale: '17%', thisYearSale: '79%', lastYearProfit: '$643,242', thisYearProfit: '500,332' },\r\n    children: [\r\n      {\r\n        data: { brand: 'Product S', lastYearSale: '10%', thisYearSale: '40%', lastYearProfit: '$243,242', thisYearProfit: '$100,000' },\r\n      },\r\n      {\r\n        data: { brand: 'Product T', lastYearSale: '7%', thisYearSale: '39%', lastYearProfit: '$400,00', thisYearProfit: '$400,332' },\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    data: { brand: 'Merit', lastYearSale: '52%', thisYearSale: ' 65%', lastYearProfit: '$421,132', thisYearProfit: '$150,005' },\r\n    children: [\r\n      {\r\n        data: { brand: 'Product L', lastYearSale: '20%', thisYearSale: '40%', lastYearProfit: '$121,132', thisYearProfit: '$100,000' },\r\n      },\r\n      {\r\n        data: { brand: 'Product G', lastYearSale: '32%', thisYearSale: '25%', lastYearProfit: '$300,000', thisYearProfit: '$50,005' },\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    data: { brand: 'Violet', lastYearSale: '82%', thisYearSale: '12%', lastYearProfit: '$131,211', thisYearProfit: '$100,214' },\r\n    children: [\r\n      {\r\n        data: { brand: 'Product SH1', lastYearSale: '30%', thisYearSale: '6%', lastYearProfit: '$101,211', thisYearProfit: '$30,214' },\r\n      },\r\n      {\r\n        data: { brand: 'Product SH2', lastYearSale: '52%', thisYearSale: '6%', lastYearProfit: '$30,000', thisYearProfit: '$70,000' },\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    data: { brand: 'Dulce', lastYearSale: '44%', thisYearSale: '45%', lastYearProfit: '$66,442', thisYearProfit: '$53,322' },\r\n    children: [\r\n      {\r\n        data: { brand: 'Product PN1', lastYearSale: '22%', thisYearSale: '25%', lastYearProfit: '$33,221', thisYearProfit: '$20,000' },\r\n      },\r\n      {\r\n        data: { brand: 'Product PN2', lastYearSale: '22%', thisYearSale: '25%', lastYearProfit: '$33,221', thisYearProfit: '$33,322' },\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    data: { brand: 'Solace', lastYearSale: '90%', thisYearSale: '56%', lastYearProfit: '$765,442', thisYearProfit: '$296,232' },\r\n    children: [\r\n      {\r\n        data: { brand: 'Product HT1', lastYearSale: '60%', thisYearSale: '36%', lastYearProfit: '$465,000', thisYearProfit: '$150,653' },\r\n      },\r\n      {\r\n        data: { brand: 'Product HT2', lastYearSale: '30%', thisYearSale: '20%', lastYearProfit: '$300,442', thisYearProfit: '$145,579' },\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    data:  { brand: 'Essence', lastYearSale: '75%', thisYearSale: '54%', lastYearProfit: '$21,212', thisYearProfit: '$12,533' },\r\n    children: [\r\n      {\r\n        data: { brand: 'Product TS1', lastYearSale: '50%', thisYearSale: '34%', lastYearProfit: '$11,000', thisYearProfit: '$8,562' },\r\n      },\r\n      {\r\n        data: { brand: 'Product TS2', lastYearSale: '25%', thisYearSale: '20%', lastYearProfit: '$11,212', thisYearProfit: '$3,971' },\r\n      }\r\n    ]\r\n  }\r\n]"
        }
      ],
      "libs/components/src/lib/table/_story/stories/filter.stories.ts": [
        {
          "name": "Filter",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "libs/components/src/lib/table/_story/stories/filter.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "defaultValue": "Template.bind({})"
        },
        {
          "name": "Template",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "libs/components/src/lib/table/_story/stories/filter.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story<ZyfraTableComponent>",
          "defaultValue": "args => ({\r\n  template: `\r\n    <zyfra-table\r\n      #dt\r\n      [title]=\"title\"\r\n      [value]=\"value\"\r\n      [dataKey]=\"dataKey\"\r\n      [rows]=\"rows\"\r\n      [rowsPerPageOptions]=\"rowsPerPageOptions\"\r\n      [paginator]=\"paginator\"\r\n      [globalFilterFields]=\"globalFilterFields\"\r\n      (page)=\"page($event)\"\r\n      (onFilter)=\"onFilter($event)\"\r\n    >\r\n      <ng-template zyfraTableTemplate=\"header\">\r\n        <tr>\r\n          <th>\r\n            <div style=\"display: flex;justify-content: space-between;align-items: center;\">\r\n              Name\r\n              <zyfra-table-column-filter type=\"text\" field=\"name\" display=\"menu\"></zyfra-table-column-filter>\r\n            </div>\r\n          </th>\r\n          <th>\r\n            <div style=\"display: flex;justify-content: space-between;align-items: center;\">\r\n              Country\r\n              <zyfra-table-column-filter type=\"text\" field=\"country.name\" display=\"menu\"></zyfra-table-column-filter>\r\n            </div>\r\n          </th>\r\n          <th>\r\n            <div style=\"display: flex;justify-content: space-between;align-items: center;\">\r\n              Agent\r\n              <zyfra-table-column-filter\r\n                field=\"representative\"\r\n                matchMode=\"in\"\r\n                display=\"menu\"\r\n                [showMatchModes]=\"false\"\r\n                [showOperator]=\"false\"\r\n                [showAddButton]=\"false\"\r\n              >\r\n                <ng-template zyfraTableTemplate=\"header\">\r\n                  <div class=\"p-px-3 p-pt-3 p-pb-0\">\r\n                    <span class=\"p-text-bold\">Agent Picker</span>\r\n                  </div>\r\n                </ng-template>\r\n\r\n                <ng-template zyfraTableTemplate=\"filter\" let-value let-filter=\"filterCallback\">\r\n                   filter testing\r\n                </ng-template>\r\n              </zyfra-table-column-filter>\r\n            </div>\r\n          </th>\r\n          <th>\r\n            <div style=\"display: flex;justify-content: space-between;align-items: center;\">\r\n              Date\r\n              <zyfra-table-column-filter type=\"date\" field=\"date\" display=\"menu\"></zyfra-table-column-filter>\r\n            </div>\r\n          </th>\r\n          <th>\r\n            <div style=\"display: flex;justify-content: space-between;align-items: center;\">\r\n              Balance\r\n              <zyfra-table-column-filter type=\"numeric\" field=\"balance\" display=\"menu\" currency=\"USD\"></zyfra-table-column-filter>\r\n            </div>\r\n          </th>\r\n          <th>\r\n            <div style=\"display: flex;justify-content: space-between;align-items: center;\">\r\n              Status\r\n              <zyfra-table-column-filter field=\"status\" matchMode=\"equals\" display=\"menu\">\r\n                <ng-template zyfraTableTemplate=\"filter\" let-value let-filter=\"filterCallback\"></ng-template>\r\n              </zyfra-table-column-filter>\r\n            </div>\r\n          </th>\r\n          <th>\r\n            <div style=\"display: flex;justify-content: space-between;align-items: center;\">\r\n              Activity\r\n            </div>\r\n          </th>\r\n          <th style=\"width: 8rem\">\r\n            <div style=\"display: flex;justify-content: space-between;align-items: center;\">\r\n              Verified\r\n              <zyfra-table-column-filter type=\"boolean\" field=\"verified\" display=\"menu\"></zyfra-table-column-filter>\r\n            </div>\r\n          </th>\r\n        </tr>\r\n      </ng-template>\r\n\r\n      <ng-template zyfraTableTemplate=\"body\" let-customer>\r\n        <tr [zyfraRow]=\"customer\">\r\n          <td>\r\n            {{customer.name}}\r\n          </td>\r\n          <td>\r\n            <span class=\"image-text\">{{customer.country.name}}</span>\r\n          </td>\r\n          <td>\r\n            <span class=\"image-text\">{{customer.representative.name}}</span>\r\n          </td>\r\n          <td style=\"text-align: right;\">\r\n            {{customer.date | date: 'dd.MM.yyyy'}}\r\n          </td>\r\n          <td style=\"text-align: right;\">\r\n            {{customer.balance | currency:'USD':'symbol'}}\r\n          </td>\r\n          <td>\r\n            <span [class]=\"'customer-badge status-' + customer.status\">{{customer.status}}</span>\r\n          </td>\r\n          <td style=\"text-align: right;\">\r\n            {{customer.activity}}\r\n          </td>\r\n          <td class=\"p-text-center\">\r\n            <i class=\"pi\" [ngClass]=\"{'true-icon pi-check-circle': customer.verified, 'false-icon pi-times-circle': !customer.verified}\"></i>\r\n          </td>\r\n        </tr>\r\n      </ng-template>\r\n\r\n      <ng-template zyfraTableTemplate=\"emptymessage\">\r\n        <tr>\r\n          <td colspan=\"7\">No customers found.</td>\r\n        </tr>\r\n      </ng-template>\r\n    </zyfra-table>\r\n  `,\r\n  props: {\r\n    ...args,\r\n    page: consoleLogAction('page'),\r\n    onFilter: consoleLogAction('onFilter'),\r\n  },\r\n})"
        }
      ],
      "libs/components/src/lib/table/_story/stories/filter-sort-search.stories.ts": [
        {
          "name": "FilterSortSearch",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "libs/components/src/lib/table/_story/stories/filter-sort-search.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "defaultValue": "Template.bind({})"
        },
        {
          "name": "Template",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "libs/components/src/lib/table/_story/stories/filter-sort-search.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story<ZyfraTableComponent>",
          "defaultValue": "args => ({\r\n  template: `\r\n    <div style=\"font-family: Inter, sans-serif;\">\r\n      <p style=\"font-size: 16px; font-weight: 600; margin: 0;\">Примечание:</p>\r\n      <p style=\"font-size: 14px;\">Фильтрация колонок и поиск по колонке совместно работают некорректно в режиме\r\n      локальной фильтрации из-за особенностей реализации таблиц в primeng. Однако фильтрация в режиме lazy load работает\r\n      корректно, события эмитят все необходимые данные для отправки на backend (см. вкладку \"actions\")</p>\r\n    </div>\r\n\r\n    <zyfra-table\r\n      #dt\r\n      [title]=\"title\"\r\n      [value]=\"value\"\r\n      [dataKey]=\"dataKey\"\r\n      [lazy]=\"true\"\r\n      [rows]=\"rows\"\r\n      [rowsPerPageOptions]=\"rowsPerPageOptions\"\r\n      [paginator]=\"paginator\"\r\n      [globalFilterFields]=\"globalFilterFields\"\r\n      (page)=\"page($event)\"\r\n      (onFilter)=\"onFilter($event)\"\r\n      (onSort)=\"onSort($event)\"\r\n    >\r\n      <ng-template zyfraTableTemplate=\"header\">\r\n        <tr>\r\n          <th zyfraSortableColumn=\"name\">\r\n            <div style=\"display: flex;justify-content: space-between;align-items: center;\">\r\n              Name\r\n              <div style=\"display: flex; align-items: center;\">\r\n                <zyfra-table-column-filter type=\"text\" field=\"name\" display=\"menu\"></zyfra-table-column-filter>\r\n                <zyfra-sort-icon field=\"name\"></zyfra-sort-icon>\r\n              </div>\r\n            </div>\r\n          </th>\r\n          <th zyfraSortableColumn=\"country.name\">\r\n            <div style=\"display: flex;justify-content: space-between;align-items: center;\">\r\n              Country\r\n              <div style=\"display: flex; align-items: center;\">\r\n                <zyfra-table-column-filter type=\"text\" field=\"country.name\" display=\"menu\"></zyfra-table-column-filter>\r\n                <zyfra-sort-icon field=\"country.name\"></zyfra-sort-icon>\r\n              </div>\r\n            </div>\r\n          </th>\r\n          <th zyfraSortableColumn=\"representative.name\">\r\n            <div style=\"display: flex;justify-content: space-between;align-items: center;\">\r\n              Agent\r\n              <div style=\"display: flex; align-items: center;\">\r\n                <zyfra-table-column-filter\r\n                  field=\"representative\"\r\n                  matchMode=\"in\"\r\n                  display=\"menu\"\r\n                  [showMatchModes]=\"false\"\r\n                  [showOperator]=\"false\"\r\n                  [showAddButton]=\"false\"\r\n                >\r\n                  <ng-template zyfraTableTemplate=\"header\">\r\n                    <div class=\"p-px-3 p-pt-3 p-pb-0\">\r\n                      <span class=\"p-text-bold\">Agent Picker</span>\r\n                    </div>\r\n                  </ng-template>\r\n\r\n                  <ng-template zyfraTableTemplate=\"filter\" let-value let-filter=\"filterCallback\">\r\n                     filter testing\r\n                  </ng-template>\r\n                </zyfra-table-column-filter>\r\n                <zyfra-sort-icon field=\"representative.name\"></zyfra-sort-icon>\r\n              </div>\r\n            </div>\r\n          </th>\r\n          <th zyfraSortableColumn=\"date\">\r\n            <div style=\"display: flex;justify-content: space-between;align-items: center;\">\r\n              Date\r\n              <div style=\"display: flex; align-items: center;\">\r\n                <zyfra-table-column-filter type=\"date\" field=\"date\" display=\"menu\"></zyfra-table-column-filter>\r\n                <zyfra-sort-icon field=\"date\"></zyfra-sort-icon>\r\n              </div>\r\n            </div>\r\n          </th>\r\n          <th zyfraSortableColumn=\"balance\">\r\n            <div style=\"display: flex;justify-content: space-between;align-items: center;\">\r\n              Balance\r\n              <div style=\"display: flex; align-items: center;\">\r\n                <zyfra-table-column-filter type=\"numeric\" field=\"balance\" display=\"menu\" currency=\"USD\"></zyfra-table-column-filter>\r\n                <zyfra-sort-icon field=\"balance\"></zyfra-sort-icon>\r\n              </div>\r\n            </div>\r\n          </th>\r\n          <th zyfraSortableColumn=\"status\">\r\n            <div style=\"display: flex;justify-content: space-between;align-items: center;\">\r\n              Status\r\n              <div style=\"display: flex; align-items: center;\">\r\n                <zyfra-table-column-filter field=\"status\" matchMode=\"equals\" display=\"menu\">\r\n                  <ng-template zyfraTableTemplate=\"filter\" let-value let-filter=\"filterCallback\"></ng-template>\r\n                </zyfra-table-column-filter>\r\n                <zyfra-sort-icon field=\"status\"></zyfra-sort-icon>\r\n              </div>\r\n            </div>\r\n          </th>\r\n          <th zyfraSortableColumn=\"activity\">\r\n            <div style=\"display: flex;justify-content: space-between;align-items: center;\">\r\n              Activity\r\n              <zyfra-sort-icon field=\"activity\"></zyfra-sort-icon>\r\n            </div>\r\n          </th>\r\n          <th zyfraSortableColumn=\"verified\" style=\"width: 8rem\">\r\n            <div style=\"display: flex;justify-content: space-between;align-items: center;\">\r\n              Verified\r\n              <div style=\"display: flex; align-items: center;\">\r\n                <zyfra-table-column-filter type=\"boolean\" field=\"verified\" display=\"menu\"></zyfra-table-column-filter>\r\n                <zyfra-sort-icon field=\"verified\"></zyfra-sort-icon>\r\n              </div>\r\n            </div>\r\n          </th>\r\n        </tr>\r\n        <tr>\r\n          <th zyfra-search-cell [isNativeFiltering]=\"false\" (valueChange)=\"valueChange($event)\" field=\"name\"></th>\r\n          <th zyfra-search-cell [isNativeFiltering]=\"false\" (valueChange)=\"valueChange($event)\" field=\"country.name\"></th>\r\n          <th zyfra-search-cell [isNativeFiltering]=\"false\" (valueChange)=\"valueChange($event)\" field=\"representative.name\"></th>\r\n          <th zyfra-search-cell [isNativeFiltering]=\"false\" (valueChange)=\"valueChange($event)\" field=\"date\"></th>\r\n          <th zyfra-search-cell [isNativeFiltering]=\"false\" (valueChange)=\"valueChange($event)\" field=\"balance\"></th>\r\n          <th zyfra-search-cell [isNativeFiltering]=\"false\" (valueChange)=\"valueChange($event)\" field=\"status\"></th>\r\n          <th zyfra-search-cell [isNativeFiltering]=\"false\" (valueChange)=\"valueChange($event)\" field=\"activity\"></th>\r\n          <th zyfra-search-cell [isNativeFiltering]=\"false\" (valueChange)=\"valueChange($event)\" field=\"verified\"></th>\r\n        </tr>\r\n      </ng-template>\r\n\r\n      <ng-template zyfraTableTemplate=\"body\" let-customer>\r\n        <tr [zyfraRow]=\"customer\">\r\n          <td>\r\n            {{customer.name}}\r\n          </td>\r\n          <td>\r\n            <span class=\"image-text\">{{customer.country.name}}</span>\r\n          </td>\r\n          <td>\r\n            <span class=\"image-text\">{{customer.representative.name}}</span>\r\n          </td>\r\n          <td style=\"text-align: right;\">\r\n            {{customer.date | date: 'dd.MM.yyyy'}}\r\n          </td>\r\n          <td style=\"text-align: right;\">\r\n            {{customer.balance | currency:'USD':'symbol'}}\r\n          </td>\r\n          <td>\r\n            <span [class]=\"'customer-badge status-' + customer.status\">{{customer.status}}</span>\r\n          </td>\r\n          <td style=\"text-align: right;\">\r\n            {{customer.activity}}\r\n          </td>\r\n          <td class=\"p-text-center\">\r\n            <i class=\"pi\" [ngClass]=\"{'true-icon pi-check-circle': customer.verified, 'false-icon pi-times-circle': !customer.verified}\"></i>\r\n          </td>\r\n        </tr>\r\n      </ng-template>\r\n\r\n      <ng-template zyfraTableTemplate=\"emptymessage\">\r\n        <tr>\r\n          <td colspan=\"7\">No customers found.</td>\r\n        </tr>\r\n      </ng-template>\r\n    </zyfra-table>\r\n  `,\r\n  props: {\r\n    ...args,\r\n    page: consoleLogAction('page'),\r\n    onFilter: consoleLogAction('onFilter'),\r\n    valueChange: action('valueChange'),\r\n    onSort: consoleLogAction('onSort'),\r\n  },\r\n})"
        }
      ],
      "libs/components/src/lib/table/_story/stories/frozen-rows.stories.ts": [
        {
          "name": "FrozenRows",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "libs/components/src/lib/table/_story/stories/frozen-rows.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "defaultValue": "Template.bind({})"
        },
        {
          "name": "Template",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "libs/components/src/lib/table/_story/stories/frozen-rows.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story<ZyfraTableComponent>",
          "defaultValue": "args => ({\r\n  template: `\r\n    <zyfra-table\r\n      [title]=\"title\"\r\n      [value]=\"value\"\r\n      [frozenValue]=\"frozenValue\"\r\n      [scrollable]=\"scrollable\"\r\n      [scrollHeight]=\"scrollHeight\"\r\n    >\r\n      <ng-template zyfraTableTemplate=\"header\">\r\n        <tr>\r\n          <th>Name</th>\r\n          <th>Country</th>\r\n          <th>Company</th>\r\n          <th>Representative</th>\r\n          <th style=\"flex: 0 0 45px\"></th>\r\n        </tr>\r\n      </ng-template>\r\n      <ng-template zyfraTableTemplate=\"frozenbody\" let-customer let-index=\"rowIndex\">\r\n        <tr [zyfraRow]=\"customer\" style=\"font-weight: 600;\">\r\n          <td>{{customer.name}}</td>\r\n          <td>{{customer.country.name}}</td>\r\n          <td>{{customer.company}}</td>\r\n          <td>{{customer.representative.name}}</td>\r\n          <td style=\"flex: 0 0 45px\">\r\n            <button type=\"button\" (click)=\"toggleLock(customer, true, index)\" style=\"background: transparent; border: none; color: #49AB4D;\">\r\n              <i class=\"pi pi-lock-open\"></i>\r\n            </button>\r\n          </td>\r\n        </tr>\r\n      </ng-template>\r\n      <ng-template zyfraTableTemplate=\"body\" let-customer let-index=\"rowIndex\">\r\n        <tr [zyfraRow]=\"customer\">\r\n          <td>{{customer.name}}</td>\r\n          <td>{{customer.country.name}}</td>\r\n          <td>{{customer.company}}</td>\r\n          <td>{{customer.representative.name}}</td>\r\n          <td style=\"flex: 0 0 45px\">\r\n            <button type=\"button\" (click)=\"toggleLock(customer, false, index)\" style=\"background: transparent; border: none; color: #7887A5;\">\r\n              <i class=\"pi pi-lock\"></i>\r\n            </button>\r\n          </td>\r\n        </tr>\r\n      </ng-template>\r\n    </zyfra-table>\r\n  `,\r\n  props: {\r\n    ...args,\r\n    toggleLock(data, frozen, index): void {\r\n      if (frozen) {\r\n        this.frozenValue = this.frozenValue.filter((c, i) => i !== index);\r\n        this.value.push(data);\r\n      } else {\r\n        this.value = this.value.filter((c, i) => i !== index);\r\n        this.frozenValue.push(data);\r\n      }\r\n\r\n      this.value.sort((val1, val2) => {\r\n        return val1.id < val2.id ? -1 : 1;\r\n      });\r\n    },\r\n  },\r\n})"
        }
      ],
      "libs/components/src/lib/nav-menu/utils/generateKey.ts": [
        {
          "name": "generateKey",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "libs/components/src/lib/nav-menu/utils/generateKey.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "defaultValue": "(): string => window.crypto.getRandomValues(new Uint32Array(1))[0].toString()"
        }
      ],
      "libs/components/src/lib/dropdown-with-content/zyfra-dropdown-with-content.component.stories.ts": [
        {
          "name": "GroupWithContent",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "libs/components/src/lib/dropdown-with-content/zyfra-dropdown-with-content.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "defaultValue": "TemplateWithContent.bind({})"
        },
        {
          "name": "SimpleWithContent",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "libs/components/src/lib/dropdown-with-content/zyfra-dropdown-with-content.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "defaultValue": "TemplateWithContent.bind({})"
        },
        {
          "name": "TemplateWithContent",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "libs/components/src/lib/dropdown-with-content/zyfra-dropdown-with-content.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story<ZyfraDropdownWithContentComponent>",
          "defaultValue": "args => ({\r\n  component: ZyfraDropdownWithContentComponent,\r\n  template: `\r\n    <div>\r\n       <zyfra-dropdown-with-content\r\n        [(ngModel)]=\"value\"\r\n        [options]=\"options\"\r\n        [optionLabel]=\"optionLabel\"\r\n        [optionValue]=\"optionValue\"\r\n        [placeholder]=\"placeholder\"\r\n        [showClear]=\"showClear\"\r\n        [label]=\"label\"\r\n        [mini]=\"mini\"\r\n        [disabled]=\"disabled\"\r\n        [required]=\"required\"\r\n        [group]=\"group\"\r\n        [virtualScroll]=\"virtualScroll\"\r\n        [itemSize]=\"itemSize\"\r\n        [filter]=\"filter\"\r\n        [style]=\"{ width: '360px' }\"\r\n        (onChange)=\"onChange($event)\"\r\n        (onClick)=\"onClick($event)\"\r\n        (onFocus)=\"onFocus($event)\"\r\n        (onBlur)=\"onBlur($event)\"\r\n        (onShow)=\"onShow($event)\"\r\n        (onHide)=\"onHide($event)\"\r\n      >\r\n        <span left  style=\"width: 15px; height: 15px; background: pink; border-radius: 50%; margin: 5px;\"></span>\r\n        <div right style=\"display: flex; align-items: center;\">\r\n          <span style=\"width: 25px; height: 25px; background: cadetblue; border-radius: 50%;\"></span>\r\n          <span style=\"width: 25px; height: 25px; background: wheat; border-radius: 50%; margin: 5px;\"></span>\r\n        </div>\r\n      </zyfra-dropdown-with-content>\r\n    </div>\r\n    <div style=\"font-family: var(--fontFamily); margin-top: 20px;\">\r\n      <p>Selected value:</p>\r\n      <pre style=\"font-family: var(--fontFamily);\">{{value | json}}</pre>\r\n    </div>\r\n  `,\r\n  props: {\r\n    ...args,\r\n    onChange: event => action('onChange')({ value: event.value, ...event }),\r\n    onClick: action('onClick'),\r\n    onFocus: action('onFocus'),\r\n    onBlur: action('onBlur'),\r\n    onShow: action('onShow'),\r\n    onHide: action('onHide'),\r\n  },\r\n})"
        }
      ],
      "libs/components/src/lib/tab-menu/zyfra-tab-menu.component.stories.ts": [
        {
          "name": "Header",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "libs/components/src/lib/tab-menu/zyfra-tab-menu.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "defaultValue": "Template.bind({})"
        },
        {
          "name": "items",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "libs/components/src/lib/tab-menu/zyfra-tab-menu.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "MenuItem[]",
          "defaultValue": "[\r\n  {\r\n    label: 'Наименование вкладки 1',\r\n    icon: 'zyfra-icon files-file',\r\n    items: [{\r\n      label: 'New',\r\n      icon: 'zyfra-icon add-plus',\r\n      items: [\r\n        {\r\n          label: 'Bookmark',\r\n          icon: 'zyfra-icon   bookmarks-bookmark',\r\n          items: [\r\n            {\r\n              label: 'Video',\r\n              icon: 'zyfra-icon camera-video'\r\n            },\r\n            {\r\n              label: 'Bookmark',\r\n              icon: 'zyfra-icon   bookmarks-bookmark',\r\n              items: [\r\n                {\r\n                  label: 'Video',\r\n                  icon: 'zyfra-icon camera-video',\r\n                }\r\n              ]\r\n            }\r\n          ]\r\n        },\r\n        {\r\n          label: 'Video',\r\n          icon: 'zyfra-icon camera-video',\r\n        }\r\n      ]\r\n    },\r\n      {\r\n        label: 'Delete',\r\n        icon: 'zyfra-icon delete',\r\n      },\r\n      {\r\n        label: 'Export',\r\n        icon: 'zyfra-icon network-external-link'\r\n      }\r\n    ]\r\n  },\r\n  { label: 'Наименование вкладки 2',\r\n    icon: 'zyfra-icon settings-power',\r\n    items: [{\r\n      label: 'New',\r\n      icon: 'zyfra-icon add-plus'\r\n    }]\r\n  },\r\n  {\r\n    label: 'Наименование вкладки 3',\r\n    icon: 'zyfra-icon settings-power'\r\n  },\r\n  {\r\n    label: 'Наименование вкладки 4',\r\n    icon: 'zyfra-icon editor-mode',\r\n    items: [\r\n      {\r\n        label: 'Left',\r\n        icon: 'zyfra-icon editor-format-align-left'\r\n      },\r\n      {\r\n        label: 'Right',\r\n        icon: 'zyfra-icon editor-format-align-right'\r\n      },\r\n      {\r\n        label: 'Center',\r\n        icon: 'zyfra-icon editor-format-align-center'\r\n      },\r\n      {\r\n        label: 'Justify',\r\n        icon: 'zyfra-icon editor-format-align-justify'\r\n      }]\r\n  },\r\n  {\r\n    label: 'Наименование вкладки 5',\r\n    icon: 'zyfra-icon settings-power'\r\n  },\r\n  {\r\n    label: 'Наименование вкладки 6',\r\n    icon: 'zyfra-icon settings-power'\r\n  },\r\n  {\r\n    label: 'Наименование вкладки 7',\r\n    icon: 'zyfra-icon settings-power'\r\n  },\r\n  {\r\n    label: 'Наименование вкладки 8',\r\n    icon: 'zyfra-icon settings-power'\r\n  },\r\n  {\r\n    label: 'Наименование вкладки 9',\r\n    icon: 'zyfra-icon account',\r\n    items: [\r\n      {\r\n        label: 'New',\r\n        icon: 'zyfra-icon account-plus',\r\n\r\n      },\r\n      {\r\n        label: 'Delete',\r\n        icon: 'zyfra-icon account-minus',\r\n\r\n      }]\r\n  }\r\n]"
        },
        {
          "name": "Secondary",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "libs/components/src/lib/tab-menu/zyfra-tab-menu.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "defaultValue": "Template.bind({})"
        },
        {
          "name": "Simple",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "libs/components/src/lib/tab-menu/zyfra-tab-menu.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "defaultValue": "Template.bind({})"
        },
        {
          "name": "simpleMenuItems",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "libs/components/src/lib/tab-menu/zyfra-tab-menu.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "MenuItem[]",
          "defaultValue": "[\r\n  {\r\n    label: 'Наименование вкладки 1'\r\n  },\r\n  {\r\n    label: 'Наименование вкладки 2'\r\n  },\r\n  {\r\n    label: 'Наименование вкладки 3',\r\n    disabled: true\r\n  },\r\n  {\r\n    label: 'Наименование вкладки 4'\r\n  },\r\n]"
        },
        {
          "name": "simpleMenuItemsWithIcons",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "libs/components/src/lib/tab-menu/zyfra-tab-menu.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "MenuItem[]",
          "defaultValue": "[\r\n  {\r\n    label: 'Наименование вкладки сорок четыре символа + 1',\r\n    icon: 'zyfra-icon files-file',\r\n  },\r\n  {\r\n    label: 'Наименование вкладки 2',\r\n    icon: 'zyfra-icon bookmarks-bookmark',\r\n  },\r\n  {\r\n    label: 'Наименование вкладки 3',\r\n    icon: 'zyfra-icon editor-mode',\r\n    disabled: true\r\n  },\r\n  {\r\n    label: 'Наименование вкладки 4',\r\n    icon: '',\r\n  },\r\n]"
        },
        {
          "name": "Template",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "libs/components/src/lib/tab-menu/zyfra-tab-menu.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story<ZyfraTabMenuComponent>",
          "defaultValue": "(args) => ({\r\n  props: {\r\n    ...args,\r\n  }\r\n})"
        },
        {
          "name": "WithIcons",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "libs/components/src/lib/tab-menu/zyfra-tab-menu.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "defaultValue": "Template.bind({})"
        },
        {
          "name": "WithSubMenu",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "libs/components/src/lib/tab-menu/zyfra-tab-menu.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "defaultValue": "Template.bind({})"
        }
      ],
      "libs/components/src/lib/chip/zyfra-chip.component.stories.ts": [
        {
          "name": "Icon",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "libs/components/src/lib/chip/zyfra-chip.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "defaultValue": "Template.bind({})"
        },
        {
          "name": "OnlyIcon",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "libs/components/src/lib/chip/zyfra-chip.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "defaultValue": "Template.bind({})"
        },
        {
          "name": "OnlyText",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "libs/components/src/lib/chip/zyfra-chip.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "defaultValue": "Template.bind({})"
        },
        {
          "name": "Primary",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "libs/components/src/lib/chip/zyfra-chip.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "defaultValue": "Template.bind({})"
        },
        {
          "name": "Template",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "libs/components/src/lib/chip/zyfra-chip.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story<ZyfraChipComponent>",
          "defaultValue": "(args: ZyfraChipComponent) => ({\r\n  component: ZyfraChipComponent,\r\n  props: args,\r\n})"
        }
      ],
      "libs/components/src/lib/icon/story/icon-definitions.ts": [
        {
          "name": "IconDefs",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "libs/components/src/lib/icon/story/icon-definitions.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "[]",
          "defaultValue": "[\r\n    {\r\n        \"dir\": \"account\",\r\n        \"data\": [\r\n            \"account-card-details\",\r\n            \"account-circle\",\r\n            \"account-contact-sync\",\r\n            \"account-done\",\r\n            \"account-down-list-open\",\r\n            \"account-down-list\",\r\n            \"account-edit\",\r\n            \"account-group\",\r\n            \"account-key\",\r\n            \"account-location\",\r\n            \"account-lock\",\r\n            \"account-log-in\",\r\n            \"account-logout\",\r\n            \"account-minus\",\r\n            \"account-multiple-minus\",\r\n            \"account-multiple-plus\",\r\n            \"account-multiple-shield\",\r\n            \"account-plus\",\r\n            \"account-remove\",\r\n            \"account-role\",\r\n            \"account-search\",\r\n            \"account-setting-1\",\r\n            \"account-setting\",\r\n            \"account-shield-1\",\r\n            \"account-shield-alarm\",\r\n            \"account-shield-off\",\r\n            \"account-shield\",\r\n            \"account-switch\",\r\n            \"account-unlock\",\r\n            \"account-worker\",\r\n            \"account\"\r\n        ]\r\n    },\r\n    {\r\n        \"dir\": \"add\",\r\n        \"data\": [\r\n            \"add-alarm\",\r\n            \"add-bell-plus\",\r\n            \"add-bookmark-plus\",\r\n            \"add-cart-plus\",\r\n            \"add-circle-fill\",\r\n            \"add-circle\",\r\n            \"add-file-plus\",\r\n            \"add-folder-plus\",\r\n            \"add-label-add\",\r\n            \"add-language\",\r\n            \"add-library-plus\",\r\n            \"add-line-add\",\r\n            \"add-map-marker-plus\",\r\n            \"add-phone\",\r\n            \"add-plus-box-fill\",\r\n            \"add-plus-box\",\r\n            \"add-plus-circle-multiple\",\r\n            \"add-plus-drop-down-list\",\r\n            \"add-plus\",\r\n            \"add-shape-square-plus\"\r\n        ]\r\n    },\r\n    {\r\n        \"dir\": \"alerts\",\r\n        \"data\": [\r\n            \"alerts-alarm-light\",\r\n            \"alerts-bell-fill\",\r\n            \"alerts-bell-off\",\r\n            \"alerts-bell-ring-fill\",\r\n            \"alerts-bell-ring\",\r\n            \"alerts-bell\",\r\n            \"alerts-box-fill\",\r\n            \"alerts-circle-fill\",\r\n            \"alerts-circle-mini-1\",\r\n            \"alerts-circle-mini\",\r\n            \"alerts-circle\",\r\n            \"alerts-decagram-fill\",\r\n            \"alerts-decagram\",\r\n            \"alerts-false_alerts1\",\r\n            \"alerts-false_alerts2\",\r\n            \"alerts-flag-fill\",\r\n            \"alerts-flag\",\r\n            \"alerts-help-box-fill\",\r\n            \"alerts-help-box\",\r\n            \"alerts-help-circle-outline\",\r\n            \"alerts-info-add-incongruity\",\r\n            \"alerts-info-circle-fill\",\r\n            \"alerts-info-square-fill\",\r\n            \"alerts-info-square\",\r\n            \"alerts-info-triangle-fill\",\r\n            \"alerts-info-triangle\",\r\n            \"alerts-inform-fill-mini\",\r\n            \"alerts-inform-mini\",\r\n            \"alerts-inform\",\r\n            \"alerts-information-variant\",\r\n            \"alerts-mark\",\r\n            \"alerts-octagon-fill\",\r\n            \"alerts-octagon\",\r\n            \"alerts-pulse\",\r\n            \"alerts-question-mark\",\r\n            \"alerts-square\",\r\n            \"alerts-warning\",\r\n            \"alerts\",\r\n            \"success-decagram-fill\"\r\n        ]\r\n    },\r\n    {\r\n        \"dir\": \"arrows\",\r\n        \"data\": [\r\n            \"arrows-all\",\r\n            \"arrows-arrow-circle-down\",\r\n            \"arrows-arrow-circle-left\",\r\n            \"arrows-arrow-circle-right\",\r\n            \"arrows-arrow-circle-up\",\r\n            \"arrows-arrow-expand-horizontal\",\r\n            \"arrows-arrow-expand-vertical\",\r\n            \"arrows-arrow-left\",\r\n            \"arrows-arrow-right\",\r\n            \"arrows-arrow-up-level\",\r\n            \"arrows-autorenew-1\",\r\n            \"arrows-autorenew\",\r\n            \"arrows-back\",\r\n            \"arrows-cached-1\",\r\n            \"arrows-cached\",\r\n            \"arrows-chevron-left\",\r\n            \"arrows-chevron-right\",\r\n            \"arrows-collapse-four-arrows\",\r\n            \"arrows-collapse\",\r\n            \"arrows-compare\",\r\n            \"arrows-corner-chek-in\",\r\n            \"arrows-corner-down-left\",\r\n            \"arrows-corner-down-right\",\r\n            \"arrows-corner-left-down\",\r\n            \"arrows-corner-left-up\",\r\n            \"arrows-corner-right-down\",\r\n            \"arrows-corner-right-up\",\r\n            \"arrows-corner-up-left\",\r\n            \"arrows-corner-up-right\",\r\n            \"arrows-diagonal-arrow-left-down\",\r\n            \"arrows-diagonal-arrow-left-up\",\r\n            \"arrows-diagonal-arrow-right-down\",\r\n            \"arrows-diagonal-arrow-right-up\",\r\n            \"arrows-down-2\",\r\n            \"arrows-down-bold\",\r\n            \"arrows-down-double-2\",\r\n            \"arrows-down-double-top-2\",\r\n            \"arrows-down-limit-1\",\r\n            \"arrows-down-limit-double-1\",\r\n            \"arrows-down\",\r\n            \"arrows-download\",\r\n            \"arrows-expand-all\",\r\n            \"arrows-expand\",\r\n            \"arrows-left-bold\",\r\n            \"arrows-next\",\r\n            \"arrows-refresh\",\r\n            \"arrows-replay\",\r\n            \"arrows-right-bold\",\r\n            \"arrows-shuffle-variant\",\r\n            \"arrows-shuffle\",\r\n            \"arrows-swap-horiz-2\",\r\n            \"arrows-swap-horiz\",\r\n            \"arrows-swap-vert-2\",\r\n            \"arrows-swap-vert\",\r\n            \"arrows-up-2\",\r\n            \"arrows-up-bold\",\r\n            \"arrows-up-double-2\",\r\n            \"arrows-up-double-top-2\",\r\n            \"arrows-up-limit-1\",\r\n            \"arrows-up-limit-double-1\",\r\n            \"arrows-up\"\r\n        ]\r\n    },\r\n    {\r\n        \"dir\": \"audio\",\r\n        \"data\": [\r\n            \"audio-add-library-music\",\r\n            \"audio-artist\",\r\n            \"audio-bookmark-music\",\r\n            \"audio-file-music\",\r\n            \"audio-microphone-off\",\r\n            \"audio-microphone\",\r\n            \"audio-music-box\",\r\n            \"audio-music-circle\",\r\n            \"audio-music-off\",\r\n            \"audio-music\",\r\n            \"audio-volume-high\",\r\n            \"audio-volume-low\",\r\n            \"audio-volume-medium\",\r\n            \"audio-volume-minus\",\r\n            \"audio-volume-mute\",\r\n            \"audio-volume-off\",\r\n            \"audio-volume-plus\"\r\n        ]\r\n    },\r\n    {\r\n        \"dir\": \"badges\",\r\n        \"data\": [\r\n            \"badges-clipboard-tex\",\r\n            \"badges-clipboard\",\r\n            \"badges-code-download\",\r\n            \"badges-code\",\r\n            \"badges-tag-badges-tag-archve\",\r\n            \"badges-tag-fill\",\r\n            \"badges-tag-multiple\",\r\n            \"badges-tag-plus\",\r\n            \"badges-tag-remove\",\r\n            \"badges-tag-search\",\r\n            \"badges-tag-with-an-exclamation-mark\",\r\n            \"badges-tag-with-binding-to-data\",\r\n            \"badges-tag-without-binding-to-data\",\r\n            \"badges-tag\"\r\n        ]\r\n    },\r\n    {\r\n        \"dir\": \"battery\",\r\n        \"data\": [\r\n            \"battery-10\",\r\n            \"battery-30\",\r\n            \"battery-50\",\r\n            \"battery-80\",\r\n            \"battery-alert\",\r\n            \"battery-charging\",\r\n            \"battery-flash-off\",\r\n            \"battery-flash-ok\",\r\n            \"battery-flash\",\r\n            \"battery-minus\",\r\n            \"battery-plus\",\r\n            \"battery\"\r\n        ]\r\n    },\r\n    {\r\n        \"dir\": \"bookmarks\",\r\n        \"data\": [\r\n            \"bookmarks-book-open-page-variant\",\r\n            \"bookmarks-book-open-plus\",\r\n            \"bookmarks-book-open-re-1\",\r\n            \"bookmarks-book-open-re\",\r\n            \"bookmarks-book-open-variant\",\r\n            \"bookmarks-book-open\",\r\n            \"bookmarks-book\",\r\n            \"bookmarks-bookmark-check-fill\",\r\n            \"bookmarks-bookmark-check\",\r\n            \"bookmarks-bookmark-fill\",\r\n            \"bookmarks-bookmark-music-fill\",\r\n            \"bookmarks-bookmark-music\",\r\n            \"bookmarks-bookmark-plus-fill\",\r\n            \"bookmarks-bookmark-plus\",\r\n            \"bookmarks-bookmark-remove-2\",\r\n            \"bookmarks-bookmark-remove-fill\",\r\n            \"bookmarks-bookmark-remove\",\r\n            \"bookmarks-bookmark\"\r\n        ]\r\n    },\r\n    {\r\n        \"dir\": \"camera\",\r\n        \"data\": [\r\n            \"camera-camera\",\r\n            \"camera-clapperboard-close\",\r\n            \"camera-clapperboard\",\r\n            \"camera-close\",\r\n            \"camera-film-close\",\r\n            \"camera-film\",\r\n            \"camera-image\",\r\n            \"camera-video-close\",\r\n            \"camera-video-off\",\r\n            \"camera-video\",\r\n            \"camera\"\r\n        ]\r\n    },\r\n    {\r\n        \"dir\": \"cancel\",\r\n        \"data\": [\r\n            \"cancel-block\",\r\n            \"cancel-close-box-fill\",\r\n            \"cancel-close-box\",\r\n            \"cancel-close-circle-fill\",\r\n            \"cancel-close-circle\",\r\n            \"cancel-close-small\",\r\n            \"cancel-close\",\r\n            \"cancel-delete-line\",\r\n            \"cansel-delete-content\",\r\n            \"cansel-delete-file\"\r\n        ]\r\n    },\r\n    {\r\n        \"dir\": \"charts\",\r\n        \"data\": [\r\n            \"charts-arc-1\",\r\n            \"charts-arc\",\r\n            \"charts-areaspline\",\r\n            \"charts-bar-graph\",\r\n            \"charts-bar-stacked\",\r\n            \"charts-bar\",\r\n            \"charts-bubble-line\",\r\n            \"charts-bubble\",\r\n            \"charts-chart-donut-variant-half\",\r\n            \"charts-chart-donut-variant\",\r\n            \"charts-discharge\",\r\n            \"charts-donut\",\r\n            \"charts-elevation-decline\",\r\n            \"charts-elevation-rise\",\r\n            \"charts-finance\",\r\n            \"charts-gantt\",\r\n            \"charts-google-analytics\",\r\n            \"charts-google-assistant\",\r\n            \"charts-hexagon-multiple\",\r\n            \"charts-histogram-chart-dashed-2\",\r\n            \"charts-histogram-chart-dashed\",\r\n            \"charts-histogram\",\r\n            \"charts-line-variant\",\r\n            \"charts-pie-1\",\r\n            \"charts-pie-2\",\r\n            \"charts-pie\",\r\n            \"charts-poll-box\",\r\n            \"charts-poll\",\r\n            \"charts-scatterplot-hexbin\",\r\n            \"charts-signal\",\r\n            \"charts-smart-trend\",\r\n            \"charts-trending-down\",\r\n            \"charts-trending-up\"\r\n        ]\r\n    },\r\n    {\r\n        \"dir\": \"chevrons\",\r\n        \"data\": [\r\n            \"chevron-middle\",\r\n            \"chevrons-close-all\",\r\n            \"chevrons-double-down\",\r\n            \"chevrons-double-left-mini\",\r\n            \"chevrons-double-left\",\r\n            \"chevrons-double-right-mini\",\r\n            \"chevrons-double-right\",\r\n            \"chevrons-double-up\",\r\n            \"chevrons-down\",\r\n            \"chevrons-dropdown-small\",\r\n            \"chevrons-dropdown\",\r\n            \"chevrons-dropup\",\r\n            \"chevrons-input\",\r\n            \"chevrons-left-mini\",\r\n            \"chevrons-left\",\r\n            \"chevrons-menu-left-small\",\r\n            \"chevrons-menu-left\",\r\n            \"chevrons-menu-right\",\r\n            \"chevrons-open-all\",\r\n            \"chevrons-right-mini\",\r\n            \"chevrons-right\",\r\n            \"chevrons-unfold-less-horizontal\",\r\n            \"chevrons-unfold-less-verica\",\r\n            \"chevrons-unfold-more-horizontal\",\r\n            \"chevrons-unfold-more-vertical\",\r\n            \"chevrons-up\"\r\n        ]\r\n    },\r\n    {\r\n        \"dir\": \"color\",\r\n        \"data\": [\r\n            \"color-China\",\r\n            \"color-Czech-Republic\",\r\n            \"color-France-drop\",\r\n            \"color-France\",\r\n            \"color-German-drop\",\r\n            \"color-German\",\r\n            \"color-Great-Britan-drop\",\r\n            \"color-Great-Britan\",\r\n            \"color-Indian-drop\",\r\n            \"color-Indian\",\r\n            \"color-Japanese\",\r\n            \"color-Romanian\",\r\n            \"color-Russia-drop\",\r\n            \"color-Russia\",\r\n            \"color-Vietnam\"\r\n        ]\r\n    },\r\n    {\r\n        \"dir\": \"date\",\r\n        \"data\": [\r\n            \"date-access-alarm\",\r\n            \"date-asterisk\",\r\n            \"date-calendar-blank\",\r\n            \"date-calendar-check\",\r\n            \"date-calendar-clock\",\r\n            \"date-calendar-plus\",\r\n            \"date-calendar-question\",\r\n            \"date-calendar-range\",\r\n            \"date-calendar-remove\",\r\n            \"date-calendar-text\",\r\n            \"date-calendar-today\",\r\n            \"date-calendar\",\r\n            \"date-clock-alert\",\r\n            \"date-clock-end\",\r\n            \"date-clock-in\",\r\n            \"date-clock-out\",\r\n            \"date-clock-start\",\r\n            \"date-clock\",\r\n            \"date-day\",\r\n            \"date-history\",\r\n            \"date-hour\",\r\n            \"date-inform-add\",\r\n            \"date-inform-delete\",\r\n            \"date-midnight\",\r\n            \"date-minute\",\r\n            \"date-month\",\r\n            \"date-now\",\r\n            \"date-period-dropdown-list-open\",\r\n            \"date-period-dropdown-list\",\r\n            \"date-range\",\r\n            \"date-second\",\r\n            \"date-time-add-2\",\r\n            \"date-time-add\",\r\n            \"date-time-remove-2\",\r\n            \"date-time-remove\",\r\n            \"date-timer-sand-empty\",\r\n            \"date-timer\",\r\n            \"date-update\",\r\n            \"date-year\"\r\n        ]\r\n    },\r\n    {\r\n        \"dir\": \"delete\",\r\n        \"data\": [\r\n            \"delete-do-not-disturb\",\r\n            \"delete-drop\",\r\n            \"delete-empty\",\r\n            \"delete-forever\",\r\n            \"delete-label-delete\",\r\n            \"delete-minus-circle\",\r\n            \"delete-minus-square\",\r\n            \"delete-minus\",\r\n            \"delete-restore\",\r\n            \"delete\"\r\n        ]\r\n    },\r\n    {\r\n        \"dir\": \"devices\",\r\n        \"data\": [\r\n            \"devices-android-debug-bridge\",\r\n            \"devices-android\",\r\n            \"devices-camera-front\",\r\n            \"devices-cellphone-basic\",\r\n            \"devices-cellphone-link-off\",\r\n            \"devices-cellphone-link\",\r\n            \"devices-cellphone-wireless\",\r\n            \"devices-cellphone\",\r\n            \"devices-desktop-tower\",\r\n            \"devices-hard-drive-outline\",\r\n            \"devices-headphones\",\r\n            \"devices-input-device\",\r\n            \"devices-laptop-off-1\",\r\n            \"devices-laptop-off\",\r\n            \"devices-laptop\",\r\n            \"devices-monitor\",\r\n            \"devices-printer-dropdown-list\",\r\n            \"devices-printer\",\r\n            \"devices-sensor\",\r\n            \"devices-speaker\",\r\n            \"devices-tablet\",\r\n            \"devices-touchpad\",\r\n            \"devices-transmitter\",\r\n            \"devices-tv\",\r\n            \"devices-watch-variant\"\r\n        ]\r\n    },\r\n    {\r\n        \"dir\": \"editor\",\r\n        \"data\": [\r\n            \"add-brace-right\",\r\n            \"add-curly-brace-right\",\r\n            \"editor-add-column\",\r\n            \"editor-add-row\",\r\n            \"editor-alfavit\",\r\n            \"editor-attach-2\",\r\n            \"editor-attach-file\",\r\n            \"editor-auto\",\r\n            \"editor-auto1\",\r\n            \"editor-border-all\",\r\n            \"editor-border-bottom\",\r\n            \"editor-border-clear\",\r\n            \"editor-border-color\",\r\n            \"editor-border-horizontal\",\r\n            \"editor-border-inner\",\r\n            \"editor-border-left\",\r\n            \"editor-border-outer\",\r\n            \"editor-border-right\",\r\n            \"editor-border-style\",\r\n            \"editor-border-top\",\r\n            \"editor-border-vertical\",\r\n            \"editor-brace-left\",\r\n            \"editor-copy-column\",\r\n            \"editor-copy-drop\",\r\n            \"editor-copy-row\",\r\n            \"editor-copy\",\r\n            \"editor-crop\",\r\n            \"editor-cross-out\",\r\n            \"editor-curly-brace-left\",\r\n            \"editor-delete-column\",\r\n            \"editor-delete-row\",\r\n            \"editor-disconnect-link\",\r\n            \"editor-discrete-set-1\",\r\n            \"editor-discrete-set\",\r\n            \"editor-division\",\r\n            \"editor-dots\",\r\n            \"editor-down-1\",\r\n            \"editor-down\",\r\n            \"editor-drag-and-drop\",\r\n            \"editor-dropdown-list-open\",\r\n            \"editor-dropdown-list\",\r\n            \"editor-droplet\",\r\n            \"editor-format-align-center\",\r\n            \"editor-format-align-justify\",\r\n            \"editor-format-align-left\",\r\n            \"editor-format-align-right\",\r\n            \"editor-format-bold\",\r\n            \"editor-format-color-fill\",\r\n            \"editor-format-color-reset\",\r\n            \"editor-format-color-text\",\r\n            \"editor-format-indent\",\r\n            \"editor-format-indent1\",\r\n            \"editor-format-italic\",\r\n            \"editor-format-list-bulleted\",\r\n            \"editor-format-list-numbered\",\r\n            \"editor-format-textdirection-l-to-r\",\r\n            \"editor-format-underlined\",\r\n            \"editor-formula\",\r\n            \"editor-functions\",\r\n            \"editor-group-choose\",\r\n            \"editor-group-dropdown\",\r\n            \"editor-group-panel\",\r\n            \"editor-group\",\r\n            \"editor-hash\",\r\n            \"editor-horizontal-align-center-\",\r\n            \"editor-insert-emoticon-sad\",\r\n            \"editor-insert-emoticon\",\r\n            \"editor-insert-link-add\",\r\n            \"editor-insert-link-delete\",\r\n            \"editor-insert-link\",\r\n            \"editor-line-height\",\r\n            \"editor-link\",\r\n            \"editor-list-dushed-2\",\r\n            \"editor-merge-type\",\r\n            \"editor-mini\",\r\n            \"editor-minus\",\r\n            \"editor-mode\",\r\n            \"editor-multiplication\",\r\n            \"editor-panel-left\",\r\n            \"editor-panel-right\",\r\n            \"editor-panel-top\",\r\n            \"editor-percent-1\",\r\n            \"editor-percent\",\r\n            \"editor-plus\",\r\n            \"editor-right-1\",\r\n            \"editor-right\",\r\n            \"editor-screen\",\r\n            \"editor-search-hierarchy\",\r\n            \"editor-search-tags-words\",\r\n            \"editor-sort-asc\",\r\n            \"editor-subskrit-text\",\r\n            \"editor-superskrit-text\",\r\n            \"editor-table-lookup\",\r\n            \"editor-table\",\r\n            \"editor-tag\",\r\n            \"editor-template\",\r\n            \"editor-title\",\r\n            \"editor-transpose-right\",\r\n            \"editor-transpose-top\",\r\n            \"editor-transpose\",\r\n            \"editor-ungroup\",\r\n            \"editor-vertical-align-bottom\",\r\n            \"editor-vertical-align-center 2\",\r\n            \"editor-vertical-align-center\",\r\n            \"editor-vertical-align-top\",\r\n            \"editor-window\",\r\n            \"editor-wrap-text\"\r\n        ]\r\n    },\r\n    {\r\n        \"dir\": \"files\",\r\n        \"data\": [\r\n            \"files-alarm\",\r\n            \"files-archive\",\r\n            \"files-box\",\r\n            \"files-cloud-check\",\r\n            \"files-cloud\",\r\n            \"files-cloup-upload\",\r\n            \"files-collection-2\",\r\n            \"files-confirmation\",\r\n            \"files-correct\",\r\n            \"files-description-properties\",\r\n            \"files-document-image\",\r\n            \"files-document-text\",\r\n            \"files-excel-box\",\r\n            \"files-export-1\",\r\n            \"files-export-arr\",\r\n            \"files-export-csv\",\r\n            \"files-export-pdf\",\r\n            \"files-export-xlsx\",\r\n            \"files-export\",\r\n            \"files-file-close\",\r\n            \"files-file-doc\",\r\n            \"files-file-docx\",\r\n            \"files-file-open\",\r\n            \"files-file-pdf\",\r\n            \"files-file-play\",\r\n            \"files-file-ppt\",\r\n            \"files-file-pptx\",\r\n            \"files-file-remove\",\r\n            \"files-file-txt\",\r\n            \"files-file-video\",\r\n            \"files-file-xls\",\r\n            \"files-file-xlsx\",\r\n            \"files-file\",\r\n            \"files-find-1\",\r\n            \"files-find\",\r\n            \"files-folder-1\",\r\n            \"files-folder-add\",\r\n            \"files-folder-close\",\r\n            \"files-folder-delete\",\r\n            \"files-folder-open-1\",\r\n            \"files-folder-open\",\r\n            \"files-folder-remove\",\r\n            \"files-folder-root-add\",\r\n            \"files-folder-root-remove\",\r\n            \"files-folder\",\r\n            \"files-import-1\",\r\n            \"files-import-arr\",\r\n            \"files-import-csv\",\r\n            \"files-import-pdf\",\r\n            \"files-import-xlsx\",\r\n            \"files-import\",\r\n            \"files-import1с\",\r\n            \"files-in-group\",\r\n            \"files-incorrect\",\r\n            \"files-indicator\",\r\n            \"files-loader\",\r\n            \"files-method\",\r\n            \"files-mnemo\",\r\n            \"files-mode\",\r\n            \"files-multi\",\r\n            \"files-norm\",\r\n            \"files-plus\",\r\n            \"files-powerpoint\",\r\n            \"files-specification\",\r\n            \"files-view-document\",\r\n            \"files-word-box\",\r\n            \"files-просмотр\"\r\n        ]\r\n    },\r\n    {\r\n        \"dir\": \"finance\",\r\n        \"data\": [\r\n            \"finance-barcode\",\r\n            \"finance-calculator-auto\",\r\n            \"finance-calculator\",\r\n            \"finance-credit-card-of\",\r\n            \"finance-credit-card-plus\",\r\n            \"finance-credit-card\",\r\n            \"finance-currency-btc\",\r\n            \"finance-currency-usd-off\",\r\n            \"finance-currency-usd\",\r\n            \"finance-qr-code-auto-1\",\r\n            \"finance-qr-code-auto-2\",\r\n            \"finance-qr-code-auto-3\",\r\n            \"finance-qr-code-search\",\r\n            \"finance-qr-code\",\r\n            \"finance-scanner\",\r\n            \"finance-wallet\"\r\n        ]\r\n    },\r\n    {\r\n        \"dir\": \"location\",\r\n        \"data\": [\r\n            \"location-compass\",\r\n            \"location-crosshairs-gps\",\r\n            \"location-crosshairs\",\r\n            \"location-language\",\r\n            \"location-localization-down-list\",\r\n            \"location-map-2\",\r\n            \"location-map-marker-date-1\",\r\n            \"location-map-marker-date-2\",\r\n            \"location-map-marker-minus\",\r\n            \"location-map-marker-off\",\r\n            \"location-map-marker-plus\",\r\n            \"location-map-marker\",\r\n            \"location-map\",\r\n            \"location-navigation-1\",\r\n            \"location-navigation\",\r\n            \"location-person-pin-circle\",\r\n            \"location-pin-1\",\r\n            \"location-pin-2\",\r\n            \"location-pin\"\r\n        ]\r\n    },\r\n    {\r\n        \"dir\": \"messaging\",\r\n        \"data\": [\r\n            \"editor-add-comment\",\r\n            \"messaging-add-comment\",\r\n            \"messaging-alert\",\r\n            \"messaging-at\",\r\n            \"messaging-emai-down-list\",\r\n            \"messaging-emai\",\r\n            \"messaging-email-open\",\r\n            \"messaging-forward\",\r\n            \"messaging-inbox\",\r\n            \"messaging-message-circle\",\r\n            \"messaging-message-off\",\r\n            \"messaging-message\",\r\n            \"messaging-processing\",\r\n            \"messaging-question-ask\",\r\n            \"messaging-reply\",\r\n            \"messaging-send\",\r\n            \"messaging-text\"\r\n        ]\r\n    },\r\n    {\r\n        \"dir\": \"network\",\r\n        \"data\": [\r\n            \"network-close\",\r\n            \"network-cloud-download\",\r\n            \"network-cloud-upload\",\r\n            \"network-database-administration\",\r\n            \"network-database-delete\",\r\n            \"network-database-json\",\r\n            \"network-database-minus\",\r\n            \"network-database-plus\",\r\n            \"network-database-search\",\r\n            \"network-database-sql\",\r\n            \"network-database\",\r\n            \"network-download\",\r\n            \"network-ethernet-open\",\r\n            \"network-external-link\",\r\n            \"network-lan-connect\",\r\n            \"network-lan-disconnect\",\r\n            \"network-lan-pending\",\r\n            \"network-lan\",\r\n            \"network-layers\",\r\n            \"network-library\",\r\n            \"network-minus\",\r\n            \"network-no-layers\",\r\n            \"network-object\",\r\n            \"network-plus\",\r\n            \"network-scheme-2\",\r\n            \"network-scheme\",\r\n            \"network-security\",\r\n            \"network-server-1\",\r\n            \"network-server-network-off\",\r\n            \"network-server-network\",\r\n            \"network-server-off\",\r\n            \"network-server-security\",\r\n            \"network-server\",\r\n            \"network-upload\"\r\n        ]\r\n    },\r\n    {\r\n        \"dir\": \"phone\",\r\n        \"data\": [\r\n            \"phone-call-missed\",\r\n            \"phone-in-talk\",\r\n            \"phone-minus\",\r\n            \"phone-missed\",\r\n            \"phone-off\",\r\n            \"phone-paused\",\r\n            \"phone-plus\",\r\n            \"phone\"\r\n        ]\r\n    },\r\n    {\r\n        \"dir\": \"player\",\r\n        \"data\": [\r\n            \"player-loop\",\r\n            \"player-pause\",\r\n            \"player-play-back\",\r\n            \"player-play\",\r\n            \"player-skip-backward\",\r\n            \"player-skip-forward\",\r\n            \"player-skip-next-circle-outline\",\r\n            \"player-skip-previous\",\r\n            \"player-stop\",\r\n            \"player-voicemail\"\r\n        ]\r\n    },\r\n    {\r\n        \"dir\": \"poi\",\r\n        \"data\": [\r\n            \"burn\",\r\n            \"cargo-box-2\",\r\n            \"cargo-box\",\r\n            \"cargo-container\",\r\n            \"cargo\",\r\n            \"fire\",\r\n            \"freeze\",\r\n            \"gas\",\r\n            \"loading\",\r\n            \"location-map-marker-minus\",\r\n            \"poi-achive-Mir\",\r\n            \"poi-article-1\",\r\n            \"poi-barley\",\r\n            \"poi-bdrv-administration\",\r\n            \"poi-boiler-hot-water-gas-and-oil\",\r\n            \"poi-coal\",\r\n            \"poi-crane\",\r\n            \"poi-difference\",\r\n            \"poi-early-version\",\r\n            \"poi-ecopost-circle\",\r\n            \"poi-ecopost-rectangle\",\r\n            \"poi-electrics\",\r\n            \"poi-factory pipe\",\r\n            \"poi-factory\",\r\n            \"poi-fan\",\r\n            \"poi-flask-1\",\r\n            \"poi-flask-2\",\r\n            \"poi-flask-3\",\r\n            \"poi-flask-4\",\r\n            \"poi-flask-5\",\r\n            \"poi-fuel-oil-tank\",\r\n            \"poi-fuel\",\r\n            \"poi-gas-monitoring\",\r\n            \"poi-gas-station\",\r\n            \"poi-gear-cooling\",\r\n            \"poi-generator\",\r\n            \"poi-git-lab\",\r\n            \"poi-heat-exchanger\",\r\n            \"poi-heat-recovery-boiler\",\r\n            \"poi-high-speed-reduction-cooling\",\r\n            \"poi-medicine\",\r\n            \"poi-ni-fi\",\r\n            \"poi-nuclear-station\",\r\n            \"poi-oil-factory\",\r\n            \"poi-owl\",\r\n            \"poi-pipe-sensor\",\r\n            \"poi-pipe-valve\",\r\n            \"poi-pipeline\",\r\n            \"poi-plus\",\r\n            \"poi-press\",\r\n            \"poi-pump-drop\",\r\n            \"poi-pump\",\r\n            \"poi-respirator-2.1\",\r\n            \"poi-respirator-2\",\r\n            \"poi-respirator-3\",\r\n            \"poi-respirator-4\",\r\n            \"poi-respirator-5\",\r\n            \"poi-respirator\",\r\n            \"poi-separator\",\r\n            \"poi-steam-boiler\",\r\n            \"poi-steam-turbine\",\r\n            \"poi-steam\",\r\n            \"poi-strit\",\r\n            \"poi-tank\",\r\n            \"poi-water-heater\",\r\n            \"poi-water-pump\",\r\n            \"product-grade-according-to-specification\",\r\n            \"snowflake\"\r\n        ]\r\n    },\r\n    {\r\n        \"dir\": \"selection\",\r\n        \"data\": [\r\n            \"selection-check-all\",\r\n            \"selection-check-simple\",\r\n            \"selection-checkbox-blank-circle\",\r\n            \"selection-checkbox-blank\",\r\n            \"selection-checkbox-marked-circle-chanel\",\r\n            \"selection-checkbox-marked-circle\",\r\n            \"selection-checked-1\",\r\n            \"selection-checked-2\",\r\n            \"selection-checked-empty\",\r\n            \"selection-checked\",\r\n            \"selection-choice\",\r\n            \"selection-halfchoice\",\r\n            \"selection-process\",\r\n            \"selection-radio-off\",\r\n            \"selection-radio-on\",\r\n            \"selection-success\",\r\n            \"selection-toggle-left\",\r\n            \"selection-toggle-right\",\r\n            \"selection-unchoice\"\r\n        ]\r\n    },\r\n    {\r\n        \"dir\": \"settings\",\r\n        \"data\": [\r\n            \"settings-2\",\r\n            \"settings-apps\",\r\n            \"settings-more-horiz\",\r\n            \"settings-more-vert\",\r\n            \"settings-power\",\r\n            \"settings-tune-vertical\",\r\n            \"settings-tune\",\r\n            \"settings\"\r\n        ]\r\n    },\r\n    {\r\n        \"dir\": \"shapes\",\r\n        \"data\": [\r\n            \"shapes-animation\",\r\n            \"shapes-arrange-bring-forward\",\r\n            \"shapes-arrange-send-backward\",\r\n            \"shapes-arrange-send-to-back\",\r\n            \"shapes-box-shadow\",\r\n            \"shapes-checkbox-intermediate\",\r\n            \"shapes-checkerboard\",\r\n            \"shapes-collage\",\r\n            \"shapes-collector\",\r\n            \"shapes-cube-3\",\r\n            \"shapes-cube-outline\",\r\n            \"shapes-cube\",\r\n            \"shapes-drawing-box\",\r\n            \"shapes-drawing-outline\",\r\n            \"shapes-drawing\",\r\n            \"shapes-hexagon-fill\",\r\n            \"shapes-hexagon\",\r\n            \"shapes-Key\",\r\n            \"shapes-layers-off\",\r\n            \"shapes-layers\",\r\n            \"shapes-nest-protec\",\r\n            \"shapes-nut\",\r\n            \"shapes-ontology-2\",\r\n            \"shapes-ontology\",\r\n            \"shapes-pentagon-fill\",\r\n            \"shapes-pentagon\",\r\n            \"shapes-rhombus-fill\",\r\n            \"shapes-rhombus\",\r\n            \"shapes-shape-1-f\",\r\n            \"shapes-shape-1\",\r\n            \"shapes-shape-2-f\",\r\n            \"shapes-shape-2\",\r\n            \"shapes-shape-3-f\",\r\n            \"shapes-shape-3\",\r\n            \"shapes-shape-4-f\",\r\n            \"shapes-shape-4\",\r\n            \"shapes-shape-5-f\",\r\n            \"shapes-shape-5\",\r\n            \"shapes-shape-6\",\r\n            \"shapes-shape-7\",\r\n            \"shapes-shape-fill\",\r\n            \"shapes-shape-plus-1\",\r\n            \"shapes-shape-plus\",\r\n            \"shapes-shape\",\r\n            \"shapes-square-inc\",\r\n            \"shapes-Star\",\r\n            \"shapes-triangle-fill\",\r\n            \"shapes-triangle\"\r\n        ]\r\n    },\r\n    {\r\n        \"dir\": \"shopping\",\r\n        \"data\": [\r\n            \"shopping-box\",\r\n            \"shopping-cart\",\r\n            \"shopping-gift\",\r\n            \"shopping\"\r\n        ]\r\n    },\r\n    {\r\n        \"dir\": \"signal\",\r\n        \"data\": [\r\n            \"signal-access-point\",\r\n            \"signal-bluetooth\",\r\n            \"signal-cast\",\r\n            \"signal-off\",\r\n            \"signal-radio-tower\",\r\n            \"signal-rss-box\",\r\n            \"signal-wifi-off\",\r\n            \"signal-wifi\",\r\n            \"signal\"\r\n        ]\r\n    },\r\n    {\r\n        \"dir\": \"social\",\r\n        \"data\": [\r\n            \"social-browser\",\r\n            \"social-globe-2\",\r\n            \"social-heart-fill\",\r\n            \"social-heart\",\r\n            \"social-home-breadcrumbs\",\r\n            \"social-home\",\r\n            \"social-instagram\",\r\n            \"social-moon\",\r\n            \"social-share\",\r\n            \"social-star-fill\",\r\n            \"social-star-half\",\r\n            \"social-star\",\r\n            \"social-sun\",\r\n            \"social-tab\",\r\n            \"social-telegram\",\r\n            \"social-thumb-down\",\r\n            \"social-thumb-up\"\r\n        ]\r\n    },\r\n    {\r\n        \"dir\": \"sort\",\r\n        \"data\": [\r\n            \"sort-abc-ru-up\",\r\n            \"sort-abc-ru\",\r\n            \"sort-alphabetical-up\",\r\n            \"sort-alphabetical\",\r\n            \"sort-apps\",\r\n            \"sort-asc-arr\",\r\n            \"sort-desc-arr\",\r\n            \"sort-eye-off-2\",\r\n            \"sort-eye-off\",\r\n            \"sort-eye\",\r\n            \"sort-filter-remove\",\r\n            \"sort-filter-setting\",\r\n            \"sort-filter\",\r\n            \"sort-funnel-drop-down-list-open\",\r\n            \"sort-funnel-drop-down-list\",\r\n            \"sort-look-into-the-buffer\",\r\n            \"sort-maximize\",\r\n            \"sort-numeric\",\r\n            \"sort-real-size\",\r\n            \"sort-search-mistake\",\r\n            \"sort-time-down\",\r\n            \"sort-time-up\",\r\n            \"sort-version\",\r\n            \"sort-zoom-in-dropdown\",\r\n            \"sort-zoom-in\",\r\n            \"sort-zoom-out\"\r\n        ]\r\n    },\r\n    {\r\n        \"dir\": \"tools\",\r\n        \"data\": [\r\n            \"tools-auto-fix\",\r\n            \"tools-award\",\r\n            \"tools-briefcase\",\r\n            \"tools-broom\",\r\n            \"tools-brush\",\r\n            \"tools-content-cut\",\r\n            \"tools-content-save-as\",\r\n            \"tools-content-save\",\r\n            \"tools-content-unsave\",\r\n            \"tools-earth-work\",\r\n            \"tools-eraser\",\r\n            \"tools-eyedropper\",\r\n            \"tools-keyboard-close-1\",\r\n            \"tools-keyboard-close\",\r\n            \"tools-keyboard\",\r\n            \"tools-lightbulb\",\r\n            \"tools-npm\",\r\n            \"tools-palette\",\r\n            \"tools-pantone\",\r\n            \"tools-ruler\",\r\n            \"tools-save-all\",\r\n            \"tools-save-back\",\r\n            \"tools-solver\",\r\n            \"tools-thermometer-minus\",\r\n            \"tools-thermometer-plus\",\r\n            \"tools-thermometer\",\r\n            \"tools-umbrella\"\r\n        ]\r\n    },\r\n    {\r\n        \"dir\": \"transport\",\r\n        \"data\": [\r\n            \"transport-airplane\",\r\n            \"transport-ambulance\",\r\n            \"transport-truck-1\",\r\n            \"transport-truck-2\",\r\n            \"transport-truck-3\",\r\n            \"transport-truck-4\",\r\n            \"transport-truck-5\",\r\n            \"transport-truck\"\r\n        ]\r\n    },\r\n    {\r\n        \"dir\": \"vectors\",\r\n        \"data\": [\r\n            \"vectors-arrange-above\",\r\n            \"vectors-arrange-below\",\r\n            \"vectors-circle-variant\",\r\n            \"vectors-circle\",\r\n            \"vectors-combine-1\",\r\n            \"vectors-combine\",\r\n            \"vectors-curve\",\r\n            \"vectors-default-24\",\r\n            \"vectors-difference-ab\",\r\n            \"vectors-difference-ba\",\r\n            \"vectors-difference\",\r\n            \"vectors-ellipse\",\r\n            \"vectors-intersection\",\r\n            \"vectors-line\",\r\n            \"vectors-point\",\r\n            \"vectors-polygon\",\r\n            \"vectors-polyline\",\r\n            \"vectors-radius\",\r\n            \"vectors-rectangle\",\r\n            \"vectors-selection\",\r\n            \"vectors-square\",\r\n            \"vectors-triangle\"\r\n        ]\r\n    },\r\n    {\r\n        \"dir\": \"view\",\r\n        \"data\": [\r\n            \"view-agenda\",\r\n            \"view-array\",\r\n            \"view-carousel\",\r\n            \"view-column\",\r\n            \"view-component\",\r\n            \"view-dashboard-variant\",\r\n            \"view-dashboard\",\r\n            \"view-day\",\r\n            \"view-grid-outline\",\r\n            \"view-grid\",\r\n            \"view-headline\",\r\n            \"view-list\",\r\n            \"view-logo-grey-z\",\r\n            \"view-logo-s.grey\",\r\n            \"view-menu-2\",\r\n            \"view-menu-arrow-down\",\r\n            \"view-menu-arrow-left\",\r\n            \"view-menu-arrow-right\",\r\n            \"view-menu-arrow-up\",\r\n            \"view-menu\",\r\n            \"view-module\",\r\n            \"view-quilt\",\r\n            \"view-sequential\"\r\n        ]\r\n    }\r\n]"
        }
      ],
      "libs/components/src/lib/icon/zyfra-icon.component.stories.ts": [
        {
          "name": "IconsSet",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "libs/components/src/lib/icon/zyfra-icon.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "defaultValue": "Template.bind({})"
        },
        {
          "name": "Template",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "libs/components/src/lib/icon/zyfra-icon.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story<IconComponents>",
          "defaultValue": "(args: IconComponents) => ({\r\n  component: IconComponents,\r\n  props: args,\r\n})"
        }
      ],
      "libs/components/src/lib/breadcrumb/zyfra-breadcrumb.component.stories.ts": [
        {
          "name": "items",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "libs/components/src/lib/breadcrumb/zyfra-breadcrumb.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "MenuItem[]",
          "defaultValue": "[\r\n  { label: 'Начало' },\r\n  { label: 'Название цеха 1' },\r\n  { label: 'Название цеха 2' },\r\n  { label: 'Название цеха 3' },\r\n  { label: 'Название цеха 4' }\r\n]"
        },
        {
          "name": "itemsUrl",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "libs/components/src/lib/breadcrumb/zyfra-breadcrumb.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "MenuItem[]",
          "defaultValue": "[\r\n  { label: 'Начало' },\r\n  { label: 'Название цеха 1', url: '#' },\r\n  { label: 'Название цеха 2', url: '#' },\r\n  { label: 'Название цеха 3', url: '#' },\r\n  { label: 'Название цеха 4', url: '#' }\r\n]"
        },
        {
          "name": "Template",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "libs/components/src/lib/breadcrumb/zyfra-breadcrumb.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story<ZyfraBreadcrumbComponent>",
          "defaultValue": "(args: ZyfraBreadcrumbComponent) => ({\r\n  component: ZyfraBreadcrumbComponent,\r\n  props: {\r\n    ...args,\r\n    onItemClick: (event) => action('onItemClick')({ item: event.item, ...event })\r\n  }\r\n})"
        },
        {
          "name": "Text",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "libs/components/src/lib/breadcrumb/zyfra-breadcrumb.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "defaultValue": "Template.bind({})"
        },
        {
          "name": "Url",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "libs/components/src/lib/breadcrumb/zyfra-breadcrumb.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "defaultValue": "Template.bind({})"
        }
      ],
      "libs/components/src/lib/tree/zyfra-tree.component.stories.ts": [
        {
          "name": "items",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "libs/components/src/lib/tree/zyfra-tree.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "[]",
          "defaultValue": "[\r\n  {\r\n    label: 'Documents',\r\n    data: 'Documents Folder',\r\n    expandedIcon: 'zyfra-icon files-folder',\r\n    collapsedIcon: 'zyfra-icon files-folder',\r\n    children: [{\r\n      label: 'Work',\r\n      data: 'Work Folder',\r\n      expandedIcon: 'zyfra-icon files-folder',\r\n      collapsedIcon: 'zyfra-icon files-folder',\r\n      children: [\r\n        { label: 'Expenses.doc', icon: 'zyfra-icon files-file', data: 'Expenses Document' },\r\n        { label: 'Resume.doc', icon: 'zyfra-icon files-file', data: 'Resume Document' }\r\n      ]\r\n    },\r\n      {\r\n        label: 'Home',\r\n        data: 'Home Folder',\r\n        expandedIcon: 'zyfra-icon files-folder',\r\n        collapsedIcon: 'zyfra-icon files-folder',\r\n        children: [{ label: 'Invoices.txt', icon: 'zyfra-icon files-file', data: 'Invoices for this month' }]\r\n      }]\r\n  },\r\n  {\r\n    label: 'Pictures',\r\n    data: 'Pictures Folder',\r\n    expandedIcon: 'zyfra-icon files-folder',\r\n    collapsedIcon: 'zyfra-icon files-folder',\r\n    children: [\r\n      { label: 'barcelona.jpg', icon: 'zyfra-icon files-document-image', data: 'Barcelona Photo' },\r\n      { label: 'logo.jpg', icon: 'zyfra-icon files-document-image', data: 'PrimeFaces Logo' },\r\n      { label: 'primeui.png', icon: 'zyfra-icon files-document-image', data: 'PrimeUI Logo' }]\r\n  },\r\n  {\r\n    label: 'Movies',\r\n    data: 'Movies Folder',\r\n    expandedIcon: 'zyfra-icon files-folder',\r\n    collapsedIcon: 'zyfra-icon files-folder ',\r\n    children: [{\r\n      label: 'Al Pacino',\r\n      data: 'Pacino Movies',\r\n      expandedIcon: 'zyfra-icon files-folder',\r\n    collapsedIcon: 'zyfra-icon files-folder ',\r\n      children: [\r\n        { label: 'Scarface', icon: 'zyfra-icon camera-video', data: 'Scarface Movie' },\r\n        { label: 'Serpico', icon: 'zyfra-icon camera-image', data: 'Serpico Movie' }\r\n      ]\r\n    },\r\n      {\r\n        label: 'Robert De Niro',\r\n        data: 'De Niro Movies',\r\n        expandedIcon: 'zyfra-icon files-folder',\r\n        collapsedIcon: 'zyfra-icon files-folder ',\r\n        children: [\r\n          { label: 'Goodfellas', icon: 'zyfra-icon camera-video', data: 'Goodfellas Movie' },\r\n          { label: 'Untouchables', icon: 'zyfra-icon camera-video', data: 'Untouchables Movie' }\r\n        ]\r\n      }]\r\n  }\r\n]"
        },
        {
          "name": "Simple",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "libs/components/src/lib/tree/zyfra-tree.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "defaultValue": "Template.bind({})"
        },
        {
          "name": "Template",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "libs/components/src/lib/tree/zyfra-tree.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story<ZyfraTreeComponent>",
          "defaultValue": "(args) => ({\r\n  component: ZyfraTreeComponent,\r\n  props: args,\r\n})"
        }
      ],
      "libs/components/src/lib/datepicker/zyfra-relative-datepicker/zyfra-relative-datepicker.component.ts": [
        {
          "name": "MenuItems",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "libs/components/src/lib/datepicker/zyfra-relative-datepicker/zyfra-relative-datepicker.component.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "RelativeDateMenuItems",
          "defaultValue": "getDefaultRelativeDateMenuItems()"
        },
        {
          "name": "ValidationPattern",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "libs/components/src/lib/datepicker/zyfra-relative-datepicker/zyfra-relative-datepicker.component.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "string",
          "defaultValue": "'(T|\\\\*)((\\\\+|\\\\-)(\\\\d+)(Y|M|d|h|m|s))?'"
        }
      ],
      "libs/components/src/lib/table/_story/stories/pagination.stories.ts": [
        {
          "name": "Pagination",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "libs/components/src/lib/table/_story/stories/pagination.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "defaultValue": "PaginationTemplate.bind({})"
        },
        {
          "name": "PaginationTemplate",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "libs/components/src/lib/table/_story/stories/pagination.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story<ZyfraTableComponent>",
          "defaultValue": "args => ({\r\n  template: `\r\n    <zyfra-table\r\n      [title]=\"title\"\r\n      [value]=\"value\"\r\n      [paginator]=\"paginator\"\r\n      [rows]=\"rows\"\r\n      [responsiveLayout]=\"responsiveLayout\"\r\n      [rowsPerPageOptions]=\"rowsPerPageOptions\"\r\n      (page)=\"page($event)\"\r\n    >\r\n      <ng-template zyfraTableTemplate=\"header\">\r\n        <tr>\r\n          <th>Name</th>\r\n          <th>Country</th>\r\n          <th>Company</th>\r\n          <th>Representative</th>\r\n        </tr>\r\n      </ng-template>\r\n\r\n      <ng-template zyfraTableTemplate=\"body\" let-customer>\r\n        <tr [zyfraRow]=\"customer\">\r\n          <td>{{customer.name}}</td>\r\n          <td>{{customer.country.name}}</td>\r\n          <td>{{customer.company}}</td>\r\n          <td>{{customer.representative.name}}</td>\r\n        </tr>\r\n      </ng-template>\r\n    </zyfra-table>\r\n  `,\r\n  props: {\r\n    ...args,\r\n    page: consoleLogAction('page'),\r\n  },\r\n})"
        }
      ],
      "libs/components/src/lib/confirm-dialog/zyfra-confirm-dialog.component.stories.ts": [
        {
          "name": "Position",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "libs/components/src/lib/confirm-dialog/zyfra-confirm-dialog.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "defaultValue": "Template.bind({})"
        },
        {
          "name": "Simple",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "libs/components/src/lib/confirm-dialog/zyfra-confirm-dialog.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "defaultValue": "Template.bind({})"
        },
        {
          "name": "Template",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "libs/components/src/lib/confirm-dialog/zyfra-confirm-dialog.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story<ZyfraConfirmDialogComponent>",
          "defaultValue": "(args) => ({\r\n  template: `\r\n    <zyfra-button\r\n      (click)=\"confirmDialog.onClick($event)\"\r\n      label=\"for dialog\"\r\n      icon=\"zyfra-icon selection-check-simple\"\r\n    ></zyfra-button>\r\n\r\n    <zyfra-confirm-dialog\r\n      #confirmDialog\r\n      [message]=\"message\"\r\n      [icon]=\"icon\"\r\n      [header]=\"header\"\r\n      [acceptLabel]=\"acceptLabel\"\r\n      [rejectLabel]=\"rejectLabel\"\r\n      [acceptButtonStyleClass]=\"acceptButtonStyleClass\"\r\n      [rejectButtonStyleClass]=\"rejectButtonStyleClass\"\r\n      [acceptMessages]=\"acceptMessages\"\r\n      [position]=\"position\"\r\n      [baseZIndex]=\"baseZIndex\"\r\n      (onHide)=\"onHide($event)\"\r\n    ></zyfra-confirm-dialog>\r\n  `,\r\n  props: {\r\n    ...args,\r\n    onHide: action('onHide'),\r\n  },\r\n})"
        }
      ],
      "libs/components/src/lib/dialog/zyfra-dialog.component.stories.ts": [
        {
          "name": "PositionTop",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "libs/components/src/lib/dialog/zyfra-dialog.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "defaultValue": "Template.bind({})"
        },
        {
          "name": "Simple",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "libs/components/src/lib/dialog/zyfra-dialog.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "defaultValue": "Template.bind({})"
        },
        {
          "name": "Template",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "libs/components/src/lib/dialog/zyfra-dialog.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story<ZyfraDialogComponent>",
          "defaultValue": "args => ({\r\n  template: `\r\n    <zyfra-button\r\n      (click)=\"visible = !visible\"\r\n      label=\"for dialog\"\r\n      icon=\"zyfra-icon selection-check-simple\"\r\n    ></zyfra-button>\r\n\r\n    <zyfra-dialog\r\n      [(visible)]=\"visible\"\r\n      [header]=\"header\"\r\n      [position]=\"position\"\r\n      (onShow)=\"onShow($event)\"\r\n      (onHide)=\"onHide($event)\"\r\n      (onResizeInit)=\"onResizeInit($event)\"\r\n      (onResizeEnd)=\"onResizeEnd($event)\"\r\n      (onDragEnd)=\"onDragEnd($event)\"\r\n      (onMaximize)=\"onMaximize($event)\"\r\n    >\r\n      <div>\r\n        <p>content</p>\r\n        <ul>\r\n          <li>item 1 (for example)</li>\r\n          <li><b>item 2</b></li>\r\n        </ul>\r\n      </div>\r\n    </zyfra-dialog>\r\n  `,\r\n  props: {\r\n    ...args,\r\n    visible: false,\r\n    onResizeInit: action('onResizeInit'),\r\n    onResizeEnd: action('onResizeEnd'),\r\n    onDragEnd: action('onDragEnd'),\r\n    onMaximize: action('onMaximize'),\r\n    onShow: action('onShow'),\r\n    onHide: action('onHide'),\r\n  },\r\n})"
        }
      ],
      "libs/components/src/lib/accordion/zyfra-accordion-tab/zyfra-accordion-tab.component.stories.ts": [
        {
          "name": "Primary",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "libs/components/src/lib/accordion/zyfra-accordion-tab/zyfra-accordion-tab.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "defaultValue": "Template.bind({})"
        },
        {
          "name": "Template",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "libs/components/src/lib/accordion/zyfra-accordion-tab/zyfra-accordion-tab.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story<ZyfraAccordionTabComponent>",
          "defaultValue": "(args: ZyfraAccordionTabComponent) => ({\r\n  component: ZyfraAccordionTabComponent,\r\n  props: args,\r\n})"
        }
      ],
      "libs/components/src/lib/datepicker/zyfra-datepicker-multi/zyfra-datepicker-multi.component.stories.ts": [
        {
          "name": "Primary",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "libs/components/src/lib/datepicker/zyfra-datepicker-multi/zyfra-datepicker-multi.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "defaultValue": "Template.bind({})"
        },
        {
          "name": "Template",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "libs/components/src/lib/datepicker/zyfra-datepicker-multi/zyfra-datepicker-multi.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story<ZyfraDatepickerMultiComponent>",
          "defaultValue": "(args: ZyfraDatepickerMultiComponent) => ({\r\n  component: ZyfraDatepickerMultiComponent,\r\n  template: `\r\n  <zyfra-datepicker-multi\r\n    [relativeValue]=\"relativeValue\"\r\n    [absoluteValue]=\"absoluteValue\"\r\n    [label]='label'\r\n    [placeholder]='placeholder'\r\n    [dateFormat]='dateFormat'\r\n    [disabled]='disabled'\r\n    [inline]='inline'\r\n    [showOtherMonths]='showOtherMonths'\r\n    [selectOtherMonths]='selectOtherMonths'\r\n    [showOnFocus]='showOnFocus'\r\n    [showWeek]='showWeek'\r\n    [readonlyInput]='readonlyInput'\r\n    [showTime]='showTime'\r\n    [timeOnly]='timeOnly'\r\n    [required]='required'\r\n    [showButtonBar]='showButtonBar'\r\n    [firstDayOfWeek]='firstDayOfWeek'\r\n    [mode]='mode'\r\n  >\r\n  </zyfra-datepicker-multi>\r\n  `,\r\n  props: args,\r\n})"
        }
      ],
      "libs/components/src/lib/datepicker/zyfra-relative-datepicker/zyfra-relative-datepicker.component.stories.ts": [
        {
          "name": "Primary",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "libs/components/src/lib/datepicker/zyfra-relative-datepicker/zyfra-relative-datepicker.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "defaultValue": "Template.bind({})"
        },
        {
          "name": "Template",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "libs/components/src/lib/datepicker/zyfra-relative-datepicker/zyfra-relative-datepicker.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story<ZyfraRelativeDatepickerComponent>",
          "defaultValue": "(args: ZyfraRelativeDatepickerComponent) => ({\r\n  component: ZyfraRelativeDatepickerComponent,\r\n  template: `\r\n  <zyfra-relative-datepicker\r\n    [label]='label'\r\n    [placeholder]='placeholder'\r\n    [disabled]='disabled'\r\n    [showClear]='showClear'\r\n    [(ngModel)]='ngModel'\r\n  >\r\n  </zyfra-relative-datepicker>\r\n  `,\r\n  props: args,\r\n})"
        }
      ],
      "libs/components/src/lib/menu-applications/zyfra-menu-applications-item/zyfra-menu-applications-item.component.stories.ts": [
        {
          "name": "Primary",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "libs/components/src/lib/menu-applications/zyfra-menu-applications-item/zyfra-menu-applications-item.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "defaultValue": "Template.bind({})"
        },
        {
          "name": "Template",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "libs/components/src/lib/menu-applications/zyfra-menu-applications-item/zyfra-menu-applications-item.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story<ZyfraMenuApplicationsItemComponent>",
          "defaultValue": "(args: ZyfraMenuApplicationsItemComponent) => ({\r\n  component: ZyfraMenuApplicationsItemComponent,\r\n  props: args,\r\n})"
        }
      ],
      "libs/components/src/lib/tab-view/zyfra-tab-panel/zyfra-tab-panel.component.stories.ts": [
        {
          "name": "Primary",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "libs/components/src/lib/tab-view/zyfra-tab-panel/zyfra-tab-panel.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "defaultValue": "Template.bind({})"
        },
        {
          "name": "Template",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "libs/components/src/lib/tab-view/zyfra-tab-panel/zyfra-tab-panel.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story<ZyfraTabPanelComponent>",
          "defaultValue": "(args: ZyfraTabPanelComponent) => ({\r\n  component: ZyfraTabPanelComponent,\r\n  props: args,\r\n})"
        }
      ],
      "libs/components/src/lib/slider/zyfra-slider.component.stories.ts": [
        {
          "name": "Range",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "libs/components/src/lib/slider/zyfra-slider.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "defaultValue": "Template.bind({})"
        },
        {
          "name": "Simple",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "libs/components/src/lib/slider/zyfra-slider.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "defaultValue": "Template.bind({})"
        },
        {
          "name": "Template",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "libs/components/src/lib/slider/zyfra-slider.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story<ZyfraSliderComponent>",
          "defaultValue": "(args) => ({\r\n  component: ZyfraSliderComponent,\r\n  template: `\r\n    <zyfra-slider\r\n      [(ngModel)]=\"ngModel\"\r\n      [min]=\"min\"\r\n      [max]=\"max\"\r\n      [step]=\"step\"\r\n      [range]=\"range\"\r\n      [orientation]=\"orientation\"\r\n      (ngModelChange)=\"ngModelChange($event)\"\r\n      (onSlideEnd)=\"onSlideEnd($event)\"\r\n    ></zyfra-slider>\r\n    <br>\r\n    <p style=\"font-size: 14px; font-family: Inter, sans-serif;\">Control value: {{ngModel}}</p>\r\n  `,\r\n  props: {\r\n    ...args,\r\n    ngModelChange: action('ngModelChange'),\r\n    onSlideEnd: action('onSlideEnd'),\r\n  },\r\n})"
        },
        {
          "name": "Vertical",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "libs/components/src/lib/slider/zyfra-slider.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "defaultValue": "Template.bind({})"
        }
      ],
      "libs/components/src/lib/table/_story/stories/reorder.stories.ts": [
        {
          "name": "Reorder",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "libs/components/src/lib/table/_story/stories/reorder.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "defaultValue": "Template.bind({})"
        },
        {
          "name": "Template",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "libs/components/src/lib/table/_story/stories/reorder.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story<ZyfraTableComponent>",
          "defaultValue": "args => ({\r\n  template: `\r\n    <zyfra-table\r\n      [title]=\"title\"\r\n      [value]=\"value\"\r\n      [columns]=\"columns\"\r\n      [reorderableColumns]=\"reorderableColumns\"\r\n      (colReorder)=\"colReorder($event)\"\r\n      (rowReorder)=\"rowReorder($event)\"\r\n    >\r\n      <ng-template zyfraTableTemplate=\"header\" let-columns>\r\n        <tr>\r\n          <th style=\"width: 32px\"></th>\r\n          <th *ngFor=\"let col of columns\" zyfraReordableColumn>{{ col.header }}</th>\r\n        </tr>\r\n      </ng-template>\r\n      <ng-template zyfraTableTemplate=\"body\" let-rowData let-columns=\"columns\" let-index=\"rowIndex\">\r\n        <tr [zyfraRow]=\"rowData\" [zyfraReordableRow]=\"index\">\r\n          <td>\r\n            <span class=\"pi pi-bars\" [zyfraReordableRowHandler]=\"index\"></span>\r\n          </td>\r\n          <td *ngFor=\"let col of columns\" [style]=\"col.field === 'quantity' ? { 'text-align': 'right' } : null\">{{ rowData[col.field] }}</td>\r\n        </tr>\r\n      </ng-template>\r\n    </zyfra-table>\r\n\r\n  `,\r\n  props: {\r\n    ...args,\r\n    colReorder: action('colReorder'),\r\n    rowReorder: action('rowReorder'),\r\n  },\r\n})"
        }
      ],
      "libs/components/src/lib/table/_story/stories/resize.stories.ts": [
        {
          "name": "Resize",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "libs/components/src/lib/table/_story/stories/resize.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "defaultValue": "Template.bind({})"
        },
        {
          "name": "Template",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "libs/components/src/lib/table/_story/stories/resize.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story<ZyfraTableComponent>",
          "defaultValue": "args => ({\r\n  template: `\r\n    <zyfra-table\r\n      [title]=\"title\"\r\n      [value]=\"value\"\r\n      [resizableColumns]=\"resizableColumns\"\r\n      (colResize)=\"colResize($event)\"\r\n    >\r\n      <ng-template zyfraTableTemplate=\"header\">\r\n        <tr>\r\n          <th zyfraResizableColumn>Code</th>\r\n          <th zyfraResizableColumn>Name</th>\r\n          <th zyfraResizableColumn>Category</th>\r\n          <th zyfraResizableColumn>Quantity</th>\r\n        </tr>\r\n      </ng-template>\r\n      <ng-template zyfraTableTemplate=\"body\" let-product>\r\n        <tr [zyfraRow]=\"product\">\r\n          <td>{{ product.code }}</td>\r\n          <td>{{ product.name }}</td>\r\n          <td>{{ product.category }}</td>\r\n          <td style=\"text-align: right;\">{{ product.quantity }}</td>\r\n        </tr>\r\n      </ng-template>\r\n    </zyfra-table>\r\n  `,\r\n  props: {\r\n    ...args,\r\n    colResize: consoleLogAction('colResize'),\r\n  },\r\n})"
        }
      ],
      "libs/components/src/lib/table/_story/stories/row-group.stories.ts": [
        {
          "name": "RowGroup",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "libs/components/src/lib/table/_story/stories/row-group.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "defaultValue": "Template.bind({})"
        },
        {
          "name": "Template",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "libs/components/src/lib/table/_story/stories/row-group.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story<ZyfraTableComponent>",
          "defaultValue": "args => ({\r\n  template: `\r\n    <zyfra-table\r\n      [title]=\"title\"\r\n      [value]=\"value\"\r\n      [sortField]=\"sortField\"\r\n      [sortMode]=\"sortMode\"\r\n      [scrollable]=\"scrollable\"\r\n      [scrollHeight]=\"scrollHeight\"\r\n      [rowGroupMode]=\"rowGroupMode\"\r\n      [groupRowsBy]=\"groupRowsBy\"\r\n      [responsiveLayout]=\"responsiveLayout\"\r\n    >\r\n      <ng-template zyfraTableTemplate=\"header\">\r\n        <tr>\r\n          <th style=\"min-width:200px\">Name</th>\r\n          <th style=\"min-width:200px\">Country</th>\r\n          <th style=\"min-width:200px\">Company</th>\r\n          <th style=\"min-width:200px\">Status</th>\r\n          <th style=\"min-width:200px\">Date</th>\r\n        </tr>\r\n      </ng-template>\r\n      <ng-template zyfraTableTemplate=\"groupheader\" let-customer>\r\n        <tr zyfraRowGroupHeader>\r\n          <td colspan=\"5\">\r\n            <span style=\"font-weight: 600;\">{{customer.representative.name}}</span>\r\n          </td>\r\n        </tr>\r\n      </ng-template>\r\n      <ng-template zyfraTableTemplate=\"groupfooter\" let-customer>\r\n        <tr class=\"p-rowgroup-footer\">\r\n          <td style=\"min-width: 80%\">\r\n            <div style=\"width: 100%\">Total Customers</div>\r\n          </td>\r\n          <td style=\"width: 20%; display: flex; justify-content: end;\">\r\n            {{calculateCustomerTotal(value, customer.representative.name)}}\r\n          </td>\r\n        </tr>\r\n      </ng-template>\r\n      <ng-template zyfraTableTemplate=\"body\" let-customer>\r\n        <tr [zyfraRow]=\"customer\">\r\n          <td style=\"min-width:200px\">\r\n            {{customer.name}}\r\n          </td>\r\n          <td style=\"min-width:200px\">\r\n            <span class=\"image-text\">{{customer.country.name}}</span>\r\n          </td>\r\n          <td style=\"min-width:200px\">\r\n            {{customer.company}}\r\n          </td>\r\n          <td style=\"min-width:200px\">\r\n            <span [class]=\"'customer-badge status-' + customer.status\">{{customer.status}}</span>\r\n          </td>\r\n          <td style=\"min-width:200px; display: flex; justify-content: end;\">\r\n            {{customer.date | date: 'dd.MM.yyyy'}}\r\n          </td>\r\n        </tr>\r\n      </ng-template>\r\n    </zyfra-table>\r\n  `,\r\n  props: {\r\n    ...args,\r\n    calculateCustomerTotal(customers, name): number {\r\n      let total = 0;\r\n\r\n      if (customers) {\r\n        for (const customer of customers) {\r\n          if (customer.representative.name === name) {\r\n            total++;\r\n          }\r\n        }\r\n      }\r\n\r\n      return total;\r\n    },\r\n  },\r\n})"
        }
      ],
      "libs/components/src/lib/datepicker/i18n/ru_RU.ts": [
        {
          "name": "ru",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "libs/components/src/lib/datepicker/i18n/ru_RU.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "object",
          "defaultValue": "{\r\n  \"dayNames\": [\r\n    \"Воскресенье\",\r\n    \"Понедельник\",\r\n    \"Вторник\",\r\n    \"Среда\",\r\n    \"Четверг\",\r\n    \"Пятница\",\r\n    \"Суббота\"\r\n  ],\r\n  \"dayNamesShort\": [\r\n    \"Вс\",\r\n    \"Пн\",\r\n    \"Вт\",\r\n    \"Ср\",\r\n    \"Чт\",\r\n    \"Пт\",\r\n    \"Сб\"\r\n  ],\r\n  \"dayNamesMin\": [\r\n    \"Вс\",\r\n    \"Пн\",\r\n    \"Вт\",\r\n    \"Ср\",\r\n    \"Чт\",\r\n    \"Пт\",\r\n    \"Сб\"\r\n  ],\r\n  \"monthNames\": [\r\n    \"Январь\",\r\n    \"Февраль\",\r\n    \"Март\",\r\n    \"Апрель\",\r\n    \"Май\",\r\n    \"Июнь\",\r\n    \"Июль\",\r\n    \"Август\",\r\n    \"Сентябрь\",\r\n    \"Октябрь\",\r\n    \"Ноябрь\",\r\n    \"Декабрь\"\r\n  ],\r\n  \"monthNamesShort\": [\r\n    \"Янв\",\r\n    \"Февр\",\r\n    \"Март\",\r\n    \"Апр\",\r\n    \"Май\",\r\n    \"Июнь\",\r\n    \"Июль\",\r\n    \"Авг\",\r\n    \"Сент\",\r\n    \"Окт\",\r\n    \"Ноябрь\",\r\n    \"Дек\"\r\n  ],\r\n  \"dateFormat\": \"dd.mm.yyyy\",\r\n  \"today\": \"Сегодня\",\r\n  \"weekHeader\": \"Нд\",\r\n  \"clear\": \"Очистить\"\r\n}"
        }
      ],
      "libs/components/src/lib/table/_story/stories/scroll-horizontal-and-vertical.stories.ts": [
        {
          "name": "ScrollHorizontalAndVertical",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "libs/components/src/lib/table/_story/stories/scroll-horizontal-and-vertical.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "defaultValue": "Template.bind({})"
        },
        {
          "name": "Template",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "libs/components/src/lib/table/_story/stories/scroll-horizontal-and-vertical.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story<ZyfraTableComponent>",
          "defaultValue": "args => ({\r\n  template: `\r\n    <zyfra-table\r\n      [title]=\"title\"\r\n      [value]=\"value\"\r\n      [scrollable]=\"scrollable\"\r\n      [scrollHeight]=\"scrollHeight\"\r\n      [scrollDirection]=\"scrollDirection\"\r\n    >\r\n      <ng-template zyfraTableTemplate=\"header\">\r\n        <tr>\r\n          <th style=\"width:200px\" zyfraFrozenColumn>Name</th>\r\n          <th style=\"width:100px\">Id</th>\r\n          <th style=\"width:200px\">Country</th>\r\n          <th style=\"width:200px\">Date</th>\r\n          <th style=\"width:200px\">Balance</th>\r\n          <th style=\"width:200px\">Company</th>\r\n          <th style=\"width:200px\">Status</th>\r\n          <th style=\"width:200px\">Activity</th>\r\n          <th style=\"width:200px\">Representative</th>\r\n        </tr>\r\n      </ng-template>\r\n      <ng-template zyfraTableTemplate=\"body\" let-customer>\r\n        <tr [zyfraRow]=\"customer\">\r\n          <td style=\"width:200px\" zyfraFrozenColumn>{{customer.name}}</td>\r\n          <td style=\"width:100px\">{{customer.id}}</td>\r\n          <td style=\"width:200px\">{{customer.country.name}}</td>\r\n          <td style=\"width:200px; display: flex; justify-content: end;\">{{customer.date | date: 'dd.MM.yyyy'}}</td>\r\n          <td style=\"width:200px; display: flex; justify-content: end;\">{{formatCurrency(customer.balance)}}</td>\r\n          <td style=\"width:200px\">{{customer.company}}</td>\r\n          <td style=\"width:200px\">{{customer.status}}</td>\r\n          <td style=\"width:200px; display: flex; justify-content: end;\">{{customer.activity}}</td>\r\n          <td style=\"width:200px\">{{customer.representative.name}}</td>\r\n        </tr>\r\n      </ng-template>\r\n    </zyfra-table>\r\n  `,\r\n  props: {\r\n    ...args,\r\n    formatCurrency(value): string {\r\n      return value.toLocaleString('en-US', { style: 'currency', currency: 'USD' });\r\n    },\r\n  },\r\n})"
        }
      ],
      "libs/components/src/lib/table/_story/stories/scroll-vertical.stories.ts": [
        {
          "name": "ScrollVertical",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "libs/components/src/lib/table/_story/stories/scroll-vertical.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "defaultValue": "Template.bind({})"
        },
        {
          "name": "Template",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "libs/components/src/lib/table/_story/stories/scroll-vertical.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story<ZyfraTableComponent>",
          "defaultValue": "args => ({\r\n  template: `\r\n    <zyfra-table [value]=\"value\" [scrollable]=\"scrollable\" [scrollHeight]=\"scrollHeight\" [title]=\"title\">\r\n      <ng-template zyfraTableTemplate=\"header\">\r\n        <tr>\r\n          <th style=\"min-width:200px\">Name</th>\r\n          <th style=\"min-width:200px\">Country</th>\r\n          <th style=\"min-width:200px\">Company</th>\r\n          <th style=\"min-width:200px\">Representative</th>\r\n        </tr>\r\n      </ng-template>\r\n      <ng-template zyfraTableTemplate=\"body\" let-customer>\r\n        <tr [zyfraRow]=\"customer\">\r\n          <td style=\"min-width:200px\">{{ customer.name }}</td>\r\n          <td style=\"min-width:200px\">{{ customer.country.name }}</td>\r\n          <td style=\"min-width:200px\">{{ customer.company }}</td>\r\n          <td style=\"min-width:200px\">{{ customer.representative.name }}</td>\r\n        </tr>\r\n      </ng-template>\r\n    </zyfra-table>\r\n  `,\r\n  props: args,\r\n})"
        }
      ],
      "libs/components/src/lib/table/_story/stories/scroll-virtual.stories.ts": [
        {
          "name": "ScrollVirtual",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "libs/components/src/lib/table/_story/stories/scroll-virtual.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "defaultValue": "Template.bind({})"
        },
        {
          "name": "Template",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "libs/components/src/lib/table/_story/stories/scroll-virtual.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story<ZyfraTableComponent>",
          "defaultValue": "args => ({\r\n  template: `\r\n    <zyfra-table\r\n      [title]=\"title\"\r\n      [columns]=\"columns\"\r\n      [value]=\"value\"\r\n      [scrollable]=\"scrollable\"\r\n      [rows]=\"rows\"\r\n      [scrollHeight]=\"scrollHeight\"\r\n      [virtualScroll]=\"virtualScroll\"\r\n      [virtualRowHeight]=\"virtualRowHeight\"\r\n    >\r\n      <ng-template zyfraTableTemplate=\"header\" let-columns>\r\n        <tr>\r\n          <th *ngFor=\"let col of columns\" [zyfraSortableColumn]=\"col.field\">\r\n            {{col.header}} <zyfra-sort-icon [field]=\"col.field\"></zyfra-sort-icon>\r\n          </th>\r\n        </tr>\r\n      </ng-template>\r\n      <ng-template zyfraTableTemplate=\"body\" let-rowData let-rowIndex=\"rowIndex\" let-columns=\"columns\">\r\n        <tr [zyfraRow]=\"rowIndex\">\r\n          <td *ngFor=\"let col of columns\" [style]=\"col.field === 'year' ? { 'display': 'flex', 'justify-content': 'end' } : null\">\r\n            {{rowData[col.field]}}\r\n          </td>\r\n        </tr>\r\n      </ng-template>\r\n    </zyfra-table>\r\n  `,\r\n  props: args,\r\n})"
        }
      ],
      "libs/components/src/lib/auto-complete/zyfra-auto-complete.component.stories.ts": [
        {
          "name": "Simple",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "libs/components/src/lib/auto-complete/zyfra-auto-complete.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "defaultValue": "Template.bind({})"
        },
        {
          "name": "Template",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "libs/components/src/lib/auto-complete/zyfra-auto-complete.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story<ZyfraAutoCompleteComponent>",
          "defaultValue": "(args) => ({\r\n  template: `\r\n    <zyfra-auto-complete\r\n      [ngModel]=\"value\"\r\n      [placeholder]=\"placeholder\"\r\n      [label]=\"label\"\r\n      [suggestions]=\"suggestions\"\r\n      [field]=\"field\"\r\n      [scrollHeight]=\"scrollHeight\"\r\n      [dropdown]=\"dropdown\"\r\n      [multiple]=\"multiple\"\r\n      [dropdownIcon]=\"dropdownIcon\"\r\n      [minLength]=\"minLength\"\r\n      [delay]=\"delay\"\r\n      [completeOnFocus]=\"completeOnFocus\"\r\n      [style]=\"style\"\r\n      [inputStyle]=\"inputStyle\"\r\n      [panelStyle]=\"panelStyle\"\r\n      [styleClass]=\"styleClass\"\r\n      [inputStyleClass]=\"inputStyleClass\"\r\n      [panelStyleClass]=\"panelStyleClass\"\r\n      [inputId]=\"inputId\"\r\n      [name]=\"name\"\r\n      [optionGroupLabel]=\"optionGroupLabel\"\r\n      [group]=\"group\"\r\n      [optionGroupChildren]=\"optionGroupChildren\"\r\n      [readonly]=\"readonly\"\r\n      [disabled]=\"disabled\"\r\n      [maxlength]=\"maxlength\"\r\n      [size]=\"size\"\r\n      [appendTo]=\"appendTo\"\r\n      [tabindex]=\"tabindex\"\r\n      [dataKey]=\"dataKey\"\r\n      [autoHighlight]=\"autoHighlight\"\r\n      [type]=\"type\"\r\n      [showEmptyMessage]=\"showEmptyMessage\"\r\n      [emptyMessage]=\"emptyMessage\"\r\n      [required]=\"required\"\r\n      [autofocus]=\"autofocus\"\r\n      [forceSelection]=\"forceSelection\"\r\n      [dropdownMode]=\"dropdownMode\"\r\n      [baseZIndex]=\"baseZIndex\"\r\n      [autoZIndex]=\"autoZIndex\"\r\n      [showTransitionOptions]=\"showTransitionOptions\"\r\n      [hideTransitionOptions]=\"hideTransitionOptions\"\r\n      [ariaLabel]=\"ariaLabel\"\r\n      [ariaLabelledBy]=\"ariaLabelledBy\"\r\n      [unique]=\"unique\"\r\n      [autocomplete]=\"autocomplete\"\r\n      [virtualScroll]=\"virtualScroll\"\r\n      [itemSize]=\"itemSize\"\r\n      (completeMethod)=\"completeMethod($event)\"\r\n      (onFocus)=\"onFocus($event)\"\r\n      (onBlur)=\"onBlur($event)\"\r\n      (onKeyUp)=\"onKeyUp($event)\"\r\n      (onSelect)=\"onSelect($event)\"\r\n      (onUnselect)=\"onUnselect($event)\"\r\n      (onDropdownClick)=\"onDropdownClick($event)\"\r\n      (onClear)=\"onClear($event)\"\r\n      (onShow)=\"onShow($event)\"\r\n      (onHide)=\"onHide($event)\"\r\n    >\r\n      <ng-template zyfraTemplate=\"item\" let-obj>{{ obj.name}} ({{obj.code}})</ng-template>\r\n      <ng-template zyfraTemplate=\"selectedItem\" let-obj>{{ obj.name}} - {{obj.code}}</ng-template>\r\n    </zyfra-auto-complete>\r\n  `,\r\n  props: {\r\n    ...args,\r\n    countries: [\r\n      { name: 'Argentina', code: 'AR' },\r\n      { name: 'Armenia', code: 'AM' },\r\n      { name: 'Aruba', code: 'AW' },\r\n      { name: 'Russia', code: 'RU' },\r\n      { name: 'India', code: 'IN' },\r\n      { name: 'Indonesia', code: 'ID' },\r\n      { name: 'Iran, Islamic Republic Of', code: 'IR' },\r\n      { name: 'Iraq', code: 'IQ' },\r\n      { name: 'Ireland', code: 'IE' },\r\n      { name: 'Isle of Man', code: 'IM' },\r\n      { name: 'Israel', code: 'IL' },\r\n      { name: 'Italy', code: 'IT' },\r\n      { name: 'Zambia', code: 'ZM' },\r\n      { name: 'Zimbabwe', code: 'ZW' },\r\n    ],\r\n    completeMethod(event): void {\r\n      const query = event.query.toLowerCase();\r\n      this.suggestions = this.countries.filter(country => country.name.toLowerCase().indexOf(query) > -1);\r\n      action('completeMethod')(event);\r\n    },\r\n    onFocus: action('onFocus'),\r\n    onBlur: action('onBlur'),\r\n    onKeyUp: action('onKeyUp'),\r\n    onSelect: action('onSelect'),\r\n    onUnselect: action('onUnselect'),\r\n    onDropdownClick: action('onDropdownClick'),\r\n    onClear: action('onClear'),\r\n    onShow: action('onShow'),\r\n    onHide: action('onHide'),\r\n  },\r\n})"
        },
        {
          "name": "withDropdown",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "libs/components/src/lib/auto-complete/zyfra-auto-complete.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "defaultValue": "Template.bind({})"
        }
      ],
      "libs/components/src/lib/dynamic-dialog/zyfra-dynamic-dialog.component.stories.ts": [
        {
          "name": "Simple",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "libs/components/src/lib/dynamic-dialog/zyfra-dynamic-dialog.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "defaultValue": "Template.bind({})"
        },
        {
          "name": "Template",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "libs/components/src/lib/dynamic-dialog/zyfra-dynamic-dialog.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story<ZyfraDynamicDialogComponent>",
          "defaultValue": "(args: ZyfraDynamicDialogComponent) => ({\r\n  component: ZyfraDynamicDialogComponent,\r\n  props: args,\r\n})"
        }
      ],
      "libs/components/src/lib/input-group/zyfra-input-group.component.stories.ts": [
        {
          "name": "Simple",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "libs/components/src/lib/input-group/zyfra-input-group.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "defaultValue": "Template.bind({})"
        },
        {
          "name": "Template",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "libs/components/src/lib/input-group/zyfra-input-group.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story<ZyfraInputGroupComponent>",
          "defaultValue": "args => ({\r\n  component: ZyfraInputGroupComponent,\r\n  props: args,\r\n  template: `\r\n  <zyfra-input-group [label]=\"label\">\r\n    <input zyfraInput [placeholder]='placeholder' [ngModel]='model'>\r\n  </zyfra-input-group>\r\n`,\r\n})"
        }
      ],
      "libs/components/src/lib/input/zyfra-input.component.stories.ts": [
        {
          "name": "Simple",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "libs/components/src/lib/input/zyfra-input.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "defaultValue": "Template.bind({})"
        },
        {
          "name": "Template",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "libs/components/src/lib/input/zyfra-input.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story<ZyfraInputComponent>",
          "defaultValue": "(args) => ({\r\n  component: ZyfraInputComponent,\r\n  props: args,\r\n  template: `\r\n<zyfra-input\r\n  [id]=\"id\"\r\n  [type]=\"type\"\r\n  [(ngModel)]=\"value\"\r\n  [disabled]=\"disabled\"\r\n  [placeholder]=\"placeholder\"\r\n  [tooltip]=\"tooltip\"\r\n  [tooltipPosition]=\"tooltipPosition\"\r\n  [label]=\"label\"\r\n></zyfra-input>\r\n`\r\n})"
        },
        {
          "name": "Tooltip",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "libs/components/src/lib/input/zyfra-input.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "defaultValue": "Template.bind({})"
        }
      ],
      "libs/components/src/lib/icon-button/zyfra-icon-button.component.stories.ts": [
        {
          "name": "Simple",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "libs/components/src/lib/icon-button/zyfra-icon-button.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "defaultValue": "Template.bind({})"
        },
        {
          "name": "Template",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "libs/components/src/lib/icon-button/zyfra-icon-button.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story<ZyfraIconButtonDirective>",
          "defaultValue": "args => ({\r\n  component: ZyfraIconButtonDirective,\r\n  props: args,\r\n  template: `\r\n  <button zyfraIconButton [disabled]='disabled'>\r\n    <zyfra-icon [iconClass]='iconClass'></zyfra-icon>\r\n  </button>\r\n`,\r\n})"
        }
      ],
      "libs/components/src/lib/password/zyfra-password.component.stories.ts": [
        {
          "name": "Simple",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "libs/components/src/lib/password/zyfra-password.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "defaultValue": "Template.bind({})"
        },
        {
          "name": "Template",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "libs/components/src/lib/password/zyfra-password.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story<ZyfraPasswordComponent>",
          "defaultValue": "(args) => ({\r\n  component: ZyfraPasswordComponent,\r\n  template: `\r\n    <zyfra-password\r\n      [(ngModel)]='ngModel'\r\n      [toggleMask]='toggleMask'\r\n      [mediumRegex]='mediumRegex'\r\n      [strongRegex]='strongRegex'\r\n      [weakLabel]='weakLabel'\r\n      [mediumLabel]='mediumLabel'\r\n      [strongLabel]='strongLabel'\r\n      [label]='label'\r\n      [promptLabel]='promptLabel'\r\n      [required]='required'\r\n      [disabled]='disabled'>\r\n      (onBlur)=\"onBlur($event)\"\r\n      (onFocus)=\"onFocus($event)\"\r\n    ></zyfra-password>\r\n  `,\r\n  props: {\r\n    ...args,\r\n    onBlur: action('onBlur'),\r\n    onFocus: action('onFocus'),\r\n  },\r\n})"
        },
        {
          "name": "ToggleMask",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "libs/components/src/lib/password/zyfra-password.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "defaultValue": "Template.bind({})"
        }
      ],
      "libs/components/src/lib/splitter/zyfra-splitter.component.stories.ts": [
        {
          "name": "Simple",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "libs/components/src/lib/splitter/zyfra-splitter.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "defaultValue": "Template.bind({})"
        },
        {
          "name": "Template",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "libs/components/src/lib/splitter/zyfra-splitter.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story<ZyfraSplitterComponent>",
          "defaultValue": "(args) => ({\r\n  template: `\r\n    <zyfra-splitter\r\n      [panelSizes]=\"panelSizes\"\r\n      [minSizes]=\"minSizes\"\r\n      [style]=\"style\"\r\n      (onResizeStart)=\"onResizeStart($event)\"\r\n      (onResizeEnd)=\"onResizeEnd($event)\"\r\n    >\r\n      <ng-template zyfraSplitterTemplate [visible]=\"visibleFirstTemplate\">\r\n        <div>Panel 1</div>\r\n      </ng-template>\r\n      <ng-template zyfraSplitterTemplate>\r\n        <div>Panel 2</div>\r\n      </ng-template>\r\n    </zyfra-splitter>\r\n  `,\r\n  props: {\r\n    ...args,\r\n  },\r\n})"
        }
      ],
      "libs/components/src/lib/textarea/zyfra-textarea.component.stories.ts": [
        {
          "name": "Simple",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "libs/components/src/lib/textarea/zyfra-textarea.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "defaultValue": "Template.bind({})"
        },
        {
          "name": "Template",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "libs/components/src/lib/textarea/zyfra-textarea.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story<ZyfraTextareaComponent>",
          "defaultValue": "(args) => ({\r\n  component: ZyfraTextareaComponent,\r\n  props: args,\r\n  template: `\r\n<zyfra-textarea\r\n  [rows]=\"rows\"\r\n  [cols]=\"cols\"\r\n  [autoResize]=\"autoResize\"\r\n  [(ngModel)]=\"ngModel\"\r\n  [placeholder]=\"placeholder\"\r\n  [class]=\"class\"\r\n  [label]=\"label\"\r\n  [disabled]=\"disabled\"\r\n  [maxlength]=\"maxlength\"\r\n  [minlength]=\"minlength\"\r\n  [name]=\"name\"\r\n></zyfra-textarea>\r\n  `,\r\n})"
        }
      ],
      "libs/components/src/lib/accordion/zyfra-accordion/zyfra-accordion.component.stories.ts": [
        {
          "name": "Simple",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "libs/components/src/lib/accordion/zyfra-accordion/zyfra-accordion.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "defaultValue": "Template.bind({})"
        },
        {
          "name": "Template",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "libs/components/src/lib/accordion/zyfra-accordion/zyfra-accordion.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story<ZyfraAccordionComponent>",
          "defaultValue": "(args: ZyfraAccordionComponent) => ({\r\n  template: `\r\n  <zyfra-accordion [multiple]=\"multiple\"\r\n                   (mouseover)=\"mouseover()\"\r\n                   (onOpen)=\"onOpen($event)\"\r\n                   (onClose)=\"onClose($event)\"\r\n                   (activeIndexChange)=\"activeIndexChange($event)\">\r\n    <zyfra-accordion-tab header=\"Header 1\" [disabled]=\"disabled\" (selectedChange)=\"selectedChange($event)\">\r\n      Content 1\r\n    </zyfra-accordion-tab>\r\n    <zyfra-accordion-tab [disabled]=\"disabled\" [selected]=\"selectedTwo\" (selectedChange)=\"selectedTwo = $event;selectedChange($event)\">\r\n      <ng-template zyfraTemplate=\"header\">\r\n          {{dynamicString}} header Content 2\r\n      </ng-template>\r\n      <ng-template zyfraTemplate=\"icons\">\r\n          <span class=\"zyfra-icon selection-radio-off\" title=\"{{dynamicString}} title\"></span>\r\n          <span class=\"zyfra-icon selection-radio-off\" title=\"static title\"></span>\r\n      </ng-template>\r\n      <ng-template zyfraTemplate=\"content\">\r\n      {{dynamicString}} body Content 2\r\n      </ng-template>\r\n    </zyfra-accordion-tab>\r\n    <zyfra-accordion-tab *ngIf=\"showThirdForReInitTabTest\" [disabled]=\"disabled\" (selectedChange)=\"selectedChange($event)\" (activeIndexChange)=\"activeIndexChange($event)\">\r\n      <ng-template zyfraTemplate=\"header\">template header content</ng-template>\r\n      <ng-template zyfraTemplate=\"content\">template body content</ng-template>\r\n    </zyfra-accordion-tab>\r\n  </zyfra-accordion>\r\n  `,\r\n  props: {\r\n    ...args,\r\n    selectedChange: action('selectedChange'),\r\n    onOpen: action('onOpen'),\r\n    onClose: action('onClose'),\r\n    activeIndexChange: action('activeIndexChange'),\r\n    mouseover(): void {\r\n      // для теста нормально ли подхватывается новый таб и учавствует модели. метод activeIndexChange должен выдавать правильную модель\r\n      this.showThirdForReInitTabTest = true;\r\n    }\r\n  }\r\n})"
        }
      ],
      "libs/components/src/lib/table/_story/stories/sort.stories.ts": [
        {
          "name": "Sort",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "libs/components/src/lib/table/_story/stories/sort.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "defaultValue": "Template.bind({})"
        },
        {
          "name": "Template",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "libs/components/src/lib/table/_story/stories/sort.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story<ZyfraTableComponent>",
          "defaultValue": "args => ({\r\n  template: `\r\n    <zyfra-button label=\"Reset sort\" (onClick)=\"table.resetSort()\"></zyfra-button>\r\n\r\n    <br><br>\r\n\r\n    <zyfra-table\r\n      #table\r\n      [title]=\"title\"\r\n      [value]=\"value\"\r\n      (onSort)=\"onSort($event)\"\r\n    >\r\n      <ng-template zyfraTableTemplate=\"header\">\r\n        <tr>\r\n          <th zyfraSortableColumn=\"code\">Code <zyfra-sort-icon field=\"code\"></zyfra-sort-icon></th>\r\n          <th zyfraSortableColumn=\"name\">Name <zyfra-sort-icon field=\"name\"></zyfra-sort-icon></th>\r\n          <th zyfraSortableColumn=\"category\">Category <zyfra-sort-icon field=\"category\"></zyfra-sort-icon></th>\r\n          <th zyfraSortableColumn=\"quantity\">Quantity <zyfra-sort-icon field=\"quantity\"></zyfra-sort-icon></th>\r\n          <th zyfraSortableColumn=\"price\">Price <zyfra-sort-icon field=\"price\"></zyfra-sort-icon></th>\r\n        </tr>\r\n      </ng-template>\r\n\r\n      <ng-template zyfraTableTemplate=\"body\" let-product>\r\n        <tr [zyfraRow]=\"product\">\r\n          <td>{{product.code}}</td>\r\n          <td>{{product.name}}</td>\r\n          <td>{{product.category}}</td>\r\n          <td style=\"text-align: right;\">{{product.quantity}}</td>\r\n          <td style=\"text-align: right;\">{{product.price | currency: 'USD'}}</td>\r\n        </tr>\r\n      </ng-template>\r\n    </zyfra-table>\r\n  `,\r\n  props: {\r\n    value: [...getProducts()],\r\n    title: 'Сортировка по одному столбцу',\r\n    onSort: consoleLogAction('onSort'),\r\n  },\r\n})"
        }
      ],
      "libs/components/src/lib/table/_story/stories/sort-multiple.stories.ts": [
        {
          "name": "SortMultiple",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "libs/components/src/lib/table/_story/stories/sort-multiple.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "defaultValue": "Template.bind({})"
        },
        {
          "name": "Template",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "libs/components/src/lib/table/_story/stories/sort-multiple.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story<ZyfraTableComponent>",
          "defaultValue": "args => ({\r\n  template: `\r\n    <zyfra-table\r\n      [title]=\"title\"\r\n      [value]=\"value\"\r\n      [sortMode]=\"'multiple'\"\r\n      (onSort)=\"onSort($event)\"\r\n    >\r\n      <ng-template zyfraTableTemplate=\"header\">\r\n        <tr>\r\n          <th zyfraSortableColumn=\"code\">Code <zyfra-sort-icon field=\"code\"></zyfra-sort-icon></th>\r\n          <th zyfraSortableColumn=\"name\">Name <zyfra-sort-icon field=\"name\"></zyfra-sort-icon></th>\r\n          <th zyfraSortableColumn=\"category\">Category <zyfra-sort-icon field=\"category\"></zyfra-sort-icon></th>\r\n          <th zyfraSortableColumn=\"quantity\">Quantity <zyfra-sort-icon field=\"quantity\"></zyfra-sort-icon></th>\r\n          <th zyfraSortableColumn=\"price\">Price <zyfra-sort-icon field=\"price\"></zyfra-sort-icon></th>\r\n        </tr>\r\n      </ng-template>\r\n\r\n      <ng-template zyfraTableTemplate=\"body\" let-product>\r\n        <tr [zyfraRow]=\"product\">\r\n          <td>{{product.code}}</td>\r\n          <td>{{product.name}}</td>\r\n          <td>{{product.category}}</td>\r\n          <td style=\"text-align: right;\">{{product.quantity}}</td>\r\n          <td style=\"text-align: right;\">{{product.price | currency: 'USD'}}</td>\r\n        </tr>\r\n      </ng-template>\r\n    </zyfra-table>\r\n  `,\r\n  props: {\r\n    title: 'Сортировка по нескольким столбцам (с зажатым ctrl)',\r\n    value: getProducts(),\r\n    onSort: consoleLogAction('onSort'),\r\n  },\r\n})"
        }
      ],
      "libs/components/src/lib/table/_story/stories/state.stories.ts": [
        {
          "name": "State",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "libs/components/src/lib/table/_story/stories/state.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "defaultValue": "Template.bind({})"
        },
        {
          "name": "Template",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "libs/components/src/lib/table/_story/stories/state.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story<ZyfraTableComponent>",
          "defaultValue": "args => ({\r\n  template: `\r\n    <zyfra-table\r\n      #table\r\n      [title]=\"title\"\r\n      [value]=\"value\"\r\n      [selectionMode]=\"selectionMode\"\r\n      [(selection)]=\"selection\"\r\n      [dataKey]=\"dataKey\"\r\n      [responsiveLayout]=\"responsiveLayout\"\r\n      [rows]=\"rows\"\r\n      [paginator]=\"paginator\"\r\n      [stateStorage]=\"stateStorage\"\r\n      [stateKey]=\"stateKey\"\r\n      (stateSave)=\"stateSave($event)\"\r\n      (stateRestore)=\"stateRestore($event)\"\r\n      (selectionChange)=\"selectionChange()\"\r\n    >\r\n      <ng-template zyfraTableTemplate=\"header\">\r\n        <tr>\r\n          <th zyfraSortableColumn=\"name\">Name <zyfra-sort-icon field=\"name\"></zyfra-sort-icon></th>\r\n          <th zyfraSortableColumn=\"country.name\">Country <zyfra-sort-icon field=\"country.name\"></zyfra-sort-icon></th>\r\n          <th zyfraSortableColumn=\"representative.name\">Representative <zyfra-sort-icon field=\"representative.name\"></zyfra-sort-icon></th>\r\n          <th zyfraSortableColumn=\"status\">Status <zyfra-sort-icon field=\"status\"></zyfra-sort-icon></th>\r\n        </tr>\r\n        <tr>\r\n          <th zyfra-search-cell field=\"name\"></th>\r\n          <th zyfra-search-cell field=\"country.name\"></th>\r\n          <th zyfra-search-cell field=\"representative.name\"></th>\r\n          <th zyfra-search-cell field=\"status\"></th>\r\n        </tr>\r\n      </ng-template>\r\n      <ng-template zyfraTableTemplate=\"body\" let-customer>\r\n        <tr [zyfraRow]=\"customer\" [zyfraSelectableRow]=\"customer\">\r\n          <td>\r\n            {{customer.name}}\r\n          </td>\r\n          <td>\r\n            <span>{{customer.country.name}}</span>\r\n          </td>\r\n          <td>\r\n            <span>{{customer.representative.name}}</span>\r\n          </td>\r\n          <td>\r\n            <span [class]=\"'customer-badge status-' + customer.status\">{{customer.status}}</span>\r\n          </td>\r\n        </tr>\r\n      </ng-template>\r\n      <ng-template zyfraTableTemplate=\"emptymessage\">\r\n        <tr>\r\n          <td colspan=\"4\">No customers found.</td>\r\n        </tr>\r\n      </ng-template>\r\n    </zyfra-table>\r\n  `,\r\n  props: {\r\n    ...args,\r\n    selectionChange: consoleLogAction('selectionChange'),\r\n    stateSave: action('stateSave'),\r\n    stateRestore: action('stateRestore'),\r\n  },\r\n})"
        }
      ],
      "libs/components/src/lib/table/_story/stories/status.stories.ts": [
        {
          "name": "Status",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "libs/components/src/lib/table/_story/stories/status.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "defaultValue": "Template.bind({})"
        },
        {
          "name": "Template",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "libs/components/src/lib/table/_story/stories/status.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story<ZyfraTableComponent>",
          "defaultValue": "args => ({\r\n  template: `\r\n    <zyfra-table\r\n      [title]=\"title\"\r\n      [value]=\"value\"\r\n      (activeElementChange)=\"activeElementChange($event)\"\r\n    >\r\n      <ng-template zyfraTableTemplate=\"header\">\r\n        <tr>\r\n          <th>Status</th>\r\n        </tr>\r\n      </ng-template>\r\n      <ng-template zyfraTableTemplate=\"body\" let-item let-rowIndex=\"rowIndex\">\r\n        <tr [zyfraRow]=\"rowIndex\" [zyfraRowStatus]=\"item\">\r\n          <td>{{ item }}</td>\r\n        </tr>\r\n      </ng-template>\r\n    </zyfra-table>\r\n  `,\r\n  props: {\r\n    ...args,\r\n    activeElementChange: action('activeElementChange'),\r\n  },\r\n})"
        }
      ],
      "libs/components/src/lib/@core/base-table/target-table.token.ts": [
        {
          "name": "TargetTableToken",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "libs/components/src/lib/@core/base-table/target-table.token.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "defaultValue": "new InjectionToken('Target zyfra table component')"
        }
      ],
      "libs/components/src/lib/tooltip/zyfra-tooltip.component.stories.ts": [
        {
          "name": "Template",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "libs/components/src/lib/tooltip/zyfra-tooltip.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story<ZyfraTooltipDirective>",
          "defaultValue": "(args) => ({\r\n  template: `\r\n    <div\r\n      style=\"height: 100vh;width: 100%;display: flex;justify-content: center;align-items: center;flex-direction: column;\"\r\n    >\r\n      <div *ngIf=\"title !== undefined\">\r\n        <div>\r\n          <ng-template #testTooltip>\r\n            <div class=\"zyfra-tooltip__title\">{{ title }}</div>\r\n            <div>{{ text }}</div>\r\n          </ng-template>\r\n\r\n          <zyfra-button\r\n            [ngStyle]=\"{display: 'block'}\"\r\n            [zyfraTooltip]=\"testTooltip\"\r\n            [zyfraTooltipShow]=\"show\"\r\n            [zyfraTooltipColor]=\"color\"\r\n            [zyfraTooltipDelay]=\"delay\"\r\n            [zyfraTooltipPosition]=\"position\"\r\n            label=\"Button\"\r\n            type=\"button\"\r\n            styleClass=\"btn-default btn-primary\"\r\n          ></zyfra-button>\r\n        </div>\r\n      </div>\r\n      <div *ngIf=\"title == undefined\">\r\n        <div>\r\n          <zyfra-button\r\n            [ngStyle]=\"{display: 'block'}\"\r\n            [zyfraTooltip]=\"text\"\r\n            [zyfraTooltipColor]=\"color\"\r\n            [zyfraTooltipShow]=\"show\"\r\n            [zyfraTooltipDelay]=\"delay\"\r\n            [zyfraTooltipPosition]=\"position\"\r\n            label=\"Button\"\r\n            type=\"button\"\r\n            styleClass=\"btn-default btn-primary\"\r\n          ></zyfra-button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  `,\r\n  props: args,\r\n})"
        },
        {
          "name": "TooltipWithoutTitle",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "libs/components/src/lib/tooltip/zyfra-tooltip.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "defaultValue": "Template.bind({})"
        },
        {
          "name": "TooltipWithTitle",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "libs/components/src/lib/tooltip/zyfra-tooltip.component.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "defaultValue": "Template.bind({})"
        }
      ],
      "libs/components/src/lib/table/_story/stories/text-overflow.stories.ts": [
        {
          "name": "Template",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "libs/components/src/lib/table/_story/stories/text-overflow.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story<ZyfraTableComponent>",
          "defaultValue": "args => ({\r\n  template: `\r\n    <zyfra-table\r\n      class=\"text-overflow\"\r\n      [title]=\"title\"\r\n      [value]=\"value\"\r\n      [responsiveLayout]=\"responsiveLayout\"\r\n      [stripedMode]=\"stripedMode\"\r\n      (activeElementChange)=\"activeElementChange($event)\"\r\n    >\r\n      <ng-template zyfraTableTemplate=\"header\">\r\n        <tr>\r\n          <th>Code</th>\r\n          <th>Name</th>\r\n          <th>Category</th>\r\n          <th>Quantity</th>\r\n        </tr>\r\n      </ng-template>\r\n      <ng-template zyfraTableTemplate=\"body\" let-product let-rowIndex=\"rowIndex\">\r\n        <tr [zyfraRow]=\"product\">\r\n          <td>{{product.code}}</td>\r\n          <td>{{product.name}}</td>\r\n          <td>{{product.category}}</td>\r\n          <td style=\"text-align: right;\">{{product.quantity}}</td>\r\n        </tr>\r\n      </ng-template>\r\n    </zyfra-table>\r\n  `,\r\n  props: {\r\n    ...args,\r\n    activeElementChange: action('activeElementChange'),\r\n  },\r\n})"
        },
        {
          "name": "TextOverflow",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "libs/components/src/lib/table/_story/stories/text-overflow.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "defaultValue": "Template.bind({})"
        }
      ]
    },
    "groupedFunctions": {
      "libs/components/src/lib/table/_story/data.ts": [
        {
          "name": "cloneArrayOfObjects",
          "file": "libs/components/src/lib/table/_story/data.ts",
          "ctype": "miscellaneous",
          "subtype": "function",
          "deprecated": false,
          "deprecationMessage": "",
          "description": "",
          "args": [
            {
              "name": "array",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "returnType": "T[]",
          "jsdoctags": [
            {
              "name": "array",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "getCustomers",
          "file": "libs/components/src/lib/table/_story/data.ts",
          "ctype": "miscellaneous",
          "subtype": "function",
          "deprecated": false,
          "deprecationMessage": "",
          "description": "",
          "args": [],
          "returnType": "Customer[]"
        },
        {
          "name": "getProducts",
          "file": "libs/components/src/lib/table/_story/data.ts",
          "ctype": "miscellaneous",
          "subtype": "function",
          "deprecated": false,
          "deprecationMessage": "",
          "description": "",
          "args": [],
          "returnType": "Product[]"
        },
        {
          "name": "getProductsOrdersSmall",
          "file": "libs/components/src/lib/table/_story/data.ts",
          "ctype": "miscellaneous",
          "subtype": "function",
          "deprecated": false,
          "deprecationMessage": "",
          "description": "",
          "args": [],
          "returnType": "ProductOrder[]"
        },
        {
          "name": "getProductsSmall",
          "file": "libs/components/src/lib/table/_story/data.ts",
          "ctype": "miscellaneous",
          "subtype": "function",
          "deprecated": false,
          "deprecationMessage": "",
          "description": "",
          "args": [],
          "returnType": "Product[]"
        },
        {
          "name": "getSalesSmall",
          "file": "libs/components/src/lib/table/_story/data.ts",
          "ctype": "miscellaneous",
          "subtype": "function",
          "deprecated": false,
          "deprecationMessage": "",
          "description": "",
          "args": [],
          "returnType": "Sale[]"
        }
      ],
      "libs/components/src/lib/tree-table/_story/data.ts": [
        {
          "name": "cloneArrayOfObjects",
          "file": "libs/components/src/lib/tree-table/_story/data.ts",
          "ctype": "miscellaneous",
          "subtype": "function",
          "deprecated": false,
          "deprecationMessage": "",
          "description": "",
          "args": [
            {
              "name": "array",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "returnType": "T[]",
          "jsdoctags": [
            {
              "name": "array",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "getFileSystem",
          "file": "libs/components/src/lib/tree-table/_story/data.ts",
          "ctype": "miscellaneous",
          "subtype": "function",
          "deprecated": false,
          "deprecationMessage": "",
          "description": "",
          "args": [],
          "returnType": "any"
        },
        {
          "name": "getSales",
          "file": "libs/components/src/lib/tree-table/_story/data.ts",
          "ctype": "miscellaneous",
          "subtype": "function",
          "deprecated": false,
          "deprecationMessage": "",
          "description": "",
          "args": [],
          "returnType": "any"
        }
      ],
      "libs/components/.storybook/helpers.ts": [
        {
          "name": "consoleLogAction",
          "file": "libs/components/.storybook/helpers.ts",
          "ctype": "miscellaneous",
          "subtype": "function",
          "deprecated": false,
          "deprecationMessage": "",
          "description": "",
          "args": [
            {
              "name": "name",
              "type": "string",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "returnType": "literal type",
          "jsdoctags": [
            {
              "name": "name",
              "type": "string",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        }
      ],
      "libs/components/src/lib/table/_story/stories/scroll-virtual.stories.ts": [
        {
          "name": "generateCar",
          "file": "libs/components/src/lib/table/_story/stories/scroll-virtual.stories.ts",
          "ctype": "miscellaneous",
          "subtype": "function",
          "deprecated": false,
          "deprecationMessage": "",
          "description": "",
          "args": [],
          "returnType": "literal type"
        }
      ],
      "libs/components/src/lib/datepicker/utils/generate-time-array.ts": [
        {
          "name": "generateTimeArray",
          "file": "libs/components/src/lib/datepicker/utils/generate-time-array.ts",
          "ctype": "miscellaneous",
          "subtype": "function",
          "deprecated": false,
          "deprecationMessage": "",
          "description": "",
          "args": [
            {
              "name": "formatTime",
              "type": "string",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "returnType": "ZyfraTime[]",
          "jsdoctags": [
            {
              "name": "formatTime",
              "type": "string",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        }
      ],
      "libs/components/src/lib/datepicker/zyfra-relative-datepicker/relative-datepicker.models.ts": [
        {
          "name": "getDefaultRelativeDateMenuItems",
          "file": "libs/components/src/lib/datepicker/zyfra-relative-datepicker/relative-datepicker.models.ts",
          "ctype": "miscellaneous",
          "subtype": "function",
          "deprecated": false,
          "deprecationMessage": "",
          "description": "",
          "args": [],
          "returnType": "RelativeDateMenuItems"
        }
      ],
      "libs/components/src/lib/datepicker/utils/is-iso-date.ts": [
        {
          "name": "isIsoDate",
          "file": "libs/components/src/lib/datepicker/utils/is-iso-date.ts",
          "ctype": "miscellaneous",
          "subtype": "function",
          "deprecated": false,
          "deprecationMessage": "",
          "description": "",
          "args": [
            {
              "name": "str",
              "type": "string",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "returnType": "boolean",
          "jsdoctags": [
            {
              "name": "str",
              "type": "string",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        }
      ],
      "libs/components/src/lib/@core/base-table/directives/sortable-column.directive.ts": [
        {
          "name": "onSortColumnClick",
          "file": "libs/components/src/lib/@core/base-table/directives/sortable-column.directive.ts",
          "ctype": "miscellaneous",
          "subtype": "function",
          "deprecated": false,
          "deprecationMessage": "",
          "description": "",
          "args": [
            {
              "name": "event",
              "type": "MouseEvent",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "returnType": "void",
          "jsdoctags": [
            {
              "name": "event",
              "type": "MouseEvent",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        }
      ],
      "libs/components/src/lib/datepicker/zyfra-relative-datepicker/relative-datepicker.utils.ts": [
        {
          "name": "ParseTextInput",
          "file": "libs/components/src/lib/datepicker/zyfra-relative-datepicker/relative-datepicker.utils.ts",
          "ctype": "miscellaneous",
          "subtype": "function",
          "deprecated": false,
          "deprecationMessage": "",
          "description": "<p>Parse input text to model</p>\n",
          "args": [
            {
              "name": "text",
              "type": "string",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "returnType": "RelativeDateModel",
          "jsdoctags": [
            {
              "name": "text",
              "type": "string",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "RenderText",
          "file": "libs/components/src/lib/datepicker/zyfra-relative-datepicker/relative-datepicker.utils.ts",
          "ctype": "miscellaneous",
          "subtype": "function",
          "deprecated": false,
          "deprecationMessage": "",
          "description": "<p>Render text from RelativeDateModel</p>\n",
          "args": [
            {
              "name": "model",
              "type": "RelativeDateModel",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "returnType": "string",
          "jsdoctags": [
            {
              "name": "model",
              "type": "RelativeDateModel",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        },
        {
          "name": "UpdateActiveItem",
          "file": "libs/components/src/lib/datepicker/zyfra-relative-datepicker/relative-datepicker.utils.ts",
          "ctype": "miscellaneous",
          "subtype": "function",
          "deprecated": false,
          "deprecationMessage": "",
          "description": "<p>Check items as radio button, to active id</p>\n",
          "args": [
            {
              "name": "items",
              "deprecated": false,
              "deprecationMessage": ""
            },
            {
              "name": "id",
              "type": "T",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "returnType": "RelativeDateMenuItem[]",
          "jsdoctags": [
            {
              "name": "items",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            },
            {
              "name": "id",
              "type": "T",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        }
      ],
      "libs/components/src/lib/@core/value-accessor/value-accessor-form-component.directive.ts": [
        {
          "name": "provideValueAccessor",
          "file": "libs/components/src/lib/@core/value-accessor/value-accessor-form-component.directive.ts",
          "ctype": "miscellaneous",
          "subtype": "function",
          "deprecated": false,
          "deprecationMessage": "",
          "description": "",
          "args": [
            {
              "name": "type",
              "type": "Type",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "returnType": "Provider",
          "jsdoctags": [
            {
              "name": "type",
              "type": "Type",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        }
      ]
    },
    "groupedEnumerations": {
      "libs/components/src/lib/datepicker/model/zyfra-date-picker-mode.enum.ts": [
        {
          "name": "ZyfraDatePickerMode",
          "childs": [
            {
              "name": "absolute",
              "deprecated": false,
              "deprecationMessage": "",
              "value": "absolute"
            },
            {
              "name": "relative",
              "deprecated": false,
              "deprecationMessage": "",
              "value": "relative"
            }
          ],
          "ctype": "miscellaneous",
          "subtype": "enum",
          "deprecated": false,
          "deprecationMessage": "",
          "description": "",
          "file": "libs/components/src/lib/datepicker/model/zyfra-date-picker-mode.enum.ts"
        }
      ],
      "libs/components/src/lib/datepicker/model/zyfra-date-picker-value-type.enum.ts": [
        {
          "name": "ZyfraDatePickerValueType",
          "childs": [
            {
              "name": "date",
              "deprecated": false,
              "deprecationMessage": "",
              "value": "date"
            },
            {
              "name": "string",
              "deprecated": false,
              "deprecationMessage": "",
              "value": "string"
            },
            {
              "name": "isoString",
              "deprecated": false,
              "deprecationMessage": "",
              "value": "isoString"
            },
            {
              "name": "timestamp",
              "deprecated": false,
              "deprecationMessage": "",
              "value": "timestamp"
            },
            {
              "name": "null",
              "deprecated": false,
              "deprecationMessage": "",
              "value": "null"
            }
          ],
          "ctype": "miscellaneous",
          "subtype": "enum",
          "deprecated": false,
          "deprecationMessage": "",
          "description": "",
          "file": "libs/components/src/lib/datepicker/model/zyfra-date-picker-value-type.enum.ts"
        }
      ],
      "libs/components/src/lib/datepicker/model/zyfra-date-picker-locale.enum.ts": [
        {
          "name": "ZyfraLocale",
          "childs": [
            {
              "name": "ru",
              "deprecated": false,
              "deprecationMessage": "",
              "value": "ru_RU"
            },
            {
              "name": "en",
              "deprecated": false,
              "deprecationMessage": "",
              "value": "en_US"
            }
          ],
          "ctype": "miscellaneous",
          "subtype": "enum",
          "deprecated": false,
          "deprecationMessage": "",
          "description": "",
          "file": "libs/components/src/lib/datepicker/model/zyfra-date-picker-locale.enum.ts"
        }
      ]
    },
    "groupedTypeAliases": {
      "libs/components/src/lib/datepicker/calendar/zyfra-calendar.component.ts": [
        {
          "name": "CALENDAR_SELECTION_MODE",
          "ctype": "miscellaneous",
          "subtype": "typealias",
          "rawtype": "\"single\" | \"range\" | \"multiple\"",
          "file": "libs/components/src/lib/datepicker/calendar/zyfra-calendar.component.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "description": "",
          "kind": 185
        }
      ],
      "libs/components/src/lib/dropdown/zyfra-dropdown-template.directive.ts": [
        {
          "name": "DropdownTemplateType",
          "ctype": "miscellaneous",
          "subtype": "typealias",
          "rawtype": "\"item\" | \"group\" | \"selectedItem\" | \"header\" | \"empty\" | \"emptyfilter\" | \"footer\"",
          "file": "libs/components/src/lib/dropdown/zyfra-dropdown-template.directive.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "description": "",
          "kind": 185
        }
      ],
      "libs/components/src/lib/table/zyfra-table.types.ts": [
        {
          "name": "Filters",
          "ctype": "miscellaneous",
          "subtype": "typealias",
          "rawtype": "Record<string | FilterMetadata | []>",
          "file": "libs/components/src/lib/table/zyfra-table.types.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "description": "",
          "kind": 176
        },
        {
          "name": "RowSelectionEvent",
          "ctype": "miscellaneous",
          "subtype": "typealias",
          "rawtype": "literal type",
          "file": "libs/components/src/lib/table/zyfra-table.types.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "description": "",
          "kind": 180
        },
        {
          "name": "TableSortEvent",
          "ctype": "miscellaneous",
          "subtype": "typealias",
          "rawtype": "SortEvent",
          "file": "libs/components/src/lib/table/zyfra-table.types.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "description": "",
          "kind": 176
        }
      ],
      "libs/components/src/lib/nav-menu/model/nav-menu-config.ts": [
        {
          "name": "HeaderConfig",
          "ctype": "miscellaneous",
          "subtype": "typealias",
          "rawtype": "literal type",
          "file": "libs/components/src/lib/nav-menu/model/nav-menu-config.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "description": "",
          "kind": 180
        },
        {
          "name": "MenuItemSize",
          "ctype": "miscellaneous",
          "subtype": "typealias",
          "rawtype": "\"standard\" | \"enlarged\"",
          "file": "libs/components/src/lib/nav-menu/model/nav-menu-config.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "description": "",
          "kind": 185
        },
        {
          "name": "SelectionType",
          "ctype": "miscellaneous",
          "subtype": "typealias",
          "rawtype": "\"single\" | \"checkbox\"",
          "file": "libs/components/src/lib/nav-menu/model/nav-menu-config.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "description": "",
          "kind": 185
        },
        {
          "name": "ViewMode",
          "ctype": "miscellaneous",
          "subtype": "typealias",
          "rawtype": "\"rubricator\" | \"folder\" | \"hierarchy\"",
          "file": "libs/components/src/lib/nav-menu/model/nav-menu-config.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "description": "",
          "kind": 185
        }
      ],
      "libs/components/src/lib/datepicker/zyfra-relative-datepicker/relative-datepicker.models.ts": [
        {
          "name": "IdByGroup",
          "ctype": "miscellaneous",
          "subtype": "typealias",
          "rawtype": "",
          "file": "libs/components/src/lib/datepicker/zyfra-relative-datepicker/relative-datepicker.models.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "description": "",
          "kind": 192
        },
        {
          "name": "RelativeDateDirectionId",
          "ctype": "miscellaneous",
          "subtype": "typealias",
          "rawtype": "",
          "file": "libs/components/src/lib/datepicker/zyfra-relative-datepicker/relative-datepicker.models.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "description": "",
          "kind": 192
        },
        {
          "name": "RelativeDatePeriodId",
          "ctype": "miscellaneous",
          "subtype": "typealias",
          "rawtype": "",
          "file": "libs/components/src/lib/datepicker/zyfra-relative-datepicker/relative-datepicker.models.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "description": "",
          "kind": 192
        },
        {
          "name": "RelativeDateTimeId",
          "ctype": "miscellaneous",
          "subtype": "typealias",
          "rawtype": "",
          "file": "libs/components/src/lib/datepicker/zyfra-relative-datepicker/relative-datepicker.models.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "description": "",
          "kind": 192
        }
      ],
      "libs/components/src/lib/breadcrumb/zyfra-breadcrumb.component.ts": [
        {
          "name": "ItemClickEvent",
          "ctype": "miscellaneous",
          "subtype": "typealias",
          "rawtype": "literal type",
          "file": "libs/components/src/lib/breadcrumb/zyfra-breadcrumb.component.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "description": "",
          "kind": 180
        }
      ],
      "libs/components/src/lib/datepicker/zyfra-datepicker.component.ts": [
        {
          "name": "OnChangeCallback",
          "ctype": "miscellaneous",
          "subtype": "typealias",
          "rawtype": "function",
          "file": "libs/components/src/lib/datepicker/zyfra-datepicker.component.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "description": "",
          "kind": 177
        }
      ],
      "libs/components/src/lib/splitter/zyfra-splitter.component.ts": [
        {
          "name": "onResizeEvent",
          "ctype": "miscellaneous",
          "subtype": "typealias",
          "rawtype": "literal type",
          "file": "libs/components/src/lib/splitter/zyfra-splitter.component.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "description": "",
          "kind": 180
        }
      ],
      "libs/components/src/lib/paginator/zyfra-paginator.component.ts": [
        {
          "name": "PageOption",
          "ctype": "miscellaneous",
          "subtype": "typealias",
          "rawtype": "number | Record<string | >",
          "file": "libs/components/src/lib/paginator/zyfra-paginator.component.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "description": "",
          "kind": 185
        }
      ],
      "libs/components/src/lib/slider/zyfra-slider.component.ts": [
        {
          "name": "SliderOrientation",
          "ctype": "miscellaneous",
          "subtype": "typealias",
          "rawtype": "\"horizontal\" | \"vertical\"",
          "file": "libs/components/src/lib/slider/zyfra-slider.component.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "description": "",
          "kind": 185
        }
      ],
      "libs/components/src/lib/@core/base-table/shared-table.types.ts": [
        {
          "name": "SortOrder",
          "ctype": "miscellaneous",
          "subtype": "typealias",
          "rawtype": " | \"1\"",
          "file": "libs/components/src/lib/@core/base-table/shared-table.types.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "description": "",
          "kind": 185
        }
      ],
      "libs/components/src/lib/spinner/zyfra-spinner.component.ts": [
        {
          "name": "SpinnerColor",
          "ctype": "miscellaneous",
          "subtype": "typealias",
          "rawtype": "\"primary\" | \"secondary\" | \"info\" | \"warning\" | \"danger\" | \"success\"",
          "file": "libs/components/src/lib/spinner/zyfra-spinner.component.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "description": "",
          "kind": 185
        }
      ],
      "libs/components/src/lib/tree-table/tree-table.types.ts": [
        {
          "name": "TableSortMode",
          "ctype": "miscellaneous",
          "subtype": "typealias",
          "rawtype": "\"single\" | \"multiple\"",
          "file": "libs/components/src/lib/tree-table/tree-table.types.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "description": "",
          "kind": 185
        }
      ],
      "libs/components/src/lib/@core/base-table/directives/base-table-template.directive.ts": [
        {
          "name": "TableTemplateType",
          "ctype": "miscellaneous",
          "subtype": "typealias",
          "rawtype": "\"caption\" | \"header\" | \"headergrouped\" | \"body\" | \"loadingbody\" | \"footer\" | \"footergrouped\" | \"summary\" | \"colgroup\" | \"rowexpansion\" | \"groupheader\" | \"rowspan\" | \"groupfooter\" | \"frozenrows\" | \"frozenheader\" | \"frozenbody\" | \"frozenfooter\" | \"frozencolgroup\" | \"frozenrowexpansion\" | \"emptymessage\" | \"paginatorleft\" | \"paginatorright\" | \"paginatordropdownitem\" | \"input\" | \"output\" | \"filter\"",
          "file": "libs/components/src/lib/@core/base-table/directives/base-table-template.directive.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "description": "",
          "kind": 185
        }
      ],
      "libs/components/src/lib/toast/toast.service.ts": [
        {
          "name": "ToastMessage",
          "ctype": "miscellaneous",
          "subtype": "typealias",
          "rawtype": "Message",
          "file": "libs/components/src/lib/toast/toast.service.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "description": "",
          "kind": 176
        }
      ],
      "libs/components/src/lib/button/zyfra-button.component.ts": [
        {
          "name": "TZyfraButtonIconPosision",
          "ctype": "miscellaneous",
          "subtype": "typealias",
          "rawtype": "\"left\" | \"right\" | \"top\" | \"bottom\"",
          "file": "libs/components/src/lib/button/zyfra-button.component.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "description": "",
          "kind": 185
        }
      ],
      "libs/components/src/lib/@core/base-table/search-cell/base-search-cell.component.ts": [
        {
          "name": "ValueChangeEvent",
          "ctype": "miscellaneous",
          "subtype": "typealias",
          "rawtype": "literal type",
          "file": "libs/components/src/lib/@core/base-table/search-cell/base-search-cell.component.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "description": "",
          "kind": 180
        }
      ]
    }
  },
  "routes": [],
  "coverage": {
    "count": 2,
    "status": "low",
    "files": [
      {
        "filePath": "libs/components/.storybook/helpers.ts",
        "type": "function",
        "linktype": "miscellaneous",
        "linksubtype": "function",
        "name": "consoleLogAction",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/@core/base-table/directives/base-table-template.directive.ts",
        "type": "directive",
        "linktype": "directive",
        "name": "BaseTableTemplateDirective",
        "coveragePercent": 0,
        "coverageCount": "0/5",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/@core/base-table/directives/sortable-column.directive.ts",
        "type": "function",
        "linktype": "miscellaneous",
        "linksubtype": "function",
        "name": "onSortColumnClick",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/@core/base-table/directives/zyfra-row-base.directive.ts",
        "type": "directive",
        "linktype": "directive",
        "name": "ZyfraRowBaseDirective",
        "coveragePercent": 0,
        "coverageCount": "0/8",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/@core/base-table/search-cell/base-search-cell.component.ts",
        "type": "directive",
        "linktype": "directive",
        "name": "ZyfraBaseSearchCellComponent",
        "coveragePercent": 10,
        "coverageCount": "1/10",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/@core/base-table/target-table.token.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "TargetTableToken",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/@core/base-table/zyfra-base-table.directive.ts",
        "type": "directive",
        "linktype": "directive",
        "name": "ZyfraBaseTableComponent",
        "coveragePercent": 67,
        "coverageCount": "72/106",
        "status": "good"
      },
      {
        "filePath": "libs/components/src/lib/@core/models/events.models.ts",
        "type": "interface",
        "linktype": "interface",
        "name": "CustomInputEvent",
        "coveragePercent": 0,
        "coverageCount": "0/3",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/@core/models/events.models.ts",
        "type": "interface",
        "linktype": "interface",
        "name": "HtmlInputEvent",
        "coveragePercent": 0,
        "coverageCount": "0/2",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/@core/shared/zyfra-disable-control.module.ts",
        "type": "directive",
        "linktype": "directive",
        "name": "ZyfraDisableControlDirective",
        "coveragePercent": 0,
        "coverageCount": "0/3",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/@core/shared/zyfra-template.module.ts",
        "type": "directive",
        "linktype": "directive",
        "name": "ZyfraTemplateDirective",
        "coveragePercent": 0,
        "coverageCount": "0/4",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/@core/utils/chars-limit.pipe.ts",
        "type": "pipe",
        "linktype": "pipe",
        "name": "CharLimitPipe",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/@core/value-accessor/accessor-impl.class.ts",
        "type": "class",
        "linktype": "classe",
        "name": "AccessorImplClass",
        "coveragePercent": 0,
        "coverageCount": "0/9",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/@core/value-accessor/value-accessor-form-component.directive.ts",
        "type": "directive",
        "linktype": "directive",
        "name": "ValueAccessorFormComponent",
        "coveragePercent": 0,
        "coverageCount": "0/5",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/@core/value-accessor/value-accessor-form-component.directive.ts",
        "type": "function",
        "linktype": "miscellaneous",
        "linksubtype": "function",
        "name": "provideValueAccessor",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/@core/value-accessor/wrapped-form.component.ts",
        "type": "directive",
        "linktype": "directive",
        "name": "WrappedFormComponent",
        "coveragePercent": 0,
        "coverageCount": "0/6",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/accordion/zyfra-accordion-tab/zyfra-accordion-tab.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Primary",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/accordion/zyfra-accordion-tab/zyfra-accordion-tab.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Template",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/accordion/zyfra-accordion-tab/zyfra-accordion-tab.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "ZyfraAccordionTabComponent",
        "coveragePercent": 40,
        "coverageCount": "6/15",
        "status": "medium"
      },
      {
        "filePath": "libs/components/src/lib/accordion/zyfra-accordion/zyfra-accordion.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Simple",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/accordion/zyfra-accordion/zyfra-accordion.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Template",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/accordion/zyfra-accordion/zyfra-accordion.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "ZyfraAccordionComponent",
        "coveragePercent": 62,
        "coverageCount": "10/16",
        "status": "good"
      },
      {
        "filePath": "libs/components/src/lib/accordion/zyfra-accordion/zyfra-accordion.component.ts",
        "type": "interface",
        "linktype": "interface",
        "name": "ZyfraAccordionOpenClose",
        "coveragePercent": 0,
        "coverageCount": "0/3",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/auto-complete/zyfra-auto-complete.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Simple",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/auto-complete/zyfra-auto-complete.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Template",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/auto-complete/zyfra-auto-complete.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "withDropdown",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/auto-complete/zyfra-auto-complete.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "ZyfraAutoCompleteComponent",
        "coveragePercent": 0,
        "coverageCount": "0/67",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/block-ui/custom-blockable.ts",
        "type": "component",
        "linktype": "component",
        "name": "CustomBlockableComponent",
        "coveragePercent": 0,
        "coverageCount": "0/3",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/block-ui/zyfra-block-ui.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "BlockCustomComponent",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/block-ui/zyfra-block-ui.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "BlockCustomComponentTemplate",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/block-ui/zyfra-block-ui.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "BlockDocument",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/block-ui/zyfra-block-ui.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "BlockDocumentTemplate",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/block-ui/zyfra-block-ui.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "ZyfraBlockUiComponent",
        "coveragePercent": 83,
        "coverageCount": "5/6",
        "status": "very-good"
      },
      {
        "filePath": "libs/components/src/lib/breadcrumb/zyfra-breadcrumb.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "items",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/breadcrumb/zyfra-breadcrumb.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "itemsUrl",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/breadcrumb/zyfra-breadcrumb.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Template",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/breadcrumb/zyfra-breadcrumb.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Text",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/breadcrumb/zyfra-breadcrumb.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Url",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/breadcrumb/zyfra-breadcrumb.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "ZyfraBreadcrumbComponent",
        "coveragePercent": 0,
        "coverageCount": "0/7",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/button/zyfra-button.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Danger",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/button/zyfra-button.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Default",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/button/zyfra-button.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "DefaultDisabled",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/button/zyfra-button.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "DefaultMini",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/button/zyfra-button.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Icon",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/button/zyfra-button.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Info",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/button/zyfra-button.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "OnlyIcon",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/button/zyfra-button.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Secondary",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/button/zyfra-button.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Success",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/button/zyfra-button.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "SuccessMini",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/button/zyfra-button.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Template",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/button/zyfra-button.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Warning",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/button/zyfra-button.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "ZyfraButtonComponent",
        "coveragePercent": 0,
        "coverageCount": "0/16",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/checkbox/story/data.ts",
        "type": "interface",
        "linktype": "interface",
        "name": "DataFormControl",
        "coveragePercent": 0,
        "coverageCount": "0/3",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/checkbox/story/data.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "data",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/checkbox/story/miltiple-checkbox.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "ZyfraCheckboxMultipleComponent",
        "coveragePercent": 0,
        "coverageCount": "0/10",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/checkbox/zyfra-checkbox.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Basic",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/checkbox/zyfra-checkbox.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "CheckboxMultipleTemplate",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/checkbox/zyfra-checkbox.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "CheckboxWithFormControlComponentTemplate",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/checkbox/zyfra-checkbox.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "CustomIcon",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/checkbox/zyfra-checkbox.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Multiple",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/checkbox/zyfra-checkbox.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Template",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/checkbox/zyfra-checkbox.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "WithFormControl",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/checkbox/zyfra-checkbox.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "ZyfraCheckboxComponent",
        "coveragePercent": 0,
        "coverageCount": "0/23",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/chip/zyfra-chip.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Icon",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/chip/zyfra-chip.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "OnlyIcon",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/chip/zyfra-chip.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "OnlyText",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/chip/zyfra-chip.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Primary",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/chip/zyfra-chip.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Template",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/chip/zyfra-chip.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "ZyfraChipComponent",
        "coveragePercent": 0,
        "coverageCount": "0/10",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/confirm-dialog/zyfra-confirm-dialog.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Position",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/confirm-dialog/zyfra-confirm-dialog.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Simple",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/confirm-dialog/zyfra-confirm-dialog.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Template",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/confirm-dialog/zyfra-confirm-dialog.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "ZyfraConfirmDialogComponent",
        "coveragePercent": 0,
        "coverageCount": "0/37",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/datepicker/calendar/story/custom-calendar.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "CustomCalendarComponent",
        "coveragePercent": 9,
        "coverageCount": "1/11",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/datepicker/calendar/zyfra-calendar.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Basic",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/datepicker/calendar/zyfra-calendar.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "ButtonBar",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/datepicker/calendar/zyfra-calendar.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "CustomButtons",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/datepicker/calendar/zyfra-calendar.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "CustomTemplate",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/datepicker/calendar/zyfra-calendar.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "DateFormat",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/datepicker/calendar/zyfra-calendar.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "DisabledDays",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/datepicker/calendar/zyfra-calendar.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Icon",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/datepicker/calendar/zyfra-calendar.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "InlinePicker",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/datepicker/calendar/zyfra-calendar.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "items",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/datepicker/calendar/zyfra-calendar.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "MonthPicker",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/datepicker/calendar/zyfra-calendar.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Multiple",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/datepicker/calendar/zyfra-calendar.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "OnlyTime",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/datepicker/calendar/zyfra-calendar.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Range",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/datepicker/calendar/zyfra-calendar.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Template",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/datepicker/calendar/zyfra-calendar.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Time",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/datepicker/calendar/zyfra-calendar.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "YearPicker",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/datepicker/calendar/zyfra-calendar.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "Calendar",
        "coveragePercent": 0,
        "coverageCount": "1/264",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/datepicker/calendar/zyfra-calendar.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "ZyfraCalendarComponent",
        "coveragePercent": 0,
        "coverageCount": "0/270",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/datepicker/calendar/zyfra-calendar.component.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "CALENDAR_VALUE_ACCESSOR",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/datepicker/i18n/en_US.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "en",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/datepicker/i18n/ru_RU.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "ru",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/datepicker/model/zyfra-date-picker.model.ts",
        "type": "interface",
        "linktype": "interface",
        "name": "ZyfraDatePickerLocaleInterface",
        "coveragePercent": 0,
        "coverageCount": "0/2",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/datepicker/model/zyfra-time.model.ts",
        "type": "interface",
        "linktype": "interface",
        "name": "ZyfraTime",
        "coveragePercent": 0,
        "coverageCount": "0/3",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/datepicker/utils/generate-time-array.ts",
        "type": "function",
        "linktype": "miscellaneous",
        "linksubtype": "function",
        "name": "generateTimeArray",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/datepicker/utils/is-iso-date.ts",
        "type": "function",
        "linktype": "miscellaneous",
        "linksubtype": "function",
        "name": "isIsoDate",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/datepicker/zyfra-datepicker-mode-select/zyfra-datepicker-mode-select.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "ZyfraDatepickerModeSelectComponent",
        "coveragePercent": 0,
        "coverageCount": "0/6",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/datepicker/zyfra-datepicker-multi/zyfra-datepicker-multi.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Primary",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/datepicker/zyfra-datepicker-multi/zyfra-datepicker-multi.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Template",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/datepicker/zyfra-datepicker-multi/zyfra-datepicker-multi.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "ZyfraDatepickerMultiComponent",
        "coveragePercent": 0,
        "coverageCount": "0/79",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/datepicker/zyfra-datepicker.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Absolute",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/datepicker/zyfra-datepicker.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "AbsoluteMini",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/datepicker/zyfra-datepicker.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Template",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/datepicker/zyfra-datepicker.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "ZyfraDatepickerComponent",
        "coveragePercent": 0,
        "coverageCount": "0/79",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/datepicker/zyfra-relative-datepicker/relative-datepicker.models.ts",
        "type": "interface",
        "linktype": "interface",
        "name": "RelativeDateMenuItem",
        "coveragePercent": 0,
        "coverageCount": "0/6",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/datepicker/zyfra-relative-datepicker/relative-datepicker.models.ts",
        "type": "interface",
        "linktype": "interface",
        "name": "RelativeDateMenuItems",
        "coveragePercent": 0,
        "coverageCount": "0/4",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/datepicker/zyfra-relative-datepicker/relative-datepicker.models.ts",
        "type": "interface",
        "linktype": "interface",
        "name": "RelativeDateModel",
        "coveragePercent": 0,
        "coverageCount": "0/5",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/datepicker/zyfra-relative-datepicker/relative-datepicker.models.ts",
        "type": "function",
        "linktype": "miscellaneous",
        "linksubtype": "function",
        "name": "getDefaultRelativeDateMenuItems",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/datepicker/zyfra-relative-datepicker/relative-datepicker.models.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "DefaultRelativeMenuItems",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/datepicker/zyfra-relative-datepicker/relative-datepicker.utils.ts",
        "type": "function",
        "linktype": "miscellaneous",
        "linksubtype": "function",
        "name": "ParseTextInput",
        "coveragePercent": 100,
        "coverageCount": "1/1",
        "status": "very-good"
      },
      {
        "filePath": "libs/components/src/lib/datepicker/zyfra-relative-datepicker/relative-datepicker.utils.ts",
        "type": "function",
        "linktype": "miscellaneous",
        "linksubtype": "function",
        "name": "RenderText",
        "coveragePercent": 100,
        "coverageCount": "1/1",
        "status": "very-good"
      },
      {
        "filePath": "libs/components/src/lib/datepicker/zyfra-relative-datepicker/relative-datepicker.utils.ts",
        "type": "function",
        "linktype": "miscellaneous",
        "linksubtype": "function",
        "name": "UpdateActiveItem",
        "coveragePercent": 100,
        "coverageCount": "1/1",
        "status": "very-good"
      },
      {
        "filePath": "libs/components/src/lib/datepicker/zyfra-relative-datepicker/relative-datepicker.utils.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "directionMap",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/datepicker/zyfra-relative-datepicker/relative-datepicker.utils.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "MatchPattern",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/datepicker/zyfra-relative-datepicker/relative-datepicker.utils.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "periodMap",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/datepicker/zyfra-relative-datepicker/relative-datepicker.utils.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "renderDirectionMap",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/datepicker/zyfra-relative-datepicker/relative-datepicker.utils.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "renderPeriodMap",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/datepicker/zyfra-relative-datepicker/relative-datepicker.utils.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "renderTimeMap",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/datepicker/zyfra-relative-datepicker/relative-datepicker.utils.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "timeMap",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/datepicker/zyfra-relative-datepicker/zyfra-relative-datepicker.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Primary",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/datepicker/zyfra-relative-datepicker/zyfra-relative-datepicker.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Template",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/datepicker/zyfra-relative-datepicker/zyfra-relative-datepicker.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "ZyfraRelativeDatepickerComponent",
        "coveragePercent": 14,
        "coverageCount": "4/28",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/datepicker/zyfra-relative-datepicker/zyfra-relative-datepicker.component.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "MenuItems",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/datepicker/zyfra-relative-datepicker/zyfra-relative-datepicker.component.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "ValidationPattern",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/dialog/zyfra-dialog.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "PositionTop",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/dialog/zyfra-dialog.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Simple",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/dialog/zyfra-dialog.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Template",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/dialog/zyfra-dialog.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "ZyfraDialogComponent",
        "coveragePercent": 0,
        "coverageCount": "0/46",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/dropdown-with-content/zyfra-dropdown-with-content.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "GroupWithContent",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/dropdown-with-content/zyfra-dropdown-with-content.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "SimpleWithContent",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/dropdown-with-content/zyfra-dropdown-with-content.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "TemplateWithContent",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/dropdown-with-content/zyfra-dropdown-with-content.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "ZyfraDropdownWithContentComponent",
        "coveragePercent": 0,
        "coverageCount": "0/79",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/dropdown-with-content/zyfra-dropdown-with-content.service.ts",
        "type": "injectable",
        "linktype": "injectable",
        "name": "ZyfraDropdownWithContentService",
        "coveragePercent": 0,
        "coverageCount": "0/6",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/dropdown-with-content/zyfra-dropdown-with-content.service.ts",
        "type": "interface",
        "linktype": "interface",
        "name": "Dimensions",
        "coveragePercent": 0,
        "coverageCount": "0/3",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/dropdown/zyfra-dropdown-template.directive.ts",
        "type": "directive",
        "linktype": "directive",
        "name": "ZyfraDropdownTemplateDirective",
        "coveragePercent": 0,
        "coverageCount": "0/5",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/dropdown/zyfra-dropdown.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "AppendToBody",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/dropdown/zyfra-dropdown.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Filter",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/dropdown/zyfra-dropdown.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Group",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/dropdown/zyfra-dropdown.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "items",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/dropdown/zyfra-dropdown.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Simple",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/dropdown/zyfra-dropdown.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Template",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/dropdown/zyfra-dropdown.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "VirtualScroll",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/dropdown/zyfra-dropdown.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "ZyfraDropdownComponent",
        "coveragePercent": 0,
        "coverageCount": "0/73",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/dropdown/zyfra-dropdown.component.ts",
        "type": "interface",
        "linktype": "interface",
        "name": "DropdownChangeEvent",
        "coveragePercent": 0,
        "coverageCount": "0/3",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/dynamic-dialog/zyfra-dynamic-dialog-config.ts",
        "type": "class",
        "linktype": "classe",
        "name": "ZyfraDynamicDialogConfig",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/dynamic-dialog/zyfra-dynamic-dialog-ref.ts",
        "type": "class",
        "linktype": "classe",
        "name": "ZyfraDynamicDialogRef",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/dynamic-dialog/zyfra-dynamic-dialog.component.stories.ts",
        "type": "component",
        "linktype": "component",
        "name": "ExampleDynamicDialogComponent",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/dynamic-dialog/zyfra-dynamic-dialog.component.stories.ts",
        "type": "component",
        "linktype": "component",
        "name": "ZyfraDynamicDialogComponent",
        "coveragePercent": 0,
        "coverageCount": "0/22",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/dynamic-dialog/zyfra-dynamic-dialog.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Simple",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/dynamic-dialog/zyfra-dynamic-dialog.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Template",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/dynamic-dialog/zyfra-dynamic-dialog.service.ts",
        "type": "injectable",
        "linktype": "injectable",
        "name": "ZyfraDynamicDialogService",
        "coveragePercent": 0,
        "coverageCount": "0/8",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/icon-button/zyfra-icon-button.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Simple",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/icon-button/zyfra-icon-button.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Template",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/icon-button/zyfra-icon-button.directive.ts",
        "type": "directive",
        "linktype": "directive",
        "name": "ZyfraIconButtonDirective",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/icon/story/icon-definitions.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "IconDefs",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/icon/zyfra-icon.component.stories.ts",
        "type": "component",
        "linktype": "component",
        "name": "IconComponents",
        "coveragePercent": 0,
        "coverageCount": "0/2",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/icon/zyfra-icon.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "IconsSet",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/icon/zyfra-icon.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Template",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/icon/zyfra-icon.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "ZyfraIconComponent",
        "coveragePercent": 0,
        "coverageCount": "0/2",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/input-group/zyfra-input-group-clear/zyfra-input-group-clear.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "ZyfraInputGroupClearComponent",
        "coveragePercent": 0,
        "coverageCount": "0/3",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/input-group/zyfra-input-group-control.class.ts",
        "type": "directive",
        "linktype": "directive",
        "name": "ZyfraInputGroupControl",
        "coveragePercent": 66,
        "coverageCount": "4/6",
        "status": "good"
      },
      {
        "filePath": "libs/components/src/lib/input-group/zyfra-input-group.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Simple",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/input-group/zyfra-input-group.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Template",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/input-group/zyfra-input-group/zyfra-input-group.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "ZyfraInputGroupComponent",
        "coveragePercent": 0,
        "coverageCount": "0/5",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/input-mask/zyfra-input-mask.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Basic",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/input-mask/zyfra-input-mask.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Date",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/input-mask/zyfra-input-mask.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Phone",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/input-mask/zyfra-input-mask.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "PhoneExt",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/input-mask/zyfra-input-mask.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "SerialNumber",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/input-mask/zyfra-input-mask.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "SSN",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/input-mask/zyfra-input-mask.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Template",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/input-mask/zyfra-input-mask.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "ZyfraInputMaskComponent",
        "coveragePercent": 0,
        "coverageCount": "0/33",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/input-number/zyfra-input-number.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Basic",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/input-number/zyfra-input-number.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Currency",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/input-number/zyfra-input-number.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Decimal",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/input-number/zyfra-input-number.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Template",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/input-number/zyfra-input-number.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "ZyfraInputNumberComponent",
        "coveragePercent": 0,
        "coverageCount": "0/47",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/input-switch/zyfra-input-switch.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Basic",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/input-switch/zyfra-input-switch.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Template",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/input-switch/zyfra-input-switch.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "ZyfraInputSwitchComponent",
        "coveragePercent": 0,
        "coverageCount": "0/13",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/input-text/zyfra-input-text.directive.ts",
        "type": "directive",
        "linktype": "directive",
        "name": "ZyfraInputDirective",
        "coveragePercent": 31,
        "coverageCount": "5/16",
        "status": "medium"
      },
      {
        "filePath": "libs/components/src/lib/input/zyfra-input.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Simple",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/input/zyfra-input.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Template",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/input/zyfra-input.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Tooltip",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/input/zyfra-input.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "ZyfraInputComponent",
        "coveragePercent": 0,
        "coverageCount": "0/20",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/menu-applications/zyfra-menu-applications-item/zyfra-menu-applications-item.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Primary",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/menu-applications/zyfra-menu-applications-item/zyfra-menu-applications-item.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Template",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/menu-applications/zyfra-menu-applications-item/zyfra-menu-applications-item.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "ZyfraMenuApplicationsItemComponent",
        "coveragePercent": 0,
        "coverageCount": "0/3",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/menu-applications/zyfra-menu-applications.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "bottomMenuItems",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/menu-applications/zyfra-menu-applications.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "CustomTransition",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/menu-applications/zyfra-menu-applications.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "defaultTransition",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/menu-applications/zyfra-menu-applications.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "ManyItems",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/menu-applications/zyfra-menu-applications.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Template",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/menu-applications/zyfra-menu-applications.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "topMenuItems",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/menu-applications/zyfra-menu-applications.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "WithLayoutShift",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/menu-applications/zyfra-menu-applications.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "WithoutLayoutShift",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/menu-applications/zyfra-menu-applications.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "ZyfraMenuApplicationsComponent",
        "coveragePercent": 0,
        "coverageCount": "0/30",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/menu-applications/zyfra-menu-applications.interface.ts",
        "type": "interface",
        "linktype": "interface",
        "name": "ZyfraMenuAppItem",
        "coveragePercent": 0,
        "coverageCount": "0/4",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/menu-applications/zyfra-menu-applications.interface.ts",
        "type": "interface",
        "linktype": "interface",
        "name": "ZyfraMenuAppTransition",
        "coveragePercent": 0,
        "coverageCount": "0/4",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/menu-applications/zyfra-menu-applications.interface.ts",
        "type": "interface",
        "linktype": "interface",
        "name": "ZyfraMenuAppTransitionSettings",
        "coveragePercent": 0,
        "coverageCount": "0/3",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/message/zyfra-message.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Animation",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/message/zyfra-message.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "MultiMessages",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/message/zyfra-message.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Simple",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/message/zyfra-message.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Template",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/message/zyfra-message.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "ZyfraMessageComponent",
        "coveragePercent": 0,
        "coverageCount": "0/11",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/nav-menu/components/zyfra-menu-item/zyfra-nav-menu-item.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "ZyfraNavMenuItemComponent",
        "coveragePercent": 0,
        "coverageCount": "0/6",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/nav-menu/components/zyfra-nav-menu-group/zyfra-nav-menu-group.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "ZyfraNavMenuGroupComponent",
        "coveragePercent": 0,
        "coverageCount": "0/53",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/nav-menu/components/zyfra-nav-menu/zyfra-nav-menu.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "ZyfraNavMenuComponent",
        "coveragePercent": 0,
        "coverageCount": "0/44",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/nav-menu/dataForStories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "basic",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/nav-menu/dataForStories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "basicWithIcons",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/nav-menu/dataForStories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "subItems",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/nav-menu/dataForStories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "subItemsRubricator",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/nav-menu/directives/nav-menu-group.directive.ts",
        "type": "directive",
        "linktype": "directive",
        "name": "ZyfraNavMenuGroupDirective",
        "coveragePercent": 0,
        "coverageCount": "0/3",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/nav-menu/directives/zyfra-autofocus.directives.ts",
        "type": "directive",
        "linktype": "directive",
        "name": "ZyfraAutofocusDirective",
        "coveragePercent": 0,
        "coverageCount": "0/5",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/nav-menu/model/nav-menu-config.ts",
        "type": "interface",
        "linktype": "interface",
        "name": "NavMenuEvent",
        "coveragePercent": 0,
        "coverageCount": "0/3",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/nav-menu/model/nav-menu-config.ts",
        "type": "interface",
        "linktype": "interface",
        "name": "NavMenuSelectionEvent",
        "coveragePercent": 0,
        "coverageCount": "0/3",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/nav-menu/model/nav-menu-config.ts",
        "type": "interface",
        "linktype": "interface",
        "name": "SettingsConfig",
        "coveragePercent": 0,
        "coverageCount": "0/4",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/nav-menu/model/nav-menu-config.ts",
        "type": "interface",
        "linktype": "interface",
        "name": "ToolbarConfig",
        "coveragePercent": 0,
        "coverageCount": "0/8",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/nav-menu/model/nav-menu-config.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "DEFAULT_SETTINGS",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/nav-menu/model/nav-menu-config.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "DEFAULT_TOOLBAR_CONFIG",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/nav-menu/model/zyfra-menu-item.interface.ts",
        "type": "interface",
        "linktype": "interface",
        "name": "ZyfraMenuItem",
        "coveragePercent": 0,
        "coverageCount": "0/32",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/nav-menu/service/selection.service.ts",
        "type": "injectable",
        "linktype": "injectable",
        "name": "NavMenuService",
        "coveragePercent": 0,
        "coverageCount": "0/4",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/nav-menu/utils/generateKey.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "generateKey",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/nav-menu/utils/treeNode.functions.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "convertToNode",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/nav-menu/utils/treeNode.functions.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "flatNodes",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/nav-menu/utils/treeNode.functions.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "fromRubricatorNodes",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/nav-menu/utils/treeNode.functions.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "getPath",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/nav-menu/utils/treeNode.functions.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "sortByLabel",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/nav-menu/zyfra-nav-menu.component.stories.ts",
        "type": "component",
        "linktype": "component",
        "name": "Page1Component",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/nav-menu/zyfra-nav-menu.component.stories.ts",
        "type": "component",
        "linktype": "component",
        "name": "Page2Component",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/nav-menu/zyfra-nav-menu.component.stories.ts",
        "type": "component",
        "linktype": "component",
        "name": "Page3Component",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/nav-menu/zyfra-nav-menu.component.stories.ts",
        "type": "component",
        "linktype": "component",
        "name": "WrapperComponent",
        "coveragePercent": 0,
        "coverageCount": "0/7",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/nav-menu/zyfra-nav-menu.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "actions",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/nav-menu/zyfra-nav-menu.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Basic",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/nav-menu/zyfra-nav-menu.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "BasicTemplate",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/nav-menu/zyfra-nav-menu.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "BasicWithIcons",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/nav-menu/zyfra-nav-menu.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "EnlargedSize",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/nav-menu/zyfra-nav-menu.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "ExtraItemTemplate",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/nav-menu/zyfra-nav-menu.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "ExtraTemplates",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/nav-menu/zyfra-nav-menu.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "FolderMode",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/nav-menu/zyfra-nav-menu.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "GroupPanels",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/nav-menu/zyfra-nav-menu.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "GroupPanelTemplate",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/nav-menu/zyfra-nav-menu.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "MultipleSelection",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/nav-menu/zyfra-nav-menu.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "RubricatorMode",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/nav-menu/zyfra-nav-menu.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Search",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/nav-menu/zyfra-nav-menu.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "SingleGroupPanel",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/nav-menu/zyfra-nav-menu.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "SubItems",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/paginator/zyfra-paginator.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Basic",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/paginator/zyfra-paginator.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Template",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/paginator/zyfra-paginator.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "WithPageOptions",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/paginator/zyfra-paginator.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "ZyfraPaginatorComponent",
        "coveragePercent": 85,
        "coverageCount": "18/21",
        "status": "very-good"
      },
      {
        "filePath": "libs/components/src/lib/paginator/zyfra-paginator.component.ts",
        "type": "interface",
        "linktype": "interface",
        "name": "PageChangeEvent",
        "coveragePercent": 0,
        "coverageCount": "0/5",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/password/zyfra-password.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Simple",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/password/zyfra-password.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Template",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/password/zyfra-password.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "ToggleMask",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/password/zyfra-password.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "ZyfraPasswordComponent",
        "coveragePercent": 0,
        "coverageCount": "0/23",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/progress/zyfra-progress-bar.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Danger",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/progress/zyfra-progress-bar.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Indeterminate",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/progress/zyfra-progress-bar.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Info",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/progress/zyfra-progress-bar.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Mini",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/progress/zyfra-progress-bar.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "NoValueDisplay",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/progress/zyfra-progress-bar.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Secondary",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/progress/zyfra-progress-bar.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Simple",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/progress/zyfra-progress-bar.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Success",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/progress/zyfra-progress-bar.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Template",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/progress/zyfra-progress-bar.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Warning",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/progress/zyfra-progress-bar.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "ZyfraProgressBarComponent",
        "coveragePercent": 0,
        "coverageCount": "0/9",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/radio-button/zyfra-radio-button.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "DisabledRadio",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/radio-button/zyfra-radio-button.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "FormControlRadio",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/radio-button/zyfra-radio-button.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "FormControlTemplate",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/radio-button/zyfra-radio-button.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "formControlTemplateChunk",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/radio-button/zyfra-radio-button.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "items",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/radio-button/zyfra-radio-button.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "MiniRadio",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/radio-button/zyfra-radio-button.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "SimpleRadio",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/radio-button/zyfra-radio-button.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "SimpleTemplate",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/radio-button/zyfra-radio-button.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "ZyfraRadioButtonComponent",
        "coveragePercent": 0,
        "coverageCount": "0/24",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/select-button/zyfra-select-button.component.stories.ts",
        "type": "interface",
        "linktype": "interface",
        "name": "StoryCity",
        "coveragePercent": 0,
        "coverageCount": "0/3",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/select-button/zyfra-select-button.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "cities",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/select-button/zyfra-select-button.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Danger",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/select-button/zyfra-select-button.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Default",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/select-button/zyfra-select-button.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "DefaultMini",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/select-button/zyfra-select-button.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Template",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/select-button/zyfra-select-button.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "ZyfraSelectButtonComponent",
        "coveragePercent": 25,
        "coverageCount": "4/16",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/select-button/zyfra-select-button.component.ts",
        "type": "interface",
        "linktype": "interface",
        "name": "SelectButtonChange",
        "coveragePercent": 0,
        "coverageCount": "0/3",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/select-button/zyfra-select-button.component.ts",
        "type": "interface",
        "linktype": "interface",
        "name": "SelectButtonOptionClick",
        "coveragePercent": 0,
        "coverageCount": "0/4",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/slider/zyfra-slider.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Range",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/slider/zyfra-slider.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Simple",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/slider/zyfra-slider.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Template",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/slider/zyfra-slider.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Vertical",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/slider/zyfra-slider.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "ZyfraSliderComponent",
        "coveragePercent": 0,
        "coverageCount": "0/18",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/spinner/zyfra-spinner.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Basic",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/spinner/zyfra-spinner.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Size",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/spinner/zyfra-spinner.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Style",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/spinner/zyfra-spinner.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Template",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/spinner/zyfra-spinner.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "ZyfraSpinnerComponent",
        "coveragePercent": 0,
        "coverageCount": "0/8",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/split-button/zyfra-split-button.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "AnimationSpeed",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/split-button/zyfra-split-button.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Disabled",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/split-button/zyfra-split-button.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "items",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/split-button/zyfra-split-button.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Simple",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/split-button/zyfra-split-button.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "SimpleMini",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/split-button/zyfra-split-button.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Template",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/split-button/zyfra-split-button.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "WarningWithIcon",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/split-button/zyfra-split-button.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "ZyfraSplitButtonComponent",
        "coveragePercent": 0,
        "coverageCount": "0/20",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/splitter/p-splitter/splitter.ts",
        "type": "component",
        "linktype": "component",
        "name": "Splitter",
        "coveragePercent": 1,
        "coverageCount": "1/57",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/splitter/p-splitter/splitter.ts",
        "type": "component",
        "linktype": "component",
        "name": "SplitterExtended",
        "coveragePercent": 1,
        "coverageCount": "1/57",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/splitter/zyfra-splitter-templates.service.ts",
        "type": "injectable",
        "linktype": "injectable",
        "name": "ZyfraSplitterTemplatesService",
        "coveragePercent": 0,
        "coverageCount": "0/7",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/splitter/zyfra-splitter.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Simple",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/splitter/zyfra-splitter.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Template",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/splitter/zyfra-splitter.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "ZyfraSplitterComponent",
        "coveragePercent": 68,
        "coverageCount": "13/19",
        "status": "good"
      },
      {
        "filePath": "libs/components/src/lib/splitter/zyfra-splitter.directives.ts",
        "type": "directive",
        "linktype": "directive",
        "name": "ZyfraSplitterTemplateDirective",
        "coveragePercent": 0,
        "coverageCount": "0/7",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/tab-menu/zyfra-tab-menu.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Header",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/tab-menu/zyfra-tab-menu.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "items",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/tab-menu/zyfra-tab-menu.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Secondary",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/tab-menu/zyfra-tab-menu.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Simple",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/tab-menu/zyfra-tab-menu.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "simpleMenuItems",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/tab-menu/zyfra-tab-menu.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "simpleMenuItemsWithIcons",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/tab-menu/zyfra-tab-menu.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Template",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/tab-menu/zyfra-tab-menu.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "WithIcons",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/tab-menu/zyfra-tab-menu.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "WithSubMenu",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/tab-menu/zyfra-tab-menu.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "ZyfraTabMenuComponent",
        "coveragePercent": 0,
        "coverageCount": "0/44",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/tab-view/zyfra-tab-panel/zyfra-tab-panel.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Primary",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/tab-view/zyfra-tab-panel/zyfra-tab-panel.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Template",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/tab-view/zyfra-tab-panel/zyfra-tab-panel.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "ZyfraTabPanelComponent",
        "coveragePercent": 0,
        "coverageCount": "0/22",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/tab-view/zyfra-tab-view/zyfra-tab-view.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Closable",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/tab-view/zyfra-tab-view/zyfra-tab-view.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "CustomTemplateWithBadge",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/tab-view/zyfra-tab-view/zyfra-tab-view.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "CustomWithBadge",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/tab-view/zyfra-tab-view/zyfra-tab-view.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "OverflowTabs",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/tab-view/zyfra-tab-view/zyfra-tab-view.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Simple",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/tab-view/zyfra-tab-view/zyfra-tab-view.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "SimpleHeader",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/tab-view/zyfra-tab-view/zyfra-tab-view.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "SimpleSecondary",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/tab-view/zyfra-tab-view/zyfra-tab-view.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "SimpleWithIcon",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/tab-view/zyfra-tab-view/zyfra-tab-view.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Template",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/tab-view/zyfra-tab-view/zyfra-tab-view.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "WithIcon",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/tab-view/zyfra-tab-view/zyfra-tab-view.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "ZyfraTabViewComponent",
        "coveragePercent": 0,
        "coverageCount": "0/48",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/table/_story/data.ts",
        "type": "interface",
        "linktype": "interface",
        "name": "Customer",
        "coveragePercent": 0,
        "coverageCount": "0/11",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/table/_story/data.ts",
        "type": "interface",
        "linktype": "interface",
        "name": "Order",
        "coveragePercent": 0,
        "coverageCount": "0/8",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/table/_story/data.ts",
        "type": "interface",
        "linktype": "interface",
        "name": "Product",
        "coveragePercent": 0,
        "coverageCount": "0/11",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/table/_story/data.ts",
        "type": "interface",
        "linktype": "interface",
        "name": "ProductOrder",
        "coveragePercent": 0,
        "coverageCount": "0/12",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/table/_story/data.ts",
        "type": "interface",
        "linktype": "interface",
        "name": "Sale",
        "coveragePercent": 0,
        "coverageCount": "0/6",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/table/_story/data.ts",
        "type": "function",
        "linktype": "miscellaneous",
        "linksubtype": "function",
        "name": "cloneArrayOfObjects",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/table/_story/data.ts",
        "type": "function",
        "linktype": "miscellaneous",
        "linksubtype": "function",
        "name": "getCustomers",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/table/_story/data.ts",
        "type": "function",
        "linktype": "miscellaneous",
        "linksubtype": "function",
        "name": "getProducts",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/table/_story/data.ts",
        "type": "function",
        "linktype": "miscellaneous",
        "linksubtype": "function",
        "name": "getProductsOrdersSmall",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/table/_story/data.ts",
        "type": "function",
        "linktype": "miscellaneous",
        "linksubtype": "function",
        "name": "getProductsSmall",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/table/_story/data.ts",
        "type": "function",
        "linktype": "miscellaneous",
        "linksubtype": "function",
        "name": "getSalesSmall",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/table/_story/data.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Customers",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/table/_story/data.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Products",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/table/_story/data.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "ProductsOrdersSmall",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/table/_story/data.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "ProductsSmall",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/table/_story/data.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Sales",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/table/_story/stories/basic.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Basic",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/table/_story/stories/basic.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Template",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/table/_story/stories/col-group.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "ColGroup",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/table/_story/stories/col-group.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Template",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/table/_story/stories/edit-cell.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "EditCell",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/table/_story/stories/edit-cell.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Template",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/table/_story/stories/edit-row.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "EditRow",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/table/_story/stories/edit-row.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Template",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/table/_story/stories/expand.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "actions",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/table/_story/stories/expand.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Expand",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/table/_story/stories/expand.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Template",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/table/_story/stories/filter-sort-search.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "FilterSortSearch",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/table/_story/stories/filter-sort-search.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Template",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/table/_story/stories/filter.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Filter",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/table/_story/stories/filter.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Template",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/table/_story/stories/frozen-rows.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "FrozenRows",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/table/_story/stories/frozen-rows.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Template",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/table/_story/stories/pagination.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Pagination",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/table/_story/stories/pagination.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "PaginationTemplate",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/table/_story/stories/reorder.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Reorder",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/table/_story/stories/reorder.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Template",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/table/_story/stories/resize.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Resize",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/table/_story/stories/resize.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Template",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/table/_story/stories/row-group.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "RowGroup",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/table/_story/stories/row-group.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Template",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/table/_story/stories/scroll-horizontal-and-vertical.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "ScrollHorizontalAndVertical",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/table/_story/stories/scroll-horizontal-and-vertical.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Template",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/table/_story/stories/scroll-vertical.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "ScrollVertical",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/table/_story/stories/scroll-vertical.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Template",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/table/_story/stories/scroll-virtual.stories.ts",
        "type": "function",
        "linktype": "miscellaneous",
        "linksubtype": "function",
        "name": "generateCar",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/table/_story/stories/scroll-virtual.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "ScrollVirtual",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/table/_story/stories/scroll-virtual.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Template",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/table/_story/stories/selection.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "actions",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/table/_story/stories/selection.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Selection",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/table/_story/stories/selection.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "SelectionTemplate",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/table/_story/stories/sort-multiple.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "SortMultiple",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/table/_story/stories/sort-multiple.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Template",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/table/_story/stories/sort.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Sort",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/table/_story/stories/sort.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Template",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/table/_story/stories/state.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "State",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/table/_story/stories/state.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Template",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/table/_story/stories/status.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Status",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/table/_story/stories/status.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Template",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/table/_story/stories/text-overflow.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Template",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/table/_story/stories/text-overflow.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "TextOverflow",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/table/cell-editor/cell-editor.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "ZyfraCellEditorComponent",
        "coveragePercent": 0,
        "coverageCount": "0/7",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/table/directives/cancel-editable-row.directive.ts",
        "type": "directive",
        "linktype": "directive",
        "name": "ZyfraCancelEditableRowDirective",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/table/directives/editable-column.directive.ts",
        "type": "directive",
        "linktype": "directive",
        "name": "ZyfraEditableColumnDirective",
        "coveragePercent": 0,
        "coverageCount": "0/4",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/table/directives/editable-row.directive.ts",
        "type": "directive",
        "linktype": "directive",
        "name": "ZyfraEditableRowDirective",
        "coveragePercent": 0,
        "coverageCount": "0/3",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/table/directives/frozen-column.directive.ts",
        "type": "directive",
        "linktype": "directive",
        "name": "ZyfraFrozenColumnDirective",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/table/directives/init-editable-row.directive.ts",
        "type": "directive",
        "linktype": "directive",
        "name": "ZyfraInitEditableRowDirective",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/table/directives/reordable-column.directive.ts",
        "type": "directive",
        "linktype": "directive",
        "name": "ZyfraReordableColumnDirective",
        "coveragePercent": 0,
        "coverageCount": "0/4",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/table/directives/reordable-row-handler.directive.ts",
        "type": "directive",
        "linktype": "directive",
        "name": "ZyfraReordableRowHandlerDirective",
        "coveragePercent": 0,
        "coverageCount": "0/2",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/table/directives/reordable-row.directive.ts",
        "type": "directive",
        "linktype": "directive",
        "name": "ZyfraReordableRowDirective",
        "coveragePercent": 0,
        "coverageCount": "0/2",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/table/directives/resizable-column.directive.ts",
        "type": "directive",
        "linktype": "directive",
        "name": "ZyfraResizableColumnDirective",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/table/directives/row-group-header.directive.ts",
        "type": "directive",
        "linktype": "directive",
        "name": "ZyfraRowGroupHeaderDirective",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/table/directives/save-editable-row.directive.ts",
        "type": "directive",
        "linktype": "directive",
        "name": "ZyfraSaveEditableRowDirective",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/table/directives/selectable-row.directive.ts",
        "type": "directive",
        "linktype": "directive",
        "name": "ZyfraSelectableRowDirective",
        "coveragePercent": 0,
        "coverageCount": "0/4",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/table/directives/sortable-column.directive.ts",
        "type": "directive",
        "linktype": "directive",
        "name": "ZyfraSortableColumnDirective",
        "coveragePercent": 0,
        "coverageCount": "0/8",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/table/row-toggler/row-toggler.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "ZyfraRowTogglerComponent",
        "coveragePercent": 0,
        "coverageCount": "0/3",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/table/search-cell/search-cell.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "ZyfraSearchCellComponent",
        "coveragePercent": 9,
        "coverageCount": "1/11",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/table/sort-icon/sort-icon.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "ZyfraSortIconComponent",
        "coveragePercent": 0,
        "coverageCount": "0/2",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/table/table-checkbox/zyfra-table-checkbox.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "ZyfraTableCheckboxComponent",
        "coveragePercent": 0,
        "coverageCount": "0/11",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/table/table-column-filter/table-column-filter.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "ZyfraTableColumnFilterComponent",
        "coveragePercent": 0,
        "coverageCount": "0/30",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/table/table-header-checkbox/table-header-checkbox.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "ZyfraTableHeaderCheckboxComponent",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/table/zyfra-table.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "ZyfraTableComponent",
        "coveragePercent": 68,
        "coverageCount": "103/151",
        "status": "good"
      },
      {
        "filePath": "libs/components/src/lib/textarea/zyfra-textarea.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Simple",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/textarea/zyfra-textarea.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Template",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/textarea/zyfra-textarea.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "ZyfraTextareaComponent",
        "coveragePercent": 0,
        "coverageCount": "0/18",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/toast/toast.service.ts",
        "type": "injectable",
        "linktype": "injectable",
        "name": "ToastService",
        "coveragePercent": 0,
        "coverageCount": "0/5",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/toast/zyfra-toast.component.stories.ts",
        "type": "component",
        "linktype": "component",
        "name": "MyToastContainerComponent",
        "coveragePercent": 0,
        "coverageCount": "0/9",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/toast/zyfra-toast.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Animation",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/toast/zyfra-toast.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "CustomTemplate",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/toast/zyfra-toast.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "NoIcons",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/toast/zyfra-toast.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Simple",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/toast/zyfra-toast.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Template",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/toast/zyfra-toast.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "ZyfraToastComponent",
        "coveragePercent": 0,
        "coverageCount": "0/16",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/toggle-button/zyfra-toggle-button.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "DangerMini",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/toggle-button/zyfra-toggle-button.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Default",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/toggle-button/zyfra-toggle-button.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Info",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/toggle-button/zyfra-toggle-button.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Template",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/toggle-button/zyfra-toggle-button.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "ZyfraToggleButtonComponent",
        "coveragePercent": 0,
        "coverageCount": "0/15",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/toggle-button/zyfra-toggle-button.component.ts",
        "type": "interface",
        "linktype": "interface",
        "name": "TToggleButtonClick",
        "coveragePercent": 0,
        "coverageCount": "0/3",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/tooltip/zyfra-tooltip-overlay-manager.service.ts",
        "type": "injectable",
        "linktype": "injectable",
        "name": "ZyfraTooltipOverlayManager",
        "coveragePercent": 0,
        "coverageCount": "0/8",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/tooltip/zyfra-tooltip.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Template",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/tooltip/zyfra-tooltip.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "TooltipWithoutTitle",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/tooltip/zyfra-tooltip.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "TooltipWithTitle",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/tooltip/zyfra-tooltip.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "ZyfraTooltipComponent",
        "coveragePercent": 0,
        "coverageCount": "0/9",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/tooltip/zyfra-tooltip.directive.ts",
        "type": "directive",
        "linktype": "directive",
        "name": "ZyfraTooltipDirective",
        "coveragePercent": 2,
        "coverageCount": "1/38",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/tooltip/zyfra-tooltip.model.ts",
        "type": "class",
        "linktype": "classe",
        "name": "ZyfraTooltipOptionsModel",
        "coveragePercent": 0,
        "coverageCount": "0/6",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/tooltip/zyfra-tooltip.module.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "EXPORTED_DECLARATIONS",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/tree-table/_story/data.ts",
        "type": "function",
        "linktype": "miscellaneous",
        "linksubtype": "function",
        "name": "cloneArrayOfObjects",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/tree-table/_story/data.ts",
        "type": "function",
        "linktype": "miscellaneous",
        "linksubtype": "function",
        "name": "getFileSystem",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/tree-table/_story/data.ts",
        "type": "function",
        "linktype": "miscellaneous",
        "linksubtype": "function",
        "name": "getSales",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/tree-table/_story/data.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "FileSystem",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/tree-table/_story/data.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Sales",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/tree-table/_story/stories/basic.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "actions",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/tree-table/_story/stories/basic.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Basic",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/tree-table/_story/stories/basic.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Template",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/tree-table/_story/stories/col-group.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "actions",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/tree-table/_story/stories/col-group.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "ColGroup",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/tree-table/_story/stories/col-group.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Template",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/tree-table/_story/stories/edit.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "actions",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/tree-table/_story/stories/edit.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Edit",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/tree-table/_story/stories/edit.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Template",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/tree-table/_story/stories/filter.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "actions",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/tree-table/_story/stories/filter.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Filter",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/tree-table/_story/stories/filter.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Template",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/tree-table/_story/stories/reorder.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "actions",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/tree-table/_story/stories/reorder.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Reorder",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/tree-table/_story/stories/reorder.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Template",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/tree-table/_story/stories/scroll.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "actions",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/tree-table/_story/stories/scroll.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Scroll",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/tree-table/_story/stories/scroll.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Template",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/tree-table/_story/stories/selection.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "actions",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/tree-table/_story/stories/selection.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Selection",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/tree-table/_story/stories/selection.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Template",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/tree-table/_story/stories/sort.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "actions",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/tree-table/_story/stories/sort.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Sort",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/tree-table/_story/stories/sort.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Template",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/tree-table/directives/tree-table-editable-column.directive.ts",
        "type": "directive",
        "linktype": "directive",
        "name": "ZyfraTreeTableEditableColumnDirective",
        "coveragePercent": 0,
        "coverageCount": "0/7",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/tree-table/directives/tree-table-reorderable-column.directive.ts",
        "type": "directive",
        "linktype": "directive",
        "name": "ZyfraTreeTableReorderableColumnDirective",
        "coveragePercent": 0,
        "coverageCount": "0/4",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/tree-table/directives/tree-table-row.directive.ts",
        "type": "directive",
        "linktype": "directive",
        "name": "ZyfraTreeTableRowDirective",
        "coveragePercent": 0,
        "coverageCount": "0/2",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/tree-table/directives/tree-table-selectable-row.directive.ts",
        "type": "directive",
        "linktype": "directive",
        "name": "ZyfraTreeTableSelectableRowDirective",
        "coveragePercent": 0,
        "coverageCount": "0/4",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/tree-table/directives/tree-table-sortable-column.directive.ts",
        "type": "directive",
        "linktype": "directive",
        "name": "ZyfraTreeTableSortableColumnDirective",
        "coveragePercent": 0,
        "coverageCount": "0/8",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/tree-table/tree-table-cell-editor/tree-table-cell-editor.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "ZyfraTreeTableCellEditorComponent",
        "coveragePercent": 0,
        "coverageCount": "0/7",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/tree-table/tree-table-checkbox/tree-table-checkbox.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "ZyfraTreeTableCheckboxComponent",
        "coveragePercent": 0,
        "coverageCount": "0/5",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/tree-table/tree-table-header-checkbox/tree-table-header-checkbox.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "ZyfraTreeTableHeaderCheckboxComponent",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/tree-table/tree-table-search-cell/tree-table-search-cell.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "ZyfraTreeTableSearchCellComponent",
        "coveragePercent": 9,
        "coverageCount": "1/11",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/tree-table/tree-table-sort-icon/tree-table-sort-icon.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "ZyfraTreeTableSortIconComponent",
        "coveragePercent": 0,
        "coverageCount": "0/4",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/tree-table/tree-table-toggler/tree-table-toggler.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "ZyfraTreeTableTogglerComponent",
        "coveragePercent": 0,
        "coverageCount": "0/2",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/tree-table/tree-table.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "ZyfraTreeTableComponent",
        "coveragePercent": 69,
        "coverageCount": "80/115",
        "status": "good"
      },
      {
        "filePath": "libs/components/src/lib/tree/zyfra-tree.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "items",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/tree/zyfra-tree.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Simple",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/tree/zyfra-tree.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Template",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/tree/zyfra-tree.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "ZyfraTreeComponent",
        "coveragePercent": 0,
        "coverageCount": "0/48",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/tri-checkbox/zyfra-tri-checkbox.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Binary",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/tri-checkbox/zyfra-tri-checkbox.component.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Template",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "libs/components/src/lib/tri-checkbox/zyfra-tri-checkbox.component.ts",
        "type": "component",
        "linktype": "component",
        "name": "ZyfraTriCheckboxComponent",
        "coveragePercent": 0,
        "coverageCount": "0/17",
        "status": "low"
      }
    ]
  }
}
